// Copyright 2018-2020 the Deno authors. All rights reserved. MIT license.

// This is a specialised implementation of a System module loader.

"use strict";

// @ts-nocheck
/* eslint-disable */
let System, __instantiate;
(() => {
  const r = new Map();

  System = {
    register(id, d, f) {
      r.set(id, { d, f, exp: {} });
    },
  };
  async function dI(mid, src) {
    let id = mid.replace(/\.\w+$/i, "");
    if (id.includes("./")) {
      const [o, ...ia] = id.split("/").reverse(),
        [, ...sa] = src.split("/").reverse(),
        oa = [o];
      let s = 0,
        i;
      while ((i = ia.shift())) {
        if (i === "..") s++;
        else if (i === ".") break;
        else oa.push(i);
      }
      if (s < sa.length) oa.push(...sa.slice(s));
      id = oa.reverse().join("/");
    }
    return r.has(id) ? gExpA(id) : import(mid);
  }

  function gC(id, main) {
    return {
      id,
      import: (m) => dI(m, id),
      meta: { url: id, main },
    };
  }

  function gE(exp) {
    return (id, v) => {
      v = typeof id === "string" ? { [id]: v } : id;
      for (const [id, value] of Object.entries(v)) {
        Object.defineProperty(exp, id, {
          value,
          writable: true,
          enumerable: true,
        });
      }
    };
  }

  function rF(main) {
    for (const [id, m] of r.entries()) {
      const { f, exp } = m;
      const { execute: e, setters: s } = f(gE(exp), gC(id, id === main));
      delete m.f;
      m.e = e;
      m.s = s;
    }
  }

  async function gExpA(id) {
    if (!r.has(id)) return;
    const m = r.get(id);
    if (m.s) {
      const { d, e, s } = m;
      delete m.s;
      delete m.e;
      for (let i = 0; i < s.length; i++) s[i](await gExpA(d[i]));
      const r = e();
      if (r) await r;
    }
    return m.exp;
  }

  function gExp(id) {
    if (!r.has(id)) return;
    const m = r.get(id);
    if (m.s) {
      const { d, e, s } = m;
      delete m.s;
      delete m.e;
      for (let i = 0; i < s.length; i++) s[i](gExp(d[i]));
      e();
    }
    return m.exp;
  }
  __instantiate = (m, a) => {
    System = __instantiate = undefined;
    rF(m);
    return a ? gExpA(m) : gExp(m);
  };
})();

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
System.register("https://deno.land/x/alosaur@v0.21.1/src/http-error/HttpError", [], function (exports_1, context_1) {
    "use strict";
    var HttpError;
    var __moduleName = context_1 && context_1.id;
    return {
        setters: [],
        execute: function () {
            HttpError = class HttpError extends Error {
                constructor(httpCode, message) {
                    super();
                    this.httpCode = undefined;
                    Object.setPrototypeOf(this, HttpError.prototype);
                    if (httpCode) {
                        this.httpCode = httpCode;
                    }
                    if (message) {
                        this.message = message;
                    }
                    this.stack = new Error().stack;
                }
            };
            exports_1("HttpError", HttpError);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/http-error/InternalServerError", ["https://deno.land/x/alosaur@v0.21.1/src/http-error/HttpError"], function (exports_2, context_2) {
    "use strict";
    var HttpError_ts_1, InternalServerError;
    var __moduleName = context_2 && context_2.id;
    return {
        setters: [
            function (HttpError_ts_1_1) {
                HttpError_ts_1 = HttpError_ts_1_1;
            }
        ],
        execute: function () {
            InternalServerError = class InternalServerError extends HttpError_ts_1.HttpError {
                constructor(message) {
                    super(500);
                    this.name = "InternalServerError";
                    Object.setPrototypeOf(this, InternalServerError.prototype);
                    if (message) {
                        this.message = message;
                    }
                }
            };
            exports_2("InternalServerError", InternalServerError);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/http-error/BadRequestError", ["https://deno.land/x/alosaur@v0.21.1/src/http-error/HttpError"], function (exports_3, context_3) {
    "use strict";
    var HttpError_ts_2, BadRequestError;
    var __moduleName = context_3 && context_3.id;
    return {
        setters: [
            function (HttpError_ts_2_1) {
                HttpError_ts_2 = HttpError_ts_2_1;
            }
        ],
        execute: function () {
            BadRequestError = class BadRequestError extends HttpError_ts_2.HttpError {
                constructor(message) {
                    super(400);
                    this.name = "BadRequestError";
                    Object.setPrototypeOf(this, BadRequestError.prototype);
                    if (message) {
                        this.message = message;
                    }
                }
            };
            exports_3("BadRequestError", BadRequestError);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/http-error/ForbiddenError", ["https://deno.land/x/alosaur@v0.21.1/src/http-error/HttpError"], function (exports_4, context_4) {
    "use strict";
    var HttpError_ts_3, ForbiddenError;
    var __moduleName = context_4 && context_4.id;
    return {
        setters: [
            function (HttpError_ts_3_1) {
                HttpError_ts_3 = HttpError_ts_3_1;
            }
        ],
        execute: function () {
            ForbiddenError = class ForbiddenError extends HttpError_ts_3.HttpError {
                constructor(message) {
                    super(403);
                    this.name = "ForbiddenError";
                    Object.setPrototypeOf(this, ForbiddenError.prototype);
                    if (message) {
                        this.message = message;
                    }
                }
            };
            exports_4("ForbiddenError", ForbiddenError);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/http-error/NotAcceptableError", ["https://deno.land/x/alosaur@v0.21.1/src/http-error/HttpError"], function (exports_5, context_5) {
    "use strict";
    var HttpError_ts_4, NotAcceptableError;
    var __moduleName = context_5 && context_5.id;
    return {
        setters: [
            function (HttpError_ts_4_1) {
                HttpError_ts_4 = HttpError_ts_4_1;
            }
        ],
        execute: function () {
            NotAcceptableError = class NotAcceptableError extends HttpError_ts_4.HttpError {
                constructor(message) {
                    super(406);
                    this.name = "NotAcceptableError";
                    Object.setPrototypeOf(this, NotAcceptableError.prototype);
                    if (message) {
                        this.message = message;
                    }
                }
            };
            exports_5("NotAcceptableError", NotAcceptableError);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/http-error/MethodNotAllowedError", ["https://deno.land/x/alosaur@v0.21.1/src/http-error/HttpError"], function (exports_6, context_6) {
    "use strict";
    var HttpError_ts_5, MethodNotAllowedError;
    var __moduleName = context_6 && context_6.id;
    return {
        setters: [
            function (HttpError_ts_5_1) {
                HttpError_ts_5 = HttpError_ts_5_1;
            }
        ],
        execute: function () {
            MethodNotAllowedError = class MethodNotAllowedError extends HttpError_ts_5.HttpError {
                constructor(message) {
                    super(405);
                    this.name = "MethodNotAllowedError";
                    Object.setPrototypeOf(this, MethodNotAllowedError.prototype);
                    if (message) {
                        this.message = message;
                    }
                }
            };
            exports_6("MethodNotAllowedError", MethodNotAllowedError);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/http-error/NotFoundError", ["https://deno.land/x/alosaur@v0.21.1/src/http-error/HttpError"], function (exports_7, context_7) {
    "use strict";
    var HttpError_ts_6, NotFoundError;
    var __moduleName = context_7 && context_7.id;
    return {
        setters: [
            function (HttpError_ts_6_1) {
                HttpError_ts_6 = HttpError_ts_6_1;
            }
        ],
        execute: function () {
            NotFoundError = class NotFoundError extends HttpError_ts_6.HttpError {
                constructor(message) {
                    super(404);
                    this.name = "NotFoundError";
                    Object.setPrototypeOf(this, NotFoundError.prototype);
                    if (message) {
                        this.message = message;
                    }
                }
            };
            exports_7("NotFoundError", NotFoundError);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/http-error/UnauthorizedError", ["https://deno.land/x/alosaur@v0.21.1/src/http-error/HttpError"], function (exports_8, context_8) {
    "use strict";
    var HttpError_ts_7, UnauthorizedError;
    var __moduleName = context_8 && context_8.id;
    return {
        setters: [
            function (HttpError_ts_7_1) {
                HttpError_ts_7 = HttpError_ts_7_1;
            }
        ],
        execute: function () {
            UnauthorizedError = class UnauthorizedError extends HttpError_ts_7.HttpError {
                constructor(message) {
                    super(401);
                    this.name = "UnauthorizedError";
                    Object.setPrototypeOf(this, UnauthorizedError.prototype);
                    if (message) {
                        this.message = message;
                    }
                }
            };
            exports_8("UnauthorizedError", UnauthorizedError);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/http-error/mod", ["https://deno.land/x/alosaur@v0.21.1/src/http-error/HttpError", "https://deno.land/x/alosaur@v0.21.1/src/http-error/InternalServerError", "https://deno.land/x/alosaur@v0.21.1/src/http-error/BadRequestError", "https://deno.land/x/alosaur@v0.21.1/src/http-error/ForbiddenError", "https://deno.land/x/alosaur@v0.21.1/src/http-error/NotAcceptableError", "https://deno.land/x/alosaur@v0.21.1/src/http-error/MethodNotAllowedError", "https://deno.land/x/alosaur@v0.21.1/src/http-error/NotFoundError", "https://deno.land/x/alosaur@v0.21.1/src/http-error/UnauthorizedError"], function (exports_9, context_9) {
    "use strict";
    var __moduleName = context_9 && context_9.id;
    function exportStar_1(m) {
        var exports = {};
        for (var n in m) {
            if (n !== "default") exports[n] = m[n];
        }
        exports_9(exports);
    }
    return {
        setters: [
            function (HttpError_ts_8_1) {
                exportStar_1(HttpError_ts_8_1);
            },
            function (InternalServerError_ts_1_1) {
                exportStar_1(InternalServerError_ts_1_1);
            },
            function (BadRequestError_ts_1_1) {
                exportStar_1(BadRequestError_ts_1_1);
            },
            function (ForbiddenError_ts_1_1) {
                exportStar_1(ForbiddenError_ts_1_1);
            },
            function (NotAcceptableError_ts_1_1) {
                exportStar_1(NotAcceptableError_ts_1_1);
            },
            function (MethodNotAllowedError_ts_1_1) {
                exportStar_1(MethodNotAllowedError_ts_1_1);
            },
            function (NotFoundError_ts_1_1) {
                exportStar_1(NotFoundError_ts_1_1);
            },
            function (UnauthorizedError_ts_1_1) {
                exportStar_1(UnauthorizedError_ts_1_1);
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/std@0.61.0/encoding/utf8", [], function (exports_10, context_10) {
    "use strict";
    var encoder, decoder;
    var __moduleName = context_10 && context_10.id;
    function encode(input) {
        return encoder.encode(input);
    }
    exports_10("encode", encode);
    function decode(input) {
        return decoder.decode(input);
    }
    exports_10("decode", decode);
    return {
        setters: [],
        execute: function () {
            exports_10("encoder", encoder = new TextEncoder());
            exports_10("decoder", decoder = new TextDecoder());
        }
    };
});
System.register("https://deno.land/std@0.61.0/bytes/mod", [], function (exports_11, context_11) {
    "use strict";
    var __moduleName = context_11 && context_11.id;
    function findIndex(source, pat) {
        const s = pat[0];
        for (let i = 0; i < source.length; i++) {
            if (source[i] !== s)
                continue;
            const pin = i;
            let matched = 1;
            let j = i;
            while (matched < pat.length) {
                j++;
                if (source[j] !== pat[j - pin]) {
                    break;
                }
                matched++;
            }
            if (matched === pat.length) {
                return pin;
            }
        }
        return -1;
    }
    exports_11("findIndex", findIndex);
    function findLastIndex(source, pat) {
        const e = pat[pat.length - 1];
        for (let i = source.length - 1; i >= 0; i--) {
            if (source[i] !== e)
                continue;
            const pin = i;
            let matched = 1;
            let j = i;
            while (matched < pat.length) {
                j--;
                if (source[j] !== pat[pat.length - 1 - (pin - j)]) {
                    break;
                }
                matched++;
            }
            if (matched === pat.length) {
                return pin - pat.length + 1;
            }
        }
        return -1;
    }
    exports_11("findLastIndex", findLastIndex);
    function equal(source, match) {
        if (source.length !== match.length)
            return false;
        for (let i = 0; i < match.length; i++) {
            if (source[i] !== match[i])
                return false;
        }
        return true;
    }
    exports_11("equal", equal);
    function hasPrefix(source, prefix) {
        for (let i = 0, max = prefix.length; i < max; i++) {
            if (source[i] !== prefix[i])
                return false;
        }
        return true;
    }
    exports_11("hasPrefix", hasPrefix);
    function hasSuffix(source, suffix) {
        for (let srci = source.length - 1, sfxi = suffix.length - 1; sfxi >= 0; srci--, sfxi--) {
            if (source[srci] !== suffix[sfxi])
                return false;
        }
        return true;
    }
    exports_11("hasSuffix", hasSuffix);
    function repeat(origin, count) {
        if (count === 0) {
            return new Uint8Array();
        }
        if (count < 0) {
            throw new Error("bytes: negative repeat count");
        }
        else if ((origin.length * count) / count !== origin.length) {
            throw new Error("bytes: repeat count causes overflow");
        }
        const int = Math.floor(count);
        if (int !== count) {
            throw new Error("bytes: repeat count must be an integer");
        }
        const nb = new Uint8Array(origin.length * count);
        let bp = copyBytes(origin, nb);
        for (; bp < nb.length; bp *= 2) {
            copyBytes(nb.slice(0, bp), nb, bp);
        }
        return nb;
    }
    exports_11("repeat", repeat);
    function concat(origin, b) {
        const output = new Uint8Array(origin.length + b.length);
        output.set(origin, 0);
        output.set(b, origin.length);
        return output;
    }
    exports_11("concat", concat);
    function contains(source, pat) {
        return findIndex(source, pat) != -1;
    }
    exports_11("contains", contains);
    function copyBytes(src, dst, off = 0) {
        off = Math.max(0, Math.min(off, dst.byteLength));
        const dstBytesAvailable = dst.byteLength - off;
        if (src.byteLength > dstBytesAvailable) {
            src = src.subarray(0, dstBytesAvailable);
        }
        dst.set(src, off);
        return src.byteLength;
    }
    exports_11("copyBytes", copyBytes);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/std@0.61.0/_util/assert", [], function (exports_12, context_12) {
    "use strict";
    var DenoStdInternalError;
    var __moduleName = context_12 && context_12.id;
    function assert(expr, msg = "") {
        if (!expr) {
            throw new DenoStdInternalError(msg);
        }
    }
    exports_12("assert", assert);
    return {
        setters: [],
        execute: function () {
            DenoStdInternalError = class DenoStdInternalError extends Error {
                constructor(message) {
                    super(message);
                    this.name = "DenoStdInternalError";
                }
            };
            exports_12("DenoStdInternalError", DenoStdInternalError);
        }
    };
});
System.register("https://deno.land/std@0.61.0/io/bufio", ["https://deno.land/std@0.61.0/bytes/mod", "https://deno.land/std@0.61.0/_util/assert"], function (exports_13, context_13) {
    "use strict";
    var mod_ts_1, assert_ts_1, DEFAULT_BUF_SIZE, MIN_BUF_SIZE, MAX_CONSECUTIVE_EMPTY_READS, CR, LF, BufferFullError, PartialReadError, BufReader, AbstractBufBase, BufWriter, BufWriterSync;
    var __moduleName = context_13 && context_13.id;
    function createLPS(pat) {
        const lps = new Uint8Array(pat.length);
        lps[0] = 0;
        let prefixEnd = 0;
        let i = 1;
        while (i < lps.length) {
            if (pat[i] == pat[prefixEnd]) {
                prefixEnd++;
                lps[i] = prefixEnd;
                i++;
            }
            else if (prefixEnd === 0) {
                lps[i] = 0;
                i++;
            }
            else {
                prefixEnd = pat[prefixEnd - 1];
            }
        }
        return lps;
    }
    async function* readDelim(reader, delim) {
        const delimLen = delim.length;
        const delimLPS = createLPS(delim);
        let inputBuffer = new Deno.Buffer();
        const inspectArr = new Uint8Array(Math.max(1024, delimLen + 1));
        let inspectIndex = 0;
        let matchIndex = 0;
        while (true) {
            const result = await reader.read(inspectArr);
            if (result === null) {
                yield inputBuffer.bytes();
                return;
            }
            if (result < 0) {
                return;
            }
            const sliceRead = inspectArr.subarray(0, result);
            await Deno.writeAll(inputBuffer, sliceRead);
            let sliceToProcess = inputBuffer.bytes();
            while (inspectIndex < sliceToProcess.length) {
                if (sliceToProcess[inspectIndex] === delim[matchIndex]) {
                    inspectIndex++;
                    matchIndex++;
                    if (matchIndex === delimLen) {
                        const matchEnd = inspectIndex - delimLen;
                        const readyBytes = sliceToProcess.subarray(0, matchEnd);
                        const pendingBytes = sliceToProcess.slice(inspectIndex);
                        yield readyBytes;
                        sliceToProcess = pendingBytes;
                        inspectIndex = 0;
                        matchIndex = 0;
                    }
                }
                else {
                    if (matchIndex === 0) {
                        inspectIndex++;
                    }
                    else {
                        matchIndex = delimLPS[matchIndex - 1];
                    }
                }
            }
            inputBuffer = new Deno.Buffer(sliceToProcess);
        }
    }
    exports_13("readDelim", readDelim);
    async function* readStringDelim(reader, delim) {
        const encoder = new TextEncoder();
        const decoder = new TextDecoder();
        for await (const chunk of readDelim(reader, encoder.encode(delim))) {
            yield decoder.decode(chunk);
        }
    }
    exports_13("readStringDelim", readStringDelim);
    async function* readLines(reader) {
        yield* readStringDelim(reader, "\n");
    }
    exports_13("readLines", readLines);
    return {
        setters: [
            function (mod_ts_1_1) {
                mod_ts_1 = mod_ts_1_1;
            },
            function (assert_ts_1_1) {
                assert_ts_1 = assert_ts_1_1;
            }
        ],
        execute: function () {
            DEFAULT_BUF_SIZE = 4096;
            MIN_BUF_SIZE = 16;
            MAX_CONSECUTIVE_EMPTY_READS = 100;
            CR = "\r".charCodeAt(0);
            LF = "\n".charCodeAt(0);
            BufferFullError = class BufferFullError extends Error {
                constructor(partial) {
                    super("Buffer full");
                    this.partial = partial;
                    this.name = "BufferFullError";
                }
            };
            exports_13("BufferFullError", BufferFullError);
            PartialReadError = class PartialReadError extends Deno.errors.UnexpectedEof {
                constructor() {
                    super("Encountered UnexpectedEof, data only partially read");
                    this.name = "PartialReadError";
                }
            };
            exports_13("PartialReadError", PartialReadError);
            BufReader = class BufReader {
                constructor(rd, size = DEFAULT_BUF_SIZE) {
                    this.r = 0;
                    this.w = 0;
                    this.eof = false;
                    if (size < MIN_BUF_SIZE) {
                        size = MIN_BUF_SIZE;
                    }
                    this._reset(new Uint8Array(size), rd);
                }
                static create(r, size = DEFAULT_BUF_SIZE) {
                    return r instanceof BufReader ? r : new BufReader(r, size);
                }
                size() {
                    return this.buf.byteLength;
                }
                buffered() {
                    return this.w - this.r;
                }
                async _fill() {
                    if (this.r > 0) {
                        this.buf.copyWithin(0, this.r, this.w);
                        this.w -= this.r;
                        this.r = 0;
                    }
                    if (this.w >= this.buf.byteLength) {
                        throw Error("bufio: tried to fill full buffer");
                    }
                    for (let i = MAX_CONSECUTIVE_EMPTY_READS; i > 0; i--) {
                        const rr = await this.rd.read(this.buf.subarray(this.w));
                        if (rr === null) {
                            this.eof = true;
                            return;
                        }
                        assert_ts_1.assert(rr >= 0, "negative read");
                        this.w += rr;
                        if (rr > 0) {
                            return;
                        }
                    }
                    throw new Error(`No progress after ${MAX_CONSECUTIVE_EMPTY_READS} read() calls`);
                }
                reset(r) {
                    this._reset(this.buf, r);
                }
                _reset(buf, rd) {
                    this.buf = buf;
                    this.rd = rd;
                    this.eof = false;
                }
                async read(p) {
                    let rr = p.byteLength;
                    if (p.byteLength === 0)
                        return rr;
                    if (this.r === this.w) {
                        if (p.byteLength >= this.buf.byteLength) {
                            const rr = await this.rd.read(p);
                            const nread = rr ?? 0;
                            assert_ts_1.assert(nread >= 0, "negative read");
                            return rr;
                        }
                        this.r = 0;
                        this.w = 0;
                        rr = await this.rd.read(this.buf);
                        if (rr === 0 || rr === null)
                            return rr;
                        assert_ts_1.assert(rr >= 0, "negative read");
                        this.w += rr;
                    }
                    const copied = mod_ts_1.copyBytes(this.buf.subarray(this.r, this.w), p, 0);
                    this.r += copied;
                    return copied;
                }
                async readFull(p) {
                    let bytesRead = 0;
                    while (bytesRead < p.length) {
                        try {
                            const rr = await this.read(p.subarray(bytesRead));
                            if (rr === null) {
                                if (bytesRead === 0) {
                                    return null;
                                }
                                else {
                                    throw new PartialReadError();
                                }
                            }
                            bytesRead += rr;
                        }
                        catch (err) {
                            err.partial = p.subarray(0, bytesRead);
                            throw err;
                        }
                    }
                    return p;
                }
                async readByte() {
                    while (this.r === this.w) {
                        if (this.eof)
                            return null;
                        await this._fill();
                    }
                    const c = this.buf[this.r];
                    this.r++;
                    return c;
                }
                async readString(delim) {
                    if (delim.length !== 1) {
                        throw new Error("Delimiter should be a single character");
                    }
                    const buffer = await this.readSlice(delim.charCodeAt(0));
                    if (buffer === null)
                        return null;
                    return new TextDecoder().decode(buffer);
                }
                async readLine() {
                    let line;
                    try {
                        line = await this.readSlice(LF);
                    }
                    catch (err) {
                        let { partial } = err;
                        assert_ts_1.assert(partial instanceof Uint8Array, "bufio: caught error from `readSlice()` without `partial` property");
                        if (!(err instanceof BufferFullError)) {
                            throw err;
                        }
                        if (!this.eof &&
                            partial.byteLength > 0 &&
                            partial[partial.byteLength - 1] === CR) {
                            assert_ts_1.assert(this.r > 0, "bufio: tried to rewind past start of buffer");
                            this.r--;
                            partial = partial.subarray(0, partial.byteLength - 1);
                        }
                        return { line: partial, more: !this.eof };
                    }
                    if (line === null) {
                        return null;
                    }
                    if (line.byteLength === 0) {
                        return { line, more: false };
                    }
                    if (line[line.byteLength - 1] == LF) {
                        let drop = 1;
                        if (line.byteLength > 1 && line[line.byteLength - 2] === CR) {
                            drop = 2;
                        }
                        line = line.subarray(0, line.byteLength - drop);
                    }
                    return { line, more: false };
                }
                async readSlice(delim) {
                    let s = 0;
                    let slice;
                    while (true) {
                        let i = this.buf.subarray(this.r + s, this.w).indexOf(delim);
                        if (i >= 0) {
                            i += s;
                            slice = this.buf.subarray(this.r, this.r + i + 1);
                            this.r += i + 1;
                            break;
                        }
                        if (this.eof) {
                            if (this.r === this.w) {
                                return null;
                            }
                            slice = this.buf.subarray(this.r, this.w);
                            this.r = this.w;
                            break;
                        }
                        if (this.buffered() >= this.buf.byteLength) {
                            this.r = this.w;
                            const oldbuf = this.buf;
                            const newbuf = this.buf.slice(0);
                            this.buf = newbuf;
                            throw new BufferFullError(oldbuf);
                        }
                        s = this.w - this.r;
                        try {
                            await this._fill();
                        }
                        catch (err) {
                            err.partial = slice;
                            throw err;
                        }
                    }
                    return slice;
                }
                async peek(n) {
                    if (n < 0) {
                        throw Error("negative count");
                    }
                    let avail = this.w - this.r;
                    while (avail < n && avail < this.buf.byteLength && !this.eof) {
                        try {
                            await this._fill();
                        }
                        catch (err) {
                            err.partial = this.buf.subarray(this.r, this.w);
                            throw err;
                        }
                        avail = this.w - this.r;
                    }
                    if (avail === 0 && this.eof) {
                        return null;
                    }
                    else if (avail < n && this.eof) {
                        return this.buf.subarray(this.r, this.r + avail);
                    }
                    else if (avail < n) {
                        throw new BufferFullError(this.buf.subarray(this.r, this.w));
                    }
                    return this.buf.subarray(this.r, this.r + n);
                }
            };
            exports_13("BufReader", BufReader);
            AbstractBufBase = class AbstractBufBase {
                constructor() {
                    this.usedBufferBytes = 0;
                    this.err = null;
                }
                size() {
                    return this.buf.byteLength;
                }
                available() {
                    return this.buf.byteLength - this.usedBufferBytes;
                }
                buffered() {
                    return this.usedBufferBytes;
                }
            };
            BufWriter = class BufWriter extends AbstractBufBase {
                constructor(writer, size = DEFAULT_BUF_SIZE) {
                    super();
                    this.writer = writer;
                    if (size <= 0) {
                        size = DEFAULT_BUF_SIZE;
                    }
                    this.buf = new Uint8Array(size);
                }
                static create(writer, size = DEFAULT_BUF_SIZE) {
                    return writer instanceof BufWriter ? writer : new BufWriter(writer, size);
                }
                reset(w) {
                    this.err = null;
                    this.usedBufferBytes = 0;
                    this.writer = w;
                }
                async flush() {
                    if (this.err !== null)
                        throw this.err;
                    if (this.usedBufferBytes === 0)
                        return;
                    try {
                        await Deno.writeAll(this.writer, this.buf.subarray(0, this.usedBufferBytes));
                    }
                    catch (e) {
                        this.err = e;
                        throw e;
                    }
                    this.buf = new Uint8Array(this.buf.length);
                    this.usedBufferBytes = 0;
                }
                async write(data) {
                    if (this.err !== null)
                        throw this.err;
                    if (data.length === 0)
                        return 0;
                    let totalBytesWritten = 0;
                    let numBytesWritten = 0;
                    while (data.byteLength > this.available()) {
                        if (this.buffered() === 0) {
                            try {
                                numBytesWritten = await this.writer.write(data);
                            }
                            catch (e) {
                                this.err = e;
                                throw e;
                            }
                        }
                        else {
                            numBytesWritten = mod_ts_1.copyBytes(data, this.buf, this.usedBufferBytes);
                            this.usedBufferBytes += numBytesWritten;
                            await this.flush();
                        }
                        totalBytesWritten += numBytesWritten;
                        data = data.subarray(numBytesWritten);
                    }
                    numBytesWritten = mod_ts_1.copyBytes(data, this.buf, this.usedBufferBytes);
                    this.usedBufferBytes += numBytesWritten;
                    totalBytesWritten += numBytesWritten;
                    return totalBytesWritten;
                }
            };
            exports_13("BufWriter", BufWriter);
            BufWriterSync = class BufWriterSync extends AbstractBufBase {
                constructor(writer, size = DEFAULT_BUF_SIZE) {
                    super();
                    this.writer = writer;
                    if (size <= 0) {
                        size = DEFAULT_BUF_SIZE;
                    }
                    this.buf = new Uint8Array(size);
                }
                static create(writer, size = DEFAULT_BUF_SIZE) {
                    return writer instanceof BufWriterSync
                        ? writer
                        : new BufWriterSync(writer, size);
                }
                reset(w) {
                    this.err = null;
                    this.usedBufferBytes = 0;
                    this.writer = w;
                }
                flush() {
                    if (this.err !== null)
                        throw this.err;
                    if (this.usedBufferBytes === 0)
                        return;
                    try {
                        Deno.writeAllSync(this.writer, this.buf.subarray(0, this.usedBufferBytes));
                    }
                    catch (e) {
                        this.err = e;
                        throw e;
                    }
                    this.buf = new Uint8Array(this.buf.length);
                    this.usedBufferBytes = 0;
                }
                writeSync(data) {
                    if (this.err !== null)
                        throw this.err;
                    if (data.length === 0)
                        return 0;
                    let totalBytesWritten = 0;
                    let numBytesWritten = 0;
                    while (data.byteLength > this.available()) {
                        if (this.buffered() === 0) {
                            try {
                                numBytesWritten = this.writer.writeSync(data);
                            }
                            catch (e) {
                                this.err = e;
                                throw e;
                            }
                        }
                        else {
                            numBytesWritten = mod_ts_1.copyBytes(data, this.buf, this.usedBufferBytes);
                            this.usedBufferBytes += numBytesWritten;
                            this.flush();
                        }
                        totalBytesWritten += numBytesWritten;
                        data = data.subarray(numBytesWritten);
                    }
                    numBytesWritten = mod_ts_1.copyBytes(data, this.buf, this.usedBufferBytes);
                    this.usedBufferBytes += numBytesWritten;
                    totalBytesWritten += numBytesWritten;
                    return totalBytesWritten;
                }
            };
            exports_13("BufWriterSync", BufWriterSync);
        }
    };
});
System.register("https://deno.land/std@0.61.0/async/deferred", [], function (exports_14, context_14) {
    "use strict";
    var __moduleName = context_14 && context_14.id;
    function deferred() {
        let methods;
        const promise = new Promise((resolve, reject) => {
            methods = { resolve, reject };
        });
        return Object.assign(promise, methods);
    }
    exports_14("deferred", deferred);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/std@0.61.0/async/delay", [], function (exports_15, context_15) {
    "use strict";
    var __moduleName = context_15 && context_15.id;
    function delay(ms) {
        return new Promise((res) => setTimeout(() => {
            res();
        }, ms));
    }
    exports_15("delay", delay);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/std@0.61.0/async/mux_async_iterator", ["https://deno.land/std@0.61.0/async/deferred"], function (exports_16, context_16) {
    "use strict";
    var deferred_ts_1, MuxAsyncIterator;
    var __moduleName = context_16 && context_16.id;
    return {
        setters: [
            function (deferred_ts_1_1) {
                deferred_ts_1 = deferred_ts_1_1;
            }
        ],
        execute: function () {
            MuxAsyncIterator = class MuxAsyncIterator {
                constructor() {
                    this.iteratorCount = 0;
                    this.yields = [];
                    this.throws = [];
                    this.signal = deferred_ts_1.deferred();
                }
                add(iterator) {
                    ++this.iteratorCount;
                    this.callIteratorNext(iterator);
                }
                async callIteratorNext(iterator) {
                    try {
                        const { value, done } = await iterator.next();
                        if (done) {
                            --this.iteratorCount;
                        }
                        else {
                            this.yields.push({ iterator, value });
                        }
                    }
                    catch (e) {
                        this.throws.push(e);
                    }
                    this.signal.resolve();
                }
                async *iterate() {
                    while (this.iteratorCount > 0) {
                        await this.signal;
                        for (let i = 0; i < this.yields.length; i++) {
                            const { iterator, value } = this.yields[i];
                            yield value;
                            this.callIteratorNext(iterator);
                        }
                        if (this.throws.length) {
                            for (const e of this.throws) {
                                throw e;
                            }
                            this.throws.length = 0;
                        }
                        this.yields.length = 0;
                        this.signal = deferred_ts_1.deferred();
                    }
                }
                [Symbol.asyncIterator]() {
                    return this.iterate();
                }
            };
            exports_16("MuxAsyncIterator", MuxAsyncIterator);
        }
    };
});
System.register("https://deno.land/std@0.61.0/async/mod", ["https://deno.land/std@0.61.0/async/deferred", "https://deno.land/std@0.61.0/async/delay", "https://deno.land/std@0.61.0/async/mux_async_iterator"], function (exports_17, context_17) {
    "use strict";
    var __moduleName = context_17 && context_17.id;
    function exportStar_2(m) {
        var exports = {};
        for (var n in m) {
            if (n !== "default") exports[n] = m[n];
        }
        exports_17(exports);
    }
    return {
        setters: [
            function (deferred_ts_2_1) {
                exportStar_2(deferred_ts_2_1);
            },
            function (delay_ts_1_1) {
                exportStar_2(delay_ts_1_1);
            },
            function (mux_async_iterator_ts_1_1) {
                exportStar_2(mux_async_iterator_ts_1_1);
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/std@0.61.0/textproto/mod", ["https://deno.land/std@0.61.0/bytes/mod", "https://deno.land/std@0.61.0/encoding/utf8"], function (exports_18, context_18) {
    "use strict";
    var mod_ts_2, utf8_ts_1, invalidHeaderCharRegex, TextProtoReader;
    var __moduleName = context_18 && context_18.id;
    function str(buf) {
        if (buf == null) {
            return "";
        }
        else {
            return utf8_ts_1.decode(buf);
        }
    }
    function charCode(s) {
        return s.charCodeAt(0);
    }
    return {
        setters: [
            function (mod_ts_2_1) {
                mod_ts_2 = mod_ts_2_1;
            },
            function (utf8_ts_1_1) {
                utf8_ts_1 = utf8_ts_1_1;
            }
        ],
        execute: function () {
            invalidHeaderCharRegex = /[^\t\x20-\x7e\x80-\xff]/g;
            TextProtoReader = class TextProtoReader {
                constructor(r) {
                    this.r = r;
                }
                async readLine() {
                    const s = await this.readLineSlice();
                    if (s === null)
                        return null;
                    return str(s);
                }
                async readMIMEHeader() {
                    const m = new Headers();
                    let line;
                    let buf = await this.r.peek(1);
                    if (buf === null) {
                        return null;
                    }
                    else if (buf[0] == charCode(" ") || buf[0] == charCode("\t")) {
                        line = (await this.readLineSlice());
                    }
                    buf = await this.r.peek(1);
                    if (buf === null) {
                        throw new Deno.errors.UnexpectedEof();
                    }
                    else if (buf[0] == charCode(" ") || buf[0] == charCode("\t")) {
                        throw new Deno.errors.InvalidData(`malformed MIME header initial line: ${str(line)}`);
                    }
                    while (true) {
                        const kv = await this.readLineSlice();
                        if (kv === null)
                            throw new Deno.errors.UnexpectedEof();
                        if (kv.byteLength === 0)
                            return m;
                        let i = kv.indexOf(charCode(":"));
                        if (i < 0) {
                            throw new Deno.errors.InvalidData(`malformed MIME header line: ${str(kv)}`);
                        }
                        const key = str(kv.subarray(0, i));
                        if (key == "") {
                            continue;
                        }
                        i++;
                        while (i < kv.byteLength &&
                            (kv[i] == charCode(" ") || kv[i] == charCode("\t"))) {
                            i++;
                        }
                        const value = str(kv.subarray(i)).replace(invalidHeaderCharRegex, encodeURI);
                        try {
                            m.append(key, value);
                        }
                        catch {
                        }
                    }
                }
                async readLineSlice() {
                    let line;
                    while (true) {
                        const r = await this.r.readLine();
                        if (r === null)
                            return null;
                        const { line: l, more } = r;
                        if (!line && !more) {
                            if (this.skipSpace(l) === 0) {
                                return new Uint8Array(0);
                            }
                            return l;
                        }
                        line = line ? mod_ts_2.concat(line, l) : l;
                        if (!more) {
                            break;
                        }
                    }
                    return line;
                }
                skipSpace(l) {
                    let n = 0;
                    for (let i = 0; i < l.length; i++) {
                        if (l[i] === charCode(" ") || l[i] === charCode("\t")) {
                            continue;
                        }
                        n++;
                    }
                    return n;
                }
            };
            exports_18("TextProtoReader", TextProtoReader);
        }
    };
});
System.register("https://deno.land/std@0.61.0/http/http_status", [], function (exports_19, context_19) {
    "use strict";
    var Status, STATUS_TEXT;
    var __moduleName = context_19 && context_19.id;
    return {
        setters: [],
        execute: function () {
            (function (Status) {
                Status[Status["Continue"] = 100] = "Continue";
                Status[Status["SwitchingProtocols"] = 101] = "SwitchingProtocols";
                Status[Status["Processing"] = 102] = "Processing";
                Status[Status["EarlyHints"] = 103] = "EarlyHints";
                Status[Status["OK"] = 200] = "OK";
                Status[Status["Created"] = 201] = "Created";
                Status[Status["Accepted"] = 202] = "Accepted";
                Status[Status["NonAuthoritativeInfo"] = 203] = "NonAuthoritativeInfo";
                Status[Status["NoContent"] = 204] = "NoContent";
                Status[Status["ResetContent"] = 205] = "ResetContent";
                Status[Status["PartialContent"] = 206] = "PartialContent";
                Status[Status["MultiStatus"] = 207] = "MultiStatus";
                Status[Status["AlreadyReported"] = 208] = "AlreadyReported";
                Status[Status["IMUsed"] = 226] = "IMUsed";
                Status[Status["MultipleChoices"] = 300] = "MultipleChoices";
                Status[Status["MovedPermanently"] = 301] = "MovedPermanently";
                Status[Status["Found"] = 302] = "Found";
                Status[Status["SeeOther"] = 303] = "SeeOther";
                Status[Status["NotModified"] = 304] = "NotModified";
                Status[Status["UseProxy"] = 305] = "UseProxy";
                Status[Status["TemporaryRedirect"] = 307] = "TemporaryRedirect";
                Status[Status["PermanentRedirect"] = 308] = "PermanentRedirect";
                Status[Status["BadRequest"] = 400] = "BadRequest";
                Status[Status["Unauthorized"] = 401] = "Unauthorized";
                Status[Status["PaymentRequired"] = 402] = "PaymentRequired";
                Status[Status["Forbidden"] = 403] = "Forbidden";
                Status[Status["NotFound"] = 404] = "NotFound";
                Status[Status["MethodNotAllowed"] = 405] = "MethodNotAllowed";
                Status[Status["NotAcceptable"] = 406] = "NotAcceptable";
                Status[Status["ProxyAuthRequired"] = 407] = "ProxyAuthRequired";
                Status[Status["RequestTimeout"] = 408] = "RequestTimeout";
                Status[Status["Conflict"] = 409] = "Conflict";
                Status[Status["Gone"] = 410] = "Gone";
                Status[Status["LengthRequired"] = 411] = "LengthRequired";
                Status[Status["PreconditionFailed"] = 412] = "PreconditionFailed";
                Status[Status["RequestEntityTooLarge"] = 413] = "RequestEntityTooLarge";
                Status[Status["RequestURITooLong"] = 414] = "RequestURITooLong";
                Status[Status["UnsupportedMediaType"] = 415] = "UnsupportedMediaType";
                Status[Status["RequestedRangeNotSatisfiable"] = 416] = "RequestedRangeNotSatisfiable";
                Status[Status["ExpectationFailed"] = 417] = "ExpectationFailed";
                Status[Status["Teapot"] = 418] = "Teapot";
                Status[Status["MisdirectedRequest"] = 421] = "MisdirectedRequest";
                Status[Status["UnprocessableEntity"] = 422] = "UnprocessableEntity";
                Status[Status["Locked"] = 423] = "Locked";
                Status[Status["FailedDependency"] = 424] = "FailedDependency";
                Status[Status["TooEarly"] = 425] = "TooEarly";
                Status[Status["UpgradeRequired"] = 426] = "UpgradeRequired";
                Status[Status["PreconditionRequired"] = 428] = "PreconditionRequired";
                Status[Status["TooManyRequests"] = 429] = "TooManyRequests";
                Status[Status["RequestHeaderFieldsTooLarge"] = 431] = "RequestHeaderFieldsTooLarge";
                Status[Status["UnavailableForLegalReasons"] = 451] = "UnavailableForLegalReasons";
                Status[Status["InternalServerError"] = 500] = "InternalServerError";
                Status[Status["NotImplemented"] = 501] = "NotImplemented";
                Status[Status["BadGateway"] = 502] = "BadGateway";
                Status[Status["ServiceUnavailable"] = 503] = "ServiceUnavailable";
                Status[Status["GatewayTimeout"] = 504] = "GatewayTimeout";
                Status[Status["HTTPVersionNotSupported"] = 505] = "HTTPVersionNotSupported";
                Status[Status["VariantAlsoNegotiates"] = 506] = "VariantAlsoNegotiates";
                Status[Status["InsufficientStorage"] = 507] = "InsufficientStorage";
                Status[Status["LoopDetected"] = 508] = "LoopDetected";
                Status[Status["NotExtended"] = 510] = "NotExtended";
                Status[Status["NetworkAuthenticationRequired"] = 511] = "NetworkAuthenticationRequired";
            })(Status || (Status = {}));
            exports_19("Status", Status);
            exports_19("STATUS_TEXT", STATUS_TEXT = new Map([
                [Status.Continue, "Continue"],
                [Status.SwitchingProtocols, "Switching Protocols"],
                [Status.Processing, "Processing"],
                [Status.EarlyHints, "Early Hints"],
                [Status.OK, "OK"],
                [Status.Created, "Created"],
                [Status.Accepted, "Accepted"],
                [Status.NonAuthoritativeInfo, "Non-Authoritative Information"],
                [Status.NoContent, "No Content"],
                [Status.ResetContent, "Reset Content"],
                [Status.PartialContent, "Partial Content"],
                [Status.MultiStatus, "Multi-Status"],
                [Status.AlreadyReported, "Already Reported"],
                [Status.IMUsed, "IM Used"],
                [Status.MultipleChoices, "Multiple Choices"],
                [Status.MovedPermanently, "Moved Permanently"],
                [Status.Found, "Found"],
                [Status.SeeOther, "See Other"],
                [Status.NotModified, "Not Modified"],
                [Status.UseProxy, "Use Proxy"],
                [Status.TemporaryRedirect, "Temporary Redirect"],
                [Status.PermanentRedirect, "Permanent Redirect"],
                [Status.BadRequest, "Bad Request"],
                [Status.Unauthorized, "Unauthorized"],
                [Status.PaymentRequired, "Payment Required"],
                [Status.Forbidden, "Forbidden"],
                [Status.NotFound, "Not Found"],
                [Status.MethodNotAllowed, "Method Not Allowed"],
                [Status.NotAcceptable, "Not Acceptable"],
                [Status.ProxyAuthRequired, "Proxy Authentication Required"],
                [Status.RequestTimeout, "Request Timeout"],
                [Status.Conflict, "Conflict"],
                [Status.Gone, "Gone"],
                [Status.LengthRequired, "Length Required"],
                [Status.PreconditionFailed, "Precondition Failed"],
                [Status.RequestEntityTooLarge, "Request Entity Too Large"],
                [Status.RequestURITooLong, "Request URI Too Long"],
                [Status.UnsupportedMediaType, "Unsupported Media Type"],
                [Status.RequestedRangeNotSatisfiable, "Requested Range Not Satisfiable"],
                [Status.ExpectationFailed, "Expectation Failed"],
                [Status.Teapot, "I'm a teapot"],
                [Status.MisdirectedRequest, "Misdirected Request"],
                [Status.UnprocessableEntity, "Unprocessable Entity"],
                [Status.Locked, "Locked"],
                [Status.FailedDependency, "Failed Dependency"],
                [Status.TooEarly, "Too Early"],
                [Status.UpgradeRequired, "Upgrade Required"],
                [Status.PreconditionRequired, "Precondition Required"],
                [Status.TooManyRequests, "Too Many Requests"],
                [Status.RequestHeaderFieldsTooLarge, "Request Header Fields Too Large"],
                [Status.UnavailableForLegalReasons, "Unavailable For Legal Reasons"],
                [Status.InternalServerError, "Internal Server Error"],
                [Status.NotImplemented, "Not Implemented"],
                [Status.BadGateway, "Bad Gateway"],
                [Status.ServiceUnavailable, "Service Unavailable"],
                [Status.GatewayTimeout, "Gateway Timeout"],
                [Status.HTTPVersionNotSupported, "HTTP Version Not Supported"],
                [Status.VariantAlsoNegotiates, "Variant Also Negotiates"],
                [Status.InsufficientStorage, "Insufficient Storage"],
                [Status.LoopDetected, "Loop Detected"],
                [Status.NotExtended, "Not Extended"],
                [Status.NetworkAuthenticationRequired, "Network Authentication Required"],
            ]));
        }
    };
});
System.register("https://deno.land/std@0.61.0/http/_io", ["https://deno.land/std@0.61.0/io/bufio", "https://deno.land/std@0.61.0/textproto/mod", "https://deno.land/std@0.61.0/_util/assert", "https://deno.land/std@0.61.0/encoding/utf8", "https://deno.land/std@0.61.0/http/server", "https://deno.land/std@0.61.0/http/http_status"], function (exports_20, context_20) {
    "use strict";
    var bufio_ts_1, mod_ts_3, assert_ts_2, utf8_ts_2, server_ts_1, http_status_ts_1;
    var __moduleName = context_20 && context_20.id;
    function emptyReader() {
        return {
            read(_) {
                return Promise.resolve(null);
            },
        };
    }
    exports_20("emptyReader", emptyReader);
    function bodyReader(contentLength, r) {
        let totalRead = 0;
        let finished = false;
        async function read(buf) {
            if (finished)
                return null;
            let result;
            const remaining = contentLength - totalRead;
            if (remaining >= buf.byteLength) {
                result = await r.read(buf);
            }
            else {
                const readBuf = buf.subarray(0, remaining);
                result = await r.read(readBuf);
            }
            if (result !== null) {
                totalRead += result;
            }
            finished = totalRead === contentLength;
            return result;
        }
        return { read };
    }
    exports_20("bodyReader", bodyReader);
    function chunkedBodyReader(h, r) {
        const tp = new mod_ts_3.TextProtoReader(r);
        let finished = false;
        const chunks = [];
        async function read(buf) {
            if (finished)
                return null;
            const [chunk] = chunks;
            if (chunk) {
                const chunkRemaining = chunk.data.byteLength - chunk.offset;
                const readLength = Math.min(chunkRemaining, buf.byteLength);
                for (let i = 0; i < readLength; i++) {
                    buf[i] = chunk.data[chunk.offset + i];
                }
                chunk.offset += readLength;
                if (chunk.offset === chunk.data.byteLength) {
                    chunks.shift();
                    if ((await tp.readLine()) === null) {
                        throw new Deno.errors.UnexpectedEof();
                    }
                }
                return readLength;
            }
            const line = await tp.readLine();
            if (line === null)
                throw new Deno.errors.UnexpectedEof();
            const [chunkSizeString] = line.split(";");
            const chunkSize = parseInt(chunkSizeString, 16);
            if (Number.isNaN(chunkSize) || chunkSize < 0) {
                throw new Error("Invalid chunk size");
            }
            if (chunkSize > 0) {
                if (chunkSize > buf.byteLength) {
                    let eof = await r.readFull(buf);
                    if (eof === null) {
                        throw new Deno.errors.UnexpectedEof();
                    }
                    const restChunk = new Uint8Array(chunkSize - buf.byteLength);
                    eof = await r.readFull(restChunk);
                    if (eof === null) {
                        throw new Deno.errors.UnexpectedEof();
                    }
                    else {
                        chunks.push({
                            offset: 0,
                            data: restChunk,
                        });
                    }
                    return buf.byteLength;
                }
                else {
                    const bufToFill = buf.subarray(0, chunkSize);
                    const eof = await r.readFull(bufToFill);
                    if (eof === null) {
                        throw new Deno.errors.UnexpectedEof();
                    }
                    if ((await tp.readLine()) === null) {
                        throw new Deno.errors.UnexpectedEof();
                    }
                    return chunkSize;
                }
            }
            else {
                assert_ts_2.assert(chunkSize === 0);
                if ((await r.readLine()) === null) {
                    throw new Deno.errors.UnexpectedEof();
                }
                await readTrailers(h, r);
                finished = true;
                return null;
            }
        }
        return { read };
    }
    exports_20("chunkedBodyReader", chunkedBodyReader);
    function isProhibidedForTrailer(key) {
        const s = new Set(["transfer-encoding", "content-length", "trailer"]);
        return s.has(key.toLowerCase());
    }
    async function readTrailers(headers, r) {
        const trailers = parseTrailer(headers.get("trailer"));
        if (trailers == null)
            return;
        const trailerNames = [...trailers.keys()];
        const tp = new mod_ts_3.TextProtoReader(r);
        const result = await tp.readMIMEHeader();
        if (result == null) {
            throw new Deno.errors.InvalidData("Missing trailer header.");
        }
        const undeclared = [...result.keys()].filter((k) => !trailerNames.includes(k));
        if (undeclared.length > 0) {
            throw new Deno.errors.InvalidData(`Undeclared trailers: ${Deno.inspect(undeclared)}.`);
        }
        for (const [k, v] of result) {
            headers.append(k, v);
        }
        const missingTrailers = trailerNames.filter((k) => !result.has(k));
        if (missingTrailers.length > 0) {
            throw new Deno.errors.InvalidData(`Missing trailers: ${Deno.inspect(missingTrailers)}.`);
        }
        headers.delete("trailer");
    }
    exports_20("readTrailers", readTrailers);
    function parseTrailer(field) {
        if (field == null) {
            return undefined;
        }
        const trailerNames = field.split(",").map((v) => v.trim().toLowerCase());
        if (trailerNames.length === 0) {
            throw new Deno.errors.InvalidData("Empty trailer header.");
        }
        const prohibited = trailerNames.filter((k) => isProhibidedForTrailer(k));
        if (prohibited.length > 0) {
            throw new Deno.errors.InvalidData(`Prohibited trailer names: ${Deno.inspect(prohibited)}.`);
        }
        return new Headers(trailerNames.map((key) => [key, ""]));
    }
    async function writeChunkedBody(w, r) {
        const writer = bufio_ts_1.BufWriter.create(w);
        for await (const chunk of Deno.iter(r)) {
            if (chunk.byteLength <= 0)
                continue;
            const start = utf8_ts_2.encoder.encode(`${chunk.byteLength.toString(16)}\r\n`);
            const end = utf8_ts_2.encoder.encode("\r\n");
            await writer.write(start);
            await writer.write(chunk);
            await writer.write(end);
        }
        const endChunk = utf8_ts_2.encoder.encode("0\r\n\r\n");
        await writer.write(endChunk);
    }
    exports_20("writeChunkedBody", writeChunkedBody);
    async function writeTrailers(w, headers, trailers) {
        const trailer = headers.get("trailer");
        if (trailer === null) {
            throw new TypeError("Missing trailer header.");
        }
        const transferEncoding = headers.get("transfer-encoding");
        if (transferEncoding === null || !transferEncoding.match(/^chunked/)) {
            throw new TypeError(`Trailers are only allowed for "transfer-encoding: chunked", got "transfer-encoding: ${transferEncoding}".`);
        }
        const writer = bufio_ts_1.BufWriter.create(w);
        const trailerNames = trailer.split(",").map((s) => s.trim().toLowerCase());
        const prohibitedTrailers = trailerNames.filter((k) => isProhibidedForTrailer(k));
        if (prohibitedTrailers.length > 0) {
            throw new TypeError(`Prohibited trailer names: ${Deno.inspect(prohibitedTrailers)}.`);
        }
        const undeclared = [...trailers.keys()].filter((k) => !trailerNames.includes(k));
        if (undeclared.length > 0) {
            throw new TypeError(`Undeclared trailers: ${Deno.inspect(undeclared)}.`);
        }
        for (const [key, value] of trailers) {
            await writer.write(utf8_ts_2.encoder.encode(`${key}: ${value}\r\n`));
        }
        await writer.write(utf8_ts_2.encoder.encode("\r\n"));
        await writer.flush();
    }
    exports_20("writeTrailers", writeTrailers);
    async function writeResponse(w, r) {
        const protoMajor = 1;
        const protoMinor = 1;
        const statusCode = r.status || 200;
        const statusText = http_status_ts_1.STATUS_TEXT.get(statusCode);
        const writer = bufio_ts_1.BufWriter.create(w);
        if (!statusText) {
            throw new Deno.errors.InvalidData("Bad status code");
        }
        if (!r.body) {
            r.body = new Uint8Array();
        }
        if (typeof r.body === "string") {
            r.body = utf8_ts_2.encoder.encode(r.body);
        }
        let out = `HTTP/${protoMajor}.${protoMinor} ${statusCode} ${statusText}\r\n`;
        const headers = r.headers ?? new Headers();
        if (r.body && !headers.get("content-length")) {
            if (r.body instanceof Uint8Array) {
                out += `content-length: ${r.body.byteLength}\r\n`;
            }
            else if (!headers.get("transfer-encoding")) {
                out += "transfer-encoding: chunked\r\n";
            }
        }
        for (const [key, value] of headers) {
            out += `${key}: ${value}\r\n`;
        }
        out += `\r\n`;
        const header = utf8_ts_2.encoder.encode(out);
        const n = await writer.write(header);
        assert_ts_2.assert(n === header.byteLength);
        if (r.body instanceof Uint8Array) {
            const n = await writer.write(r.body);
            assert_ts_2.assert(n === r.body.byteLength);
        }
        else if (headers.has("content-length")) {
            const contentLength = headers.get("content-length");
            assert_ts_2.assert(contentLength != null);
            const bodyLength = parseInt(contentLength);
            const n = await Deno.copy(r.body, writer);
            assert_ts_2.assert(n === bodyLength);
        }
        else {
            await writeChunkedBody(writer, r.body);
        }
        if (r.trailers) {
            const t = await r.trailers();
            await writeTrailers(writer, headers, t);
        }
        await writer.flush();
    }
    exports_20("writeResponse", writeResponse);
    function parseHTTPVersion(vers) {
        switch (vers) {
            case "HTTP/1.1":
                return [1, 1];
            case "HTTP/1.0":
                return [1, 0];
            default: {
                const Big = 1000000;
                if (!vers.startsWith("HTTP/")) {
                    break;
                }
                const dot = vers.indexOf(".");
                if (dot < 0) {
                    break;
                }
                const majorStr = vers.substring(vers.indexOf("/") + 1, dot);
                const major = Number(majorStr);
                if (!Number.isInteger(major) || major < 0 || major > Big) {
                    break;
                }
                const minorStr = vers.substring(dot + 1);
                const minor = Number(minorStr);
                if (!Number.isInteger(minor) || minor < 0 || minor > Big) {
                    break;
                }
                return [major, minor];
            }
        }
        throw new Error(`malformed HTTP version ${vers}`);
    }
    exports_20("parseHTTPVersion", parseHTTPVersion);
    async function readRequest(conn, bufr) {
        const tp = new mod_ts_3.TextProtoReader(bufr);
        const firstLine = await tp.readLine();
        if (firstLine === null)
            return null;
        const headers = await tp.readMIMEHeader();
        if (headers === null)
            throw new Deno.errors.UnexpectedEof();
        const req = new server_ts_1.ServerRequest();
        req.conn = conn;
        req.r = bufr;
        [req.method, req.url, req.proto] = firstLine.split(" ", 3);
        [req.protoMinor, req.protoMajor] = parseHTTPVersion(req.proto);
        req.headers = headers;
        fixLength(req);
        return req;
    }
    exports_20("readRequest", readRequest);
    function fixLength(req) {
        const contentLength = req.headers.get("Content-Length");
        if (contentLength) {
            const arrClen = contentLength.split(",");
            if (arrClen.length > 1) {
                const distinct = [...new Set(arrClen.map((e) => e.trim()))];
                if (distinct.length > 1) {
                    throw Error("cannot contain multiple Content-Length headers");
                }
                else {
                    req.headers.set("Content-Length", distinct[0]);
                }
            }
            const c = req.headers.get("Content-Length");
            if (req.method === "HEAD" && c && c !== "0") {
                throw Error("http: method cannot contain a Content-Length");
            }
            if (c && req.headers.has("transfer-encoding")) {
                throw new Error("http: Transfer-Encoding and Content-Length cannot be send together");
            }
        }
    }
    return {
        setters: [
            function (bufio_ts_1_1) {
                bufio_ts_1 = bufio_ts_1_1;
            },
            function (mod_ts_3_1) {
                mod_ts_3 = mod_ts_3_1;
            },
            function (assert_ts_2_1) {
                assert_ts_2 = assert_ts_2_1;
            },
            function (utf8_ts_2_1) {
                utf8_ts_2 = utf8_ts_2_1;
            },
            function (server_ts_1_1) {
                server_ts_1 = server_ts_1_1;
            },
            function (http_status_ts_1_1) {
                http_status_ts_1 = http_status_ts_1_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/std@0.61.0/http/server", ["https://deno.land/std@0.61.0/encoding/utf8", "https://deno.land/std@0.61.0/io/bufio", "https://deno.land/std@0.61.0/_util/assert", "https://deno.land/std@0.61.0/async/mod", "https://deno.land/std@0.61.0/http/_io"], function (exports_21, context_21) {
    "use strict";
    var utf8_ts_3, bufio_ts_2, assert_ts_3, mod_ts_4, _io_ts_1, ServerRequest, Server;
    var __moduleName = context_21 && context_21.id;
    function _parseAddrFromStr(addr) {
        let url;
        try {
            const host = addr.startsWith(":") ? `0.0.0.0${addr}` : addr;
            url = new URL(`http://${host}`);
        }
        catch {
            throw new TypeError("Invalid address.");
        }
        if (url.username ||
            url.password ||
            url.pathname != "/" ||
            url.search ||
            url.hash) {
            throw new TypeError("Invalid address.");
        }
        return {
            hostname: url.hostname,
            port: url.port === "" ? 80 : Number(url.port),
        };
    }
    exports_21("_parseAddrFromStr", _parseAddrFromStr);
    function serve(addr) {
        if (typeof addr === "string") {
            addr = _parseAddrFromStr(addr);
        }
        const listener = Deno.listen(addr);
        return new Server(listener);
    }
    exports_21("serve", serve);
    async function listenAndServe(addr, handler) {
        const server = serve(addr);
        for await (const request of server) {
            handler(request);
        }
    }
    exports_21("listenAndServe", listenAndServe);
    function serveTLS(options) {
        const tlsOptions = {
            ...options,
            transport: "tcp",
        };
        const listener = Deno.listenTls(tlsOptions);
        return new Server(listener);
    }
    exports_21("serveTLS", serveTLS);
    async function listenAndServeTLS(options, handler) {
        const server = serveTLS(options);
        for await (const request of server) {
            handler(request);
        }
    }
    exports_21("listenAndServeTLS", listenAndServeTLS);
    return {
        setters: [
            function (utf8_ts_3_1) {
                utf8_ts_3 = utf8_ts_3_1;
            },
            function (bufio_ts_2_1) {
                bufio_ts_2 = bufio_ts_2_1;
            },
            function (assert_ts_3_1) {
                assert_ts_3 = assert_ts_3_1;
            },
            function (mod_ts_4_1) {
                mod_ts_4 = mod_ts_4_1;
            },
            function (_io_ts_1_1) {
                _io_ts_1 = _io_ts_1_1;
            }
        ],
        execute: function () {
            ServerRequest = class ServerRequest {
                constructor() {
                    this.done = mod_ts_4.deferred();
                    this._contentLength = undefined;
                    this._body = null;
                    this.finalized = false;
                }
                get contentLength() {
                    if (this._contentLength === undefined) {
                        const cl = this.headers.get("content-length");
                        if (cl) {
                            this._contentLength = parseInt(cl);
                            if (Number.isNaN(this._contentLength)) {
                                this._contentLength = null;
                            }
                        }
                        else {
                            this._contentLength = null;
                        }
                    }
                    return this._contentLength;
                }
                get body() {
                    if (!this._body) {
                        if (this.contentLength != null) {
                            this._body = _io_ts_1.bodyReader(this.contentLength, this.r);
                        }
                        else {
                            const transferEncoding = this.headers.get("transfer-encoding");
                            if (transferEncoding != null) {
                                const parts = transferEncoding
                                    .split(",")
                                    .map((e) => e.trim().toLowerCase());
                                assert_ts_3.assert(parts.includes("chunked"), 'transfer-encoding must include "chunked" if content-length is not set');
                                this._body = _io_ts_1.chunkedBodyReader(this.headers, this.r);
                            }
                            else {
                                this._body = _io_ts_1.emptyReader();
                            }
                        }
                    }
                    return this._body;
                }
                async respond(r) {
                    let err;
                    try {
                        await _io_ts_1.writeResponse(this.w, r);
                    }
                    catch (e) {
                        try {
                            this.conn.close();
                        }
                        catch {
                        }
                        err = e;
                    }
                    this.done.resolve(err);
                    if (err) {
                        throw err;
                    }
                }
                async finalize() {
                    if (this.finalized)
                        return;
                    const body = this.body;
                    const buf = new Uint8Array(1024);
                    while ((await body.read(buf)) !== null) {
                    }
                    this.finalized = true;
                }
            };
            exports_21("ServerRequest", ServerRequest);
            Server = class Server {
                constructor(listener) {
                    this.listener = listener;
                    this.closing = false;
                    this.connections = [];
                }
                close() {
                    this.closing = true;
                    this.listener.close();
                    for (const conn of this.connections) {
                        try {
                            conn.close();
                        }
                        catch (e) {
                            if (!(e instanceof Deno.errors.BadResource)) {
                                throw e;
                            }
                        }
                    }
                }
                async *iterateHttpRequests(conn) {
                    const reader = new bufio_ts_2.BufReader(conn);
                    const writer = new bufio_ts_2.BufWriter(conn);
                    while (!this.closing) {
                        let request;
                        try {
                            request = await _io_ts_1.readRequest(conn, reader);
                        }
                        catch (error) {
                            if (error instanceof Deno.errors.InvalidData ||
                                error instanceof Deno.errors.UnexpectedEof) {
                                await _io_ts_1.writeResponse(writer, {
                                    status: 400,
                                    body: utf8_ts_3.encode(`${error.message}\r\n\r\n`),
                                });
                            }
                            break;
                        }
                        if (request === null) {
                            break;
                        }
                        request.w = writer;
                        yield request;
                        const responseError = await request.done;
                        if (responseError) {
                            this.untrackConnection(request.conn);
                            return;
                        }
                        await request.finalize();
                    }
                    this.untrackConnection(conn);
                    try {
                        conn.close();
                    }
                    catch (e) {
                    }
                }
                trackConnection(conn) {
                    this.connections.push(conn);
                }
                untrackConnection(conn) {
                    const index = this.connections.indexOf(conn);
                    if (index !== -1) {
                        this.connections.splice(index, 1);
                    }
                }
                async *acceptConnAndIterateHttpRequests(mux) {
                    if (this.closing)
                        return;
                    let conn;
                    try {
                        conn = await this.listener.accept();
                    }
                    catch (error) {
                        if (error instanceof Deno.errors.BadResource ||
                            error instanceof Deno.errors.InvalidData ||
                            error instanceof Deno.errors.UnexpectedEof) {
                            return mux.add(this.acceptConnAndIterateHttpRequests(mux));
                        }
                        throw error;
                    }
                    this.trackConnection(conn);
                    mux.add(this.acceptConnAndIterateHttpRequests(mux));
                    yield* this.iterateHttpRequests(conn);
                }
                [Symbol.asyncIterator]() {
                    const mux = new mod_ts_4.MuxAsyncIterator();
                    mux.add(this.acceptConnAndIterateHttpRequests(mux));
                    return mux.iterate();
                }
            };
            exports_21("Server", Server);
        }
    };
});
System.register("https://deno.land/std@0.61.0/datetime/mod", ["https://deno.land/std@0.61.0/_util/assert"], function (exports_22, context_22) {
    "use strict";
    var assert_ts_4, SECOND, MINUTE, HOUR, DAY, WEEK;
    var __moduleName = context_22 && context_22.id;
    function execForce(reg, pat) {
        const v = reg.exec(pat);
        assert_ts_4.assert(v != null);
        return v;
    }
    function parseDate(dateStr, format) {
        let m, d, y;
        let datePattern;
        switch (format) {
            case "mm-dd-yyyy":
                datePattern = /^(\d{2})-(\d{2})-(\d{4})$/;
                [, m, d, y] = execForce(datePattern, dateStr);
                break;
            case "dd-mm-yyyy":
                datePattern = /^(\d{2})-(\d{2})-(\d{4})$/;
                [, d, m, y] = execForce(datePattern, dateStr);
                break;
            case "yyyy-mm-dd":
                datePattern = /^(\d{4})-(\d{2})-(\d{2})$/;
                [, y, m, d] = execForce(datePattern, dateStr);
                break;
            default:
                throw new Error("Invalid date format!");
        }
        return new Date(Number(y), Number(m) - 1, Number(d));
    }
    exports_22("parseDate", parseDate);
    function parseDateTime(datetimeStr, format) {
        let m, d, y, ho, mi;
        let datePattern;
        switch (format) {
            case "mm-dd-yyyy hh:mm":
                datePattern = /^(\d{2})-(\d{2})-(\d{4}) (\d{2}):(\d{2})$/;
                [, m, d, y, ho, mi] = execForce(datePattern, datetimeStr);
                break;
            case "dd-mm-yyyy hh:mm":
                datePattern = /^(\d{2})-(\d{2})-(\d{4}) (\d{2}):(\d{2})$/;
                [, d, m, y, ho, mi] = execForce(datePattern, datetimeStr);
                break;
            case "yyyy-mm-dd hh:mm":
                datePattern = /^(\d{4})-(\d{2})-(\d{2}) (\d{2}):(\d{2})$/;
                [, y, m, d, ho, mi] = execForce(datePattern, datetimeStr);
                break;
            case "hh:mm mm-dd-yyyy":
                datePattern = /^(\d{2}):(\d{2}) (\d{2})-(\d{2})-(\d{4})$/;
                [, ho, mi, m, d, y] = execForce(datePattern, datetimeStr);
                break;
            case "hh:mm dd-mm-yyyy":
                datePattern = /^(\d{2}):(\d{2}) (\d{2})-(\d{2})-(\d{4})$/;
                [, ho, mi, d, m, y] = execForce(datePattern, datetimeStr);
                break;
            case "hh:mm yyyy-mm-dd":
                datePattern = /^(\d{2}):(\d{2}) (\d{4})-(\d{2})-(\d{2})$/;
                [, ho, mi, y, m, d] = execForce(datePattern, datetimeStr);
                break;
            default:
                throw new Error("Invalid datetime format!");
        }
        return new Date(Number(y), Number(m) - 1, Number(d), Number(ho), Number(mi));
    }
    exports_22("parseDateTime", parseDateTime);
    function dayOfYear(date) {
        const yearStart = new Date(date.getFullYear(), 0, 0);
        const diff = date.getTime() -
            yearStart.getTime() +
            (yearStart.getTimezoneOffset() - date.getTimezoneOffset()) * 60 * 1000;
        return Math.floor(diff / DAY);
    }
    exports_22("dayOfYear", dayOfYear);
    function weekOfYear(date) {
        const workingDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));
        workingDate.setUTCDate(workingDate.getUTCDate() + 4 - (workingDate.getUTCDay() || 7));
        const yearStart = new Date(Date.UTC(workingDate.getUTCFullYear(), 0, 1));
        return Math.ceil(((workingDate.valueOf() - yearStart.valueOf()) / 86400000 + 1) / 7);
    }
    exports_22("weekOfYear", weekOfYear);
    function currentDayOfYear() {
        return dayOfYear(new Date());
    }
    exports_22("currentDayOfYear", currentDayOfYear);
    function toIMF(date) {
        function dtPad(v, lPad = 2) {
            return v.padStart(lPad, "0");
        }
        const d = dtPad(date.getUTCDate().toString());
        const h = dtPad(date.getUTCHours().toString());
        const min = dtPad(date.getUTCMinutes().toString());
        const s = dtPad(date.getUTCSeconds().toString());
        const y = date.getUTCFullYear();
        const days = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
        const months = [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec",
        ];
        return `${days[date.getUTCDay()]}, ${d} ${months[date.getUTCMonth()]} ${y} ${h}:${min}:${s} GMT`;
    }
    exports_22("toIMF", toIMF);
    function isLeap(year) {
        const yearNumber = year instanceof Date ? year.getFullYear() : year;
        return ((yearNumber % 4 === 0 && yearNumber % 100 !== 0) || yearNumber % 400 === 0);
    }
    exports_22("isLeap", isLeap);
    function difference(from, to, options) {
        const uniqueUnits = options?.units
            ? [...new Set(options?.units)]
            : [
                "miliseconds",
                "seconds",
                "minutes",
                "hours",
                "days",
                "weeks",
                "months",
                "quarters",
                "years",
            ];
        const bigger = Math.max(from.getTime(), to.getTime());
        const smaller = Math.min(from.getTime(), to.getTime());
        const differenceInMs = bigger - smaller;
        const differences = {};
        for (const uniqueUnit of uniqueUnits) {
            switch (uniqueUnit) {
                case "miliseconds":
                    differences.miliseconds = differenceInMs;
                    break;
                case "seconds":
                    differences.seconds = Math.floor(differenceInMs / SECOND);
                    break;
                case "minutes":
                    differences.minutes = Math.floor(differenceInMs / MINUTE);
                    break;
                case "hours":
                    differences.hours = Math.floor(differenceInMs / HOUR);
                    break;
                case "days":
                    differences.days = Math.floor(differenceInMs / DAY);
                    break;
                case "weeks":
                    differences.weeks = Math.floor(differenceInMs / WEEK);
                    break;
                case "months":
                    differences.months = calculateMonthsDifference(bigger, smaller);
                    break;
                case "quarters":
                    differences.quarters = Math.floor((typeof differences.months !== "undefined" &&
                        differences.months / 4) ||
                        calculateMonthsDifference(bigger, smaller) / 4);
                    break;
                case "years":
                    differences.years = Math.floor((typeof differences.months !== "undefined" &&
                        differences.months / 12) ||
                        calculateMonthsDifference(bigger, smaller) / 12);
                    break;
            }
        }
        return differences;
    }
    exports_22("difference", difference);
    function calculateMonthsDifference(bigger, smaller) {
        const biggerDate = new Date(bigger);
        const smallerDate = new Date(smaller);
        const yearsDiff = biggerDate.getFullYear() - smallerDate.getFullYear();
        const monthsDiff = biggerDate.getMonth() - smallerDate.getMonth();
        const calendarDiffrences = Math.abs(yearsDiff * 12 + monthsDiff);
        const compareResult = biggerDate > smallerDate ? 1 : -1;
        biggerDate.setMonth(biggerDate.getMonth() - compareResult * calendarDiffrences);
        const isLastMonthNotFull = biggerDate > smallerDate ? 1 : -1 === -compareResult ? 1 : 0;
        const months = compareResult * (calendarDiffrences - isLastMonthNotFull);
        return months === 0 ? 0 : months;
    }
    return {
        setters: [
            function (assert_ts_4_1) {
                assert_ts_4 = assert_ts_4_1;
            }
        ],
        execute: function () {
            exports_22("SECOND", SECOND = 1e3);
            exports_22("MINUTE", MINUTE = SECOND * 60);
            exports_22("HOUR", HOUR = MINUTE * 60);
            exports_22("DAY", DAY = HOUR * 24);
            exports_22("WEEK", WEEK = DAY * 7);
        }
    };
});
System.register("https://deno.land/std@0.61.0/http/cookie", ["https://deno.land/std@0.61.0/_util/assert", "https://deno.land/std@0.61.0/datetime/mod"], function (exports_23, context_23) {
    "use strict";
    var assert_ts_5, mod_ts_5;
    var __moduleName = context_23 && context_23.id;
    function toString(cookie) {
        if (!cookie.name) {
            return "";
        }
        const out = [];
        out.push(`${cookie.name}=${cookie.value}`);
        if (cookie.name.startsWith("__Secure")) {
            cookie.secure = true;
        }
        if (cookie.name.startsWith("__Host")) {
            cookie.path = "/";
            cookie.secure = true;
            delete cookie.domain;
        }
        if (cookie.secure) {
            out.push("Secure");
        }
        if (cookie.httpOnly) {
            out.push("HttpOnly");
        }
        if (typeof cookie.maxAge === "number" && Number.isInteger(cookie.maxAge)) {
            assert_ts_5.assert(cookie.maxAge > 0, "Max-Age must be an integer superior to 0");
            out.push(`Max-Age=${cookie.maxAge}`);
        }
        if (cookie.domain) {
            out.push(`Domain=${cookie.domain}`);
        }
        if (cookie.sameSite) {
            out.push(`SameSite=${cookie.sameSite}`);
        }
        if (cookie.path) {
            out.push(`Path=${cookie.path}`);
        }
        if (cookie.expires) {
            const dateString = mod_ts_5.toIMF(cookie.expires);
            out.push(`Expires=${dateString}`);
        }
        if (cookie.unparsed) {
            out.push(cookie.unparsed.join("; "));
        }
        return out.join("; ");
    }
    function getCookies(req) {
        const cookie = req.headers.get("Cookie");
        if (cookie != null) {
            const out = {};
            const c = cookie.split(";");
            for (const kv of c) {
                const [cookieKey, ...cookieVal] = kv.split("=");
                assert_ts_5.assert(cookieKey != null);
                const key = cookieKey.trim();
                out[key] = cookieVal.join("=");
            }
            return out;
        }
        return {};
    }
    exports_23("getCookies", getCookies);
    function setCookie(res, cookie) {
        if (!res.headers) {
            res.headers = new Headers();
        }
        const v = toString(cookie);
        if (v) {
            res.headers.append("Set-Cookie", v);
        }
    }
    exports_23("setCookie", setCookie);
    function deleteCookie(res, name) {
        setCookie(res, {
            name: name,
            value: "",
            expires: new Date(0),
        });
    }
    exports_23("deleteCookie", deleteCookie);
    return {
        setters: [
            function (assert_ts_5_1) {
                assert_ts_5 = assert_ts_5_1;
            },
            function (mod_ts_5_1) {
                mod_ts_5 = mod_ts_5_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/std@0.61.0/path/_constants", [], function (exports_24, context_24) {
    "use strict";
    var CHAR_UPPERCASE_A, CHAR_LOWERCASE_A, CHAR_UPPERCASE_Z, CHAR_LOWERCASE_Z, CHAR_DOT, CHAR_FORWARD_SLASH, CHAR_BACKWARD_SLASH, CHAR_VERTICAL_LINE, CHAR_COLON, CHAR_QUESTION_MARK, CHAR_UNDERSCORE, CHAR_LINE_FEED, CHAR_CARRIAGE_RETURN, CHAR_TAB, CHAR_FORM_FEED, CHAR_EXCLAMATION_MARK, CHAR_HASH, CHAR_SPACE, CHAR_NO_BREAK_SPACE, CHAR_ZERO_WIDTH_NOBREAK_SPACE, CHAR_LEFT_SQUARE_BRACKET, CHAR_RIGHT_SQUARE_BRACKET, CHAR_LEFT_ANGLE_BRACKET, CHAR_RIGHT_ANGLE_BRACKET, CHAR_LEFT_CURLY_BRACKET, CHAR_RIGHT_CURLY_BRACKET, CHAR_HYPHEN_MINUS, CHAR_PLUS, CHAR_DOUBLE_QUOTE, CHAR_SINGLE_QUOTE, CHAR_PERCENT, CHAR_SEMICOLON, CHAR_CIRCUMFLEX_ACCENT, CHAR_GRAVE_ACCENT, CHAR_AT, CHAR_AMPERSAND, CHAR_EQUAL, CHAR_0, CHAR_9, navigator, isWindows;
    var __moduleName = context_24 && context_24.id;
    return {
        setters: [],
        execute: function () {
            exports_24("CHAR_UPPERCASE_A", CHAR_UPPERCASE_A = 65);
            exports_24("CHAR_LOWERCASE_A", CHAR_LOWERCASE_A = 97);
            exports_24("CHAR_UPPERCASE_Z", CHAR_UPPERCASE_Z = 90);
            exports_24("CHAR_LOWERCASE_Z", CHAR_LOWERCASE_Z = 122);
            exports_24("CHAR_DOT", CHAR_DOT = 46);
            exports_24("CHAR_FORWARD_SLASH", CHAR_FORWARD_SLASH = 47);
            exports_24("CHAR_BACKWARD_SLASH", CHAR_BACKWARD_SLASH = 92);
            exports_24("CHAR_VERTICAL_LINE", CHAR_VERTICAL_LINE = 124);
            exports_24("CHAR_COLON", CHAR_COLON = 58);
            exports_24("CHAR_QUESTION_MARK", CHAR_QUESTION_MARK = 63);
            exports_24("CHAR_UNDERSCORE", CHAR_UNDERSCORE = 95);
            exports_24("CHAR_LINE_FEED", CHAR_LINE_FEED = 10);
            exports_24("CHAR_CARRIAGE_RETURN", CHAR_CARRIAGE_RETURN = 13);
            exports_24("CHAR_TAB", CHAR_TAB = 9);
            exports_24("CHAR_FORM_FEED", CHAR_FORM_FEED = 12);
            exports_24("CHAR_EXCLAMATION_MARK", CHAR_EXCLAMATION_MARK = 33);
            exports_24("CHAR_HASH", CHAR_HASH = 35);
            exports_24("CHAR_SPACE", CHAR_SPACE = 32);
            exports_24("CHAR_NO_BREAK_SPACE", CHAR_NO_BREAK_SPACE = 160);
            exports_24("CHAR_ZERO_WIDTH_NOBREAK_SPACE", CHAR_ZERO_WIDTH_NOBREAK_SPACE = 65279);
            exports_24("CHAR_LEFT_SQUARE_BRACKET", CHAR_LEFT_SQUARE_BRACKET = 91);
            exports_24("CHAR_RIGHT_SQUARE_BRACKET", CHAR_RIGHT_SQUARE_BRACKET = 93);
            exports_24("CHAR_LEFT_ANGLE_BRACKET", CHAR_LEFT_ANGLE_BRACKET = 60);
            exports_24("CHAR_RIGHT_ANGLE_BRACKET", CHAR_RIGHT_ANGLE_BRACKET = 62);
            exports_24("CHAR_LEFT_CURLY_BRACKET", CHAR_LEFT_CURLY_BRACKET = 123);
            exports_24("CHAR_RIGHT_CURLY_BRACKET", CHAR_RIGHT_CURLY_BRACKET = 125);
            exports_24("CHAR_HYPHEN_MINUS", CHAR_HYPHEN_MINUS = 45);
            exports_24("CHAR_PLUS", CHAR_PLUS = 43);
            exports_24("CHAR_DOUBLE_QUOTE", CHAR_DOUBLE_QUOTE = 34);
            exports_24("CHAR_SINGLE_QUOTE", CHAR_SINGLE_QUOTE = 39);
            exports_24("CHAR_PERCENT", CHAR_PERCENT = 37);
            exports_24("CHAR_SEMICOLON", CHAR_SEMICOLON = 59);
            exports_24("CHAR_CIRCUMFLEX_ACCENT", CHAR_CIRCUMFLEX_ACCENT = 94);
            exports_24("CHAR_GRAVE_ACCENT", CHAR_GRAVE_ACCENT = 96);
            exports_24("CHAR_AT", CHAR_AT = 64);
            exports_24("CHAR_AMPERSAND", CHAR_AMPERSAND = 38);
            exports_24("CHAR_EQUAL", CHAR_EQUAL = 61);
            exports_24("CHAR_0", CHAR_0 = 48);
            exports_24("CHAR_9", CHAR_9 = 57);
            navigator = globalThis.navigator;
            isWindows = false;
            exports_24("isWindows", isWindows);
            if (globalThis.Deno != null) {
                exports_24("isWindows", isWindows = Deno.build.os == "windows");
            }
            else if (navigator?.appVersion != null) {
                exports_24("isWindows", isWindows = navigator.appVersion.includes("Win"));
            }
        }
    };
});
System.register("https://deno.land/std@0.61.0/path/_interface", [], function (exports_25, context_25) {
    "use strict";
    var __moduleName = context_25 && context_25.id;
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/std@0.61.0/path/_util", ["https://deno.land/std@0.61.0/path/_constants"], function (exports_26, context_26) {
    "use strict";
    var _constants_ts_1;
    var __moduleName = context_26 && context_26.id;
    function assertPath(path) {
        if (typeof path !== "string") {
            throw new TypeError(`Path must be a string. Received ${JSON.stringify(path)}`);
        }
    }
    exports_26("assertPath", assertPath);
    function isPosixPathSeparator(code) {
        return code === _constants_ts_1.CHAR_FORWARD_SLASH;
    }
    exports_26("isPosixPathSeparator", isPosixPathSeparator);
    function isPathSeparator(code) {
        return isPosixPathSeparator(code) || code === _constants_ts_1.CHAR_BACKWARD_SLASH;
    }
    exports_26("isPathSeparator", isPathSeparator);
    function isWindowsDeviceRoot(code) {
        return ((code >= _constants_ts_1.CHAR_LOWERCASE_A && code <= _constants_ts_1.CHAR_LOWERCASE_Z) ||
            (code >= _constants_ts_1.CHAR_UPPERCASE_A && code <= _constants_ts_1.CHAR_UPPERCASE_Z));
    }
    exports_26("isWindowsDeviceRoot", isWindowsDeviceRoot);
    function normalizeString(path, allowAboveRoot, separator, isPathSeparator) {
        let res = "";
        let lastSegmentLength = 0;
        let lastSlash = -1;
        let dots = 0;
        let code;
        for (let i = 0, len = path.length; i <= len; ++i) {
            if (i < len)
                code = path.charCodeAt(i);
            else if (isPathSeparator(code))
                break;
            else
                code = _constants_ts_1.CHAR_FORWARD_SLASH;
            if (isPathSeparator(code)) {
                if (lastSlash === i - 1 || dots === 1) {
                }
                else if (lastSlash !== i - 1 && dots === 2) {
                    if (res.length < 2 ||
                        lastSegmentLength !== 2 ||
                        res.charCodeAt(res.length - 1) !== _constants_ts_1.CHAR_DOT ||
                        res.charCodeAt(res.length - 2) !== _constants_ts_1.CHAR_DOT) {
                        if (res.length > 2) {
                            const lastSlashIndex = res.lastIndexOf(separator);
                            if (lastSlashIndex === -1) {
                                res = "";
                                lastSegmentLength = 0;
                            }
                            else {
                                res = res.slice(0, lastSlashIndex);
                                lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);
                            }
                            lastSlash = i;
                            dots = 0;
                            continue;
                        }
                        else if (res.length === 2 || res.length === 1) {
                            res = "";
                            lastSegmentLength = 0;
                            lastSlash = i;
                            dots = 0;
                            continue;
                        }
                    }
                    if (allowAboveRoot) {
                        if (res.length > 0)
                            res += `${separator}..`;
                        else
                            res = "..";
                        lastSegmentLength = 2;
                    }
                }
                else {
                    if (res.length > 0)
                        res += separator + path.slice(lastSlash + 1, i);
                    else
                        res = path.slice(lastSlash + 1, i);
                    lastSegmentLength = i - lastSlash - 1;
                }
                lastSlash = i;
                dots = 0;
            }
            else if (code === _constants_ts_1.CHAR_DOT && dots !== -1) {
                ++dots;
            }
            else {
                dots = -1;
            }
        }
        return res;
    }
    exports_26("normalizeString", normalizeString);
    function _format(sep, pathObject) {
        const dir = pathObject.dir || pathObject.root;
        const base = pathObject.base || (pathObject.name || "") + (pathObject.ext || "");
        if (!dir)
            return base;
        if (dir === pathObject.root)
            return dir + base;
        return dir + sep + base;
    }
    exports_26("_format", _format);
    return {
        setters: [
            function (_constants_ts_1_1) {
                _constants_ts_1 = _constants_ts_1_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/std@0.61.0/path/win32", ["https://deno.land/std@0.61.0/path/_constants", "https://deno.land/std@0.61.0/path/_util", "https://deno.land/std@0.61.0/_util/assert"], function (exports_27, context_27) {
    "use strict";
    var _constants_ts_2, _util_ts_1, assert_ts_6, sep, delimiter;
    var __moduleName = context_27 && context_27.id;
    function resolve(...pathSegments) {
        let resolvedDevice = "";
        let resolvedTail = "";
        let resolvedAbsolute = false;
        for (let i = pathSegments.length - 1; i >= -1; i--) {
            let path;
            if (i >= 0) {
                path = pathSegments[i];
            }
            else if (!resolvedDevice) {
                if (globalThis.Deno == null) {
                    throw new TypeError("Resolved a drive-letter-less path without a CWD.");
                }
                path = Deno.cwd();
            }
            else {
                if (globalThis.Deno == null) {
                    throw new TypeError("Resolved a relative path without a CWD.");
                }
                path = Deno.env.get(`=${resolvedDevice}`) || Deno.cwd();
                if (path === undefined ||
                    path.slice(0, 3).toLowerCase() !== `${resolvedDevice.toLowerCase()}\\`) {
                    path = `${resolvedDevice}\\`;
                }
            }
            _util_ts_1.assertPath(path);
            const len = path.length;
            if (len === 0)
                continue;
            let rootEnd = 0;
            let device = "";
            let isAbsolute = false;
            const code = path.charCodeAt(0);
            if (len > 1) {
                if (_util_ts_1.isPathSeparator(code)) {
                    isAbsolute = true;
                    if (_util_ts_1.isPathSeparator(path.charCodeAt(1))) {
                        let j = 2;
                        let last = j;
                        for (; j < len; ++j) {
                            if (_util_ts_1.isPathSeparator(path.charCodeAt(j)))
                                break;
                        }
                        if (j < len && j !== last) {
                            const firstPart = path.slice(last, j);
                            last = j;
                            for (; j < len; ++j) {
                                if (!_util_ts_1.isPathSeparator(path.charCodeAt(j)))
                                    break;
                            }
                            if (j < len && j !== last) {
                                last = j;
                                for (; j < len; ++j) {
                                    if (_util_ts_1.isPathSeparator(path.charCodeAt(j)))
                                        break;
                                }
                                if (j === len) {
                                    device = `\\\\${firstPart}\\${path.slice(last)}`;
                                    rootEnd = j;
                                }
                                else if (j !== last) {
                                    device = `\\\\${firstPart}\\${path.slice(last, j)}`;
                                    rootEnd = j;
                                }
                            }
                        }
                    }
                    else {
                        rootEnd = 1;
                    }
                }
                else if (_util_ts_1.isWindowsDeviceRoot(code)) {
                    if (path.charCodeAt(1) === _constants_ts_2.CHAR_COLON) {
                        device = path.slice(0, 2);
                        rootEnd = 2;
                        if (len > 2) {
                            if (_util_ts_1.isPathSeparator(path.charCodeAt(2))) {
                                isAbsolute = true;
                                rootEnd = 3;
                            }
                        }
                    }
                }
            }
            else if (_util_ts_1.isPathSeparator(code)) {
                rootEnd = 1;
                isAbsolute = true;
            }
            if (device.length > 0 &&
                resolvedDevice.length > 0 &&
                device.toLowerCase() !== resolvedDevice.toLowerCase()) {
                continue;
            }
            if (resolvedDevice.length === 0 && device.length > 0) {
                resolvedDevice = device;
            }
            if (!resolvedAbsolute) {
                resolvedTail = `${path.slice(rootEnd)}\\${resolvedTail}`;
                resolvedAbsolute = isAbsolute;
            }
            if (resolvedAbsolute && resolvedDevice.length > 0)
                break;
        }
        resolvedTail = _util_ts_1.normalizeString(resolvedTail, !resolvedAbsolute, "\\", _util_ts_1.isPathSeparator);
        return resolvedDevice + (resolvedAbsolute ? "\\" : "") + resolvedTail || ".";
    }
    exports_27("resolve", resolve);
    function normalize(path) {
        _util_ts_1.assertPath(path);
        const len = path.length;
        if (len === 0)
            return ".";
        let rootEnd = 0;
        let device;
        let isAbsolute = false;
        const code = path.charCodeAt(0);
        if (len > 1) {
            if (_util_ts_1.isPathSeparator(code)) {
                isAbsolute = true;
                if (_util_ts_1.isPathSeparator(path.charCodeAt(1))) {
                    let j = 2;
                    let last = j;
                    for (; j < len; ++j) {
                        if (_util_ts_1.isPathSeparator(path.charCodeAt(j)))
                            break;
                    }
                    if (j < len && j !== last) {
                        const firstPart = path.slice(last, j);
                        last = j;
                        for (; j < len; ++j) {
                            if (!_util_ts_1.isPathSeparator(path.charCodeAt(j)))
                                break;
                        }
                        if (j < len && j !== last) {
                            last = j;
                            for (; j < len; ++j) {
                                if (_util_ts_1.isPathSeparator(path.charCodeAt(j)))
                                    break;
                            }
                            if (j === len) {
                                return `\\\\${firstPart}\\${path.slice(last)}\\`;
                            }
                            else if (j !== last) {
                                device = `\\\\${firstPart}\\${path.slice(last, j)}`;
                                rootEnd = j;
                            }
                        }
                    }
                }
                else {
                    rootEnd = 1;
                }
            }
            else if (_util_ts_1.isWindowsDeviceRoot(code)) {
                if (path.charCodeAt(1) === _constants_ts_2.CHAR_COLON) {
                    device = path.slice(0, 2);
                    rootEnd = 2;
                    if (len > 2) {
                        if (_util_ts_1.isPathSeparator(path.charCodeAt(2))) {
                            isAbsolute = true;
                            rootEnd = 3;
                        }
                    }
                }
            }
        }
        else if (_util_ts_1.isPathSeparator(code)) {
            return "\\";
        }
        let tail;
        if (rootEnd < len) {
            tail = _util_ts_1.normalizeString(path.slice(rootEnd), !isAbsolute, "\\", _util_ts_1.isPathSeparator);
        }
        else {
            tail = "";
        }
        if (tail.length === 0 && !isAbsolute)
            tail = ".";
        if (tail.length > 0 && _util_ts_1.isPathSeparator(path.charCodeAt(len - 1))) {
            tail += "\\";
        }
        if (device === undefined) {
            if (isAbsolute) {
                if (tail.length > 0)
                    return `\\${tail}`;
                else
                    return "\\";
            }
            else if (tail.length > 0) {
                return tail;
            }
            else {
                return "";
            }
        }
        else if (isAbsolute) {
            if (tail.length > 0)
                return `${device}\\${tail}`;
            else
                return `${device}\\`;
        }
        else if (tail.length > 0) {
            return device + tail;
        }
        else {
            return device;
        }
    }
    exports_27("normalize", normalize);
    function isAbsolute(path) {
        _util_ts_1.assertPath(path);
        const len = path.length;
        if (len === 0)
            return false;
        const code = path.charCodeAt(0);
        if (_util_ts_1.isPathSeparator(code)) {
            return true;
        }
        else if (_util_ts_1.isWindowsDeviceRoot(code)) {
            if (len > 2 && path.charCodeAt(1) === _constants_ts_2.CHAR_COLON) {
                if (_util_ts_1.isPathSeparator(path.charCodeAt(2)))
                    return true;
            }
        }
        return false;
    }
    exports_27("isAbsolute", isAbsolute);
    function join(...paths) {
        const pathsCount = paths.length;
        if (pathsCount === 0)
            return ".";
        let joined;
        let firstPart = null;
        for (let i = 0; i < pathsCount; ++i) {
            const path = paths[i];
            _util_ts_1.assertPath(path);
            if (path.length > 0) {
                if (joined === undefined)
                    joined = firstPart = path;
                else
                    joined += `\\${path}`;
            }
        }
        if (joined === undefined)
            return ".";
        let needsReplace = true;
        let slashCount = 0;
        assert_ts_6.assert(firstPart != null);
        if (_util_ts_1.isPathSeparator(firstPart.charCodeAt(0))) {
            ++slashCount;
            const firstLen = firstPart.length;
            if (firstLen > 1) {
                if (_util_ts_1.isPathSeparator(firstPart.charCodeAt(1))) {
                    ++slashCount;
                    if (firstLen > 2) {
                        if (_util_ts_1.isPathSeparator(firstPart.charCodeAt(2)))
                            ++slashCount;
                        else {
                            needsReplace = false;
                        }
                    }
                }
            }
        }
        if (needsReplace) {
            for (; slashCount < joined.length; ++slashCount) {
                if (!_util_ts_1.isPathSeparator(joined.charCodeAt(slashCount)))
                    break;
            }
            if (slashCount >= 2)
                joined = `\\${joined.slice(slashCount)}`;
        }
        return normalize(joined);
    }
    exports_27("join", join);
    function relative(from, to) {
        _util_ts_1.assertPath(from);
        _util_ts_1.assertPath(to);
        if (from === to)
            return "";
        const fromOrig = resolve(from);
        const toOrig = resolve(to);
        if (fromOrig === toOrig)
            return "";
        from = fromOrig.toLowerCase();
        to = toOrig.toLowerCase();
        if (from === to)
            return "";
        let fromStart = 0;
        let fromEnd = from.length;
        for (; fromStart < fromEnd; ++fromStart) {
            if (from.charCodeAt(fromStart) !== _constants_ts_2.CHAR_BACKWARD_SLASH)
                break;
        }
        for (; fromEnd - 1 > fromStart; --fromEnd) {
            if (from.charCodeAt(fromEnd - 1) !== _constants_ts_2.CHAR_BACKWARD_SLASH)
                break;
        }
        const fromLen = fromEnd - fromStart;
        let toStart = 0;
        let toEnd = to.length;
        for (; toStart < toEnd; ++toStart) {
            if (to.charCodeAt(toStart) !== _constants_ts_2.CHAR_BACKWARD_SLASH)
                break;
        }
        for (; toEnd - 1 > toStart; --toEnd) {
            if (to.charCodeAt(toEnd - 1) !== _constants_ts_2.CHAR_BACKWARD_SLASH)
                break;
        }
        const toLen = toEnd - toStart;
        const length = fromLen < toLen ? fromLen : toLen;
        let lastCommonSep = -1;
        let i = 0;
        for (; i <= length; ++i) {
            if (i === length) {
                if (toLen > length) {
                    if (to.charCodeAt(toStart + i) === _constants_ts_2.CHAR_BACKWARD_SLASH) {
                        return toOrig.slice(toStart + i + 1);
                    }
                    else if (i === 2) {
                        return toOrig.slice(toStart + i);
                    }
                }
                if (fromLen > length) {
                    if (from.charCodeAt(fromStart + i) === _constants_ts_2.CHAR_BACKWARD_SLASH) {
                        lastCommonSep = i;
                    }
                    else if (i === 2) {
                        lastCommonSep = 3;
                    }
                }
                break;
            }
            const fromCode = from.charCodeAt(fromStart + i);
            const toCode = to.charCodeAt(toStart + i);
            if (fromCode !== toCode)
                break;
            else if (fromCode === _constants_ts_2.CHAR_BACKWARD_SLASH)
                lastCommonSep = i;
        }
        if (i !== length && lastCommonSep === -1) {
            return toOrig;
        }
        let out = "";
        if (lastCommonSep === -1)
            lastCommonSep = 0;
        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {
            if (i === fromEnd || from.charCodeAt(i) === _constants_ts_2.CHAR_BACKWARD_SLASH) {
                if (out.length === 0)
                    out += "..";
                else
                    out += "\\..";
            }
        }
        if (out.length > 0) {
            return out + toOrig.slice(toStart + lastCommonSep, toEnd);
        }
        else {
            toStart += lastCommonSep;
            if (toOrig.charCodeAt(toStart) === _constants_ts_2.CHAR_BACKWARD_SLASH)
                ++toStart;
            return toOrig.slice(toStart, toEnd);
        }
    }
    exports_27("relative", relative);
    function toNamespacedPath(path) {
        if (typeof path !== "string")
            return path;
        if (path.length === 0)
            return "";
        const resolvedPath = resolve(path);
        if (resolvedPath.length >= 3) {
            if (resolvedPath.charCodeAt(0) === _constants_ts_2.CHAR_BACKWARD_SLASH) {
                if (resolvedPath.charCodeAt(1) === _constants_ts_2.CHAR_BACKWARD_SLASH) {
                    const code = resolvedPath.charCodeAt(2);
                    if (code !== _constants_ts_2.CHAR_QUESTION_MARK && code !== _constants_ts_2.CHAR_DOT) {
                        return `\\\\?\\UNC\\${resolvedPath.slice(2)}`;
                    }
                }
            }
            else if (_util_ts_1.isWindowsDeviceRoot(resolvedPath.charCodeAt(0))) {
                if (resolvedPath.charCodeAt(1) === _constants_ts_2.CHAR_COLON &&
                    resolvedPath.charCodeAt(2) === _constants_ts_2.CHAR_BACKWARD_SLASH) {
                    return `\\\\?\\${resolvedPath}`;
                }
            }
        }
        return path;
    }
    exports_27("toNamespacedPath", toNamespacedPath);
    function dirname(path) {
        _util_ts_1.assertPath(path);
        const len = path.length;
        if (len === 0)
            return ".";
        let rootEnd = -1;
        let end = -1;
        let matchedSlash = true;
        let offset = 0;
        const code = path.charCodeAt(0);
        if (len > 1) {
            if (_util_ts_1.isPathSeparator(code)) {
                rootEnd = offset = 1;
                if (_util_ts_1.isPathSeparator(path.charCodeAt(1))) {
                    let j = 2;
                    let last = j;
                    for (; j < len; ++j) {
                        if (_util_ts_1.isPathSeparator(path.charCodeAt(j)))
                            break;
                    }
                    if (j < len && j !== last) {
                        last = j;
                        for (; j < len; ++j) {
                            if (!_util_ts_1.isPathSeparator(path.charCodeAt(j)))
                                break;
                        }
                        if (j < len && j !== last) {
                            last = j;
                            for (; j < len; ++j) {
                                if (_util_ts_1.isPathSeparator(path.charCodeAt(j)))
                                    break;
                            }
                            if (j === len) {
                                return path;
                            }
                            if (j !== last) {
                                rootEnd = offset = j + 1;
                            }
                        }
                    }
                }
            }
            else if (_util_ts_1.isWindowsDeviceRoot(code)) {
                if (path.charCodeAt(1) === _constants_ts_2.CHAR_COLON) {
                    rootEnd = offset = 2;
                    if (len > 2) {
                        if (_util_ts_1.isPathSeparator(path.charCodeAt(2)))
                            rootEnd = offset = 3;
                    }
                }
            }
        }
        else if (_util_ts_1.isPathSeparator(code)) {
            return path;
        }
        for (let i = len - 1; i >= offset; --i) {
            if (_util_ts_1.isPathSeparator(path.charCodeAt(i))) {
                if (!matchedSlash) {
                    end = i;
                    break;
                }
            }
            else {
                matchedSlash = false;
            }
        }
        if (end === -1) {
            if (rootEnd === -1)
                return ".";
            else
                end = rootEnd;
        }
        return path.slice(0, end);
    }
    exports_27("dirname", dirname);
    function basename(path, ext = "") {
        if (ext !== undefined && typeof ext !== "string") {
            throw new TypeError('"ext" argument must be a string');
        }
        _util_ts_1.assertPath(path);
        let start = 0;
        let end = -1;
        let matchedSlash = true;
        let i;
        if (path.length >= 2) {
            const drive = path.charCodeAt(0);
            if (_util_ts_1.isWindowsDeviceRoot(drive)) {
                if (path.charCodeAt(1) === _constants_ts_2.CHAR_COLON)
                    start = 2;
            }
        }
        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {
            if (ext.length === path.length && ext === path)
                return "";
            let extIdx = ext.length - 1;
            let firstNonSlashEnd = -1;
            for (i = path.length - 1; i >= start; --i) {
                const code = path.charCodeAt(i);
                if (_util_ts_1.isPathSeparator(code)) {
                    if (!matchedSlash) {
                        start = i + 1;
                        break;
                    }
                }
                else {
                    if (firstNonSlashEnd === -1) {
                        matchedSlash = false;
                        firstNonSlashEnd = i + 1;
                    }
                    if (extIdx >= 0) {
                        if (code === ext.charCodeAt(extIdx)) {
                            if (--extIdx === -1) {
                                end = i;
                            }
                        }
                        else {
                            extIdx = -1;
                            end = firstNonSlashEnd;
                        }
                    }
                }
            }
            if (start === end)
                end = firstNonSlashEnd;
            else if (end === -1)
                end = path.length;
            return path.slice(start, end);
        }
        else {
            for (i = path.length - 1; i >= start; --i) {
                if (_util_ts_1.isPathSeparator(path.charCodeAt(i))) {
                    if (!matchedSlash) {
                        start = i + 1;
                        break;
                    }
                }
                else if (end === -1) {
                    matchedSlash = false;
                    end = i + 1;
                }
            }
            if (end === -1)
                return "";
            return path.slice(start, end);
        }
    }
    exports_27("basename", basename);
    function extname(path) {
        _util_ts_1.assertPath(path);
        let start = 0;
        let startDot = -1;
        let startPart = 0;
        let end = -1;
        let matchedSlash = true;
        let preDotState = 0;
        if (path.length >= 2 &&
            path.charCodeAt(1) === _constants_ts_2.CHAR_COLON &&
            _util_ts_1.isWindowsDeviceRoot(path.charCodeAt(0))) {
            start = startPart = 2;
        }
        for (let i = path.length - 1; i >= start; --i) {
            const code = path.charCodeAt(i);
            if (_util_ts_1.isPathSeparator(code)) {
                if (!matchedSlash) {
                    startPart = i + 1;
                    break;
                }
                continue;
            }
            if (end === -1) {
                matchedSlash = false;
                end = i + 1;
            }
            if (code === _constants_ts_2.CHAR_DOT) {
                if (startDot === -1)
                    startDot = i;
                else if (preDotState !== 1)
                    preDotState = 1;
            }
            else if (startDot !== -1) {
                preDotState = -1;
            }
        }
        if (startDot === -1 ||
            end === -1 ||
            preDotState === 0 ||
            (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)) {
            return "";
        }
        return path.slice(startDot, end);
    }
    exports_27("extname", extname);
    function format(pathObject) {
        if (pathObject === null || typeof pathObject !== "object") {
            throw new TypeError(`The "pathObject" argument must be of type Object. Received type ${typeof pathObject}`);
        }
        return _util_ts_1._format("\\", pathObject);
    }
    exports_27("format", format);
    function parse(path) {
        _util_ts_1.assertPath(path);
        const ret = { root: "", dir: "", base: "", ext: "", name: "" };
        const len = path.length;
        if (len === 0)
            return ret;
        let rootEnd = 0;
        let code = path.charCodeAt(0);
        if (len > 1) {
            if (_util_ts_1.isPathSeparator(code)) {
                rootEnd = 1;
                if (_util_ts_1.isPathSeparator(path.charCodeAt(1))) {
                    let j = 2;
                    let last = j;
                    for (; j < len; ++j) {
                        if (_util_ts_1.isPathSeparator(path.charCodeAt(j)))
                            break;
                    }
                    if (j < len && j !== last) {
                        last = j;
                        for (; j < len; ++j) {
                            if (!_util_ts_1.isPathSeparator(path.charCodeAt(j)))
                                break;
                        }
                        if (j < len && j !== last) {
                            last = j;
                            for (; j < len; ++j) {
                                if (_util_ts_1.isPathSeparator(path.charCodeAt(j)))
                                    break;
                            }
                            if (j === len) {
                                rootEnd = j;
                            }
                            else if (j !== last) {
                                rootEnd = j + 1;
                            }
                        }
                    }
                }
            }
            else if (_util_ts_1.isWindowsDeviceRoot(code)) {
                if (path.charCodeAt(1) === _constants_ts_2.CHAR_COLON) {
                    rootEnd = 2;
                    if (len > 2) {
                        if (_util_ts_1.isPathSeparator(path.charCodeAt(2))) {
                            if (len === 3) {
                                ret.root = ret.dir = path;
                                return ret;
                            }
                            rootEnd = 3;
                        }
                    }
                    else {
                        ret.root = ret.dir = path;
                        return ret;
                    }
                }
            }
        }
        else if (_util_ts_1.isPathSeparator(code)) {
            ret.root = ret.dir = path;
            return ret;
        }
        if (rootEnd > 0)
            ret.root = path.slice(0, rootEnd);
        let startDot = -1;
        let startPart = rootEnd;
        let end = -1;
        let matchedSlash = true;
        let i = path.length - 1;
        let preDotState = 0;
        for (; i >= rootEnd; --i) {
            code = path.charCodeAt(i);
            if (_util_ts_1.isPathSeparator(code)) {
                if (!matchedSlash) {
                    startPart = i + 1;
                    break;
                }
                continue;
            }
            if (end === -1) {
                matchedSlash = false;
                end = i + 1;
            }
            if (code === _constants_ts_2.CHAR_DOT) {
                if (startDot === -1)
                    startDot = i;
                else if (preDotState !== 1)
                    preDotState = 1;
            }
            else if (startDot !== -1) {
                preDotState = -1;
            }
        }
        if (startDot === -1 ||
            end === -1 ||
            preDotState === 0 ||
            (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)) {
            if (end !== -1) {
                ret.base = ret.name = path.slice(startPart, end);
            }
        }
        else {
            ret.name = path.slice(startPart, startDot);
            ret.base = path.slice(startPart, end);
            ret.ext = path.slice(startDot, end);
        }
        if (startPart > 0 && startPart !== rootEnd) {
            ret.dir = path.slice(0, startPart - 1);
        }
        else
            ret.dir = ret.root;
        return ret;
    }
    exports_27("parse", parse);
    function fromFileUrl(url) {
        return new URL(String(url)).pathname
            .replace(/^\/*([A-Za-z]:)(\/|$)/, "$1/")
            .replace(/\//g, "\\");
    }
    exports_27("fromFileUrl", fromFileUrl);
    return {
        setters: [
            function (_constants_ts_2_1) {
                _constants_ts_2 = _constants_ts_2_1;
            },
            function (_util_ts_1_1) {
                _util_ts_1 = _util_ts_1_1;
            },
            function (assert_ts_6_1) {
                assert_ts_6 = assert_ts_6_1;
            }
        ],
        execute: function () {
            exports_27("sep", sep = "\\");
            exports_27("delimiter", delimiter = ";");
        }
    };
});
System.register("https://deno.land/std@0.61.0/path/posix", ["https://deno.land/std@0.61.0/path/_constants", "https://deno.land/std@0.61.0/path/_util"], function (exports_28, context_28) {
    "use strict";
    var _constants_ts_3, _util_ts_2, sep, delimiter;
    var __moduleName = context_28 && context_28.id;
    function resolve(...pathSegments) {
        let resolvedPath = "";
        let resolvedAbsolute = false;
        for (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
            let path;
            if (i >= 0)
                path = pathSegments[i];
            else {
                if (globalThis.Deno == null) {
                    throw new TypeError("Resolved a relative path without a CWD.");
                }
                path = Deno.cwd();
            }
            _util_ts_2.assertPath(path);
            if (path.length === 0) {
                continue;
            }
            resolvedPath = `${path}/${resolvedPath}`;
            resolvedAbsolute = path.charCodeAt(0) === _constants_ts_3.CHAR_FORWARD_SLASH;
        }
        resolvedPath = _util_ts_2.normalizeString(resolvedPath, !resolvedAbsolute, "/", _util_ts_2.isPosixPathSeparator);
        if (resolvedAbsolute) {
            if (resolvedPath.length > 0)
                return `/${resolvedPath}`;
            else
                return "/";
        }
        else if (resolvedPath.length > 0)
            return resolvedPath;
        else
            return ".";
    }
    exports_28("resolve", resolve);
    function normalize(path) {
        _util_ts_2.assertPath(path);
        if (path.length === 0)
            return ".";
        const isAbsolute = path.charCodeAt(0) === _constants_ts_3.CHAR_FORWARD_SLASH;
        const trailingSeparator = path.charCodeAt(path.length - 1) === _constants_ts_3.CHAR_FORWARD_SLASH;
        path = _util_ts_2.normalizeString(path, !isAbsolute, "/", _util_ts_2.isPosixPathSeparator);
        if (path.length === 0 && !isAbsolute)
            path = ".";
        if (path.length > 0 && trailingSeparator)
            path += "/";
        if (isAbsolute)
            return `/${path}`;
        return path;
    }
    exports_28("normalize", normalize);
    function isAbsolute(path) {
        _util_ts_2.assertPath(path);
        return path.length > 0 && path.charCodeAt(0) === _constants_ts_3.CHAR_FORWARD_SLASH;
    }
    exports_28("isAbsolute", isAbsolute);
    function join(...paths) {
        if (paths.length === 0)
            return ".";
        let joined;
        for (let i = 0, len = paths.length; i < len; ++i) {
            const path = paths[i];
            _util_ts_2.assertPath(path);
            if (path.length > 0) {
                if (!joined)
                    joined = path;
                else
                    joined += `/${path}`;
            }
        }
        if (!joined)
            return ".";
        return normalize(joined);
    }
    exports_28("join", join);
    function relative(from, to) {
        _util_ts_2.assertPath(from);
        _util_ts_2.assertPath(to);
        if (from === to)
            return "";
        from = resolve(from);
        to = resolve(to);
        if (from === to)
            return "";
        let fromStart = 1;
        const fromEnd = from.length;
        for (; fromStart < fromEnd; ++fromStart) {
            if (from.charCodeAt(fromStart) !== _constants_ts_3.CHAR_FORWARD_SLASH)
                break;
        }
        const fromLen = fromEnd - fromStart;
        let toStart = 1;
        const toEnd = to.length;
        for (; toStart < toEnd; ++toStart) {
            if (to.charCodeAt(toStart) !== _constants_ts_3.CHAR_FORWARD_SLASH)
                break;
        }
        const toLen = toEnd - toStart;
        const length = fromLen < toLen ? fromLen : toLen;
        let lastCommonSep = -1;
        let i = 0;
        for (; i <= length; ++i) {
            if (i === length) {
                if (toLen > length) {
                    if (to.charCodeAt(toStart + i) === _constants_ts_3.CHAR_FORWARD_SLASH) {
                        return to.slice(toStart + i + 1);
                    }
                    else if (i === 0) {
                        return to.slice(toStart + i);
                    }
                }
                else if (fromLen > length) {
                    if (from.charCodeAt(fromStart + i) === _constants_ts_3.CHAR_FORWARD_SLASH) {
                        lastCommonSep = i;
                    }
                    else if (i === 0) {
                        lastCommonSep = 0;
                    }
                }
                break;
            }
            const fromCode = from.charCodeAt(fromStart + i);
            const toCode = to.charCodeAt(toStart + i);
            if (fromCode !== toCode)
                break;
            else if (fromCode === _constants_ts_3.CHAR_FORWARD_SLASH)
                lastCommonSep = i;
        }
        let out = "";
        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {
            if (i === fromEnd || from.charCodeAt(i) === _constants_ts_3.CHAR_FORWARD_SLASH) {
                if (out.length === 0)
                    out += "..";
                else
                    out += "/..";
            }
        }
        if (out.length > 0)
            return out + to.slice(toStart + lastCommonSep);
        else {
            toStart += lastCommonSep;
            if (to.charCodeAt(toStart) === _constants_ts_3.CHAR_FORWARD_SLASH)
                ++toStart;
            return to.slice(toStart);
        }
    }
    exports_28("relative", relative);
    function toNamespacedPath(path) {
        return path;
    }
    exports_28("toNamespacedPath", toNamespacedPath);
    function dirname(path) {
        _util_ts_2.assertPath(path);
        if (path.length === 0)
            return ".";
        const hasRoot = path.charCodeAt(0) === _constants_ts_3.CHAR_FORWARD_SLASH;
        let end = -1;
        let matchedSlash = true;
        for (let i = path.length - 1; i >= 1; --i) {
            if (path.charCodeAt(i) === _constants_ts_3.CHAR_FORWARD_SLASH) {
                if (!matchedSlash) {
                    end = i;
                    break;
                }
            }
            else {
                matchedSlash = false;
            }
        }
        if (end === -1)
            return hasRoot ? "/" : ".";
        if (hasRoot && end === 1)
            return "//";
        return path.slice(0, end);
    }
    exports_28("dirname", dirname);
    function basename(path, ext = "") {
        if (ext !== undefined && typeof ext !== "string") {
            throw new TypeError('"ext" argument must be a string');
        }
        _util_ts_2.assertPath(path);
        let start = 0;
        let end = -1;
        let matchedSlash = true;
        let i;
        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {
            if (ext.length === path.length && ext === path)
                return "";
            let extIdx = ext.length - 1;
            let firstNonSlashEnd = -1;
            for (i = path.length - 1; i >= 0; --i) {
                const code = path.charCodeAt(i);
                if (code === _constants_ts_3.CHAR_FORWARD_SLASH) {
                    if (!matchedSlash) {
                        start = i + 1;
                        break;
                    }
                }
                else {
                    if (firstNonSlashEnd === -1) {
                        matchedSlash = false;
                        firstNonSlashEnd = i + 1;
                    }
                    if (extIdx >= 0) {
                        if (code === ext.charCodeAt(extIdx)) {
                            if (--extIdx === -1) {
                                end = i;
                            }
                        }
                        else {
                            extIdx = -1;
                            end = firstNonSlashEnd;
                        }
                    }
                }
            }
            if (start === end)
                end = firstNonSlashEnd;
            else if (end === -1)
                end = path.length;
            return path.slice(start, end);
        }
        else {
            for (i = path.length - 1; i >= 0; --i) {
                if (path.charCodeAt(i) === _constants_ts_3.CHAR_FORWARD_SLASH) {
                    if (!matchedSlash) {
                        start = i + 1;
                        break;
                    }
                }
                else if (end === -1) {
                    matchedSlash = false;
                    end = i + 1;
                }
            }
            if (end === -1)
                return "";
            return path.slice(start, end);
        }
    }
    exports_28("basename", basename);
    function extname(path) {
        _util_ts_2.assertPath(path);
        let startDot = -1;
        let startPart = 0;
        let end = -1;
        let matchedSlash = true;
        let preDotState = 0;
        for (let i = path.length - 1; i >= 0; --i) {
            const code = path.charCodeAt(i);
            if (code === _constants_ts_3.CHAR_FORWARD_SLASH) {
                if (!matchedSlash) {
                    startPart = i + 1;
                    break;
                }
                continue;
            }
            if (end === -1) {
                matchedSlash = false;
                end = i + 1;
            }
            if (code === _constants_ts_3.CHAR_DOT) {
                if (startDot === -1)
                    startDot = i;
                else if (preDotState !== 1)
                    preDotState = 1;
            }
            else if (startDot !== -1) {
                preDotState = -1;
            }
        }
        if (startDot === -1 ||
            end === -1 ||
            preDotState === 0 ||
            (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)) {
            return "";
        }
        return path.slice(startDot, end);
    }
    exports_28("extname", extname);
    function format(pathObject) {
        if (pathObject === null || typeof pathObject !== "object") {
            throw new TypeError(`The "pathObject" argument must be of type Object. Received type ${typeof pathObject}`);
        }
        return _util_ts_2._format("/", pathObject);
    }
    exports_28("format", format);
    function parse(path) {
        _util_ts_2.assertPath(path);
        const ret = { root: "", dir: "", base: "", ext: "", name: "" };
        if (path.length === 0)
            return ret;
        const isAbsolute = path.charCodeAt(0) === _constants_ts_3.CHAR_FORWARD_SLASH;
        let start;
        if (isAbsolute) {
            ret.root = "/";
            start = 1;
        }
        else {
            start = 0;
        }
        let startDot = -1;
        let startPart = 0;
        let end = -1;
        let matchedSlash = true;
        let i = path.length - 1;
        let preDotState = 0;
        for (; i >= start; --i) {
            const code = path.charCodeAt(i);
            if (code === _constants_ts_3.CHAR_FORWARD_SLASH) {
                if (!matchedSlash) {
                    startPart = i + 1;
                    break;
                }
                continue;
            }
            if (end === -1) {
                matchedSlash = false;
                end = i + 1;
            }
            if (code === _constants_ts_3.CHAR_DOT) {
                if (startDot === -1)
                    startDot = i;
                else if (preDotState !== 1)
                    preDotState = 1;
            }
            else if (startDot !== -1) {
                preDotState = -1;
            }
        }
        if (startDot === -1 ||
            end === -1 ||
            preDotState === 0 ||
            (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)) {
            if (end !== -1) {
                if (startPart === 0 && isAbsolute) {
                    ret.base = ret.name = path.slice(1, end);
                }
                else {
                    ret.base = ret.name = path.slice(startPart, end);
                }
            }
        }
        else {
            if (startPart === 0 && isAbsolute) {
                ret.name = path.slice(1, startDot);
                ret.base = path.slice(1, end);
            }
            else {
                ret.name = path.slice(startPart, startDot);
                ret.base = path.slice(startPart, end);
            }
            ret.ext = path.slice(startDot, end);
        }
        if (startPart > 0)
            ret.dir = path.slice(0, startPart - 1);
        else if (isAbsolute)
            ret.dir = "/";
        return ret;
    }
    exports_28("parse", parse);
    function fromFileUrl(url) {
        return new URL(String(url)).pathname;
    }
    exports_28("fromFileUrl", fromFileUrl);
    return {
        setters: [
            function (_constants_ts_3_1) {
                _constants_ts_3 = _constants_ts_3_1;
            },
            function (_util_ts_2_1) {
                _util_ts_2 = _util_ts_2_1;
            }
        ],
        execute: function () {
            exports_28("sep", sep = "/");
            exports_28("delimiter", delimiter = ":");
        }
    };
});
System.register("https://deno.land/std@0.61.0/path/separator", ["https://deno.land/std@0.61.0/path/_constants"], function (exports_29, context_29) {
    "use strict";
    var _constants_ts_4, SEP, SEP_PATTERN;
    var __moduleName = context_29 && context_29.id;
    return {
        setters: [
            function (_constants_ts_4_1) {
                _constants_ts_4 = _constants_ts_4_1;
            }
        ],
        execute: function () {
            exports_29("SEP", SEP = _constants_ts_4.isWindows ? "\\" : "/");
            exports_29("SEP_PATTERN", SEP_PATTERN = _constants_ts_4.isWindows ? /[\\/]+/ : /\/+/);
        }
    };
});
System.register("https://deno.land/std@0.61.0/path/common", ["https://deno.land/std@0.61.0/path/separator"], function (exports_30, context_30) {
    "use strict";
    var separator_ts_1;
    var __moduleName = context_30 && context_30.id;
    function common(paths, sep = separator_ts_1.SEP) {
        const [first = "", ...remaining] = paths;
        if (first === "" || remaining.length === 0) {
            return first.substring(0, first.lastIndexOf(sep) + 1);
        }
        const parts = first.split(sep);
        let endOfPrefix = parts.length;
        for (const path of remaining) {
            const compare = path.split(sep);
            for (let i = 0; i < endOfPrefix; i++) {
                if (compare[i] !== parts[i]) {
                    endOfPrefix = i;
                }
            }
            if (endOfPrefix === 0) {
                return "";
            }
        }
        const prefix = parts.slice(0, endOfPrefix).join(sep);
        return prefix.endsWith(sep) ? prefix : `${prefix}${sep}`;
    }
    exports_30("common", common);
    return {
        setters: [
            function (separator_ts_1_1) {
                separator_ts_1 = separator_ts_1_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/std@0.61.0/path/_globrex", ["https://deno.land/std@0.61.0/path/_constants"], function (exports_31, context_31) {
    "use strict";
    var _constants_ts_5, SEP, SEP_ESC, SEP_RAW, GLOBSTAR, WILDCARD, GLOBSTAR_SEGMENT, WILDCARD_SEGMENT;
    var __moduleName = context_31 && context_31.id;
    function globrex(glob, { extended = false, globstar = false, strict = false, filepath = false, flags = "", } = {}) {
        const sepPattern = new RegExp(`^${SEP}${strict ? "" : "+"}$`);
        let regex = "";
        let segment = "";
        let pathRegexStr = "";
        const pathSegments = [];
        let inGroup = false;
        let inRange = false;
        const ext = [];
        function add(str, options = { split: false, last: false, only: "" }) {
            const { split, last, only } = options;
            if (only !== "path")
                regex += str;
            if (filepath && only !== "regex") {
                pathRegexStr += str.match(sepPattern) ? SEP : str;
                if (split) {
                    if (last)
                        segment += str;
                    if (segment !== "") {
                        if (!flags.includes("g"))
                            segment = `^${segment}$`;
                        pathSegments.push(new RegExp(segment, flags));
                    }
                    segment = "";
                }
                else {
                    segment += str;
                }
            }
        }
        let c, n;
        for (let i = 0; i < glob.length; i++) {
            c = glob[i];
            n = glob[i + 1];
            if (["\\", "$", "^", ".", "="].includes(c)) {
                add(`\\${c}`);
                continue;
            }
            if (c.match(sepPattern)) {
                add(SEP, { split: true });
                if (n != null && n.match(sepPattern) && !strict)
                    regex += "?";
                continue;
            }
            if (c === "(") {
                if (ext.length) {
                    add(`${c}?:`);
                    continue;
                }
                add(`\\${c}`);
                continue;
            }
            if (c === ")") {
                if (ext.length) {
                    add(c);
                    const type = ext.pop();
                    if (type === "@") {
                        add("{1}");
                    }
                    else if (type === "!") {
                        add(WILDCARD);
                    }
                    else {
                        add(type);
                    }
                    continue;
                }
                add(`\\${c}`);
                continue;
            }
            if (c === "|") {
                if (ext.length) {
                    add(c);
                    continue;
                }
                add(`\\${c}`);
                continue;
            }
            if (c === "+") {
                if (n === "(" && extended) {
                    ext.push(c);
                    continue;
                }
                add(`\\${c}`);
                continue;
            }
            if (c === "@" && extended) {
                if (n === "(") {
                    ext.push(c);
                    continue;
                }
            }
            if (c === "!") {
                if (extended) {
                    if (inRange) {
                        add("^");
                        continue;
                    }
                    if (n === "(") {
                        ext.push(c);
                        add("(?!");
                        i++;
                        continue;
                    }
                    add(`\\${c}`);
                    continue;
                }
                add(`\\${c}`);
                continue;
            }
            if (c === "?") {
                if (extended) {
                    if (n === "(") {
                        ext.push(c);
                    }
                    else {
                        add(".");
                    }
                    continue;
                }
                add(`\\${c}`);
                continue;
            }
            if (c === "[") {
                if (inRange && n === ":") {
                    i++;
                    let value = "";
                    while (glob[++i] !== ":")
                        value += glob[i];
                    if (value === "alnum")
                        add("(?:\\w|\\d)");
                    else if (value === "space")
                        add("\\s");
                    else if (value === "digit")
                        add("\\d");
                    i++;
                    continue;
                }
                if (extended) {
                    inRange = true;
                    add(c);
                    continue;
                }
                add(`\\${c}`);
                continue;
            }
            if (c === "]") {
                if (extended) {
                    inRange = false;
                    add(c);
                    continue;
                }
                add(`\\${c}`);
                continue;
            }
            if (c === "{") {
                if (extended) {
                    inGroup = true;
                    add("(?:");
                    continue;
                }
                add(`\\${c}`);
                continue;
            }
            if (c === "}") {
                if (extended) {
                    inGroup = false;
                    add(")");
                    continue;
                }
                add(`\\${c}`);
                continue;
            }
            if (c === ",") {
                if (inGroup) {
                    add("|");
                    continue;
                }
                add(`\\${c}`);
                continue;
            }
            if (c === "*") {
                if (n === "(" && extended) {
                    ext.push(c);
                    continue;
                }
                const prevChar = glob[i - 1];
                let starCount = 1;
                while (glob[i + 1] === "*") {
                    starCount++;
                    i++;
                }
                const nextChar = glob[i + 1];
                if (!globstar) {
                    add(".*");
                }
                else {
                    const isGlobstar = starCount > 1 &&
                        [SEP_RAW, "/", undefined].includes(prevChar) &&
                        [SEP_RAW, "/", undefined].includes(nextChar);
                    if (isGlobstar) {
                        add(GLOBSTAR, { only: "regex" });
                        add(GLOBSTAR_SEGMENT, { only: "path", last: true, split: true });
                        i++;
                    }
                    else {
                        add(WILDCARD, { only: "regex" });
                        add(WILDCARD_SEGMENT, { only: "path" });
                    }
                }
                continue;
            }
            add(c);
        }
        if (!flags.includes("g")) {
            regex = `^${regex}$`;
            segment = `^${segment}$`;
            if (filepath)
                pathRegexStr = `^${pathRegexStr}$`;
        }
        const result = { regex: new RegExp(regex, flags) };
        if (filepath) {
            pathSegments.push(new RegExp(segment, flags));
            result.path = {
                regex: new RegExp(pathRegexStr, flags),
                segments: pathSegments,
                globstar: new RegExp(!flags.includes("g") ? `^${GLOBSTAR_SEGMENT}$` : GLOBSTAR_SEGMENT, flags),
            };
        }
        return result;
    }
    exports_31("globrex", globrex);
    return {
        setters: [
            function (_constants_ts_5_1) {
                _constants_ts_5 = _constants_ts_5_1;
            }
        ],
        execute: function () {
            SEP = _constants_ts_5.isWindows ? `(?:\\\\|\\/)` : `\\/`;
            SEP_ESC = _constants_ts_5.isWindows ? `\\\\` : `/`;
            SEP_RAW = _constants_ts_5.isWindows ? `\\` : `/`;
            GLOBSTAR = `(?:(?:[^${SEP_ESC}/]*(?:${SEP_ESC}|\/|$))*)`;
            WILDCARD = `(?:[^${SEP_ESC}/]*)`;
            GLOBSTAR_SEGMENT = `((?:[^${SEP_ESC}/]*(?:${SEP_ESC}|\/|$))*)`;
            WILDCARD_SEGMENT = `(?:[^${SEP_ESC}/]*)`;
        }
    };
});
System.register("https://deno.land/std@0.61.0/path/glob", ["https://deno.land/std@0.61.0/path/separator", "https://deno.land/std@0.61.0/path/_globrex", "https://deno.land/std@0.61.0/path/mod", "https://deno.land/std@0.61.0/_util/assert"], function (exports_32, context_32) {
    "use strict";
    var separator_ts_2, _globrex_ts_1, mod_ts_6, assert_ts_7;
    var __moduleName = context_32 && context_32.id;
    function globToRegExp(glob, { extended = false, globstar = true } = {}) {
        const result = _globrex_ts_1.globrex(glob, {
            extended,
            globstar,
            strict: false,
            filepath: true,
        });
        assert_ts_7.assert(result.path != null);
        return result.path.regex;
    }
    exports_32("globToRegExp", globToRegExp);
    function isGlob(str) {
        const chars = { "{": "}", "(": ")", "[": "]" };
        const regex = /\\(.)|(^!|\*|[\].+)]\?|\[[^\\\]]+\]|\{[^\\}]+\}|\(\?[:!=][^\\)]+\)|\([^|]+\|[^\\)]+\))/;
        if (str === "") {
            return false;
        }
        let match;
        while ((match = regex.exec(str))) {
            if (match[2])
                return true;
            let idx = match.index + match[0].length;
            const open = match[1];
            const close = open ? chars[open] : null;
            if (open && close) {
                const n = str.indexOf(close, idx);
                if (n !== -1) {
                    idx = n + 1;
                }
            }
            str = str.slice(idx);
        }
        return false;
    }
    exports_32("isGlob", isGlob);
    function normalizeGlob(glob, { globstar = false } = {}) {
        if (glob.match(/\0/g)) {
            throw new Error(`Glob contains invalid characters: "${glob}"`);
        }
        if (!globstar) {
            return mod_ts_6.normalize(glob);
        }
        const s = separator_ts_2.SEP_PATTERN.source;
        const badParentPattern = new RegExp(`(?<=(${s}|^)\\*\\*${s})\\.\\.(?=${s}|$)`, "g");
        return mod_ts_6.normalize(glob.replace(badParentPattern, "\0")).replace(/\0/g, "..");
    }
    exports_32("normalizeGlob", normalizeGlob);
    function joinGlobs(globs, { extended = false, globstar = false } = {}) {
        if (!globstar || globs.length == 0) {
            return mod_ts_6.join(...globs);
        }
        if (globs.length === 0)
            return ".";
        let joined;
        for (const glob of globs) {
            const path = glob;
            if (path.length > 0) {
                if (!joined)
                    joined = path;
                else
                    joined += `${separator_ts_2.SEP}${path}`;
            }
        }
        if (!joined)
            return ".";
        return normalizeGlob(joined, { extended, globstar });
    }
    exports_32("joinGlobs", joinGlobs);
    return {
        setters: [
            function (separator_ts_2_1) {
                separator_ts_2 = separator_ts_2_1;
            },
            function (_globrex_ts_1_1) {
                _globrex_ts_1 = _globrex_ts_1_1;
            },
            function (mod_ts_6_1) {
                mod_ts_6 = mod_ts_6_1;
            },
            function (assert_ts_7_1) {
                assert_ts_7 = assert_ts_7_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/std@0.61.0/path/mod", ["https://deno.land/std@0.61.0/path/_constants", "https://deno.land/std@0.61.0/path/win32", "https://deno.land/std@0.61.0/path/posix", "https://deno.land/std@0.61.0/path/common", "https://deno.land/std@0.61.0/path/separator", "https://deno.land/std@0.61.0/path/_interface", "https://deno.land/std@0.61.0/path/glob"], function (exports_33, context_33) {
    "use strict";
    var _constants_ts_6, _win32, _posix, path, win32, posix, basename, delimiter, dirname, extname, format, fromFileUrl, isAbsolute, join, normalize, parse, relative, resolve, sep, toNamespacedPath;
    var __moduleName = context_33 && context_33.id;
    var exportedNames_1 = {
        "win32": true,
        "posix": true,
        "basename": true,
        "delimiter": true,
        "dirname": true,
        "extname": true,
        "format": true,
        "fromFileUrl": true,
        "isAbsolute": true,
        "join": true,
        "normalize": true,
        "parse": true,
        "relative": true,
        "resolve": true,
        "sep": true,
        "toNamespacedPath": true,
        "SEP": true,
        "SEP_PATTERN": true
    };
    function exportStar_3(m) {
        var exports = {};
        for (var n in m) {
            if (n !== "default" && !exportedNames_1.hasOwnProperty(n)) exports[n] = m[n];
        }
        exports_33(exports);
    }
    return {
        setters: [
            function (_constants_ts_6_1) {
                _constants_ts_6 = _constants_ts_6_1;
            },
            function (_win32_1) {
                _win32 = _win32_1;
            },
            function (_posix_1) {
                _posix = _posix_1;
            },
            function (common_ts_1_1) {
                exportStar_3(common_ts_1_1);
            },
            function (separator_ts_3_1) {
                exports_33({
                    "SEP": separator_ts_3_1["SEP"],
                    "SEP_PATTERN": separator_ts_3_1["SEP_PATTERN"]
                });
            },
            function (_interface_ts_1_1) {
                exportStar_3(_interface_ts_1_1);
            },
            function (glob_ts_1_1) {
                exportStar_3(glob_ts_1_1);
            }
        ],
        execute: function () {
            path = _constants_ts_6.isWindows ? _win32 : _posix;
            exports_33("win32", win32 = _win32);
            exports_33("posix", posix = _posix);
            exports_33("basename", basename = path.basename), exports_33("delimiter", delimiter = path.delimiter), exports_33("dirname", dirname = path.dirname), exports_33("extname", extname = path.extname), exports_33("format", format = path.format), exports_33("fromFileUrl", fromFileUrl = path.fromFileUrl), exports_33("isAbsolute", isAbsolute = path.isAbsolute), exports_33("join", join = path.join), exports_33("normalize", normalize = path.normalize), exports_33("parse", parse = path.parse), exports_33("relative", relative = path.relative), exports_33("resolve", resolve = path.resolve), exports_33("sep", sep = path.sep), exports_33("toNamespacedPath", toNamespacedPath = path.toNamespacedPath);
        }
    };
});
System.register("https://deno.land/x/media_types@v2.4.2/db", [], function (exports_34, context_34) {
    "use strict";
    var db;
    var __moduleName = context_34 && context_34.id;
    return {
        setters: [],
        execute: function () {
            exports_34("db", db = {
                "application/1d-interleaved-parityfec": {
                    source: "iana",
                },
                "application/3gpdash-qoe-report+xml": {
                    source: "iana",
                    charset: "UTF-8",
                    compressible: true,
                },
                "application/3gpp-ims+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/a2l": {
                    source: "iana",
                },
                "application/activemessage": {
                    source: "iana",
                },
                "application/activity+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/alto-costmap+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/alto-costmapfilter+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/alto-directory+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/alto-endpointcost+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/alto-endpointcostparams+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/alto-endpointprop+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/alto-endpointpropparams+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/alto-error+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/alto-networkmap+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/alto-networkmapfilter+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/alto-updatestreamcontrol+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/alto-updatestreamparams+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/aml": {
                    source: "iana",
                },
                "application/andrew-inset": {
                    source: "iana",
                    extensions: ["ez"],
                },
                "application/applefile": {
                    source: "iana",
                },
                "application/applixware": {
                    source: "apache",
                    extensions: ["aw"],
                },
                "application/atf": {
                    source: "iana",
                },
                "application/atfx": {
                    source: "iana",
                },
                "application/atom+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["atom"],
                },
                "application/atomcat+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["atomcat"],
                },
                "application/atomdeleted+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["atomdeleted"],
                },
                "application/atomicmail": {
                    source: "iana",
                },
                "application/atomsvc+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["atomsvc"],
                },
                "application/atsc-dwd+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["dwd"],
                },
                "application/atsc-dynamic-event-message": {
                    source: "iana",
                },
                "application/atsc-held+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["held"],
                },
                "application/atsc-rdt+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/atsc-rsat+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["rsat"],
                },
                "application/atxml": {
                    source: "iana",
                },
                "application/auth-policy+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/bacnet-xdd+zip": {
                    source: "iana",
                    compressible: false,
                },
                "application/batch-smtp": {
                    source: "iana",
                },
                "application/bdoc": {
                    compressible: false,
                    extensions: ["bdoc"],
                },
                "application/beep+xml": {
                    source: "iana",
                    charset: "UTF-8",
                    compressible: true,
                },
                "application/calendar+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/calendar+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["xcs"],
                },
                "application/call-completion": {
                    source: "iana",
                },
                "application/cals-1840": {
                    source: "iana",
                },
                "application/cap+xml": {
                    source: "iana",
                    charset: "UTF-8",
                    compressible: true,
                },
                "application/cbor": {
                    source: "iana",
                },
                "application/cbor-seq": {
                    source: "iana",
                },
                "application/cccex": {
                    source: "iana",
                },
                "application/ccmp+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/ccxml+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["ccxml"],
                },
                "application/cdfx+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["cdfx"],
                },
                "application/cdmi-capability": {
                    source: "iana",
                    extensions: ["cdmia"],
                },
                "application/cdmi-container": {
                    source: "iana",
                    extensions: ["cdmic"],
                },
                "application/cdmi-domain": {
                    source: "iana",
                    extensions: ["cdmid"],
                },
                "application/cdmi-object": {
                    source: "iana",
                    extensions: ["cdmio"],
                },
                "application/cdmi-queue": {
                    source: "iana",
                    extensions: ["cdmiq"],
                },
                "application/cdni": {
                    source: "iana",
                },
                "application/cea": {
                    source: "iana",
                },
                "application/cea-2018+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/cellml+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/cfw": {
                    source: "iana",
                },
                "application/clue+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/clue_info+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/cms": {
                    source: "iana",
                },
                "application/cnrp+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/coap-group+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/coap-payload": {
                    source: "iana",
                },
                "application/commonground": {
                    source: "iana",
                },
                "application/conference-info+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/cose": {
                    source: "iana",
                },
                "application/cose-key": {
                    source: "iana",
                },
                "application/cose-key-set": {
                    source: "iana",
                },
                "application/cpl+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/csrattrs": {
                    source: "iana",
                },
                "application/csta+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/cstadata+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/csvm+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/cu-seeme": {
                    source: "apache",
                    extensions: ["cu"],
                },
                "application/cwt": {
                    source: "iana",
                },
                "application/cybercash": {
                    source: "iana",
                },
                "application/dart": {
                    compressible: true,
                },
                "application/dash+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["mpd"],
                },
                "application/dashdelta": {
                    source: "iana",
                },
                "application/davmount+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["davmount"],
                },
                "application/dca-rft": {
                    source: "iana",
                },
                "application/dcd": {
                    source: "iana",
                },
                "application/dec-dx": {
                    source: "iana",
                },
                "application/dialog-info+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/dicom": {
                    source: "iana",
                },
                "application/dicom+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/dicom+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/dii": {
                    source: "iana",
                },
                "application/dit": {
                    source: "iana",
                },
                "application/dns": {
                    source: "iana",
                },
                "application/dns+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/dns-message": {
                    source: "iana",
                },
                "application/docbook+xml": {
                    source: "apache",
                    compressible: true,
                    extensions: ["dbk"],
                },
                "application/dots+cbor": {
                    source: "iana",
                },
                "application/dskpp+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/dssc+der": {
                    source: "iana",
                    extensions: ["dssc"],
                },
                "application/dssc+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["xdssc"],
                },
                "application/dvcs": {
                    source: "iana",
                },
                "application/ecmascript": {
                    source: "iana",
                    compressible: true,
                    extensions: ["ecma", "es"],
                },
                "application/edi-consent": {
                    source: "iana",
                },
                "application/edi-x12": {
                    source: "iana",
                    compressible: false,
                },
                "application/edifact": {
                    source: "iana",
                    compressible: false,
                },
                "application/efi": {
                    source: "iana",
                },
                "application/emergencycalldata.comment+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/emergencycalldata.control+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/emergencycalldata.deviceinfo+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/emergencycalldata.ecall.msd": {
                    source: "iana",
                },
                "application/emergencycalldata.providerinfo+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/emergencycalldata.serviceinfo+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/emergencycalldata.subscriberinfo+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/emergencycalldata.veds+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/emma+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["emma"],
                },
                "application/emotionml+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["emotionml"],
                },
                "application/encaprtp": {
                    source: "iana",
                },
                "application/epp+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/epub+zip": {
                    source: "iana",
                    compressible: false,
                    extensions: ["epub"],
                },
                "application/eshop": {
                    source: "iana",
                },
                "application/exi": {
                    source: "iana",
                    extensions: ["exi"],
                },
                "application/expect-ct-report+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/fastinfoset": {
                    source: "iana",
                },
                "application/fastsoap": {
                    source: "iana",
                },
                "application/fdt+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["fdt"],
                },
                "application/fhir+json": {
                    source: "iana",
                    charset: "UTF-8",
                    compressible: true,
                },
                "application/fhir+xml": {
                    source: "iana",
                    charset: "UTF-8",
                    compressible: true,
                },
                "application/fido.trusted-apps+json": {
                    compressible: true,
                },
                "application/fits": {
                    source: "iana",
                },
                "application/flexfec": {
                    source: "iana",
                },
                "application/font-sfnt": {
                    source: "iana",
                },
                "application/font-tdpfr": {
                    source: "iana",
                    extensions: ["pfr"],
                },
                "application/font-woff": {
                    source: "iana",
                    compressible: false,
                },
                "application/framework-attributes+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/geo+json": {
                    source: "iana",
                    compressible: true,
                    extensions: ["geojson"],
                },
                "application/geo+json-seq": {
                    source: "iana",
                },
                "application/geopackage+sqlite3": {
                    source: "iana",
                },
                "application/geoxacml+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/gltf-buffer": {
                    source: "iana",
                },
                "application/gml+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["gml"],
                },
                "application/gpx+xml": {
                    source: "apache",
                    compressible: true,
                    extensions: ["gpx"],
                },
                "application/gxf": {
                    source: "apache",
                    extensions: ["gxf"],
                },
                "application/gzip": {
                    source: "iana",
                    compressible: false,
                    extensions: ["gz"],
                },
                "application/h224": {
                    source: "iana",
                },
                "application/held+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/hjson": {
                    extensions: ["hjson"],
                },
                "application/http": {
                    source: "iana",
                },
                "application/hyperstudio": {
                    source: "iana",
                    extensions: ["stk"],
                },
                "application/ibe-key-request+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/ibe-pkg-reply+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/ibe-pp-data": {
                    source: "iana",
                },
                "application/iges": {
                    source: "iana",
                },
                "application/im-iscomposing+xml": {
                    source: "iana",
                    charset: "UTF-8",
                    compressible: true,
                },
                "application/index": {
                    source: "iana",
                },
                "application/index.cmd": {
                    source: "iana",
                },
                "application/index.obj": {
                    source: "iana",
                },
                "application/index.response": {
                    source: "iana",
                },
                "application/index.vnd": {
                    source: "iana",
                },
                "application/inkml+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["ink", "inkml"],
                },
                "application/iotp": {
                    source: "iana",
                },
                "application/ipfix": {
                    source: "iana",
                    extensions: ["ipfix"],
                },
                "application/ipp": {
                    source: "iana",
                },
                "application/isup": {
                    source: "iana",
                },
                "application/its+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["its"],
                },
                "application/java-archive": {
                    source: "apache",
                    compressible: false,
                    extensions: ["jar", "war", "ear"],
                },
                "application/java-serialized-object": {
                    source: "apache",
                    compressible: false,
                    extensions: ["ser"],
                },
                "application/java-vm": {
                    source: "apache",
                    compressible: false,
                    extensions: ["class"],
                },
                "application/javascript": {
                    source: "iana",
                    charset: "UTF-8",
                    compressible: true,
                    extensions: ["js", "mjs"],
                },
                "application/jf2feed+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/jose": {
                    source: "iana",
                },
                "application/jose+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/jrd+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/json": {
                    source: "iana",
                    charset: "UTF-8",
                    compressible: true,
                    extensions: ["json", "map"],
                },
                "application/json-patch+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/json-seq": {
                    source: "iana",
                },
                "application/json5": {
                    extensions: ["json5"],
                },
                "application/jsonml+json": {
                    source: "apache",
                    compressible: true,
                    extensions: ["jsonml"],
                },
                "application/jwk+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/jwk-set+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/jwt": {
                    source: "iana",
                },
                "application/kpml-request+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/kpml-response+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/ld+json": {
                    source: "iana",
                    compressible: true,
                    extensions: ["jsonld"],
                },
                "application/lgr+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["lgr"],
                },
                "application/link-format": {
                    source: "iana",
                },
                "application/load-control+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/lost+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["lostxml"],
                },
                "application/lostsync+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/lpf+zip": {
                    source: "iana",
                    compressible: false,
                },
                "application/lxf": {
                    source: "iana",
                },
                "application/mac-binhex40": {
                    source: "iana",
                    extensions: ["hqx"],
                },
                "application/mac-compactpro": {
                    source: "apache",
                    extensions: ["cpt"],
                },
                "application/macwriteii": {
                    source: "iana",
                },
                "application/mads+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["mads"],
                },
                "application/manifest+json": {
                    charset: "UTF-8",
                    compressible: true,
                    extensions: ["webmanifest"],
                },
                "application/marc": {
                    source: "iana",
                    extensions: ["mrc"],
                },
                "application/marcxml+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["mrcx"],
                },
                "application/mathematica": {
                    source: "iana",
                    extensions: ["ma", "nb", "mb"],
                },
                "application/mathml+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["mathml"],
                },
                "application/mathml-content+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/mathml-presentation+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/mbms-associated-procedure-description+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/mbms-deregister+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/mbms-envelope+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/mbms-msk+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/mbms-msk-response+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/mbms-protection-description+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/mbms-reception-report+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/mbms-register+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/mbms-register-response+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/mbms-schedule+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/mbms-user-service-description+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/mbox": {
                    source: "iana",
                    extensions: ["mbox"],
                },
                "application/media-policy-dataset+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/media_control+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/mediaservercontrol+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["mscml"],
                },
                "application/merge-patch+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/metalink+xml": {
                    source: "apache",
                    compressible: true,
                    extensions: ["metalink"],
                },
                "application/metalink4+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["meta4"],
                },
                "application/mets+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["mets"],
                },
                "application/mf4": {
                    source: "iana",
                },
                "application/mikey": {
                    source: "iana",
                },
                "application/mipc": {
                    source: "iana",
                },
                "application/mmt-aei+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["maei"],
                },
                "application/mmt-usd+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["musd"],
                },
                "application/mods+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["mods"],
                },
                "application/moss-keys": {
                    source: "iana",
                },
                "application/moss-signature": {
                    source: "iana",
                },
                "application/mosskey-data": {
                    source: "iana",
                },
                "application/mosskey-request": {
                    source: "iana",
                },
                "application/mp21": {
                    source: "iana",
                    extensions: ["m21", "mp21"],
                },
                "application/mp4": {
                    source: "iana",
                    extensions: ["mp4s", "m4p"],
                },
                "application/mpeg4-generic": {
                    source: "iana",
                },
                "application/mpeg4-iod": {
                    source: "iana",
                },
                "application/mpeg4-iod-xmt": {
                    source: "iana",
                },
                "application/mrb-consumer+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["xdf"],
                },
                "application/mrb-publish+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["xdf"],
                },
                "application/msc-ivr+xml": {
                    source: "iana",
                    charset: "UTF-8",
                    compressible: true,
                },
                "application/msc-mixer+xml": {
                    source: "iana",
                    charset: "UTF-8",
                    compressible: true,
                },
                "application/msword": {
                    source: "iana",
                    compressible: false,
                    extensions: ["doc", "dot"],
                },
                "application/mud+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/multipart-core": {
                    source: "iana",
                },
                "application/mxf": {
                    source: "iana",
                    extensions: ["mxf"],
                },
                "application/n-quads": {
                    source: "iana",
                    extensions: ["nq"],
                },
                "application/n-triples": {
                    source: "iana",
                    extensions: ["nt"],
                },
                "application/nasdata": {
                    source: "iana",
                },
                "application/news-checkgroups": {
                    source: "iana",
                    charset: "US-ASCII",
                },
                "application/news-groupinfo": {
                    source: "iana",
                    charset: "US-ASCII",
                },
                "application/news-transmission": {
                    source: "iana",
                },
                "application/nlsml+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/node": {
                    source: "iana",
                    extensions: ["cjs"],
                },
                "application/nss": {
                    source: "iana",
                },
                "application/ocsp-request": {
                    source: "iana",
                },
                "application/ocsp-response": {
                    source: "iana",
                },
                "application/octet-stream": {
                    source: "iana",
                    compressible: false,
                    extensions: [
                        "bin",
                        "dms",
                        "lrf",
                        "mar",
                        "so",
                        "dist",
                        "distz",
                        "pkg",
                        "bpk",
                        "dump",
                        "elc",
                        "deploy",
                        "exe",
                        "dll",
                        "deb",
                        "dmg",
                        "iso",
                        "img",
                        "msi",
                        "msp",
                        "msm",
                        "buffer",
                    ],
                },
                "application/oda": {
                    source: "iana",
                    extensions: ["oda"],
                },
                "application/odm+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/odx": {
                    source: "iana",
                },
                "application/oebps-package+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["opf"],
                },
                "application/ogg": {
                    source: "iana",
                    compressible: false,
                    extensions: ["ogx"],
                },
                "application/omdoc+xml": {
                    source: "apache",
                    compressible: true,
                    extensions: ["omdoc"],
                },
                "application/onenote": {
                    source: "apache",
                    extensions: ["onetoc", "onetoc2", "onetmp", "onepkg"],
                },
                "application/oscore": {
                    source: "iana",
                },
                "application/oxps": {
                    source: "iana",
                    extensions: ["oxps"],
                },
                "application/p2p-overlay+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["relo"],
                },
                "application/parityfec": {
                    source: "iana",
                },
                "application/passport": {
                    source: "iana",
                },
                "application/patch-ops-error+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["xer"],
                },
                "application/pdf": {
                    source: "iana",
                    compressible: false,
                    extensions: ["pdf"],
                },
                "application/pdx": {
                    source: "iana",
                },
                "application/pem-certificate-chain": {
                    source: "iana",
                },
                "application/pgp-encrypted": {
                    source: "iana",
                    compressible: false,
                    extensions: ["pgp"],
                },
                "application/pgp-keys": {
                    source: "iana",
                },
                "application/pgp-signature": {
                    source: "iana",
                    extensions: ["asc", "sig"],
                },
                "application/pics-rules": {
                    source: "apache",
                    extensions: ["prf"],
                },
                "application/pidf+xml": {
                    source: "iana",
                    charset: "UTF-8",
                    compressible: true,
                },
                "application/pidf-diff+xml": {
                    source: "iana",
                    charset: "UTF-8",
                    compressible: true,
                },
                "application/pkcs10": {
                    source: "iana",
                    extensions: ["p10"],
                },
                "application/pkcs12": {
                    source: "iana",
                },
                "application/pkcs7-mime": {
                    source: "iana",
                    extensions: ["p7m", "p7c"],
                },
                "application/pkcs7-signature": {
                    source: "iana",
                    extensions: ["p7s"],
                },
                "application/pkcs8": {
                    source: "iana",
                    extensions: ["p8"],
                },
                "application/pkcs8-encrypted": {
                    source: "iana",
                },
                "application/pkix-attr-cert": {
                    source: "iana",
                    extensions: ["ac"],
                },
                "application/pkix-cert": {
                    source: "iana",
                    extensions: ["cer"],
                },
                "application/pkix-crl": {
                    source: "iana",
                    extensions: ["crl"],
                },
                "application/pkix-pkipath": {
                    source: "iana",
                    extensions: ["pkipath"],
                },
                "application/pkixcmp": {
                    source: "iana",
                    extensions: ["pki"],
                },
                "application/pls+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["pls"],
                },
                "application/poc-settings+xml": {
                    source: "iana",
                    charset: "UTF-8",
                    compressible: true,
                },
                "application/postscript": {
                    source: "iana",
                    compressible: true,
                    extensions: ["ai", "eps", "ps"],
                },
                "application/ppsp-tracker+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/problem+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/problem+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/provenance+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["provx"],
                },
                "application/prs.alvestrand.titrax-sheet": {
                    source: "iana",
                },
                "application/prs.cww": {
                    source: "iana",
                    extensions: ["cww"],
                },
                "application/prs.hpub+zip": {
                    source: "iana",
                    compressible: false,
                },
                "application/prs.nprend": {
                    source: "iana",
                },
                "application/prs.plucker": {
                    source: "iana",
                },
                "application/prs.rdf-xml-crypt": {
                    source: "iana",
                },
                "application/prs.xsf+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/pskc+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["pskcxml"],
                },
                "application/pvd+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/qsig": {
                    source: "iana",
                },
                "application/raml+yaml": {
                    compressible: true,
                    extensions: ["raml"],
                },
                "application/raptorfec": {
                    source: "iana",
                },
                "application/rdap+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/rdf+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["rdf", "owl"],
                },
                "application/reginfo+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["rif"],
                },
                "application/relax-ng-compact-syntax": {
                    source: "iana",
                    extensions: ["rnc"],
                },
                "application/remote-printing": {
                    source: "iana",
                },
                "application/reputon+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/resource-lists+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["rl"],
                },
                "application/resource-lists-diff+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["rld"],
                },
                "application/rfc+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/riscos": {
                    source: "iana",
                },
                "application/rlmi+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/rls-services+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["rs"],
                },
                "application/route-apd+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["rapd"],
                },
                "application/route-s-tsid+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["sls"],
                },
                "application/route-usd+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["rusd"],
                },
                "application/rpki-ghostbusters": {
                    source: "iana",
                    extensions: ["gbr"],
                },
                "application/rpki-manifest": {
                    source: "iana",
                    extensions: ["mft"],
                },
                "application/rpki-publication": {
                    source: "iana",
                },
                "application/rpki-roa": {
                    source: "iana",
                    extensions: ["roa"],
                },
                "application/rpki-updown": {
                    source: "iana",
                },
                "application/rsd+xml": {
                    source: "apache",
                    compressible: true,
                    extensions: ["rsd"],
                },
                "application/rss+xml": {
                    source: "apache",
                    compressible: true,
                    extensions: ["rss"],
                },
                "application/rtf": {
                    source: "iana",
                    compressible: true,
                    extensions: ["rtf"],
                },
                "application/rtploopback": {
                    source: "iana",
                },
                "application/rtx": {
                    source: "iana",
                },
                "application/samlassertion+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/samlmetadata+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/sbe": {
                    source: "iana",
                },
                "application/sbml+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["sbml"],
                },
                "application/scaip+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/scim+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/scvp-cv-request": {
                    source: "iana",
                    extensions: ["scq"],
                },
                "application/scvp-cv-response": {
                    source: "iana",
                    extensions: ["scs"],
                },
                "application/scvp-vp-request": {
                    source: "iana",
                    extensions: ["spq"],
                },
                "application/scvp-vp-response": {
                    source: "iana",
                    extensions: ["spp"],
                },
                "application/sdp": {
                    source: "iana",
                    extensions: ["sdp"],
                },
                "application/secevent+jwt": {
                    source: "iana",
                },
                "application/senml+cbor": {
                    source: "iana",
                },
                "application/senml+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/senml+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["senmlx"],
                },
                "application/senml-etch+cbor": {
                    source: "iana",
                },
                "application/senml-etch+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/senml-exi": {
                    source: "iana",
                },
                "application/sensml+cbor": {
                    source: "iana",
                },
                "application/sensml+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/sensml+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["sensmlx"],
                },
                "application/sensml-exi": {
                    source: "iana",
                },
                "application/sep+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/sep-exi": {
                    source: "iana",
                },
                "application/session-info": {
                    source: "iana",
                },
                "application/set-payment": {
                    source: "iana",
                },
                "application/set-payment-initiation": {
                    source: "iana",
                    extensions: ["setpay"],
                },
                "application/set-registration": {
                    source: "iana",
                },
                "application/set-registration-initiation": {
                    source: "iana",
                    extensions: ["setreg"],
                },
                "application/sgml": {
                    source: "iana",
                },
                "application/sgml-open-catalog": {
                    source: "iana",
                },
                "application/shf+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["shf"],
                },
                "application/sieve": {
                    source: "iana",
                    extensions: ["siv", "sieve"],
                },
                "application/simple-filter+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/simple-message-summary": {
                    source: "iana",
                },
                "application/simplesymbolcontainer": {
                    source: "iana",
                },
                "application/sipc": {
                    source: "iana",
                },
                "application/slate": {
                    source: "iana",
                },
                "application/smil": {
                    source: "iana",
                },
                "application/smil+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["smi", "smil"],
                },
                "application/smpte336m": {
                    source: "iana",
                },
                "application/soap+fastinfoset": {
                    source: "iana",
                },
                "application/soap+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/sparql-query": {
                    source: "iana",
                    extensions: ["rq"],
                },
                "application/sparql-results+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["srx"],
                },
                "application/spirits-event+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/sql": {
                    source: "iana",
                },
                "application/srgs": {
                    source: "iana",
                    extensions: ["gram"],
                },
                "application/srgs+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["grxml"],
                },
                "application/sru+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["sru"],
                },
                "application/ssdl+xml": {
                    source: "apache",
                    compressible: true,
                    extensions: ["ssdl"],
                },
                "application/ssml+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["ssml"],
                },
                "application/stix+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/swid+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["swidtag"],
                },
                "application/tamp-apex-update": {
                    source: "iana",
                },
                "application/tamp-apex-update-confirm": {
                    source: "iana",
                },
                "application/tamp-community-update": {
                    source: "iana",
                },
                "application/tamp-community-update-confirm": {
                    source: "iana",
                },
                "application/tamp-error": {
                    source: "iana",
                },
                "application/tamp-sequence-adjust": {
                    source: "iana",
                },
                "application/tamp-sequence-adjust-confirm": {
                    source: "iana",
                },
                "application/tamp-status-query": {
                    source: "iana",
                },
                "application/tamp-status-response": {
                    source: "iana",
                },
                "application/tamp-update": {
                    source: "iana",
                },
                "application/tamp-update-confirm": {
                    source: "iana",
                },
                "application/tar": {
                    compressible: true,
                },
                "application/taxii+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/td+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/tei+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["tei", "teicorpus"],
                },
                "application/tetra_isi": {
                    source: "iana",
                },
                "application/thraud+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["tfi"],
                },
                "application/timestamp-query": {
                    source: "iana",
                },
                "application/timestamp-reply": {
                    source: "iana",
                },
                "application/timestamped-data": {
                    source: "iana",
                    extensions: ["tsd"],
                },
                "application/tlsrpt+gzip": {
                    source: "iana",
                },
                "application/tlsrpt+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/tnauthlist": {
                    source: "iana",
                },
                "application/toml": {
                    compressible: true,
                    extensions: ["toml"],
                },
                "application/trickle-ice-sdpfrag": {
                    source: "iana",
                },
                "application/trig": {
                    source: "iana",
                },
                "application/ttml+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["ttml"],
                },
                "application/tve-trigger": {
                    source: "iana",
                },
                "application/tzif": {
                    source: "iana",
                },
                "application/tzif-leap": {
                    source: "iana",
                },
                "application/ulpfec": {
                    source: "iana",
                },
                "application/urc-grpsheet+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/urc-ressheet+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["rsheet"],
                },
                "application/urc-targetdesc+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/urc-uisocketdesc+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vcard+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vcard+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vemmi": {
                    source: "iana",
                },
                "application/vividence.scriptfile": {
                    source: "apache",
                },
                "application/vnd.1000minds.decision-model+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["1km"],
                },
                "application/vnd.3gpp-prose+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp-prose-pc3ch+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp-v2x-local-service-information": {
                    source: "iana",
                },
                "application/vnd.3gpp.access-transfer-events+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp.bsf+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp.gmop+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp.mc-signalling-ear": {
                    source: "iana",
                },
                "application/vnd.3gpp.mcdata-affiliation-command+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp.mcdata-info+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp.mcdata-payload": {
                    source: "iana",
                },
                "application/vnd.3gpp.mcdata-service-config+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp.mcdata-signalling": {
                    source: "iana",
                },
                "application/vnd.3gpp.mcdata-ue-config+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp.mcdata-user-profile+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp.mcptt-affiliation-command+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp.mcptt-floor-request+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp.mcptt-info+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp.mcptt-location-info+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp.mcptt-mbms-usage-info+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp.mcptt-service-config+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp.mcptt-signed+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp.mcptt-ue-config+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp.mcptt-ue-init-config+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp.mcptt-user-profile+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp.mcvideo-affiliation-command+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp.mcvideo-affiliation-info+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp.mcvideo-info+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp.mcvideo-location-info+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp.mcvideo-mbms-usage-info+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp.mcvideo-service-config+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp.mcvideo-transmission-request+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp.mcvideo-ue-config+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp.mcvideo-user-profile+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp.mid-call+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp.pic-bw-large": {
                    source: "iana",
                    extensions: ["plb"],
                },
                "application/vnd.3gpp.pic-bw-small": {
                    source: "iana",
                    extensions: ["psb"],
                },
                "application/vnd.3gpp.pic-bw-var": {
                    source: "iana",
                    extensions: ["pvb"],
                },
                "application/vnd.3gpp.sms": {
                    source: "iana",
                },
                "application/vnd.3gpp.sms+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp.srvcc-ext+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp.srvcc-info+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp.state-and-event-info+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp.ussd+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp2.bcmcsinfo+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.3gpp2.sms": {
                    source: "iana",
                },
                "application/vnd.3gpp2.tcap": {
                    source: "iana",
                    extensions: ["tcap"],
                },
                "application/vnd.3lightssoftware.imagescal": {
                    source: "iana",
                },
                "application/vnd.3m.post-it-notes": {
                    source: "iana",
                    extensions: ["pwn"],
                },
                "application/vnd.accpac.simply.aso": {
                    source: "iana",
                    extensions: ["aso"],
                },
                "application/vnd.accpac.simply.imp": {
                    source: "iana",
                    extensions: ["imp"],
                },
                "application/vnd.acucobol": {
                    source: "iana",
                    extensions: ["acu"],
                },
                "application/vnd.acucorp": {
                    source: "iana",
                    extensions: ["atc", "acutc"],
                },
                "application/vnd.adobe.air-application-installer-package+zip": {
                    source: "apache",
                    compressible: false,
                    extensions: ["air"],
                },
                "application/vnd.adobe.flash.movie": {
                    source: "iana",
                },
                "application/vnd.adobe.formscentral.fcdt": {
                    source: "iana",
                    extensions: ["fcdt"],
                },
                "application/vnd.adobe.fxp": {
                    source: "iana",
                    extensions: ["fxp", "fxpl"],
                },
                "application/vnd.adobe.partial-upload": {
                    source: "iana",
                },
                "application/vnd.adobe.xdp+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["xdp"],
                },
                "application/vnd.adobe.xfdf": {
                    source: "iana",
                    extensions: ["xfdf"],
                },
                "application/vnd.aether.imp": {
                    source: "iana",
                },
                "application/vnd.afpc.afplinedata": {
                    source: "iana",
                },
                "application/vnd.afpc.afplinedata-pagedef": {
                    source: "iana",
                },
                "application/vnd.afpc.foca-charset": {
                    source: "iana",
                },
                "application/vnd.afpc.foca-codedfont": {
                    source: "iana",
                },
                "application/vnd.afpc.foca-codepage": {
                    source: "iana",
                },
                "application/vnd.afpc.modca": {
                    source: "iana",
                },
                "application/vnd.afpc.modca-formdef": {
                    source: "iana",
                },
                "application/vnd.afpc.modca-mediummap": {
                    source: "iana",
                },
                "application/vnd.afpc.modca-objectcontainer": {
                    source: "iana",
                },
                "application/vnd.afpc.modca-overlay": {
                    source: "iana",
                },
                "application/vnd.afpc.modca-pagesegment": {
                    source: "iana",
                },
                "application/vnd.ah-barcode": {
                    source: "iana",
                },
                "application/vnd.ahead.space": {
                    source: "iana",
                    extensions: ["ahead"],
                },
                "application/vnd.airzip.filesecure.azf": {
                    source: "iana",
                    extensions: ["azf"],
                },
                "application/vnd.airzip.filesecure.azs": {
                    source: "iana",
                    extensions: ["azs"],
                },
                "application/vnd.amadeus+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.amazon.ebook": {
                    source: "apache",
                    extensions: ["azw"],
                },
                "application/vnd.amazon.mobi8-ebook": {
                    source: "iana",
                },
                "application/vnd.americandynamics.acc": {
                    source: "iana",
                    extensions: ["acc"],
                },
                "application/vnd.amiga.ami": {
                    source: "iana",
                    extensions: ["ami"],
                },
                "application/vnd.amundsen.maze+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.android.ota": {
                    source: "iana",
                },
                "application/vnd.android.package-archive": {
                    source: "apache",
                    compressible: false,
                    extensions: ["apk"],
                },
                "application/vnd.anki": {
                    source: "iana",
                },
                "application/vnd.anser-web-certificate-issue-initiation": {
                    source: "iana",
                    extensions: ["cii"],
                },
                "application/vnd.anser-web-funds-transfer-initiation": {
                    source: "apache",
                    extensions: ["fti"],
                },
                "application/vnd.antix.game-component": {
                    source: "iana",
                    extensions: ["atx"],
                },
                "application/vnd.apache.thrift.binary": {
                    source: "iana",
                },
                "application/vnd.apache.thrift.compact": {
                    source: "iana",
                },
                "application/vnd.apache.thrift.json": {
                    source: "iana",
                },
                "application/vnd.api+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.aplextor.warrp+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.apothekende.reservation+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.apple.installer+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["mpkg"],
                },
                "application/vnd.apple.keynote": {
                    source: "iana",
                    extensions: ["keynote"],
                },
                "application/vnd.apple.mpegurl": {
                    source: "iana",
                    extensions: ["m3u8"],
                },
                "application/vnd.apple.numbers": {
                    source: "iana",
                    extensions: ["numbers"],
                },
                "application/vnd.apple.pages": {
                    source: "iana",
                    extensions: ["pages"],
                },
                "application/vnd.apple.pkpass": {
                    compressible: false,
                    extensions: ["pkpass"],
                },
                "application/vnd.arastra.swi": {
                    source: "iana",
                },
                "application/vnd.aristanetworks.swi": {
                    source: "iana",
                    extensions: ["swi"],
                },
                "application/vnd.artisan+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.artsquare": {
                    source: "iana",
                },
                "application/vnd.astraea-software.iota": {
                    source: "iana",
                    extensions: ["iota"],
                },
                "application/vnd.audiograph": {
                    source: "iana",
                    extensions: ["aep"],
                },
                "application/vnd.autopackage": {
                    source: "iana",
                },
                "application/vnd.avalon+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.avistar+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.balsamiq.bmml+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["bmml"],
                },
                "application/vnd.balsamiq.bmpr": {
                    source: "iana",
                },
                "application/vnd.banana-accounting": {
                    source: "iana",
                },
                "application/vnd.bbf.usp.error": {
                    source: "iana",
                },
                "application/vnd.bbf.usp.msg": {
                    source: "iana",
                },
                "application/vnd.bbf.usp.msg+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.bekitzur-stech+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.bint.med-content": {
                    source: "iana",
                },
                "application/vnd.biopax.rdf+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.blink-idb-value-wrapper": {
                    source: "iana",
                },
                "application/vnd.blueice.multipass": {
                    source: "iana",
                    extensions: ["mpm"],
                },
                "application/vnd.bluetooth.ep.oob": {
                    source: "iana",
                },
                "application/vnd.bluetooth.le.oob": {
                    source: "iana",
                },
                "application/vnd.bmi": {
                    source: "iana",
                    extensions: ["bmi"],
                },
                "application/vnd.bpf": {
                    source: "iana",
                },
                "application/vnd.bpf3": {
                    source: "iana",
                },
                "application/vnd.businessobjects": {
                    source: "iana",
                    extensions: ["rep"],
                },
                "application/vnd.byu.uapi+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.cab-jscript": {
                    source: "iana",
                },
                "application/vnd.canon-cpdl": {
                    source: "iana",
                },
                "application/vnd.canon-lips": {
                    source: "iana",
                },
                "application/vnd.capasystems-pg+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.cendio.thinlinc.clientconf": {
                    source: "iana",
                },
                "application/vnd.century-systems.tcp_stream": {
                    source: "iana",
                },
                "application/vnd.chemdraw+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["cdxml"],
                },
                "application/vnd.chess-pgn": {
                    source: "iana",
                },
                "application/vnd.chipnuts.karaoke-mmd": {
                    source: "iana",
                    extensions: ["mmd"],
                },
                "application/vnd.ciedi": {
                    source: "iana",
                },
                "application/vnd.cinderella": {
                    source: "iana",
                    extensions: ["cdy"],
                },
                "application/vnd.cirpack.isdn-ext": {
                    source: "iana",
                },
                "application/vnd.citationstyles.style+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["csl"],
                },
                "application/vnd.claymore": {
                    source: "iana",
                    extensions: ["cla"],
                },
                "application/vnd.cloanto.rp9": {
                    source: "iana",
                    extensions: ["rp9"],
                },
                "application/vnd.clonk.c4group": {
                    source: "iana",
                    extensions: ["c4g", "c4d", "c4f", "c4p", "c4u"],
                },
                "application/vnd.cluetrust.cartomobile-config": {
                    source: "iana",
                    extensions: ["c11amc"],
                },
                "application/vnd.cluetrust.cartomobile-config-pkg": {
                    source: "iana",
                    extensions: ["c11amz"],
                },
                "application/vnd.coffeescript": {
                    source: "iana",
                },
                "application/vnd.collabio.xodocuments.document": {
                    source: "iana",
                },
                "application/vnd.collabio.xodocuments.document-template": {
                    source: "iana",
                },
                "application/vnd.collabio.xodocuments.presentation": {
                    source: "iana",
                },
                "application/vnd.collabio.xodocuments.presentation-template": {
                    source: "iana",
                },
                "application/vnd.collabio.xodocuments.spreadsheet": {
                    source: "iana",
                },
                "application/vnd.collabio.xodocuments.spreadsheet-template": {
                    source: "iana",
                },
                "application/vnd.collection+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.collection.doc+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.collection.next+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.comicbook+zip": {
                    source: "iana",
                    compressible: false,
                },
                "application/vnd.comicbook-rar": {
                    source: "iana",
                },
                "application/vnd.commerce-battelle": {
                    source: "iana",
                },
                "application/vnd.commonspace": {
                    source: "iana",
                    extensions: ["csp"],
                },
                "application/vnd.contact.cmsg": {
                    source: "iana",
                    extensions: ["cdbcmsg"],
                },
                "application/vnd.coreos.ignition+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.cosmocaller": {
                    source: "iana",
                    extensions: ["cmc"],
                },
                "application/vnd.crick.clicker": {
                    source: "iana",
                    extensions: ["clkx"],
                },
                "application/vnd.crick.clicker.keyboard": {
                    source: "iana",
                    extensions: ["clkk"],
                },
                "application/vnd.crick.clicker.palette": {
                    source: "iana",
                    extensions: ["clkp"],
                },
                "application/vnd.crick.clicker.template": {
                    source: "iana",
                    extensions: ["clkt"],
                },
                "application/vnd.crick.clicker.wordbank": {
                    source: "iana",
                    extensions: ["clkw"],
                },
                "application/vnd.criticaltools.wbs+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["wbs"],
                },
                "application/vnd.cryptii.pipe+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.crypto-shade-file": {
                    source: "iana",
                },
                "application/vnd.ctc-posml": {
                    source: "iana",
                    extensions: ["pml"],
                },
                "application/vnd.ctct.ws+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.cups-pdf": {
                    source: "iana",
                },
                "application/vnd.cups-postscript": {
                    source: "iana",
                },
                "application/vnd.cups-ppd": {
                    source: "iana",
                    extensions: ["ppd"],
                },
                "application/vnd.cups-raster": {
                    source: "iana",
                },
                "application/vnd.cups-raw": {
                    source: "iana",
                },
                "application/vnd.curl": {
                    source: "iana",
                },
                "application/vnd.curl.car": {
                    source: "apache",
                    extensions: ["car"],
                },
                "application/vnd.curl.pcurl": {
                    source: "apache",
                    extensions: ["pcurl"],
                },
                "application/vnd.cyan.dean.root+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.cybank": {
                    source: "iana",
                },
                "application/vnd.d2l.coursepackage1p0+zip": {
                    source: "iana",
                    compressible: false,
                },
                "application/vnd.dart": {
                    source: "iana",
                    compressible: true,
                    extensions: ["dart"],
                },
                "application/vnd.data-vision.rdz": {
                    source: "iana",
                    extensions: ["rdz"],
                },
                "application/vnd.datapackage+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.dataresource+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.dbf": {
                    source: "iana",
                },
                "application/vnd.debian.binary-package": {
                    source: "iana",
                },
                "application/vnd.dece.data": {
                    source: "iana",
                    extensions: ["uvf", "uvvf", "uvd", "uvvd"],
                },
                "application/vnd.dece.ttml+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["uvt", "uvvt"],
                },
                "application/vnd.dece.unspecified": {
                    source: "iana",
                    extensions: ["uvx", "uvvx"],
                },
                "application/vnd.dece.zip": {
                    source: "iana",
                    extensions: ["uvz", "uvvz"],
                },
                "application/vnd.denovo.fcselayout-link": {
                    source: "iana",
                    extensions: ["fe_launch"],
                },
                "application/vnd.desmume.movie": {
                    source: "iana",
                },
                "application/vnd.dir-bi.plate-dl-nosuffix": {
                    source: "iana",
                },
                "application/vnd.dm.delegation+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.dna": {
                    source: "iana",
                    extensions: ["dna"],
                },
                "application/vnd.document+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.dolby.mlp": {
                    source: "apache",
                    extensions: ["mlp"],
                },
                "application/vnd.dolby.mobile.1": {
                    source: "iana",
                },
                "application/vnd.dolby.mobile.2": {
                    source: "iana",
                },
                "application/vnd.doremir.scorecloud-binary-document": {
                    source: "iana",
                },
                "application/vnd.dpgraph": {
                    source: "iana",
                    extensions: ["dpg"],
                },
                "application/vnd.dreamfactory": {
                    source: "iana",
                    extensions: ["dfac"],
                },
                "application/vnd.drive+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.ds-keypoint": {
                    source: "apache",
                    extensions: ["kpxx"],
                },
                "application/vnd.dtg.local": {
                    source: "iana",
                },
                "application/vnd.dtg.local.flash": {
                    source: "iana",
                },
                "application/vnd.dtg.local.html": {
                    source: "iana",
                },
                "application/vnd.dvb.ait": {
                    source: "iana",
                    extensions: ["ait"],
                },
                "application/vnd.dvb.dvbisl+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.dvb.dvbj": {
                    source: "iana",
                },
                "application/vnd.dvb.esgcontainer": {
                    source: "iana",
                },
                "application/vnd.dvb.ipdcdftnotifaccess": {
                    source: "iana",
                },
                "application/vnd.dvb.ipdcesgaccess": {
                    source: "iana",
                },
                "application/vnd.dvb.ipdcesgaccess2": {
                    source: "iana",
                },
                "application/vnd.dvb.ipdcesgpdd": {
                    source: "iana",
                },
                "application/vnd.dvb.ipdcroaming": {
                    source: "iana",
                },
                "application/vnd.dvb.iptv.alfec-base": {
                    source: "iana",
                },
                "application/vnd.dvb.iptv.alfec-enhancement": {
                    source: "iana",
                },
                "application/vnd.dvb.notif-aggregate-root+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.dvb.notif-container+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.dvb.notif-generic+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.dvb.notif-ia-msglist+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.dvb.notif-ia-registration-request+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.dvb.notif-ia-registration-response+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.dvb.notif-init+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.dvb.pfr": {
                    source: "iana",
                },
                "application/vnd.dvb.service": {
                    source: "iana",
                    extensions: ["svc"],
                },
                "application/vnd.dxr": {
                    source: "iana",
                },
                "application/vnd.dynageo": {
                    source: "iana",
                    extensions: ["geo"],
                },
                "application/vnd.dzr": {
                    source: "iana",
                },
                "application/vnd.easykaraoke.cdgdownload": {
                    source: "iana",
                },
                "application/vnd.ecdis-update": {
                    source: "iana",
                },
                "application/vnd.ecip.rlp": {
                    source: "iana",
                },
                "application/vnd.ecowin.chart": {
                    source: "iana",
                    extensions: ["mag"],
                },
                "application/vnd.ecowin.filerequest": {
                    source: "iana",
                },
                "application/vnd.ecowin.fileupdate": {
                    source: "iana",
                },
                "application/vnd.ecowin.series": {
                    source: "iana",
                },
                "application/vnd.ecowin.seriesrequest": {
                    source: "iana",
                },
                "application/vnd.ecowin.seriesupdate": {
                    source: "iana",
                },
                "application/vnd.efi.img": {
                    source: "iana",
                },
                "application/vnd.efi.iso": {
                    source: "iana",
                },
                "application/vnd.emclient.accessrequest+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.enliven": {
                    source: "iana",
                    extensions: ["nml"],
                },
                "application/vnd.enphase.envoy": {
                    source: "iana",
                },
                "application/vnd.eprints.data+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.epson.esf": {
                    source: "iana",
                    extensions: ["esf"],
                },
                "application/vnd.epson.msf": {
                    source: "iana",
                    extensions: ["msf"],
                },
                "application/vnd.epson.quickanime": {
                    source: "iana",
                    extensions: ["qam"],
                },
                "application/vnd.epson.salt": {
                    source: "iana",
                    extensions: ["slt"],
                },
                "application/vnd.epson.ssf": {
                    source: "iana",
                    extensions: ["ssf"],
                },
                "application/vnd.ericsson.quickcall": {
                    source: "iana",
                },
                "application/vnd.espass-espass+zip": {
                    source: "iana",
                    compressible: false,
                },
                "application/vnd.eszigno3+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["es3", "et3"],
                },
                "application/vnd.etsi.aoc+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.etsi.asic-e+zip": {
                    source: "iana",
                    compressible: false,
                },
                "application/vnd.etsi.asic-s+zip": {
                    source: "iana",
                    compressible: false,
                },
                "application/vnd.etsi.cug+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.etsi.iptvcommand+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.etsi.iptvdiscovery+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.etsi.iptvprofile+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.etsi.iptvsad-bc+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.etsi.iptvsad-cod+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.etsi.iptvsad-npvr+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.etsi.iptvservice+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.etsi.iptvsync+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.etsi.iptvueprofile+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.etsi.mcid+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.etsi.mheg5": {
                    source: "iana",
                },
                "application/vnd.etsi.overload-control-policy-dataset+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.etsi.pstn+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.etsi.sci+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.etsi.simservs+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.etsi.timestamp-token": {
                    source: "iana",
                },
                "application/vnd.etsi.tsl+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.etsi.tsl.der": {
                    source: "iana",
                },
                "application/vnd.eudora.data": {
                    source: "iana",
                },
                "application/vnd.evolv.ecig.profile": {
                    source: "iana",
                },
                "application/vnd.evolv.ecig.settings": {
                    source: "iana",
                },
                "application/vnd.evolv.ecig.theme": {
                    source: "iana",
                },
                "application/vnd.exstream-empower+zip": {
                    source: "iana",
                    compressible: false,
                },
                "application/vnd.exstream-package": {
                    source: "iana",
                },
                "application/vnd.ezpix-album": {
                    source: "iana",
                    extensions: ["ez2"],
                },
                "application/vnd.ezpix-package": {
                    source: "iana",
                    extensions: ["ez3"],
                },
                "application/vnd.f-secure.mobile": {
                    source: "iana",
                },
                "application/vnd.fastcopy-disk-image": {
                    source: "iana",
                },
                "application/vnd.fdf": {
                    source: "iana",
                    extensions: ["fdf"],
                },
                "application/vnd.fdsn.mseed": {
                    source: "iana",
                    extensions: ["mseed"],
                },
                "application/vnd.fdsn.seed": {
                    source: "iana",
                    extensions: ["seed", "dataless"],
                },
                "application/vnd.ffsns": {
                    source: "iana",
                },
                "application/vnd.ficlab.flb+zip": {
                    source: "iana",
                    compressible: false,
                },
                "application/vnd.filmit.zfc": {
                    source: "iana",
                },
                "application/vnd.fints": {
                    source: "iana",
                },
                "application/vnd.firemonkeys.cloudcell": {
                    source: "iana",
                },
                "application/vnd.flographit": {
                    source: "iana",
                    extensions: ["gph"],
                },
                "application/vnd.fluxtime.clip": {
                    source: "iana",
                    extensions: ["ftc"],
                },
                "application/vnd.font-fontforge-sfd": {
                    source: "iana",
                },
                "application/vnd.framemaker": {
                    source: "iana",
                    extensions: ["fm", "frame", "maker", "book"],
                },
                "application/vnd.frogans.fnc": {
                    source: "iana",
                    extensions: ["fnc"],
                },
                "application/vnd.frogans.ltf": {
                    source: "iana",
                    extensions: ["ltf"],
                },
                "application/vnd.fsc.weblaunch": {
                    source: "iana",
                    extensions: ["fsc"],
                },
                "application/vnd.fujitsu.oasys": {
                    source: "iana",
                    extensions: ["oas"],
                },
                "application/vnd.fujitsu.oasys2": {
                    source: "iana",
                    extensions: ["oa2"],
                },
                "application/vnd.fujitsu.oasys3": {
                    source: "iana",
                    extensions: ["oa3"],
                },
                "application/vnd.fujitsu.oasysgp": {
                    source: "iana",
                    extensions: ["fg5"],
                },
                "application/vnd.fujitsu.oasysprs": {
                    source: "iana",
                    extensions: ["bh2"],
                },
                "application/vnd.fujixerox.art-ex": {
                    source: "iana",
                },
                "application/vnd.fujixerox.art4": {
                    source: "iana",
                },
                "application/vnd.fujixerox.ddd": {
                    source: "iana",
                    extensions: ["ddd"],
                },
                "application/vnd.fujixerox.docuworks": {
                    source: "iana",
                    extensions: ["xdw"],
                },
                "application/vnd.fujixerox.docuworks.binder": {
                    source: "iana",
                    extensions: ["xbd"],
                },
                "application/vnd.fujixerox.docuworks.container": {
                    source: "iana",
                },
                "application/vnd.fujixerox.hbpl": {
                    source: "iana",
                },
                "application/vnd.fut-misnet": {
                    source: "iana",
                },
                "application/vnd.futoin+cbor": {
                    source: "iana",
                },
                "application/vnd.futoin+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.fuzzysheet": {
                    source: "iana",
                    extensions: ["fzs"],
                },
                "application/vnd.genomatix.tuxedo": {
                    source: "iana",
                    extensions: ["txd"],
                },
                "application/vnd.gentics.grd+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.geo+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.geocube+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.geogebra.file": {
                    source: "iana",
                    extensions: ["ggb"],
                },
                "application/vnd.geogebra.tool": {
                    source: "iana",
                    extensions: ["ggt"],
                },
                "application/vnd.geometry-explorer": {
                    source: "iana",
                    extensions: ["gex", "gre"],
                },
                "application/vnd.geonext": {
                    source: "iana",
                    extensions: ["gxt"],
                },
                "application/vnd.geoplan": {
                    source: "iana",
                    extensions: ["g2w"],
                },
                "application/vnd.geospace": {
                    source: "iana",
                    extensions: ["g3w"],
                },
                "application/vnd.gerber": {
                    source: "iana",
                },
                "application/vnd.globalplatform.card-content-mgt": {
                    source: "iana",
                },
                "application/vnd.globalplatform.card-content-mgt-response": {
                    source: "iana",
                },
                "application/vnd.gmx": {
                    source: "iana",
                    extensions: ["gmx"],
                },
                "application/vnd.google-apps.document": {
                    compressible: false,
                    extensions: ["gdoc"],
                },
                "application/vnd.google-apps.presentation": {
                    compressible: false,
                    extensions: ["gslides"],
                },
                "application/vnd.google-apps.spreadsheet": {
                    compressible: false,
                    extensions: ["gsheet"],
                },
                "application/vnd.google-earth.kml+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["kml"],
                },
                "application/vnd.google-earth.kmz": {
                    source: "iana",
                    compressible: false,
                    extensions: ["kmz"],
                },
                "application/vnd.gov.sk.e-form+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.gov.sk.e-form+zip": {
                    source: "iana",
                    compressible: false,
                },
                "application/vnd.gov.sk.xmldatacontainer+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.grafeq": {
                    source: "iana",
                    extensions: ["gqf", "gqs"],
                },
                "application/vnd.gridmp": {
                    source: "iana",
                },
                "application/vnd.groove-account": {
                    source: "iana",
                    extensions: ["gac"],
                },
                "application/vnd.groove-help": {
                    source: "iana",
                    extensions: ["ghf"],
                },
                "application/vnd.groove-identity-message": {
                    source: "iana",
                    extensions: ["gim"],
                },
                "application/vnd.groove-injector": {
                    source: "iana",
                    extensions: ["grv"],
                },
                "application/vnd.groove-tool-message": {
                    source: "iana",
                    extensions: ["gtm"],
                },
                "application/vnd.groove-tool-template": {
                    source: "iana",
                    extensions: ["tpl"],
                },
                "application/vnd.groove-vcard": {
                    source: "iana",
                    extensions: ["vcg"],
                },
                "application/vnd.hal+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.hal+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["hal"],
                },
                "application/vnd.handheld-entertainment+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["zmm"],
                },
                "application/vnd.hbci": {
                    source: "iana",
                    extensions: ["hbci"],
                },
                "application/vnd.hc+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.hcl-bireports": {
                    source: "iana",
                },
                "application/vnd.hdt": {
                    source: "iana",
                },
                "application/vnd.heroku+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.hhe.lesson-player": {
                    source: "iana",
                    extensions: ["les"],
                },
                "application/vnd.hp-hpgl": {
                    source: "iana",
                    extensions: ["hpgl"],
                },
                "application/vnd.hp-hpid": {
                    source: "iana",
                    extensions: ["hpid"],
                },
                "application/vnd.hp-hps": {
                    source: "iana",
                    extensions: ["hps"],
                },
                "application/vnd.hp-jlyt": {
                    source: "iana",
                    extensions: ["jlt"],
                },
                "application/vnd.hp-pcl": {
                    source: "iana",
                    extensions: ["pcl"],
                },
                "application/vnd.hp-pclxl": {
                    source: "iana",
                    extensions: ["pclxl"],
                },
                "application/vnd.httphone": {
                    source: "iana",
                },
                "application/vnd.hydrostatix.sof-data": {
                    source: "iana",
                    extensions: ["sfd-hdstx"],
                },
                "application/vnd.hyper+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.hyper-item+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.hyperdrive+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.hzn-3d-crossword": {
                    source: "iana",
                },
                "application/vnd.ibm.afplinedata": {
                    source: "iana",
                },
                "application/vnd.ibm.electronic-media": {
                    source: "iana",
                },
                "application/vnd.ibm.minipay": {
                    source: "iana",
                    extensions: ["mpy"],
                },
                "application/vnd.ibm.modcap": {
                    source: "iana",
                    extensions: ["afp", "listafp", "list3820"],
                },
                "application/vnd.ibm.rights-management": {
                    source: "iana",
                    extensions: ["irm"],
                },
                "application/vnd.ibm.secure-container": {
                    source: "iana",
                    extensions: ["sc"],
                },
                "application/vnd.iccprofile": {
                    source: "iana",
                    extensions: ["icc", "icm"],
                },
                "application/vnd.ieee.1905": {
                    source: "iana",
                },
                "application/vnd.igloader": {
                    source: "iana",
                    extensions: ["igl"],
                },
                "application/vnd.imagemeter.folder+zip": {
                    source: "iana",
                    compressible: false,
                },
                "application/vnd.imagemeter.image+zip": {
                    source: "iana",
                    compressible: false,
                },
                "application/vnd.immervision-ivp": {
                    source: "iana",
                    extensions: ["ivp"],
                },
                "application/vnd.immervision-ivu": {
                    source: "iana",
                    extensions: ["ivu"],
                },
                "application/vnd.ims.imsccv1p1": {
                    source: "iana",
                },
                "application/vnd.ims.imsccv1p2": {
                    source: "iana",
                },
                "application/vnd.ims.imsccv1p3": {
                    source: "iana",
                },
                "application/vnd.ims.lis.v2.result+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.ims.lti.v2.toolconsumerprofile+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.ims.lti.v2.toolproxy+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.ims.lti.v2.toolproxy.id+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.ims.lti.v2.toolsettings+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.ims.lti.v2.toolsettings.simple+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.informedcontrol.rms+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.informix-visionary": {
                    source: "iana",
                },
                "application/vnd.infotech.project": {
                    source: "iana",
                },
                "application/vnd.infotech.project+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.innopath.wamp.notification": {
                    source: "iana",
                },
                "application/vnd.insors.igm": {
                    source: "iana",
                    extensions: ["igm"],
                },
                "application/vnd.intercon.formnet": {
                    source: "iana",
                    extensions: ["xpw", "xpx"],
                },
                "application/vnd.intergeo": {
                    source: "iana",
                    extensions: ["i2g"],
                },
                "application/vnd.intertrust.digibox": {
                    source: "iana",
                },
                "application/vnd.intertrust.nncp": {
                    source: "iana",
                },
                "application/vnd.intu.qbo": {
                    source: "iana",
                    extensions: ["qbo"],
                },
                "application/vnd.intu.qfx": {
                    source: "iana",
                    extensions: ["qfx"],
                },
                "application/vnd.iptc.g2.catalogitem+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.iptc.g2.conceptitem+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.iptc.g2.knowledgeitem+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.iptc.g2.newsitem+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.iptc.g2.newsmessage+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.iptc.g2.packageitem+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.iptc.g2.planningitem+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.ipunplugged.rcprofile": {
                    source: "iana",
                    extensions: ["rcprofile"],
                },
                "application/vnd.irepository.package+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["irp"],
                },
                "application/vnd.is-xpr": {
                    source: "iana",
                    extensions: ["xpr"],
                },
                "application/vnd.isac.fcs": {
                    source: "iana",
                    extensions: ["fcs"],
                },
                "application/vnd.iso11783-10+zip": {
                    source: "iana",
                    compressible: false,
                },
                "application/vnd.jam": {
                    source: "iana",
                    extensions: ["jam"],
                },
                "application/vnd.japannet-directory-service": {
                    source: "iana",
                },
                "application/vnd.japannet-jpnstore-wakeup": {
                    source: "iana",
                },
                "application/vnd.japannet-payment-wakeup": {
                    source: "iana",
                },
                "application/vnd.japannet-registration": {
                    source: "iana",
                },
                "application/vnd.japannet-registration-wakeup": {
                    source: "iana",
                },
                "application/vnd.japannet-setstore-wakeup": {
                    source: "iana",
                },
                "application/vnd.japannet-verification": {
                    source: "iana",
                },
                "application/vnd.japannet-verification-wakeup": {
                    source: "iana",
                },
                "application/vnd.jcp.javame.midlet-rms": {
                    source: "iana",
                    extensions: ["rms"],
                },
                "application/vnd.jisp": {
                    source: "iana",
                    extensions: ["jisp"],
                },
                "application/vnd.joost.joda-archive": {
                    source: "iana",
                    extensions: ["joda"],
                },
                "application/vnd.jsk.isdn-ngn": {
                    source: "iana",
                },
                "application/vnd.kahootz": {
                    source: "iana",
                    extensions: ["ktz", "ktr"],
                },
                "application/vnd.kde.karbon": {
                    source: "iana",
                    extensions: ["karbon"],
                },
                "application/vnd.kde.kchart": {
                    source: "iana",
                    extensions: ["chrt"],
                },
                "application/vnd.kde.kformula": {
                    source: "iana",
                    extensions: ["kfo"],
                },
                "application/vnd.kde.kivio": {
                    source: "iana",
                    extensions: ["flw"],
                },
                "application/vnd.kde.kontour": {
                    source: "iana",
                    extensions: ["kon"],
                },
                "application/vnd.kde.kpresenter": {
                    source: "iana",
                    extensions: ["kpr", "kpt"],
                },
                "application/vnd.kde.kspread": {
                    source: "iana",
                    extensions: ["ksp"],
                },
                "application/vnd.kde.kword": {
                    source: "iana",
                    extensions: ["kwd", "kwt"],
                },
                "application/vnd.kenameaapp": {
                    source: "iana",
                    extensions: ["htke"],
                },
                "application/vnd.kidspiration": {
                    source: "iana",
                    extensions: ["kia"],
                },
                "application/vnd.kinar": {
                    source: "iana",
                    extensions: ["kne", "knp"],
                },
                "application/vnd.koan": {
                    source: "iana",
                    extensions: ["skp", "skd", "skt", "skm"],
                },
                "application/vnd.kodak-descriptor": {
                    source: "iana",
                    extensions: ["sse"],
                },
                "application/vnd.las": {
                    source: "iana",
                },
                "application/vnd.las.las+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.las.las+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["lasxml"],
                },
                "application/vnd.laszip": {
                    source: "iana",
                },
                "application/vnd.leap+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.liberty-request+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.llamagraphics.life-balance.desktop": {
                    source: "iana",
                    extensions: ["lbd"],
                },
                "application/vnd.llamagraphics.life-balance.exchange+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["lbe"],
                },
                "application/vnd.logipipe.circuit+zip": {
                    source: "iana",
                    compressible: false,
                },
                "application/vnd.loom": {
                    source: "iana",
                },
                "application/vnd.lotus-1-2-3": {
                    source: "iana",
                    extensions: ["123"],
                },
                "application/vnd.lotus-approach": {
                    source: "iana",
                    extensions: ["apr"],
                },
                "application/vnd.lotus-freelance": {
                    source: "iana",
                    extensions: ["pre"],
                },
                "application/vnd.lotus-notes": {
                    source: "iana",
                    extensions: ["nsf"],
                },
                "application/vnd.lotus-organizer": {
                    source: "iana",
                    extensions: ["org"],
                },
                "application/vnd.lotus-screencam": {
                    source: "iana",
                    extensions: ["scm"],
                },
                "application/vnd.lotus-wordpro": {
                    source: "iana",
                    extensions: ["lwp"],
                },
                "application/vnd.macports.portpkg": {
                    source: "iana",
                    extensions: ["portpkg"],
                },
                "application/vnd.mapbox-vector-tile": {
                    source: "iana",
                },
                "application/vnd.marlin.drm.actiontoken+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.marlin.drm.conftoken+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.marlin.drm.license+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.marlin.drm.mdcf": {
                    source: "iana",
                },
                "application/vnd.mason+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.maxmind.maxmind-db": {
                    source: "iana",
                },
                "application/vnd.mcd": {
                    source: "iana",
                    extensions: ["mcd"],
                },
                "application/vnd.medcalcdata": {
                    source: "iana",
                    extensions: ["mc1"],
                },
                "application/vnd.mediastation.cdkey": {
                    source: "iana",
                    extensions: ["cdkey"],
                },
                "application/vnd.meridian-slingshot": {
                    source: "iana",
                },
                "application/vnd.mfer": {
                    source: "iana",
                    extensions: ["mwf"],
                },
                "application/vnd.mfmp": {
                    source: "iana",
                    extensions: ["mfm"],
                },
                "application/vnd.micro+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.micrografx.flo": {
                    source: "iana",
                    extensions: ["flo"],
                },
                "application/vnd.micrografx.igx": {
                    source: "iana",
                    extensions: ["igx"],
                },
                "application/vnd.microsoft.portable-executable": {
                    source: "iana",
                },
                "application/vnd.microsoft.windows.thumbnail-cache": {
                    source: "iana",
                },
                "application/vnd.miele+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.mif": {
                    source: "iana",
                    extensions: ["mif"],
                },
                "application/vnd.minisoft-hp3000-save": {
                    source: "iana",
                },
                "application/vnd.mitsubishi.misty-guard.trustweb": {
                    source: "iana",
                },
                "application/vnd.mobius.daf": {
                    source: "iana",
                    extensions: ["daf"],
                },
                "application/vnd.mobius.dis": {
                    source: "iana",
                    extensions: ["dis"],
                },
                "application/vnd.mobius.mbk": {
                    source: "iana",
                    extensions: ["mbk"],
                },
                "application/vnd.mobius.mqy": {
                    source: "iana",
                    extensions: ["mqy"],
                },
                "application/vnd.mobius.msl": {
                    source: "iana",
                    extensions: ["msl"],
                },
                "application/vnd.mobius.plc": {
                    source: "iana",
                    extensions: ["plc"],
                },
                "application/vnd.mobius.txf": {
                    source: "iana",
                    extensions: ["txf"],
                },
                "application/vnd.mophun.application": {
                    source: "iana",
                    extensions: ["mpn"],
                },
                "application/vnd.mophun.certificate": {
                    source: "iana",
                    extensions: ["mpc"],
                },
                "application/vnd.motorola.flexsuite": {
                    source: "iana",
                },
                "application/vnd.motorola.flexsuite.adsi": {
                    source: "iana",
                },
                "application/vnd.motorola.flexsuite.fis": {
                    source: "iana",
                },
                "application/vnd.motorola.flexsuite.gotap": {
                    source: "iana",
                },
                "application/vnd.motorola.flexsuite.kmr": {
                    source: "iana",
                },
                "application/vnd.motorola.flexsuite.ttc": {
                    source: "iana",
                },
                "application/vnd.motorola.flexsuite.wem": {
                    source: "iana",
                },
                "application/vnd.motorola.iprm": {
                    source: "iana",
                },
                "application/vnd.mozilla.xul+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["xul"],
                },
                "application/vnd.ms-3mfdocument": {
                    source: "iana",
                },
                "application/vnd.ms-artgalry": {
                    source: "iana",
                    extensions: ["cil"],
                },
                "application/vnd.ms-asf": {
                    source: "iana",
                },
                "application/vnd.ms-cab-compressed": {
                    source: "iana",
                    extensions: ["cab"],
                },
                "application/vnd.ms-color.iccprofile": {
                    source: "apache",
                },
                "application/vnd.ms-excel": {
                    source: "iana",
                    compressible: false,
                    extensions: ["xls", "xlm", "xla", "xlc", "xlt", "xlw"],
                },
                "application/vnd.ms-excel.addin.macroenabled.12": {
                    source: "iana",
                    extensions: ["xlam"],
                },
                "application/vnd.ms-excel.sheet.binary.macroenabled.12": {
                    source: "iana",
                    extensions: ["xlsb"],
                },
                "application/vnd.ms-excel.sheet.macroenabled.12": {
                    source: "iana",
                    extensions: ["xlsm"],
                },
                "application/vnd.ms-excel.template.macroenabled.12": {
                    source: "iana",
                    extensions: ["xltm"],
                },
                "application/vnd.ms-fontobject": {
                    source: "iana",
                    compressible: true,
                    extensions: ["eot"],
                },
                "application/vnd.ms-htmlhelp": {
                    source: "iana",
                    extensions: ["chm"],
                },
                "application/vnd.ms-ims": {
                    source: "iana",
                    extensions: ["ims"],
                },
                "application/vnd.ms-lrm": {
                    source: "iana",
                    extensions: ["lrm"],
                },
                "application/vnd.ms-office.activex+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.ms-officetheme": {
                    source: "iana",
                    extensions: ["thmx"],
                },
                "application/vnd.ms-opentype": {
                    source: "apache",
                    compressible: true,
                },
                "application/vnd.ms-outlook": {
                    compressible: false,
                    extensions: ["msg"],
                },
                "application/vnd.ms-package.obfuscated-opentype": {
                    source: "apache",
                },
                "application/vnd.ms-pki.seccat": {
                    source: "apache",
                    extensions: ["cat"],
                },
                "application/vnd.ms-pki.stl": {
                    source: "apache",
                    extensions: ["stl"],
                },
                "application/vnd.ms-playready.initiator+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.ms-powerpoint": {
                    source: "iana",
                    compressible: false,
                    extensions: ["ppt", "pps", "pot"],
                },
                "application/vnd.ms-powerpoint.addin.macroenabled.12": {
                    source: "iana",
                    extensions: ["ppam"],
                },
                "application/vnd.ms-powerpoint.presentation.macroenabled.12": {
                    source: "iana",
                    extensions: ["pptm"],
                },
                "application/vnd.ms-powerpoint.slide.macroenabled.12": {
                    source: "iana",
                    extensions: ["sldm"],
                },
                "application/vnd.ms-powerpoint.slideshow.macroenabled.12": {
                    source: "iana",
                    extensions: ["ppsm"],
                },
                "application/vnd.ms-powerpoint.template.macroenabled.12": {
                    source: "iana",
                    extensions: ["potm"],
                },
                "application/vnd.ms-printdevicecapabilities+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.ms-printing.printticket+xml": {
                    source: "apache",
                    compressible: true,
                },
                "application/vnd.ms-printschematicket+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.ms-project": {
                    source: "iana",
                    extensions: ["mpp", "mpt"],
                },
                "application/vnd.ms-tnef": {
                    source: "iana",
                },
                "application/vnd.ms-windows.devicepairing": {
                    source: "iana",
                },
                "application/vnd.ms-windows.nwprinting.oob": {
                    source: "iana",
                },
                "application/vnd.ms-windows.printerpairing": {
                    source: "iana",
                },
                "application/vnd.ms-windows.wsd.oob": {
                    source: "iana",
                },
                "application/vnd.ms-wmdrm.lic-chlg-req": {
                    source: "iana",
                },
                "application/vnd.ms-wmdrm.lic-resp": {
                    source: "iana",
                },
                "application/vnd.ms-wmdrm.meter-chlg-req": {
                    source: "iana",
                },
                "application/vnd.ms-wmdrm.meter-resp": {
                    source: "iana",
                },
                "application/vnd.ms-word.document.macroenabled.12": {
                    source: "iana",
                    extensions: ["docm"],
                },
                "application/vnd.ms-word.template.macroenabled.12": {
                    source: "iana",
                    extensions: ["dotm"],
                },
                "application/vnd.ms-works": {
                    source: "iana",
                    extensions: ["wps", "wks", "wcm", "wdb"],
                },
                "application/vnd.ms-wpl": {
                    source: "iana",
                    extensions: ["wpl"],
                },
                "application/vnd.ms-xpsdocument": {
                    source: "iana",
                    compressible: false,
                    extensions: ["xps"],
                },
                "application/vnd.msa-disk-image": {
                    source: "iana",
                },
                "application/vnd.mseq": {
                    source: "iana",
                    extensions: ["mseq"],
                },
                "application/vnd.msign": {
                    source: "iana",
                },
                "application/vnd.multiad.creator": {
                    source: "iana",
                },
                "application/vnd.multiad.creator.cif": {
                    source: "iana",
                },
                "application/vnd.music-niff": {
                    source: "iana",
                },
                "application/vnd.musician": {
                    source: "iana",
                    extensions: ["mus"],
                },
                "application/vnd.muvee.style": {
                    source: "iana",
                    extensions: ["msty"],
                },
                "application/vnd.mynfc": {
                    source: "iana",
                    extensions: ["taglet"],
                },
                "application/vnd.ncd.control": {
                    source: "iana",
                },
                "application/vnd.ncd.reference": {
                    source: "iana",
                },
                "application/vnd.nearst.inv+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.nervana": {
                    source: "iana",
                },
                "application/vnd.netfpx": {
                    source: "iana",
                },
                "application/vnd.neurolanguage.nlu": {
                    source: "iana",
                    extensions: ["nlu"],
                },
                "application/vnd.nimn": {
                    source: "iana",
                },
                "application/vnd.nintendo.nitro.rom": {
                    source: "iana",
                },
                "application/vnd.nintendo.snes.rom": {
                    source: "iana",
                },
                "application/vnd.nitf": {
                    source: "iana",
                    extensions: ["ntf", "nitf"],
                },
                "application/vnd.noblenet-directory": {
                    source: "iana",
                    extensions: ["nnd"],
                },
                "application/vnd.noblenet-sealer": {
                    source: "iana",
                    extensions: ["nns"],
                },
                "application/vnd.noblenet-web": {
                    source: "iana",
                    extensions: ["nnw"],
                },
                "application/vnd.nokia.catalogs": {
                    source: "iana",
                },
                "application/vnd.nokia.conml+wbxml": {
                    source: "iana",
                },
                "application/vnd.nokia.conml+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.nokia.iptv.config+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.nokia.isds-radio-presets": {
                    source: "iana",
                },
                "application/vnd.nokia.landmark+wbxml": {
                    source: "iana",
                },
                "application/vnd.nokia.landmark+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.nokia.landmarkcollection+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.nokia.n-gage.ac+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["ac"],
                },
                "application/vnd.nokia.n-gage.data": {
                    source: "iana",
                    extensions: ["ngdat"],
                },
                "application/vnd.nokia.n-gage.symbian.install": {
                    source: "iana",
                    extensions: ["n-gage"],
                },
                "application/vnd.nokia.ncd": {
                    source: "iana",
                },
                "application/vnd.nokia.pcd+wbxml": {
                    source: "iana",
                },
                "application/vnd.nokia.pcd+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.nokia.radio-preset": {
                    source: "iana",
                    extensions: ["rpst"],
                },
                "application/vnd.nokia.radio-presets": {
                    source: "iana",
                    extensions: ["rpss"],
                },
                "application/vnd.novadigm.edm": {
                    source: "iana",
                    extensions: ["edm"],
                },
                "application/vnd.novadigm.edx": {
                    source: "iana",
                    extensions: ["edx"],
                },
                "application/vnd.novadigm.ext": {
                    source: "iana",
                    extensions: ["ext"],
                },
                "application/vnd.ntt-local.content-share": {
                    source: "iana",
                },
                "application/vnd.ntt-local.file-transfer": {
                    source: "iana",
                },
                "application/vnd.ntt-local.ogw_remote-access": {
                    source: "iana",
                },
                "application/vnd.ntt-local.sip-ta_remote": {
                    source: "iana",
                },
                "application/vnd.ntt-local.sip-ta_tcp_stream": {
                    source: "iana",
                },
                "application/vnd.oasis.opendocument.chart": {
                    source: "iana",
                    extensions: ["odc"],
                },
                "application/vnd.oasis.opendocument.chart-template": {
                    source: "iana",
                    extensions: ["otc"],
                },
                "application/vnd.oasis.opendocument.database": {
                    source: "iana",
                    extensions: ["odb"],
                },
                "application/vnd.oasis.opendocument.formula": {
                    source: "iana",
                    extensions: ["odf"],
                },
                "application/vnd.oasis.opendocument.formula-template": {
                    source: "iana",
                    extensions: ["odft"],
                },
                "application/vnd.oasis.opendocument.graphics": {
                    source: "iana",
                    compressible: false,
                    extensions: ["odg"],
                },
                "application/vnd.oasis.opendocument.graphics-template": {
                    source: "iana",
                    extensions: ["otg"],
                },
                "application/vnd.oasis.opendocument.image": {
                    source: "iana",
                    extensions: ["odi"],
                },
                "application/vnd.oasis.opendocument.image-template": {
                    source: "iana",
                    extensions: ["oti"],
                },
                "application/vnd.oasis.opendocument.presentation": {
                    source: "iana",
                    compressible: false,
                    extensions: ["odp"],
                },
                "application/vnd.oasis.opendocument.presentation-template": {
                    source: "iana",
                    extensions: ["otp"],
                },
                "application/vnd.oasis.opendocument.spreadsheet": {
                    source: "iana",
                    compressible: false,
                    extensions: ["ods"],
                },
                "application/vnd.oasis.opendocument.spreadsheet-template": {
                    source: "iana",
                    extensions: ["ots"],
                },
                "application/vnd.oasis.opendocument.text": {
                    source: "iana",
                    compressible: false,
                    extensions: ["odt"],
                },
                "application/vnd.oasis.opendocument.text-master": {
                    source: "iana",
                    extensions: ["odm"],
                },
                "application/vnd.oasis.opendocument.text-template": {
                    source: "iana",
                    extensions: ["ott"],
                },
                "application/vnd.oasis.opendocument.text-web": {
                    source: "iana",
                    extensions: ["oth"],
                },
                "application/vnd.obn": {
                    source: "iana",
                },
                "application/vnd.ocf+cbor": {
                    source: "iana",
                },
                "application/vnd.oci.image.manifest.v1+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oftn.l10n+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oipf.contentaccessdownload+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oipf.contentaccessstreaming+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oipf.cspg-hexbinary": {
                    source: "iana",
                },
                "application/vnd.oipf.dae.svg+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oipf.dae.xhtml+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oipf.mippvcontrolmessage+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oipf.pae.gem": {
                    source: "iana",
                },
                "application/vnd.oipf.spdiscovery+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oipf.spdlist+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oipf.ueprofile+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oipf.userprofile+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.olpc-sugar": {
                    source: "iana",
                    extensions: ["xo"],
                },
                "application/vnd.oma-scws-config": {
                    source: "iana",
                },
                "application/vnd.oma-scws-http-request": {
                    source: "iana",
                },
                "application/vnd.oma-scws-http-response": {
                    source: "iana",
                },
                "application/vnd.oma.bcast.associated-procedure-parameter+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oma.bcast.drm-trigger+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oma.bcast.imd+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oma.bcast.ltkm": {
                    source: "iana",
                },
                "application/vnd.oma.bcast.notification+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oma.bcast.provisioningtrigger": {
                    source: "iana",
                },
                "application/vnd.oma.bcast.sgboot": {
                    source: "iana",
                },
                "application/vnd.oma.bcast.sgdd+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oma.bcast.sgdu": {
                    source: "iana",
                },
                "application/vnd.oma.bcast.simple-symbol-container": {
                    source: "iana",
                },
                "application/vnd.oma.bcast.smartcard-trigger+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oma.bcast.sprov+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oma.bcast.stkm": {
                    source: "iana",
                },
                "application/vnd.oma.cab-address-book+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oma.cab-feature-handler+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oma.cab-pcc+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oma.cab-subs-invite+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oma.cab-user-prefs+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oma.dcd": {
                    source: "iana",
                },
                "application/vnd.oma.dcdc": {
                    source: "iana",
                },
                "application/vnd.oma.dd2+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["dd2"],
                },
                "application/vnd.oma.drm.risd+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oma.group-usage-list+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oma.lwm2m+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oma.lwm2m+tlv": {
                    source: "iana",
                },
                "application/vnd.oma.pal+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oma.poc.detailed-progress-report+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oma.poc.final-report+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oma.poc.groups+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oma.poc.invocation-descriptor+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oma.poc.optimized-progress-report+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oma.push": {
                    source: "iana",
                },
                "application/vnd.oma.scidm.messages+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oma.xcap-directory+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.omads-email+xml": {
                    source: "iana",
                    charset: "UTF-8",
                    compressible: true,
                },
                "application/vnd.omads-file+xml": {
                    source: "iana",
                    charset: "UTF-8",
                    compressible: true,
                },
                "application/vnd.omads-folder+xml": {
                    source: "iana",
                    charset: "UTF-8",
                    compressible: true,
                },
                "application/vnd.omaloc-supl-init": {
                    source: "iana",
                },
                "application/vnd.onepager": {
                    source: "iana",
                },
                "application/vnd.onepagertamp": {
                    source: "iana",
                },
                "application/vnd.onepagertamx": {
                    source: "iana",
                },
                "application/vnd.onepagertat": {
                    source: "iana",
                },
                "application/vnd.onepagertatp": {
                    source: "iana",
                },
                "application/vnd.onepagertatx": {
                    source: "iana",
                },
                "application/vnd.openblox.game+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["obgx"],
                },
                "application/vnd.openblox.game-binary": {
                    source: "iana",
                },
                "application/vnd.openeye.oeb": {
                    source: "iana",
                },
                "application/vnd.openofficeorg.extension": {
                    source: "apache",
                    extensions: ["oxt"],
                },
                "application/vnd.openstreetmap.data+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["osm"],
                },
                "application/vnd.openxmlformats-officedocument.custom-properties+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.customxmlproperties+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.drawing+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.drawingml.chart+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.extended-properties+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.presentationml.comments+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.presentationml.presentation": {
                    source: "iana",
                    compressible: false,
                    extensions: ["pptx"],
                },
                "application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.presentationml.presprops+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.presentationml.slide": {
                    source: "iana",
                    extensions: ["sldx"],
                },
                "application/vnd.openxmlformats-officedocument.presentationml.slide+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.presentationml.slideshow": {
                    source: "iana",
                    extensions: ["ppsx"],
                },
                "application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.presentationml.tags+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.presentationml.template": {
                    source: "iana",
                    extensions: ["potx"],
                },
                "application/vnd.openxmlformats-officedocument.presentationml.template.main+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                    source: "iana",
                    compressible: false,
                    extensions: ["xlsx"],
                },
                "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.spreadsheetml.template": {
                    source: "iana",
                    extensions: ["xltx"],
                },
                "application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.theme+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.themeoverride+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.vmldrawing": {
                    source: "iana",
                },
                "application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.wordprocessingml.document": {
                    source: "iana",
                    compressible: false,
                    extensions: ["docx"],
                },
                "application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.wordprocessingml.template": {
                    source: "iana",
                    extensions: ["dotx"],
                },
                "application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-package.core-properties+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.openxmlformats-package.relationships+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oracle.resource+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.orange.indata": {
                    source: "iana",
                },
                "application/vnd.osa.netdeploy": {
                    source: "iana",
                },
                "application/vnd.osgeo.mapguide.package": {
                    source: "iana",
                    extensions: ["mgp"],
                },
                "application/vnd.osgi.bundle": {
                    source: "iana",
                },
                "application/vnd.osgi.dp": {
                    source: "iana",
                    extensions: ["dp"],
                },
                "application/vnd.osgi.subsystem": {
                    source: "iana",
                    extensions: ["esa"],
                },
                "application/vnd.otps.ct-kip+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.oxli.countgraph": {
                    source: "iana",
                },
                "application/vnd.pagerduty+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.palm": {
                    source: "iana",
                    extensions: ["pdb", "pqa", "oprc"],
                },
                "application/vnd.panoply": {
                    source: "iana",
                },
                "application/vnd.paos.xml": {
                    source: "iana",
                },
                "application/vnd.patentdive": {
                    source: "iana",
                },
                "application/vnd.patientecommsdoc": {
                    source: "iana",
                },
                "application/vnd.pawaafile": {
                    source: "iana",
                    extensions: ["paw"],
                },
                "application/vnd.pcos": {
                    source: "iana",
                },
                "application/vnd.pg.format": {
                    source: "iana",
                    extensions: ["str"],
                },
                "application/vnd.pg.osasli": {
                    source: "iana",
                    extensions: ["ei6"],
                },
                "application/vnd.piaccess.application-licence": {
                    source: "iana",
                },
                "application/vnd.picsel": {
                    source: "iana",
                    extensions: ["efif"],
                },
                "application/vnd.pmi.widget": {
                    source: "iana",
                    extensions: ["wg"],
                },
                "application/vnd.poc.group-advertisement+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.pocketlearn": {
                    source: "iana",
                    extensions: ["plf"],
                },
                "application/vnd.powerbuilder6": {
                    source: "iana",
                    extensions: ["pbd"],
                },
                "application/vnd.powerbuilder6-s": {
                    source: "iana",
                },
                "application/vnd.powerbuilder7": {
                    source: "iana",
                },
                "application/vnd.powerbuilder7-s": {
                    source: "iana",
                },
                "application/vnd.powerbuilder75": {
                    source: "iana",
                },
                "application/vnd.powerbuilder75-s": {
                    source: "iana",
                },
                "application/vnd.preminet": {
                    source: "iana",
                },
                "application/vnd.previewsystems.box": {
                    source: "iana",
                    extensions: ["box"],
                },
                "application/vnd.proteus.magazine": {
                    source: "iana",
                    extensions: ["mgz"],
                },
                "application/vnd.psfs": {
                    source: "iana",
                },
                "application/vnd.publishare-delta-tree": {
                    source: "iana",
                    extensions: ["qps"],
                },
                "application/vnd.pvi.ptid1": {
                    source: "iana",
                    extensions: ["ptid"],
                },
                "application/vnd.pwg-multiplexed": {
                    source: "iana",
                },
                "application/vnd.pwg-xhtml-print+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.qualcomm.brew-app-res": {
                    source: "iana",
                },
                "application/vnd.quarantainenet": {
                    source: "iana",
                },
                "application/vnd.quark.quarkxpress": {
                    source: "iana",
                    extensions: ["qxd", "qxt", "qwd", "qwt", "qxl", "qxb"],
                },
                "application/vnd.quobject-quoxdocument": {
                    source: "iana",
                },
                "application/vnd.radisys.moml+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.radisys.msml+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.radisys.msml-audit+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.radisys.msml-audit-conf+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.radisys.msml-audit-conn+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.radisys.msml-audit-dialog+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.radisys.msml-audit-stream+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.radisys.msml-conf+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.radisys.msml-dialog+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.radisys.msml-dialog-base+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.radisys.msml-dialog-fax-detect+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.radisys.msml-dialog-fax-sendrecv+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.radisys.msml-dialog-group+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.radisys.msml-dialog-speech+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.radisys.msml-dialog-transform+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.rainstor.data": {
                    source: "iana",
                },
                "application/vnd.rapid": {
                    source: "iana",
                },
                "application/vnd.rar": {
                    source: "iana",
                },
                "application/vnd.realvnc.bed": {
                    source: "iana",
                    extensions: ["bed"],
                },
                "application/vnd.recordare.musicxml": {
                    source: "iana",
                    extensions: ["mxl"],
                },
                "application/vnd.recordare.musicxml+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["musicxml"],
                },
                "application/vnd.renlearn.rlprint": {
                    source: "iana",
                },
                "application/vnd.restful+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.rig.cryptonote": {
                    source: "iana",
                    extensions: ["cryptonote"],
                },
                "application/vnd.rim.cod": {
                    source: "apache",
                    extensions: ["cod"],
                },
                "application/vnd.rn-realmedia": {
                    source: "apache",
                    extensions: ["rm"],
                },
                "application/vnd.rn-realmedia-vbr": {
                    source: "apache",
                    extensions: ["rmvb"],
                },
                "application/vnd.route66.link66+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["link66"],
                },
                "application/vnd.rs-274x": {
                    source: "iana",
                },
                "application/vnd.ruckus.download": {
                    source: "iana",
                },
                "application/vnd.s3sms": {
                    source: "iana",
                },
                "application/vnd.sailingtracker.track": {
                    source: "iana",
                    extensions: ["st"],
                },
                "application/vnd.sar": {
                    source: "iana",
                },
                "application/vnd.sbm.cid": {
                    source: "iana",
                },
                "application/vnd.sbm.mid2": {
                    source: "iana",
                },
                "application/vnd.scribus": {
                    source: "iana",
                },
                "application/vnd.sealed.3df": {
                    source: "iana",
                },
                "application/vnd.sealed.csf": {
                    source: "iana",
                },
                "application/vnd.sealed.doc": {
                    source: "iana",
                },
                "application/vnd.sealed.eml": {
                    source: "iana",
                },
                "application/vnd.sealed.mht": {
                    source: "iana",
                },
                "application/vnd.sealed.net": {
                    source: "iana",
                },
                "application/vnd.sealed.ppt": {
                    source: "iana",
                },
                "application/vnd.sealed.tiff": {
                    source: "iana",
                },
                "application/vnd.sealed.xls": {
                    source: "iana",
                },
                "application/vnd.sealedmedia.softseal.html": {
                    source: "iana",
                },
                "application/vnd.sealedmedia.softseal.pdf": {
                    source: "iana",
                },
                "application/vnd.seemail": {
                    source: "iana",
                    extensions: ["see"],
                },
                "application/vnd.sema": {
                    source: "iana",
                    extensions: ["sema"],
                },
                "application/vnd.semd": {
                    source: "iana",
                    extensions: ["semd"],
                },
                "application/vnd.semf": {
                    source: "iana",
                    extensions: ["semf"],
                },
                "application/vnd.shade-save-file": {
                    source: "iana",
                },
                "application/vnd.shana.informed.formdata": {
                    source: "iana",
                    extensions: ["ifm"],
                },
                "application/vnd.shana.informed.formtemplate": {
                    source: "iana",
                    extensions: ["itp"],
                },
                "application/vnd.shana.informed.interchange": {
                    source: "iana",
                    extensions: ["iif"],
                },
                "application/vnd.shana.informed.package": {
                    source: "iana",
                    extensions: ["ipk"],
                },
                "application/vnd.shootproof+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.shopkick+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.shp": {
                    source: "iana",
                },
                "application/vnd.shx": {
                    source: "iana",
                },
                "application/vnd.sigrok.session": {
                    source: "iana",
                },
                "application/vnd.simtech-mindmapper": {
                    source: "iana",
                    extensions: ["twd", "twds"],
                },
                "application/vnd.siren+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.smaf": {
                    source: "iana",
                    extensions: ["mmf"],
                },
                "application/vnd.smart.notebook": {
                    source: "iana",
                },
                "application/vnd.smart.teacher": {
                    source: "iana",
                    extensions: ["teacher"],
                },
                "application/vnd.snesdev-page-table": {
                    source: "iana",
                },
                "application/vnd.software602.filler.form+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["fo"],
                },
                "application/vnd.software602.filler.form-xml-zip": {
                    source: "iana",
                },
                "application/vnd.solent.sdkm+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["sdkm", "sdkd"],
                },
                "application/vnd.spotfire.dxp": {
                    source: "iana",
                    extensions: ["dxp"],
                },
                "application/vnd.spotfire.sfs": {
                    source: "iana",
                    extensions: ["sfs"],
                },
                "application/vnd.sqlite3": {
                    source: "iana",
                },
                "application/vnd.sss-cod": {
                    source: "iana",
                },
                "application/vnd.sss-dtf": {
                    source: "iana",
                },
                "application/vnd.sss-ntf": {
                    source: "iana",
                },
                "application/vnd.stardivision.calc": {
                    source: "apache",
                    extensions: ["sdc"],
                },
                "application/vnd.stardivision.draw": {
                    source: "apache",
                    extensions: ["sda"],
                },
                "application/vnd.stardivision.impress": {
                    source: "apache",
                    extensions: ["sdd"],
                },
                "application/vnd.stardivision.math": {
                    source: "apache",
                    extensions: ["smf"],
                },
                "application/vnd.stardivision.writer": {
                    source: "apache",
                    extensions: ["sdw", "vor"],
                },
                "application/vnd.stardivision.writer-global": {
                    source: "apache",
                    extensions: ["sgl"],
                },
                "application/vnd.stepmania.package": {
                    source: "iana",
                    extensions: ["smzip"],
                },
                "application/vnd.stepmania.stepchart": {
                    source: "iana",
                    extensions: ["sm"],
                },
                "application/vnd.street-stream": {
                    source: "iana",
                },
                "application/vnd.sun.wadl+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["wadl"],
                },
                "application/vnd.sun.xml.calc": {
                    source: "apache",
                    extensions: ["sxc"],
                },
                "application/vnd.sun.xml.calc.template": {
                    source: "apache",
                    extensions: ["stc"],
                },
                "application/vnd.sun.xml.draw": {
                    source: "apache",
                    extensions: ["sxd"],
                },
                "application/vnd.sun.xml.draw.template": {
                    source: "apache",
                    extensions: ["std"],
                },
                "application/vnd.sun.xml.impress": {
                    source: "apache",
                    extensions: ["sxi"],
                },
                "application/vnd.sun.xml.impress.template": {
                    source: "apache",
                    extensions: ["sti"],
                },
                "application/vnd.sun.xml.math": {
                    source: "apache",
                    extensions: ["sxm"],
                },
                "application/vnd.sun.xml.writer": {
                    source: "apache",
                    extensions: ["sxw"],
                },
                "application/vnd.sun.xml.writer.global": {
                    source: "apache",
                    extensions: ["sxg"],
                },
                "application/vnd.sun.xml.writer.template": {
                    source: "apache",
                    extensions: ["stw"],
                },
                "application/vnd.sus-calendar": {
                    source: "iana",
                    extensions: ["sus", "susp"],
                },
                "application/vnd.svd": {
                    source: "iana",
                    extensions: ["svd"],
                },
                "application/vnd.swiftview-ics": {
                    source: "iana",
                },
                "application/vnd.symbian.install": {
                    source: "apache",
                    extensions: ["sis", "sisx"],
                },
                "application/vnd.syncml+xml": {
                    source: "iana",
                    charset: "UTF-8",
                    compressible: true,
                    extensions: ["xsm"],
                },
                "application/vnd.syncml.dm+wbxml": {
                    source: "iana",
                    charset: "UTF-8",
                    extensions: ["bdm"],
                },
                "application/vnd.syncml.dm+xml": {
                    source: "iana",
                    charset: "UTF-8",
                    compressible: true,
                    extensions: ["xdm"],
                },
                "application/vnd.syncml.dm.notification": {
                    source: "iana",
                },
                "application/vnd.syncml.dmddf+wbxml": {
                    source: "iana",
                },
                "application/vnd.syncml.dmddf+xml": {
                    source: "iana",
                    charset: "UTF-8",
                    compressible: true,
                    extensions: ["ddf"],
                },
                "application/vnd.syncml.dmtnds+wbxml": {
                    source: "iana",
                },
                "application/vnd.syncml.dmtnds+xml": {
                    source: "iana",
                    charset: "UTF-8",
                    compressible: true,
                },
                "application/vnd.syncml.ds.notification": {
                    source: "iana",
                },
                "application/vnd.tableschema+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.tao.intent-module-archive": {
                    source: "iana",
                    extensions: ["tao"],
                },
                "application/vnd.tcpdump.pcap": {
                    source: "iana",
                    extensions: ["pcap", "cap", "dmp"],
                },
                "application/vnd.think-cell.ppttc+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.tmd.mediaflex.api+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.tml": {
                    source: "iana",
                },
                "application/vnd.tmobile-livetv": {
                    source: "iana",
                    extensions: ["tmo"],
                },
                "application/vnd.tri.onesource": {
                    source: "iana",
                },
                "application/vnd.trid.tpt": {
                    source: "iana",
                    extensions: ["tpt"],
                },
                "application/vnd.triscape.mxs": {
                    source: "iana",
                    extensions: ["mxs"],
                },
                "application/vnd.trueapp": {
                    source: "iana",
                    extensions: ["tra"],
                },
                "application/vnd.truedoc": {
                    source: "iana",
                },
                "application/vnd.ubisoft.webplayer": {
                    source: "iana",
                },
                "application/vnd.ufdl": {
                    source: "iana",
                    extensions: ["ufd", "ufdl"],
                },
                "application/vnd.uiq.theme": {
                    source: "iana",
                    extensions: ["utz"],
                },
                "application/vnd.umajin": {
                    source: "iana",
                    extensions: ["umj"],
                },
                "application/vnd.unity": {
                    source: "iana",
                    extensions: ["unityweb"],
                },
                "application/vnd.uoml+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["uoml"],
                },
                "application/vnd.uplanet.alert": {
                    source: "iana",
                },
                "application/vnd.uplanet.alert-wbxml": {
                    source: "iana",
                },
                "application/vnd.uplanet.bearer-choice": {
                    source: "iana",
                },
                "application/vnd.uplanet.bearer-choice-wbxml": {
                    source: "iana",
                },
                "application/vnd.uplanet.cacheop": {
                    source: "iana",
                },
                "application/vnd.uplanet.cacheop-wbxml": {
                    source: "iana",
                },
                "application/vnd.uplanet.channel": {
                    source: "iana",
                },
                "application/vnd.uplanet.channel-wbxml": {
                    source: "iana",
                },
                "application/vnd.uplanet.list": {
                    source: "iana",
                },
                "application/vnd.uplanet.list-wbxml": {
                    source: "iana",
                },
                "application/vnd.uplanet.listcmd": {
                    source: "iana",
                },
                "application/vnd.uplanet.listcmd-wbxml": {
                    source: "iana",
                },
                "application/vnd.uplanet.signal": {
                    source: "iana",
                },
                "application/vnd.uri-map": {
                    source: "iana",
                },
                "application/vnd.valve.source.material": {
                    source: "iana",
                },
                "application/vnd.vcx": {
                    source: "iana",
                    extensions: ["vcx"],
                },
                "application/vnd.vd-study": {
                    source: "iana",
                },
                "application/vnd.vectorworks": {
                    source: "iana",
                },
                "application/vnd.vel+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.verimatrix.vcas": {
                    source: "iana",
                },
                "application/vnd.veryant.thin": {
                    source: "iana",
                },
                "application/vnd.ves.encrypted": {
                    source: "iana",
                },
                "application/vnd.vidsoft.vidconference": {
                    source: "iana",
                },
                "application/vnd.visio": {
                    source: "iana",
                    extensions: ["vsd", "vst", "vss", "vsw"],
                },
                "application/vnd.visionary": {
                    source: "iana",
                    extensions: ["vis"],
                },
                "application/vnd.vividence.scriptfile": {
                    source: "iana",
                },
                "application/vnd.vsf": {
                    source: "iana",
                    extensions: ["vsf"],
                },
                "application/vnd.wap.sic": {
                    source: "iana",
                },
                "application/vnd.wap.slc": {
                    source: "iana",
                },
                "application/vnd.wap.wbxml": {
                    source: "iana",
                    charset: "UTF-8",
                    extensions: ["wbxml"],
                },
                "application/vnd.wap.wmlc": {
                    source: "iana",
                    extensions: ["wmlc"],
                },
                "application/vnd.wap.wmlscriptc": {
                    source: "iana",
                    extensions: ["wmlsc"],
                },
                "application/vnd.webturbo": {
                    source: "iana",
                    extensions: ["wtb"],
                },
                "application/vnd.wfa.p2p": {
                    source: "iana",
                },
                "application/vnd.wfa.wsc": {
                    source: "iana",
                },
                "application/vnd.windows.devicepairing": {
                    source: "iana",
                },
                "application/vnd.wmc": {
                    source: "iana",
                },
                "application/vnd.wmf.bootstrap": {
                    source: "iana",
                },
                "application/vnd.wolfram.mathematica": {
                    source: "iana",
                },
                "application/vnd.wolfram.mathematica.package": {
                    source: "iana",
                },
                "application/vnd.wolfram.player": {
                    source: "iana",
                    extensions: ["nbp"],
                },
                "application/vnd.wordperfect": {
                    source: "iana",
                    extensions: ["wpd"],
                },
                "application/vnd.wqd": {
                    source: "iana",
                    extensions: ["wqd"],
                },
                "application/vnd.wrq-hp3000-labelled": {
                    source: "iana",
                },
                "application/vnd.wt.stf": {
                    source: "iana",
                    extensions: ["stf"],
                },
                "application/vnd.wv.csp+wbxml": {
                    source: "iana",
                },
                "application/vnd.wv.csp+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.wv.ssp+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.xacml+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.xara": {
                    source: "iana",
                    extensions: ["xar"],
                },
                "application/vnd.xfdl": {
                    source: "iana",
                    extensions: ["xfdl"],
                },
                "application/vnd.xfdl.webform": {
                    source: "iana",
                },
                "application/vnd.xmi+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/vnd.xmpie.cpkg": {
                    source: "iana",
                },
                "application/vnd.xmpie.dpkg": {
                    source: "iana",
                },
                "application/vnd.xmpie.plan": {
                    source: "iana",
                },
                "application/vnd.xmpie.ppkg": {
                    source: "iana",
                },
                "application/vnd.xmpie.xlim": {
                    source: "iana",
                },
                "application/vnd.yamaha.hv-dic": {
                    source: "iana",
                    extensions: ["hvd"],
                },
                "application/vnd.yamaha.hv-script": {
                    source: "iana",
                    extensions: ["hvs"],
                },
                "application/vnd.yamaha.hv-voice": {
                    source: "iana",
                    extensions: ["hvp"],
                },
                "application/vnd.yamaha.openscoreformat": {
                    source: "iana",
                    extensions: ["osf"],
                },
                "application/vnd.yamaha.openscoreformat.osfpvg+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["osfpvg"],
                },
                "application/vnd.yamaha.remote-setup": {
                    source: "iana",
                },
                "application/vnd.yamaha.smaf-audio": {
                    source: "iana",
                    extensions: ["saf"],
                },
                "application/vnd.yamaha.smaf-phrase": {
                    source: "iana",
                    extensions: ["spf"],
                },
                "application/vnd.yamaha.through-ngn": {
                    source: "iana",
                },
                "application/vnd.yamaha.tunnel-udpencap": {
                    source: "iana",
                },
                "application/vnd.yaoweme": {
                    source: "iana",
                },
                "application/vnd.yellowriver-custom-menu": {
                    source: "iana",
                    extensions: ["cmp"],
                },
                "application/vnd.youtube.yt": {
                    source: "iana",
                },
                "application/vnd.zul": {
                    source: "iana",
                    extensions: ["zir", "zirz"],
                },
                "application/vnd.zzazz.deck+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["zaz"],
                },
                "application/voicexml+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["vxml"],
                },
                "application/voucher-cms+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/vq-rtcpxr": {
                    source: "iana",
                },
                "application/wasm": {
                    compressible: true,
                    extensions: ["wasm"],
                },
                "application/watcherinfo+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/webpush-options+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/whoispp-query": {
                    source: "iana",
                },
                "application/whoispp-response": {
                    source: "iana",
                },
                "application/widget": {
                    source: "iana",
                    extensions: ["wgt"],
                },
                "application/winhlp": {
                    source: "apache",
                    extensions: ["hlp"],
                },
                "application/wita": {
                    source: "iana",
                },
                "application/wordperfect5.1": {
                    source: "iana",
                },
                "application/wsdl+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["wsdl"],
                },
                "application/wspolicy+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["wspolicy"],
                },
                "application/x-7z-compressed": {
                    source: "apache",
                    compressible: false,
                    extensions: ["7z"],
                },
                "application/x-abiword": {
                    source: "apache",
                    extensions: ["abw"],
                },
                "application/x-ace-compressed": {
                    source: "apache",
                    extensions: ["ace"],
                },
                "application/x-amf": {
                    source: "apache",
                },
                "application/x-apple-diskimage": {
                    source: "apache",
                    extensions: ["dmg"],
                },
                "application/x-arj": {
                    compressible: false,
                    extensions: ["arj"],
                },
                "application/x-authorware-bin": {
                    source: "apache",
                    extensions: ["aab", "x32", "u32", "vox"],
                },
                "application/x-authorware-map": {
                    source: "apache",
                    extensions: ["aam"],
                },
                "application/x-authorware-seg": {
                    source: "apache",
                    extensions: ["aas"],
                },
                "application/x-bcpio": {
                    source: "apache",
                    extensions: ["bcpio"],
                },
                "application/x-bdoc": {
                    compressible: false,
                    extensions: ["bdoc"],
                },
                "application/x-bittorrent": {
                    source: "apache",
                    extensions: ["torrent"],
                },
                "application/x-blorb": {
                    source: "apache",
                    extensions: ["blb", "blorb"],
                },
                "application/x-bzip": {
                    source: "apache",
                    compressible: false,
                    extensions: ["bz"],
                },
                "application/x-bzip2": {
                    source: "apache",
                    compressible: false,
                    extensions: ["bz2", "boz"],
                },
                "application/x-cbr": {
                    source: "apache",
                    extensions: ["cbr", "cba", "cbt", "cbz", "cb7"],
                },
                "application/x-cdlink": {
                    source: "apache",
                    extensions: ["vcd"],
                },
                "application/x-cfs-compressed": {
                    source: "apache",
                    extensions: ["cfs"],
                },
                "application/x-chat": {
                    source: "apache",
                    extensions: ["chat"],
                },
                "application/x-chess-pgn": {
                    source: "apache",
                    extensions: ["pgn"],
                },
                "application/x-chrome-extension": {
                    extensions: ["crx"],
                },
                "application/x-cocoa": {
                    source: "nginx",
                    extensions: ["cco"],
                },
                "application/x-compress": {
                    source: "apache",
                },
                "application/x-conference": {
                    source: "apache",
                    extensions: ["nsc"],
                },
                "application/x-cpio": {
                    source: "apache",
                    extensions: ["cpio"],
                },
                "application/x-csh": {
                    source: "apache",
                    extensions: ["csh"],
                },
                "application/x-deb": {
                    compressible: false,
                },
                "application/x-debian-package": {
                    source: "apache",
                    extensions: ["deb", "udeb"],
                },
                "application/x-dgc-compressed": {
                    source: "apache",
                    extensions: ["dgc"],
                },
                "application/x-director": {
                    source: "apache",
                    extensions: ["dir", "dcr", "dxr", "cst", "cct", "cxt", "w3d", "fgd", "swa"],
                },
                "application/x-doom": {
                    source: "apache",
                    extensions: ["wad"],
                },
                "application/x-dtbncx+xml": {
                    source: "apache",
                    compressible: true,
                    extensions: ["ncx"],
                },
                "application/x-dtbook+xml": {
                    source: "apache",
                    compressible: true,
                    extensions: ["dtb"],
                },
                "application/x-dtbresource+xml": {
                    source: "apache",
                    compressible: true,
                    extensions: ["res"],
                },
                "application/x-dvi": {
                    source: "apache",
                    compressible: false,
                    extensions: ["dvi"],
                },
                "application/x-envoy": {
                    source: "apache",
                    extensions: ["evy"],
                },
                "application/x-eva": {
                    source: "apache",
                    extensions: ["eva"],
                },
                "application/x-font-bdf": {
                    source: "apache",
                    extensions: ["bdf"],
                },
                "application/x-font-dos": {
                    source: "apache",
                },
                "application/x-font-framemaker": {
                    source: "apache",
                },
                "application/x-font-ghostscript": {
                    source: "apache",
                    extensions: ["gsf"],
                },
                "application/x-font-libgrx": {
                    source: "apache",
                },
                "application/x-font-linux-psf": {
                    source: "apache",
                    extensions: ["psf"],
                },
                "application/x-font-pcf": {
                    source: "apache",
                    extensions: ["pcf"],
                },
                "application/x-font-snf": {
                    source: "apache",
                    extensions: ["snf"],
                },
                "application/x-font-speedo": {
                    source: "apache",
                },
                "application/x-font-sunos-news": {
                    source: "apache",
                },
                "application/x-font-type1": {
                    source: "apache",
                    extensions: ["pfa", "pfb", "pfm", "afm"],
                },
                "application/x-font-vfont": {
                    source: "apache",
                },
                "application/x-freearc": {
                    source: "apache",
                    extensions: ["arc"],
                },
                "application/x-futuresplash": {
                    source: "apache",
                    extensions: ["spl"],
                },
                "application/x-gca-compressed": {
                    source: "apache",
                    extensions: ["gca"],
                },
                "application/x-glulx": {
                    source: "apache",
                    extensions: ["ulx"],
                },
                "application/x-gnumeric": {
                    source: "apache",
                    extensions: ["gnumeric"],
                },
                "application/x-gramps-xml": {
                    source: "apache",
                    extensions: ["gramps"],
                },
                "application/x-gtar": {
                    source: "apache",
                    extensions: ["gtar"],
                },
                "application/x-gzip": {
                    source: "apache",
                },
                "application/x-hdf": {
                    source: "apache",
                    extensions: ["hdf"],
                },
                "application/x-httpd-php": {
                    compressible: true,
                    extensions: ["php"],
                },
                "application/x-install-instructions": {
                    source: "apache",
                    extensions: ["install"],
                },
                "application/x-iso9660-image": {
                    source: "apache",
                    extensions: ["iso"],
                },
                "application/x-java-archive-diff": {
                    source: "nginx",
                    extensions: ["jardiff"],
                },
                "application/x-java-jnlp-file": {
                    source: "apache",
                    compressible: false,
                    extensions: ["jnlp"],
                },
                "application/x-javascript": {
                    compressible: true,
                },
                "application/x-keepass2": {
                    extensions: ["kdbx"],
                },
                "application/x-latex": {
                    source: "apache",
                    compressible: false,
                    extensions: ["latex"],
                },
                "application/x-lua-bytecode": {
                    extensions: ["luac"],
                },
                "application/x-lzh-compressed": {
                    source: "apache",
                    extensions: ["lzh", "lha"],
                },
                "application/x-makeself": {
                    source: "nginx",
                    extensions: ["run"],
                },
                "application/x-mie": {
                    source: "apache",
                    extensions: ["mie"],
                },
                "application/x-mobipocket-ebook": {
                    source: "apache",
                    extensions: ["prc", "mobi"],
                },
                "application/x-mpegurl": {
                    compressible: false,
                },
                "application/x-ms-application": {
                    source: "apache",
                    extensions: ["application"],
                },
                "application/x-ms-shortcut": {
                    source: "apache",
                    extensions: ["lnk"],
                },
                "application/x-ms-wmd": {
                    source: "apache",
                    extensions: ["wmd"],
                },
                "application/x-ms-wmz": {
                    source: "apache",
                    extensions: ["wmz"],
                },
                "application/x-ms-xbap": {
                    source: "apache",
                    extensions: ["xbap"],
                },
                "application/x-msaccess": {
                    source: "apache",
                    extensions: ["mdb"],
                },
                "application/x-msbinder": {
                    source: "apache",
                    extensions: ["obd"],
                },
                "application/x-mscardfile": {
                    source: "apache",
                    extensions: ["crd"],
                },
                "application/x-msclip": {
                    source: "apache",
                    extensions: ["clp"],
                },
                "application/x-msdos-program": {
                    extensions: ["exe"],
                },
                "application/x-msdownload": {
                    source: "apache",
                    extensions: ["exe", "dll", "com", "bat", "msi"],
                },
                "application/x-msmediaview": {
                    source: "apache",
                    extensions: ["mvb", "m13", "m14"],
                },
                "application/x-msmetafile": {
                    source: "apache",
                    extensions: ["wmf", "wmz", "emf", "emz"],
                },
                "application/x-msmoney": {
                    source: "apache",
                    extensions: ["mny"],
                },
                "application/x-mspublisher": {
                    source: "apache",
                    extensions: ["pub"],
                },
                "application/x-msschedule": {
                    source: "apache",
                    extensions: ["scd"],
                },
                "application/x-msterminal": {
                    source: "apache",
                    extensions: ["trm"],
                },
                "application/x-mswrite": {
                    source: "apache",
                    extensions: ["wri"],
                },
                "application/x-netcdf": {
                    source: "apache",
                    extensions: ["nc", "cdf"],
                },
                "application/x-ns-proxy-autoconfig": {
                    compressible: true,
                    extensions: ["pac"],
                },
                "application/x-nzb": {
                    source: "apache",
                    extensions: ["nzb"],
                },
                "application/x-perl": {
                    source: "nginx",
                    extensions: ["pl", "pm"],
                },
                "application/x-pilot": {
                    source: "nginx",
                    extensions: ["prc", "pdb"],
                },
                "application/x-pkcs12": {
                    source: "apache",
                    compressible: false,
                    extensions: ["p12", "pfx"],
                },
                "application/x-pkcs7-certificates": {
                    source: "apache",
                    extensions: ["p7b", "spc"],
                },
                "application/x-pkcs7-certreqresp": {
                    source: "apache",
                    extensions: ["p7r"],
                },
                "application/x-pki-message": {
                    source: "iana",
                },
                "application/x-rar-compressed": {
                    source: "apache",
                    compressible: false,
                    extensions: ["rar"],
                },
                "application/x-redhat-package-manager": {
                    source: "nginx",
                    extensions: ["rpm"],
                },
                "application/x-research-info-systems": {
                    source: "apache",
                    extensions: ["ris"],
                },
                "application/x-sea": {
                    source: "nginx",
                    extensions: ["sea"],
                },
                "application/x-sh": {
                    source: "apache",
                    compressible: true,
                    extensions: ["sh"],
                },
                "application/x-shar": {
                    source: "apache",
                    extensions: ["shar"],
                },
                "application/x-shockwave-flash": {
                    source: "apache",
                    compressible: false,
                    extensions: ["swf"],
                },
                "application/x-silverlight-app": {
                    source: "apache",
                    extensions: ["xap"],
                },
                "application/x-sql": {
                    source: "apache",
                    extensions: ["sql"],
                },
                "application/x-stuffit": {
                    source: "apache",
                    compressible: false,
                    extensions: ["sit"],
                },
                "application/x-stuffitx": {
                    source: "apache",
                    extensions: ["sitx"],
                },
                "application/x-subrip": {
                    source: "apache",
                    extensions: ["srt"],
                },
                "application/x-sv4cpio": {
                    source: "apache",
                    extensions: ["sv4cpio"],
                },
                "application/x-sv4crc": {
                    source: "apache",
                    extensions: ["sv4crc"],
                },
                "application/x-t3vm-image": {
                    source: "apache",
                    extensions: ["t3"],
                },
                "application/x-tads": {
                    source: "apache",
                    extensions: ["gam"],
                },
                "application/x-tar": {
                    source: "apache",
                    compressible: true,
                    extensions: ["tar"],
                },
                "application/x-tcl": {
                    source: "apache",
                    extensions: ["tcl", "tk"],
                },
                "application/x-tex": {
                    source: "apache",
                    extensions: ["tex"],
                },
                "application/x-tex-tfm": {
                    source: "apache",
                    extensions: ["tfm"],
                },
                "application/x-texinfo": {
                    source: "apache",
                    extensions: ["texinfo", "texi"],
                },
                "application/x-tgif": {
                    source: "apache",
                    extensions: ["obj"],
                },
                "application/x-ustar": {
                    source: "apache",
                    extensions: ["ustar"],
                },
                "application/x-virtualbox-hdd": {
                    compressible: true,
                    extensions: ["hdd"],
                },
                "application/x-virtualbox-ova": {
                    compressible: true,
                    extensions: ["ova"],
                },
                "application/x-virtualbox-ovf": {
                    compressible: true,
                    extensions: ["ovf"],
                },
                "application/x-virtualbox-vbox": {
                    compressible: true,
                    extensions: ["vbox"],
                },
                "application/x-virtualbox-vbox-extpack": {
                    compressible: false,
                    extensions: ["vbox-extpack"],
                },
                "application/x-virtualbox-vdi": {
                    compressible: true,
                    extensions: ["vdi"],
                },
                "application/x-virtualbox-vhd": {
                    compressible: true,
                    extensions: ["vhd"],
                },
                "application/x-virtualbox-vmdk": {
                    compressible: true,
                    extensions: ["vmdk"],
                },
                "application/x-wais-source": {
                    source: "apache",
                    extensions: ["src"],
                },
                "application/x-web-app-manifest+json": {
                    compressible: true,
                    extensions: ["webapp"],
                },
                "application/x-www-form-urlencoded": {
                    source: "iana",
                    compressible: true,
                },
                "application/x-x509-ca-cert": {
                    source: "iana",
                    extensions: ["der", "crt", "pem"],
                },
                "application/x-x509-ca-ra-cert": {
                    source: "iana",
                },
                "application/x-x509-next-ca-cert": {
                    source: "iana",
                },
                "application/x-xfig": {
                    source: "apache",
                    extensions: ["fig"],
                },
                "application/x-xliff+xml": {
                    source: "apache",
                    compressible: true,
                    extensions: ["xlf"],
                },
                "application/x-xpinstall": {
                    source: "apache",
                    compressible: false,
                    extensions: ["xpi"],
                },
                "application/x-xz": {
                    source: "apache",
                    extensions: ["xz"],
                },
                "application/x-zmachine": {
                    source: "apache",
                    extensions: ["z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8"],
                },
                "application/x400-bp": {
                    source: "iana",
                },
                "application/xacml+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/xaml+xml": {
                    source: "apache",
                    compressible: true,
                    extensions: ["xaml"],
                },
                "application/xcap-att+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["xav"],
                },
                "application/xcap-caps+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["xca"],
                },
                "application/xcap-diff+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["xdf"],
                },
                "application/xcap-el+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["xel"],
                },
                "application/xcap-error+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["xer"],
                },
                "application/xcap-ns+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["xns"],
                },
                "application/xcon-conference-info+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/xcon-conference-info-diff+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/xenc+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["xenc"],
                },
                "application/xhtml+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["xhtml", "xht"],
                },
                "application/xhtml-voice+xml": {
                    source: "apache",
                    compressible: true,
                },
                "application/xliff+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["xlf"],
                },
                "application/xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["xml", "xsl", "xsd", "rng"],
                },
                "application/xml-dtd": {
                    source: "iana",
                    compressible: true,
                    extensions: ["dtd"],
                },
                "application/xml-external-parsed-entity": {
                    source: "iana",
                },
                "application/xml-patch+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/xmpp+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/xop+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["xop"],
                },
                "application/xproc+xml": {
                    source: "apache",
                    compressible: true,
                    extensions: ["xpl"],
                },
                "application/xslt+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["xslt"],
                },
                "application/xspf+xml": {
                    source: "apache",
                    compressible: true,
                    extensions: ["xspf"],
                },
                "application/xv+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["mxml", "xhvml", "xvml", "xvm"],
                },
                "application/yang": {
                    source: "iana",
                    extensions: ["yang"],
                },
                "application/yang-data+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/yang-data+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/yang-patch+json": {
                    source: "iana",
                    compressible: true,
                },
                "application/yang-patch+xml": {
                    source: "iana",
                    compressible: true,
                },
                "application/yin+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["yin"],
                },
                "application/zip": {
                    source: "iana",
                    compressible: false,
                    extensions: ["zip"],
                },
                "application/zlib": {
                    source: "iana",
                },
                "application/zstd": {
                    source: "iana",
                },
                "audio/1d-interleaved-parityfec": {
                    source: "iana",
                },
                "audio/32kadpcm": {
                    source: "iana",
                },
                "audio/3gpp": {
                    source: "iana",
                    compressible: false,
                    extensions: ["3gpp"],
                },
                "audio/3gpp2": {
                    source: "iana",
                },
                "audio/aac": {
                    source: "iana",
                },
                "audio/ac3": {
                    source: "iana",
                },
                "audio/adpcm": {
                    source: "apache",
                    extensions: ["adp"],
                },
                "audio/amr": {
                    source: "iana",
                },
                "audio/amr-wb": {
                    source: "iana",
                },
                "audio/amr-wb+": {
                    source: "iana",
                },
                "audio/aptx": {
                    source: "iana",
                },
                "audio/asc": {
                    source: "iana",
                },
                "audio/atrac-advanced-lossless": {
                    source: "iana",
                },
                "audio/atrac-x": {
                    source: "iana",
                },
                "audio/atrac3": {
                    source: "iana",
                },
                "audio/basic": {
                    source: "iana",
                    compressible: false,
                    extensions: ["au", "snd"],
                },
                "audio/bv16": {
                    source: "iana",
                },
                "audio/bv32": {
                    source: "iana",
                },
                "audio/clearmode": {
                    source: "iana",
                },
                "audio/cn": {
                    source: "iana",
                },
                "audio/dat12": {
                    source: "iana",
                },
                "audio/dls": {
                    source: "iana",
                },
                "audio/dsr-es201108": {
                    source: "iana",
                },
                "audio/dsr-es202050": {
                    source: "iana",
                },
                "audio/dsr-es202211": {
                    source: "iana",
                },
                "audio/dsr-es202212": {
                    source: "iana",
                },
                "audio/dv": {
                    source: "iana",
                },
                "audio/dvi4": {
                    source: "iana",
                },
                "audio/eac3": {
                    source: "iana",
                },
                "audio/encaprtp": {
                    source: "iana",
                },
                "audio/evrc": {
                    source: "iana",
                },
                "audio/evrc-qcp": {
                    source: "iana",
                },
                "audio/evrc0": {
                    source: "iana",
                },
                "audio/evrc1": {
                    source: "iana",
                },
                "audio/evrcb": {
                    source: "iana",
                },
                "audio/evrcb0": {
                    source: "iana",
                },
                "audio/evrcb1": {
                    source: "iana",
                },
                "audio/evrcnw": {
                    source: "iana",
                },
                "audio/evrcnw0": {
                    source: "iana",
                },
                "audio/evrcnw1": {
                    source: "iana",
                },
                "audio/evrcwb": {
                    source: "iana",
                },
                "audio/evrcwb0": {
                    source: "iana",
                },
                "audio/evrcwb1": {
                    source: "iana",
                },
                "audio/evs": {
                    source: "iana",
                },
                "audio/flexfec": {
                    source: "iana",
                },
                "audio/fwdred": {
                    source: "iana",
                },
                "audio/g711-0": {
                    source: "iana",
                },
                "audio/g719": {
                    source: "iana",
                },
                "audio/g722": {
                    source: "iana",
                },
                "audio/g7221": {
                    source: "iana",
                },
                "audio/g723": {
                    source: "iana",
                },
                "audio/g726-16": {
                    source: "iana",
                },
                "audio/g726-24": {
                    source: "iana",
                },
                "audio/g726-32": {
                    source: "iana",
                },
                "audio/g726-40": {
                    source: "iana",
                },
                "audio/g728": {
                    source: "iana",
                },
                "audio/g729": {
                    source: "iana",
                },
                "audio/g7291": {
                    source: "iana",
                },
                "audio/g729d": {
                    source: "iana",
                },
                "audio/g729e": {
                    source: "iana",
                },
                "audio/gsm": {
                    source: "iana",
                },
                "audio/gsm-efr": {
                    source: "iana",
                },
                "audio/gsm-hr-08": {
                    source: "iana",
                },
                "audio/ilbc": {
                    source: "iana",
                },
                "audio/ip-mr_v2.5": {
                    source: "iana",
                },
                "audio/isac": {
                    source: "apache",
                },
                "audio/l16": {
                    source: "iana",
                },
                "audio/l20": {
                    source: "iana",
                },
                "audio/l24": {
                    source: "iana",
                    compressible: false,
                },
                "audio/l8": {
                    source: "iana",
                },
                "audio/lpc": {
                    source: "iana",
                },
                "audio/melp": {
                    source: "iana",
                },
                "audio/melp1200": {
                    source: "iana",
                },
                "audio/melp2400": {
                    source: "iana",
                },
                "audio/melp600": {
                    source: "iana",
                },
                "audio/mhas": {
                    source: "iana",
                },
                "audio/midi": {
                    source: "apache",
                    extensions: ["mid", "midi", "kar", "rmi"],
                },
                "audio/mobile-xmf": {
                    source: "iana",
                    extensions: ["mxmf"],
                },
                "audio/mp3": {
                    compressible: false,
                    extensions: ["mp3"],
                },
                "audio/mp4": {
                    source: "iana",
                    compressible: false,
                    extensions: ["m4a", "mp4a"],
                },
                "audio/mp4a-latm": {
                    source: "iana",
                },
                "audio/mpa": {
                    source: "iana",
                },
                "audio/mpa-robust": {
                    source: "iana",
                },
                "audio/mpeg": {
                    source: "iana",
                    compressible: false,
                    extensions: ["mpga", "mp2", "mp2a", "mp3", "m2a", "m3a"],
                },
                "audio/mpeg4-generic": {
                    source: "iana",
                },
                "audio/musepack": {
                    source: "apache",
                },
                "audio/ogg": {
                    source: "iana",
                    compressible: false,
                    extensions: ["oga", "ogg", "spx"],
                },
                "audio/opus": {
                    source: "iana",
                },
                "audio/parityfec": {
                    source: "iana",
                },
                "audio/pcma": {
                    source: "iana",
                },
                "audio/pcma-wb": {
                    source: "iana",
                },
                "audio/pcmu": {
                    source: "iana",
                },
                "audio/pcmu-wb": {
                    source: "iana",
                },
                "audio/prs.sid": {
                    source: "iana",
                },
                "audio/qcelp": {
                    source: "iana",
                },
                "audio/raptorfec": {
                    source: "iana",
                },
                "audio/red": {
                    source: "iana",
                },
                "audio/rtp-enc-aescm128": {
                    source: "iana",
                },
                "audio/rtp-midi": {
                    source: "iana",
                },
                "audio/rtploopback": {
                    source: "iana",
                },
                "audio/rtx": {
                    source: "iana",
                },
                "audio/s3m": {
                    source: "apache",
                    extensions: ["s3m"],
                },
                "audio/silk": {
                    source: "apache",
                    extensions: ["sil"],
                },
                "audio/smv": {
                    source: "iana",
                },
                "audio/smv-qcp": {
                    source: "iana",
                },
                "audio/smv0": {
                    source: "iana",
                },
                "audio/sp-midi": {
                    source: "iana",
                },
                "audio/speex": {
                    source: "iana",
                },
                "audio/t140c": {
                    source: "iana",
                },
                "audio/t38": {
                    source: "iana",
                },
                "audio/telephone-event": {
                    source: "iana",
                },
                "audio/tetra_acelp": {
                    source: "iana",
                },
                "audio/tetra_acelp_bb": {
                    source: "iana",
                },
                "audio/tone": {
                    source: "iana",
                },
                "audio/uemclip": {
                    source: "iana",
                },
                "audio/ulpfec": {
                    source: "iana",
                },
                "audio/usac": {
                    source: "iana",
                },
                "audio/vdvi": {
                    source: "iana",
                },
                "audio/vmr-wb": {
                    source: "iana",
                },
                "audio/vnd.3gpp.iufp": {
                    source: "iana",
                },
                "audio/vnd.4sb": {
                    source: "iana",
                },
                "audio/vnd.audiokoz": {
                    source: "iana",
                },
                "audio/vnd.celp": {
                    source: "iana",
                },
                "audio/vnd.cisco.nse": {
                    source: "iana",
                },
                "audio/vnd.cmles.radio-events": {
                    source: "iana",
                },
                "audio/vnd.cns.anp1": {
                    source: "iana",
                },
                "audio/vnd.cns.inf1": {
                    source: "iana",
                },
                "audio/vnd.dece.audio": {
                    source: "iana",
                    extensions: ["uva", "uvva"],
                },
                "audio/vnd.digital-winds": {
                    source: "iana",
                    extensions: ["eol"],
                },
                "audio/vnd.dlna.adts": {
                    source: "iana",
                },
                "audio/vnd.dolby.heaac.1": {
                    source: "iana",
                },
                "audio/vnd.dolby.heaac.2": {
                    source: "iana",
                },
                "audio/vnd.dolby.mlp": {
                    source: "iana",
                },
                "audio/vnd.dolby.mps": {
                    source: "iana",
                },
                "audio/vnd.dolby.pl2": {
                    source: "iana",
                },
                "audio/vnd.dolby.pl2x": {
                    source: "iana",
                },
                "audio/vnd.dolby.pl2z": {
                    source: "iana",
                },
                "audio/vnd.dolby.pulse.1": {
                    source: "iana",
                },
                "audio/vnd.dra": {
                    source: "iana",
                    extensions: ["dra"],
                },
                "audio/vnd.dts": {
                    source: "iana",
                    extensions: ["dts"],
                },
                "audio/vnd.dts.hd": {
                    source: "iana",
                    extensions: ["dtshd"],
                },
                "audio/vnd.dts.uhd": {
                    source: "iana",
                },
                "audio/vnd.dvb.file": {
                    source: "iana",
                },
                "audio/vnd.everad.plj": {
                    source: "iana",
                },
                "audio/vnd.hns.audio": {
                    source: "iana",
                },
                "audio/vnd.lucent.voice": {
                    source: "iana",
                    extensions: ["lvp"],
                },
                "audio/vnd.ms-playready.media.pya": {
                    source: "iana",
                    extensions: ["pya"],
                },
                "audio/vnd.nokia.mobile-xmf": {
                    source: "iana",
                },
                "audio/vnd.nortel.vbk": {
                    source: "iana",
                },
                "audio/vnd.nuera.ecelp4800": {
                    source: "iana",
                    extensions: ["ecelp4800"],
                },
                "audio/vnd.nuera.ecelp7470": {
                    source: "iana",
                    extensions: ["ecelp7470"],
                },
                "audio/vnd.nuera.ecelp9600": {
                    source: "iana",
                    extensions: ["ecelp9600"],
                },
                "audio/vnd.octel.sbc": {
                    source: "iana",
                },
                "audio/vnd.presonus.multitrack": {
                    source: "iana",
                },
                "audio/vnd.qcelp": {
                    source: "iana",
                },
                "audio/vnd.rhetorex.32kadpcm": {
                    source: "iana",
                },
                "audio/vnd.rip": {
                    source: "iana",
                    extensions: ["rip"],
                },
                "audio/vnd.rn-realaudio": {
                    compressible: false,
                },
                "audio/vnd.sealedmedia.softseal.mpeg": {
                    source: "iana",
                },
                "audio/vnd.vmx.cvsd": {
                    source: "iana",
                },
                "audio/vnd.wave": {
                    compressible: false,
                },
                "audio/vorbis": {
                    source: "iana",
                    compressible: false,
                },
                "audio/vorbis-config": {
                    source: "iana",
                },
                "audio/wav": {
                    compressible: false,
                    extensions: ["wav"],
                },
                "audio/wave": {
                    compressible: false,
                    extensions: ["wav"],
                },
                "audio/webm": {
                    source: "apache",
                    compressible: false,
                    extensions: ["weba"],
                },
                "audio/x-aac": {
                    source: "apache",
                    compressible: false,
                    extensions: ["aac"],
                },
                "audio/x-aiff": {
                    source: "apache",
                    extensions: ["aif", "aiff", "aifc"],
                },
                "audio/x-caf": {
                    source: "apache",
                    compressible: false,
                    extensions: ["caf"],
                },
                "audio/x-flac": {
                    source: "apache",
                    extensions: ["flac"],
                },
                "audio/x-m4a": {
                    source: "nginx",
                    extensions: ["m4a"],
                },
                "audio/x-matroska": {
                    source: "apache",
                    extensions: ["mka"],
                },
                "audio/x-mpegurl": {
                    source: "apache",
                    extensions: ["m3u"],
                },
                "audio/x-ms-wax": {
                    source: "apache",
                    extensions: ["wax"],
                },
                "audio/x-ms-wma": {
                    source: "apache",
                    extensions: ["wma"],
                },
                "audio/x-pn-realaudio": {
                    source: "apache",
                    extensions: ["ram", "ra"],
                },
                "audio/x-pn-realaudio-plugin": {
                    source: "apache",
                    extensions: ["rmp"],
                },
                "audio/x-realaudio": {
                    source: "nginx",
                    extensions: ["ra"],
                },
                "audio/x-tta": {
                    source: "apache",
                },
                "audio/x-wav": {
                    source: "apache",
                    extensions: ["wav"],
                },
                "audio/xm": {
                    source: "apache",
                    extensions: ["xm"],
                },
                "chemical/x-cdx": {
                    source: "apache",
                    extensions: ["cdx"],
                },
                "chemical/x-cif": {
                    source: "apache",
                    extensions: ["cif"],
                },
                "chemical/x-cmdf": {
                    source: "apache",
                    extensions: ["cmdf"],
                },
                "chemical/x-cml": {
                    source: "apache",
                    extensions: ["cml"],
                },
                "chemical/x-csml": {
                    source: "apache",
                    extensions: ["csml"],
                },
                "chemical/x-pdb": {
                    source: "apache",
                },
                "chemical/x-xyz": {
                    source: "apache",
                    extensions: ["xyz"],
                },
                "font/collection": {
                    source: "iana",
                    extensions: ["ttc"],
                },
                "font/otf": {
                    source: "iana",
                    compressible: true,
                    extensions: ["otf"],
                },
                "font/sfnt": {
                    source: "iana",
                },
                "font/ttf": {
                    source: "iana",
                    compressible: true,
                    extensions: ["ttf"],
                },
                "font/woff": {
                    source: "iana",
                    extensions: ["woff"],
                },
                "font/woff2": {
                    source: "iana",
                    extensions: ["woff2"],
                },
                "image/aces": {
                    source: "iana",
                    extensions: ["exr"],
                },
                "image/apng": {
                    compressible: false,
                    extensions: ["apng"],
                },
                "image/avci": {
                    source: "iana",
                },
                "image/avcs": {
                    source: "iana",
                },
                "image/bmp": {
                    source: "iana",
                    compressible: true,
                    extensions: ["bmp"],
                },
                "image/cgm": {
                    source: "iana",
                    extensions: ["cgm"],
                },
                "image/dicom-rle": {
                    source: "iana",
                    extensions: ["drle"],
                },
                "image/emf": {
                    source: "iana",
                    extensions: ["emf"],
                },
                "image/fits": {
                    source: "iana",
                    extensions: ["fits"],
                },
                "image/g3fax": {
                    source: "iana",
                    extensions: ["g3"],
                },
                "image/gif": {
                    source: "iana",
                    compressible: false,
                    extensions: ["gif"],
                },
                "image/heic": {
                    source: "iana",
                    extensions: ["heic"],
                },
                "image/heic-sequence": {
                    source: "iana",
                    extensions: ["heics"],
                },
                "image/heif": {
                    source: "iana",
                    extensions: ["heif"],
                },
                "image/heif-sequence": {
                    source: "iana",
                    extensions: ["heifs"],
                },
                "image/hej2k": {
                    source: "iana",
                    extensions: ["hej2"],
                },
                "image/hsj2": {
                    source: "iana",
                    extensions: ["hsj2"],
                },
                "image/ief": {
                    source: "iana",
                    extensions: ["ief"],
                },
                "image/jls": {
                    source: "iana",
                    extensions: ["jls"],
                },
                "image/jp2": {
                    source: "iana",
                    compressible: false,
                    extensions: ["jp2", "jpg2"],
                },
                "image/jpeg": {
                    source: "iana",
                    compressible: false,
                    extensions: ["jpeg", "jpg", "jpe"],
                },
                "image/jph": {
                    source: "iana",
                    extensions: ["jph"],
                },
                "image/jphc": {
                    source: "iana",
                    extensions: ["jhc"],
                },
                "image/jpm": {
                    source: "iana",
                    compressible: false,
                    extensions: ["jpm"],
                },
                "image/jpx": {
                    source: "iana",
                    compressible: false,
                    extensions: ["jpx", "jpf"],
                },
                "image/jxr": {
                    source: "iana",
                    extensions: ["jxr"],
                },
                "image/jxra": {
                    source: "iana",
                    extensions: ["jxra"],
                },
                "image/jxrs": {
                    source: "iana",
                    extensions: ["jxrs"],
                },
                "image/jxs": {
                    source: "iana",
                    extensions: ["jxs"],
                },
                "image/jxsc": {
                    source: "iana",
                    extensions: ["jxsc"],
                },
                "image/jxsi": {
                    source: "iana",
                    extensions: ["jxsi"],
                },
                "image/jxss": {
                    source: "iana",
                    extensions: ["jxss"],
                },
                "image/ktx": {
                    source: "iana",
                    extensions: ["ktx"],
                },
                "image/naplps": {
                    source: "iana",
                },
                "image/pjpeg": {
                    compressible: false,
                },
                "image/png": {
                    source: "iana",
                    compressible: false,
                    extensions: ["png"],
                },
                "image/prs.btif": {
                    source: "iana",
                    extensions: ["btif"],
                },
                "image/prs.pti": {
                    source: "iana",
                    extensions: ["pti"],
                },
                "image/pwg-raster": {
                    source: "iana",
                },
                "image/sgi": {
                    source: "apache",
                    extensions: ["sgi"],
                },
                "image/svg+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["svg", "svgz"],
                },
                "image/t38": {
                    source: "iana",
                    extensions: ["t38"],
                },
                "image/tiff": {
                    source: "iana",
                    compressible: false,
                    extensions: ["tif", "tiff"],
                },
                "image/tiff-fx": {
                    source: "iana",
                    extensions: ["tfx"],
                },
                "image/vnd.adobe.photoshop": {
                    source: "iana",
                    compressible: true,
                    extensions: ["psd"],
                },
                "image/vnd.airzip.accelerator.azv": {
                    source: "iana",
                    extensions: ["azv"],
                },
                "image/vnd.cns.inf2": {
                    source: "iana",
                },
                "image/vnd.dece.graphic": {
                    source: "iana",
                    extensions: ["uvi", "uvvi", "uvg", "uvvg"],
                },
                "image/vnd.djvu": {
                    source: "iana",
                    extensions: ["djvu", "djv"],
                },
                "image/vnd.dvb.subtitle": {
                    source: "iana",
                    extensions: ["sub"],
                },
                "image/vnd.dwg": {
                    source: "iana",
                    extensions: ["dwg"],
                },
                "image/vnd.dxf": {
                    source: "iana",
                    extensions: ["dxf"],
                },
                "image/vnd.fastbidsheet": {
                    source: "iana",
                    extensions: ["fbs"],
                },
                "image/vnd.fpx": {
                    source: "iana",
                    extensions: ["fpx"],
                },
                "image/vnd.fst": {
                    source: "iana",
                    extensions: ["fst"],
                },
                "image/vnd.fujixerox.edmics-mmr": {
                    source: "iana",
                    extensions: ["mmr"],
                },
                "image/vnd.fujixerox.edmics-rlc": {
                    source: "iana",
                    extensions: ["rlc"],
                },
                "image/vnd.globalgraphics.pgb": {
                    source: "iana",
                },
                "image/vnd.microsoft.icon": {
                    source: "iana",
                    extensions: ["ico"],
                },
                "image/vnd.mix": {
                    source: "iana",
                },
                "image/vnd.mozilla.apng": {
                    source: "iana",
                },
                "image/vnd.ms-dds": {
                    extensions: ["dds"],
                },
                "image/vnd.ms-modi": {
                    source: "iana",
                    extensions: ["mdi"],
                },
                "image/vnd.ms-photo": {
                    source: "apache",
                    extensions: ["wdp"],
                },
                "image/vnd.net-fpx": {
                    source: "iana",
                    extensions: ["npx"],
                },
                "image/vnd.radiance": {
                    source: "iana",
                },
                "image/vnd.sealed.png": {
                    source: "iana",
                },
                "image/vnd.sealedmedia.softseal.gif": {
                    source: "iana",
                },
                "image/vnd.sealedmedia.softseal.jpg": {
                    source: "iana",
                },
                "image/vnd.svf": {
                    source: "iana",
                },
                "image/vnd.tencent.tap": {
                    source: "iana",
                    extensions: ["tap"],
                },
                "image/vnd.valve.source.texture": {
                    source: "iana",
                    extensions: ["vtf"],
                },
                "image/vnd.wap.wbmp": {
                    source: "iana",
                    extensions: ["wbmp"],
                },
                "image/vnd.xiff": {
                    source: "iana",
                    extensions: ["xif"],
                },
                "image/vnd.zbrush.pcx": {
                    source: "iana",
                    extensions: ["pcx"],
                },
                "image/webp": {
                    source: "apache",
                    extensions: ["webp"],
                },
                "image/wmf": {
                    source: "iana",
                    extensions: ["wmf"],
                },
                "image/x-3ds": {
                    source: "apache",
                    extensions: ["3ds"],
                },
                "image/x-cmu-raster": {
                    source: "apache",
                    extensions: ["ras"],
                },
                "image/x-cmx": {
                    source: "apache",
                    extensions: ["cmx"],
                },
                "image/x-freehand": {
                    source: "apache",
                    extensions: ["fh", "fhc", "fh4", "fh5", "fh7"],
                },
                "image/x-icon": {
                    source: "apache",
                    compressible: true,
                    extensions: ["ico"],
                },
                "image/x-jng": {
                    source: "nginx",
                    extensions: ["jng"],
                },
                "image/x-mrsid-image": {
                    source: "apache",
                    extensions: ["sid"],
                },
                "image/x-ms-bmp": {
                    source: "nginx",
                    compressible: true,
                    extensions: ["bmp"],
                },
                "image/x-pcx": {
                    source: "apache",
                    extensions: ["pcx"],
                },
                "image/x-pict": {
                    source: "apache",
                    extensions: ["pic", "pct"],
                },
                "image/x-portable-anymap": {
                    source: "apache",
                    extensions: ["pnm"],
                },
                "image/x-portable-bitmap": {
                    source: "apache",
                    extensions: ["pbm"],
                },
                "image/x-portable-graymap": {
                    source: "apache",
                    extensions: ["pgm"],
                },
                "image/x-portable-pixmap": {
                    source: "apache",
                    extensions: ["ppm"],
                },
                "image/x-rgb": {
                    source: "apache",
                    extensions: ["rgb"],
                },
                "image/x-tga": {
                    source: "apache",
                    extensions: ["tga"],
                },
                "image/x-xbitmap": {
                    source: "apache",
                    extensions: ["xbm"],
                },
                "image/x-xcf": {
                    compressible: false,
                },
                "image/x-xpixmap": {
                    source: "apache",
                    extensions: ["xpm"],
                },
                "image/x-xwindowdump": {
                    source: "apache",
                    extensions: ["xwd"],
                },
                "message/cpim": {
                    source: "iana",
                },
                "message/delivery-status": {
                    source: "iana",
                },
                "message/disposition-notification": {
                    source: "iana",
                    extensions: ["disposition-notification"],
                },
                "message/external-body": {
                    source: "iana",
                },
                "message/feedback-report": {
                    source: "iana",
                },
                "message/global": {
                    source: "iana",
                    extensions: ["u8msg"],
                },
                "message/global-delivery-status": {
                    source: "iana",
                    extensions: ["u8dsn"],
                },
                "message/global-disposition-notification": {
                    source: "iana",
                    extensions: ["u8mdn"],
                },
                "message/global-headers": {
                    source: "iana",
                    extensions: ["u8hdr"],
                },
                "message/http": {
                    source: "iana",
                    compressible: false,
                },
                "message/imdn+xml": {
                    source: "iana",
                    compressible: true,
                },
                "message/news": {
                    source: "iana",
                },
                "message/partial": {
                    source: "iana",
                    compressible: false,
                },
                "message/rfc822": {
                    source: "iana",
                    compressible: true,
                    extensions: ["eml", "mime"],
                },
                "message/s-http": {
                    source: "iana",
                },
                "message/sip": {
                    source: "iana",
                },
                "message/sipfrag": {
                    source: "iana",
                },
                "message/tracking-status": {
                    source: "iana",
                },
                "message/vnd.si.simp": {
                    source: "iana",
                },
                "message/vnd.wfa.wsc": {
                    source: "iana",
                    extensions: ["wsc"],
                },
                "model/3mf": {
                    source: "iana",
                    extensions: ["3mf"],
                },
                "model/gltf+json": {
                    source: "iana",
                    compressible: true,
                    extensions: ["gltf"],
                },
                "model/gltf-binary": {
                    source: "iana",
                    compressible: true,
                    extensions: ["glb"],
                },
                "model/iges": {
                    source: "iana",
                    compressible: false,
                    extensions: ["igs", "iges"],
                },
                "model/mesh": {
                    source: "iana",
                    compressible: false,
                    extensions: ["msh", "mesh", "silo"],
                },
                "model/mtl": {
                    source: "iana",
                    extensions: ["mtl"],
                },
                "model/obj": {
                    source: "iana",
                    extensions: ["obj"],
                },
                "model/stl": {
                    source: "iana",
                    extensions: ["stl"],
                },
                "model/vnd.collada+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["dae"],
                },
                "model/vnd.dwf": {
                    source: "iana",
                    extensions: ["dwf"],
                },
                "model/vnd.flatland.3dml": {
                    source: "iana",
                },
                "model/vnd.gdl": {
                    source: "iana",
                    extensions: ["gdl"],
                },
                "model/vnd.gs-gdl": {
                    source: "apache",
                },
                "model/vnd.gs.gdl": {
                    source: "iana",
                },
                "model/vnd.gtw": {
                    source: "iana",
                    extensions: ["gtw"],
                },
                "model/vnd.moml+xml": {
                    source: "iana",
                    compressible: true,
                },
                "model/vnd.mts": {
                    source: "iana",
                    extensions: ["mts"],
                },
                "model/vnd.opengex": {
                    source: "iana",
                    extensions: ["ogex"],
                },
                "model/vnd.parasolid.transmit.binary": {
                    source: "iana",
                    extensions: ["x_b"],
                },
                "model/vnd.parasolid.transmit.text": {
                    source: "iana",
                    extensions: ["x_t"],
                },
                "model/vnd.rosette.annotated-data-model": {
                    source: "iana",
                },
                "model/vnd.usdz+zip": {
                    source: "iana",
                    compressible: false,
                    extensions: ["usdz"],
                },
                "model/vnd.valve.source.compiled-map": {
                    source: "iana",
                    extensions: ["bsp"],
                },
                "model/vnd.vtu": {
                    source: "iana",
                    extensions: ["vtu"],
                },
                "model/vrml": {
                    source: "iana",
                    compressible: false,
                    extensions: ["wrl", "vrml"],
                },
                "model/x3d+binary": {
                    source: "apache",
                    compressible: false,
                    extensions: ["x3db", "x3dbz"],
                },
                "model/x3d+fastinfoset": {
                    source: "iana",
                    extensions: ["x3db"],
                },
                "model/x3d+vrml": {
                    source: "apache",
                    compressible: false,
                    extensions: ["x3dv", "x3dvz"],
                },
                "model/x3d+xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["x3d", "x3dz"],
                },
                "model/x3d-vrml": {
                    source: "iana",
                    extensions: ["x3dv"],
                },
                "multipart/alternative": {
                    source: "iana",
                    compressible: false,
                },
                "multipart/appledouble": {
                    source: "iana",
                },
                "multipart/byteranges": {
                    source: "iana",
                },
                "multipart/digest": {
                    source: "iana",
                },
                "multipart/encrypted": {
                    source: "iana",
                    compressible: false,
                },
                "multipart/form-data": {
                    source: "iana",
                    compressible: false,
                },
                "multipart/header-set": {
                    source: "iana",
                },
                "multipart/mixed": {
                    source: "iana",
                },
                "multipart/multilingual": {
                    source: "iana",
                },
                "multipart/parallel": {
                    source: "iana",
                },
                "multipart/related": {
                    source: "iana",
                    compressible: false,
                },
                "multipart/report": {
                    source: "iana",
                },
                "multipart/signed": {
                    source: "iana",
                    compressible: false,
                },
                "multipart/vnd.bint.med-plus": {
                    source: "iana",
                },
                "multipart/voice-message": {
                    source: "iana",
                },
                "multipart/x-mixed-replace": {
                    source: "iana",
                },
                "text/1d-interleaved-parityfec": {
                    source: "iana",
                },
                "text/cache-manifest": {
                    source: "iana",
                    compressible: true,
                    extensions: ["appcache", "manifest"],
                },
                "text/calendar": {
                    source: "iana",
                    extensions: ["ics", "ifb"],
                },
                "text/calender": {
                    compressible: true,
                },
                "text/cmd": {
                    compressible: true,
                },
                "text/coffeescript": {
                    extensions: ["coffee", "litcoffee"],
                },
                "text/css": {
                    source: "iana",
                    charset: "UTF-8",
                    compressible: true,
                    extensions: ["css"],
                },
                "text/csv": {
                    source: "iana",
                    compressible: true,
                    extensions: ["csv"],
                },
                "text/csv-schema": {
                    source: "iana",
                },
                "text/directory": {
                    source: "iana",
                },
                "text/dns": {
                    source: "iana",
                },
                "text/ecmascript": {
                    source: "iana",
                },
                "text/encaprtp": {
                    source: "iana",
                },
                "text/enriched": {
                    source: "iana",
                },
                "text/flexfec": {
                    source: "iana",
                },
                "text/fwdred": {
                    source: "iana",
                },
                "text/grammar-ref-list": {
                    source: "iana",
                },
                "text/html": {
                    source: "iana",
                    compressible: true,
                    extensions: ["html", "htm", "shtml"],
                },
                "text/jade": {
                    extensions: ["jade"],
                },
                "text/javascript": {
                    source: "iana",
                    compressible: true,
                },
                "text/jcr-cnd": {
                    source: "iana",
                },
                "text/jsx": {
                    compressible: true,
                    extensions: ["jsx"],
                },
                "text/less": {
                    compressible: true,
                    extensions: ["less"],
                },
                "text/markdown": {
                    source: "iana",
                    compressible: true,
                    extensions: ["markdown", "md"],
                },
                "text/mathml": {
                    source: "nginx",
                    extensions: ["mml"],
                },
                "text/mdx": {
                    compressible: true,
                    extensions: ["mdx"],
                },
                "text/mizar": {
                    source: "iana",
                },
                "text/n3": {
                    source: "iana",
                    charset: "UTF-8",
                    compressible: true,
                    extensions: ["n3"],
                },
                "text/parameters": {
                    source: "iana",
                    charset: "UTF-8",
                },
                "text/parityfec": {
                    source: "iana",
                },
                "text/plain": {
                    source: "iana",
                    compressible: true,
                    extensions: ["txt", "text", "conf", "def", "list", "log", "in", "ini"],
                },
                "text/provenance-notation": {
                    source: "iana",
                    charset: "UTF-8",
                },
                "text/prs.fallenstein.rst": {
                    source: "iana",
                },
                "text/prs.lines.tag": {
                    source: "iana",
                    extensions: ["dsc"],
                },
                "text/prs.prop.logic": {
                    source: "iana",
                },
                "text/raptorfec": {
                    source: "iana",
                },
                "text/red": {
                    source: "iana",
                },
                "text/rfc822-headers": {
                    source: "iana",
                },
                "text/richtext": {
                    source: "iana",
                    compressible: true,
                    extensions: ["rtx"],
                },
                "text/rtf": {
                    source: "iana",
                    compressible: true,
                    extensions: ["rtf"],
                },
                "text/rtp-enc-aescm128": {
                    source: "iana",
                },
                "text/rtploopback": {
                    source: "iana",
                },
                "text/rtx": {
                    source: "iana",
                },
                "text/sgml": {
                    source: "iana",
                    extensions: ["sgml", "sgm"],
                },
                "text/shex": {
                    extensions: ["shex"],
                },
                "text/slim": {
                    extensions: ["slim", "slm"],
                },
                "text/strings": {
                    source: "iana",
                },
                "text/stylus": {
                    extensions: ["stylus", "styl"],
                },
                "text/t140": {
                    source: "iana",
                },
                "text/tab-separated-values": {
                    source: "iana",
                    compressible: true,
                    extensions: ["tsv"],
                },
                "text/troff": {
                    source: "iana",
                    extensions: ["t", "tr", "roff", "man", "me", "ms"],
                },
                "text/turtle": {
                    source: "iana",
                    charset: "UTF-8",
                    extensions: ["ttl"],
                },
                "text/ulpfec": {
                    source: "iana",
                },
                "text/uri-list": {
                    source: "iana",
                    compressible: true,
                    extensions: ["uri", "uris", "urls"],
                },
                "text/vcard": {
                    source: "iana",
                    compressible: true,
                    extensions: ["vcard"],
                },
                "text/vnd.a": {
                    source: "iana",
                },
                "text/vnd.abc": {
                    source: "iana",
                },
                "text/vnd.ascii-art": {
                    source: "iana",
                },
                "text/vnd.curl": {
                    source: "iana",
                    extensions: ["curl"],
                },
                "text/vnd.curl.dcurl": {
                    source: "apache",
                    extensions: ["dcurl"],
                },
                "text/vnd.curl.mcurl": {
                    source: "apache",
                    extensions: ["mcurl"],
                },
                "text/vnd.curl.scurl": {
                    source: "apache",
                    extensions: ["scurl"],
                },
                "text/vnd.debian.copyright": {
                    source: "iana",
                    charset: "UTF-8",
                },
                "text/vnd.dmclientscript": {
                    source: "iana",
                },
                "text/vnd.dvb.subtitle": {
                    source: "iana",
                    extensions: ["sub"],
                },
                "text/vnd.esmertec.theme-descriptor": {
                    source: "iana",
                    charset: "UTF-8",
                },
                "text/vnd.ficlab.flt": {
                    source: "iana",
                },
                "text/vnd.fly": {
                    source: "iana",
                    extensions: ["fly"],
                },
                "text/vnd.fmi.flexstor": {
                    source: "iana",
                    extensions: ["flx"],
                },
                "text/vnd.gml": {
                    source: "iana",
                },
                "text/vnd.graphviz": {
                    source: "iana",
                    extensions: ["gv"],
                },
                "text/vnd.hgl": {
                    source: "iana",
                },
                "text/vnd.in3d.3dml": {
                    source: "iana",
                    extensions: ["3dml"],
                },
                "text/vnd.in3d.spot": {
                    source: "iana",
                    extensions: ["spot"],
                },
                "text/vnd.iptc.newsml": {
                    source: "iana",
                },
                "text/vnd.iptc.nitf": {
                    source: "iana",
                },
                "text/vnd.latex-z": {
                    source: "iana",
                },
                "text/vnd.motorola.reflex": {
                    source: "iana",
                },
                "text/vnd.ms-mediapackage": {
                    source: "iana",
                },
                "text/vnd.net2phone.commcenter.command": {
                    source: "iana",
                },
                "text/vnd.radisys.msml-basic-layout": {
                    source: "iana",
                },
                "text/vnd.senx.warpscript": {
                    source: "iana",
                },
                "text/vnd.si.uricatalogue": {
                    source: "iana",
                },
                "text/vnd.sosi": {
                    source: "iana",
                },
                "text/vnd.sun.j2me.app-descriptor": {
                    source: "iana",
                    charset: "UTF-8",
                    extensions: ["jad"],
                },
                "text/vnd.trolltech.linguist": {
                    source: "iana",
                    charset: "UTF-8",
                },
                "text/vnd.wap.si": {
                    source: "iana",
                },
                "text/vnd.wap.sl": {
                    source: "iana",
                },
                "text/vnd.wap.wml": {
                    source: "iana",
                    extensions: ["wml"],
                },
                "text/vnd.wap.wmlscript": {
                    source: "iana",
                    extensions: ["wmls"],
                },
                "text/vtt": {
                    source: "iana",
                    charset: "UTF-8",
                    compressible: true,
                    extensions: ["vtt"],
                },
                "text/x-asm": {
                    source: "apache",
                    extensions: ["s", "asm"],
                },
                "text/x-c": {
                    source: "apache",
                    extensions: ["c", "cc", "cxx", "cpp", "h", "hh", "dic"],
                },
                "text/x-component": {
                    source: "nginx",
                    extensions: ["htc"],
                },
                "text/x-fortran": {
                    source: "apache",
                    extensions: ["f", "for", "f77", "f90"],
                },
                "text/x-gwt-rpc": {
                    compressible: true,
                },
                "text/x-handlebars-template": {
                    extensions: ["hbs"],
                },
                "text/x-java-source": {
                    source: "apache",
                    extensions: ["java"],
                },
                "text/x-jquery-tmpl": {
                    compressible: true,
                },
                "text/x-lua": {
                    extensions: ["lua"],
                },
                "text/x-markdown": {
                    compressible: true,
                    extensions: ["mkd"],
                },
                "text/x-nfo": {
                    source: "apache",
                    extensions: ["nfo"],
                },
                "text/x-opml": {
                    source: "apache",
                    extensions: ["opml"],
                },
                "text/x-org": {
                    compressible: true,
                    extensions: ["org"],
                },
                "text/x-pascal": {
                    source: "apache",
                    extensions: ["p", "pas"],
                },
                "text/x-processing": {
                    compressible: true,
                    extensions: ["pde"],
                },
                "text/x-sass": {
                    extensions: ["sass"],
                },
                "text/x-scss": {
                    extensions: ["scss"],
                },
                "text/x-setext": {
                    source: "apache",
                    extensions: ["etx"],
                },
                "text/x-sfv": {
                    source: "apache",
                    extensions: ["sfv"],
                },
                "text/x-suse-ymp": {
                    compressible: true,
                    extensions: ["ymp"],
                },
                "text/x-uuencode": {
                    source: "apache",
                    extensions: ["uu"],
                },
                "text/x-vcalendar": {
                    source: "apache",
                    extensions: ["vcs"],
                },
                "text/x-vcard": {
                    source: "apache",
                    extensions: ["vcf"],
                },
                "text/xml": {
                    source: "iana",
                    compressible: true,
                    extensions: ["xml"],
                },
                "text/xml-external-parsed-entity": {
                    source: "iana",
                },
                "text/yaml": {
                    extensions: ["yaml", "yml"],
                },
                "video/1d-interleaved-parityfec": {
                    source: "iana",
                },
                "video/3gpp": {
                    source: "iana",
                    extensions: ["3gp", "3gpp"],
                },
                "video/3gpp-tt": {
                    source: "iana",
                },
                "video/3gpp2": {
                    source: "iana",
                    extensions: ["3g2"],
                },
                "video/bmpeg": {
                    source: "iana",
                },
                "video/bt656": {
                    source: "iana",
                },
                "video/celb": {
                    source: "iana",
                },
                "video/dv": {
                    source: "iana",
                },
                "video/encaprtp": {
                    source: "iana",
                },
                "video/flexfec": {
                    source: "iana",
                },
                "video/h261": {
                    source: "iana",
                    extensions: ["h261"],
                },
                "video/h263": {
                    source: "iana",
                    extensions: ["h263"],
                },
                "video/h263-1998": {
                    source: "iana",
                },
                "video/h263-2000": {
                    source: "iana",
                },
                "video/h264": {
                    source: "iana",
                    extensions: ["h264"],
                },
                "video/h264-rcdo": {
                    source: "iana",
                },
                "video/h264-svc": {
                    source: "iana",
                },
                "video/h265": {
                    source: "iana",
                },
                "video/iso.segment": {
                    source: "iana",
                },
                "video/jpeg": {
                    source: "iana",
                    extensions: ["jpgv"],
                },
                "video/jpeg2000": {
                    source: "iana",
                },
                "video/jpm": {
                    source: "apache",
                    extensions: ["jpm", "jpgm"],
                },
                "video/mj2": {
                    source: "iana",
                    extensions: ["mj2", "mjp2"],
                },
                "video/mp1s": {
                    source: "iana",
                },
                "video/mp2p": {
                    source: "iana",
                },
                "video/mp2t": {
                    source: "iana",
                    extensions: ["ts"],
                },
                "video/mp4": {
                    source: "iana",
                    compressible: false,
                    extensions: ["mp4", "mp4v", "mpg4"],
                },
                "video/mp4v-es": {
                    source: "iana",
                },
                "video/mpeg": {
                    source: "iana",
                    compressible: false,
                    extensions: ["mpeg", "mpg", "mpe", "m1v", "m2v"],
                },
                "video/mpeg4-generic": {
                    source: "iana",
                },
                "video/mpv": {
                    source: "iana",
                },
                "video/nv": {
                    source: "iana",
                },
                "video/ogg": {
                    source: "iana",
                    compressible: false,
                    extensions: ["ogv"],
                },
                "video/parityfec": {
                    source: "iana",
                },
                "video/pointer": {
                    source: "iana",
                },
                "video/quicktime": {
                    source: "iana",
                    compressible: false,
                    extensions: ["qt", "mov"],
                },
                "video/raptorfec": {
                    source: "iana",
                },
                "video/raw": {
                    source: "iana",
                },
                "video/rtp-enc-aescm128": {
                    source: "iana",
                },
                "video/rtploopback": {
                    source: "iana",
                },
                "video/rtx": {
                    source: "iana",
                },
                "video/smpte291": {
                    source: "iana",
                },
                "video/smpte292m": {
                    source: "iana",
                },
                "video/ulpfec": {
                    source: "iana",
                },
                "video/vc1": {
                    source: "iana",
                },
                "video/vc2": {
                    source: "iana",
                },
                "video/vnd.cctv": {
                    source: "iana",
                },
                "video/vnd.dece.hd": {
                    source: "iana",
                    extensions: ["uvh", "uvvh"],
                },
                "video/vnd.dece.mobile": {
                    source: "iana",
                    extensions: ["uvm", "uvvm"],
                },
                "video/vnd.dece.mp4": {
                    source: "iana",
                },
                "video/vnd.dece.pd": {
                    source: "iana",
                    extensions: ["uvp", "uvvp"],
                },
                "video/vnd.dece.sd": {
                    source: "iana",
                    extensions: ["uvs", "uvvs"],
                },
                "video/vnd.dece.video": {
                    source: "iana",
                    extensions: ["uvv", "uvvv"],
                },
                "video/vnd.directv.mpeg": {
                    source: "iana",
                },
                "video/vnd.directv.mpeg-tts": {
                    source: "iana",
                },
                "video/vnd.dlna.mpeg-tts": {
                    source: "iana",
                },
                "video/vnd.dvb.file": {
                    source: "iana",
                    extensions: ["dvb"],
                },
                "video/vnd.fvt": {
                    source: "iana",
                    extensions: ["fvt"],
                },
                "video/vnd.hns.video": {
                    source: "iana",
                },
                "video/vnd.iptvforum.1dparityfec-1010": {
                    source: "iana",
                },
                "video/vnd.iptvforum.1dparityfec-2005": {
                    source: "iana",
                },
                "video/vnd.iptvforum.2dparityfec-1010": {
                    source: "iana",
                },
                "video/vnd.iptvforum.2dparityfec-2005": {
                    source: "iana",
                },
                "video/vnd.iptvforum.ttsavc": {
                    source: "iana",
                },
                "video/vnd.iptvforum.ttsmpeg2": {
                    source: "iana",
                },
                "video/vnd.motorola.video": {
                    source: "iana",
                },
                "video/vnd.motorola.videop": {
                    source: "iana",
                },
                "video/vnd.mpegurl": {
                    source: "iana",
                    extensions: ["mxu", "m4u"],
                },
                "video/vnd.ms-playready.media.pyv": {
                    source: "iana",
                    extensions: ["pyv"],
                },
                "video/vnd.nokia.interleaved-multimedia": {
                    source: "iana",
                },
                "video/vnd.nokia.mp4vr": {
                    source: "iana",
                },
                "video/vnd.nokia.videovoip": {
                    source: "iana",
                },
                "video/vnd.objectvideo": {
                    source: "iana",
                },
                "video/vnd.radgamettools.bink": {
                    source: "iana",
                },
                "video/vnd.radgamettools.smacker": {
                    source: "iana",
                },
                "video/vnd.sealed.mpeg1": {
                    source: "iana",
                },
                "video/vnd.sealed.mpeg4": {
                    source: "iana",
                },
                "video/vnd.sealed.swf": {
                    source: "iana",
                },
                "video/vnd.sealedmedia.softseal.mov": {
                    source: "iana",
                },
                "video/vnd.uvvu.mp4": {
                    source: "iana",
                    extensions: ["uvu", "uvvu"],
                },
                "video/vnd.vivo": {
                    source: "iana",
                    extensions: ["viv"],
                },
                "video/vnd.youtube.yt": {
                    source: "iana",
                },
                "video/vp8": {
                    source: "iana",
                },
                "video/webm": {
                    source: "apache",
                    compressible: false,
                    extensions: ["webm"],
                },
                "video/x-f4v": {
                    source: "apache",
                    extensions: ["f4v"],
                },
                "video/x-fli": {
                    source: "apache",
                    extensions: ["fli"],
                },
                "video/x-flv": {
                    source: "apache",
                    compressible: false,
                    extensions: ["flv"],
                },
                "video/x-m4v": {
                    source: "apache",
                    extensions: ["m4v"],
                },
                "video/x-matroska": {
                    source: "apache",
                    compressible: false,
                    extensions: ["mkv", "mk3d", "mks"],
                },
                "video/x-mng": {
                    source: "apache",
                    extensions: ["mng"],
                },
                "video/x-ms-asf": {
                    source: "apache",
                    extensions: ["asf", "asx"],
                },
                "video/x-ms-vob": {
                    source: "apache",
                    extensions: ["vob"],
                },
                "video/x-ms-wm": {
                    source: "apache",
                    extensions: ["wm"],
                },
                "video/x-ms-wmv": {
                    source: "apache",
                    compressible: false,
                    extensions: ["wmv"],
                },
                "video/x-ms-wmx": {
                    source: "apache",
                    extensions: ["wmx"],
                },
                "video/x-ms-wvx": {
                    source: "apache",
                    extensions: ["wvx"],
                },
                "video/x-msvideo": {
                    source: "apache",
                    extensions: ["avi"],
                },
                "video/x-sgi-movie": {
                    source: "apache",
                    extensions: ["movie"],
                },
                "video/x-smv": {
                    source: "apache",
                    extensions: ["smv"],
                },
                "x-conference/x-cooltalk": {
                    source: "apache",
                    extensions: ["ice"],
                },
                "x-shader/x-fragment": {
                    compressible: true,
                },
                "x-shader/x-vertex": {
                    compressible: true,
                },
            });
        }
    };
});
System.register("https://deno.land/x/media_types@v2.4.2/deps", ["https://deno.land/std@0.61.0/path/mod"], function (exports_35, context_35) {
    "use strict";
    var __moduleName = context_35 && context_35.id;
    return {
        setters: [
            function (mod_ts_7_1) {
                exports_35({
                    "extname": mod_ts_7_1["extname"]
                });
            }
        ],
        execute: function () {
        }
    };
});
/*!
 * Ported from: https://github.com/jshttp/mime-types and licensed as:
 *
 * (The MIT License)
 *
 * Copyright (c) 2014 Jonathan Ong <me@jongleberry.com>
 * Copyright (c) 2015 Douglas Christopher Wilson <doug@somethingdoug.com>
 * Copyright (c) 2020 the Deno authors
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * 'Software'), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
System.register("https://deno.land/x/media_types@v2.4.2/mod", ["https://deno.land/x/media_types@v2.4.2/db", "https://deno.land/x/media_types@v2.4.2/deps"], function (exports_36, context_36) {
    "use strict";
    var db_ts_1, deps_ts_1, EXTRACT_TYPE_REGEXP, TEXT_TYPE_REGEXP, extensions, types;
    var __moduleName = context_36 && context_36.id;
    function populateMaps(extensions, types) {
        const preference = ["nginx", "apache", undefined, "iana"];
        for (const type of Object.keys(db_ts_1.db)) {
            const mime = db_ts_1.db[type];
            const exts = mime.extensions;
            if (!exts || !exts.length) {
                continue;
            }
            extensions.set(type, exts);
            for (const ext of exts) {
                const current = types.get(ext);
                if (current) {
                    const from = preference.indexOf(db_ts_1.db[current].source);
                    const to = preference.indexOf(mime.source);
                    if (current !== "application/octet-stream" &&
                        (from > to ||
                            (from === to && current.substr(0, 12) === "application/"))) {
                        continue;
                    }
                }
                types.set(ext, type);
            }
        }
    }
    function charset(type) {
        const m = EXTRACT_TYPE_REGEXP.exec(type);
        if (!m) {
            return;
        }
        const [match] = m;
        const mime = db_ts_1.db[match.toLowerCase()];
        if (mime && mime.charset) {
            return mime.charset;
        }
        if (TEXT_TYPE_REGEXP.test(match)) {
            return "UTF-8";
        }
    }
    exports_36("charset", charset);
    function lookup(path) {
        const extension = deps_ts_1.extname("x." + path)
            .toLowerCase()
            .substr(1);
        return types.get(extension);
    }
    exports_36("lookup", lookup);
    function contentType(str) {
        let mime = str.includes("/") ? str : lookup(str);
        if (!mime) {
            return;
        }
        if (!mime.includes("charset")) {
            const cs = charset(mime);
            if (cs) {
                mime += `; charset=${cs.toLowerCase()}`;
            }
        }
        return mime;
    }
    exports_36("contentType", contentType);
    function extension(type) {
        const match = EXTRACT_TYPE_REGEXP.exec(type);
        if (!match) {
            return;
        }
        const exts = extensions.get(match[1].toLowerCase());
        if (!exts || !exts.length) {
            return;
        }
        return exts[0];
    }
    exports_36("extension", extension);
    return {
        setters: [
            function (db_ts_1_1) {
                db_ts_1 = db_ts_1_1;
            },
            function (deps_ts_1_1) {
                deps_ts_1 = deps_ts_1_1;
            }
        ],
        execute: function () {
            EXTRACT_TYPE_REGEXP = /^\s*([^;\s]*)(?:;|\s|$)/;
            TEXT_TYPE_REGEXP = /^text\//i;
            exports_36("extensions", extensions = new Map());
            exports_36("types", types = new Map());
            populateMaps(extensions, types);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/deps", ["https://deno.land/std@0.61.0/http/server", "https://deno.land/std@0.61.0/http/cookie", "https://deno.land/std@0.61.0/path/mod", "https://deno.land/x/media_types@v2.4.2/mod"], function (exports_37, context_37) {
    "use strict";
    var __moduleName = context_37 && context_37.id;
    return {
        setters: [
            function (server_ts_2_1) {
                exports_37({
                    "serve": server_ts_2_1["serve"],
                    "Server": server_ts_2_1["Server"],
                    "ServerRequest": server_ts_2_1["ServerRequest"]
                });
            },
            function (cookie_ts_1_1) {
                exports_37({
                    "getCookies": cookie_ts_1_1["getCookies"]
                });
            },
            function (mod_ts_8_1) {
                exports_37({
                    "normalize": mod_ts_8_1["normalize"],
                    "basename": mod_ts_8_1["basename"],
                    "extname": mod_ts_8_1["extname"],
                    "parse": mod_ts_8_1["parse"],
                    "sep": mod_ts_8_1["sep"],
                    "join": mod_ts_8_1["join"],
                    "resolve": mod_ts_8_1["resolve"],
                    "isAbsolute": mod_ts_8_1["isAbsolute"]
                });
            },
            function (mod_ts_9_1) {
                exports_37({
                    "contentType": mod_ts_9_1["contentType"]
                });
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/models/response", ["https://deno.land/x/alosaur@v0.21.1/src/renderer/content"], function (exports_38, context_38) {
    "use strict";
    var content_ts_1, Response;
    var __moduleName = context_38 && context_38.id;
    return {
        setters: [
            function (content_ts_1_1) {
                content_ts_1 = content_ts_1_1;
            }
        ],
        execute: function () {
            Response = class Response {
                constructor() {
                    this.headers = new Headers();
                    this.immediately = false;
                }
                setImmediately() {
                    this.immediately = true;
                }
                isImmediately() {
                    return this.immediately;
                }
                getRaw() {
                    return {
                        headers: this.headers,
                        body: this.body,
                        status: this.status,
                    };
                }
                getMergedResult() {
                    if (this.body !== undefined) {
                        return this.getRaw();
                    }
                    const result = this.result;
                    let response;
                    if (result !== undefined && result.__isActionResult) {
                        response = result;
                    }
                    else {
                        response = content_ts_1.Content(result);
                    }
                    for (const pair of this.headers.entries()) {
                        response.headers.set(pair[0], pair[1]);
                    }
                    delete response.__isActionResult;
                    return response;
                }
            };
            exports_38("Response", Response);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/renderer/content", ["https://deno.land/x/alosaur@v0.21.1/src/deps"], function (exports_39, context_39) {
    "use strict";
    var deps_ts_2, textEncoder;
    var __moduleName = context_39 && context_39.id;
    function Content(result, status = 200) {
        let body;
        const headers = new Headers();
        switch (typeof result) {
            case "object":
            case "boolean":
            case "number":
                headers.set("content-type", deps_ts_2.contentType("file.json"));
                body = textEncoder.encode(JSON.stringify(result));
                break;
            default:
                headers.set("content-type", deps_ts_2.contentType("text/html"));
                body = textEncoder.encode(result || "");
                break;
        }
        return {
            body,
            status,
            headers,
            __isActionResult: true,
        };
    }
    exports_39("Content", Content);
    return {
        setters: [
            function (deps_ts_2_1) {
                deps_ts_2 = deps_ts_2_1;
            }
        ],
        execute: function () {
            textEncoder = new TextEncoder();
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/metadata/area", [], function (exports_40, context_40) {
    "use strict";
    var AreaMetadata;
    var __moduleName = context_40 && context_40.id;
    return {
        setters: [],
        execute: function () {
            AreaMetadata = class AreaMetadata {
                constructor(args) {
                    this.target = args.target;
                    this.baseRoute = args.baseRoute;
                    this.controllers = args.controllers;
                }
            };
            exports_40("AreaMetadata", AreaMetadata);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/metadata/controller", [], function (exports_41, context_41) {
    "use strict";
    var __moduleName = context_41 && context_41.id;
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/utils/get-body", [], function (exports_42, context_42) {
    "use strict";
    var __moduleName = context_42 && context_42.id;
    async function getBody(request) {
        try {
            let body = await Deno.readAll(request.body);
            const bodyString = new TextDecoder("utf-8").decode(body);
            const contentType = request.headers.get("content-type");
            switch (contentType) {
                case "application/json":
                    return JSON.parse(bodyString);
                case "application/x-www-form-urlencoded":
                    let formElements = {};
                    for (const [key, value] of new URLSearchParams(bodyString).entries()) {
                        formElements[key] = value;
                    }
                    return formElements;
                default:
                    return body;
            }
        }
        catch (e) {
            console.warn(e);
            return undefined;
        }
    }
    exports_42("getBody", getBody);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/models/request", ["https://deno.land/x/alosaur@v0.21.1/src/utils/get-body"], function (exports_43, context_43) {
    "use strict";
    var get_body_ts_1, Request;
    var __moduleName = context_43 && context_43.id;
    return {
        setters: [
            function (get_body_ts_1_1) {
                get_body_ts_1 = get_body_ts_1_1;
            }
        ],
        execute: function () {
            Request = class Request {
                constructor(serverRequest) {
                    this.serverRequest = serverRequest;
                    this.url = serverRequest.url;
                    this.headers = serverRequest.headers;
                    this.method = serverRequest.method;
                }
                async body() {
                    if (!this._body) {
                        this._body = await get_body_ts_1.getBody(this.serverRequest);
                    }
                    return this._body;
                }
            };
            exports_43("Request", Request);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/models/context", ["https://deno.land/x/alosaur@v0.21.1/src/models/request", "https://deno.land/x/alosaur@v0.21.1/src/models/response"], function (exports_44, context_44) {
    "use strict";
    var request_ts_1, response_ts_1, Context;
    var __moduleName = context_44 && context_44.id;
    return {
        setters: [
            function (request_ts_1_1) {
                request_ts_1 = request_ts_1_1;
            },
            function (response_ts_1_1) {
                response_ts_1 = response_ts_1_1;
            }
        ],
        execute: function () {
            Context = class Context {
                constructor(serverRequest) {
                    this.request = new request_ts_1.Request(serverRequest);
                    this.response = new response_ts_1.Response();
                }
            };
            exports_44("Context", Context);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/models/middleware-target", [], function (exports_45, context_45) {
    "use strict";
    var __moduleName = context_45 && context_45.id;
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/metadata/middleware", [], function (exports_46, context_46) {
    "use strict";
    var MiddlewareMetadata;
    var __moduleName = context_46 && context_46.id;
    return {
        setters: [],
        execute: function () {
            MiddlewareMetadata = class MiddlewareMetadata {
                constructor(args) {
                    this.target = args.target;
                    this.route = args.route;
                }
            };
            exports_46("MiddlewareMetadata", MiddlewareMetadata);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/types/param", [], function (exports_47, context_47) {
    "use strict";
    var ParamType;
    var __moduleName = context_47 && context_47.id;
    return {
        setters: [],
        execute: function () {
            (function (ParamType) {
                ParamType["Cookie"] = "cookie";
                ParamType["Response"] = "response";
                ParamType["Request"] = "request";
                ParamType["Query"] = "query";
                ParamType["RouteParam"] = "route-param";
                ParamType["Body"] = "body";
            })(ParamType || (ParamType = {}));
            exports_47("ParamType", ParamType);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/metadata/param", [], function (exports_48, context_48) {
    "use strict";
    var __moduleName = context_48 && context_48.id;
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/types/request-method", [], function (exports_49, context_49) {
    "use strict";
    var RequestMethod;
    var __moduleName = context_49 && context_49.id;
    return {
        setters: [],
        execute: function () {
            (function (RequestMethod) {
                RequestMethod["Get"] = "GET";
                RequestMethod["Post"] = "POST";
                RequestMethod["Put"] = "PUT";
                RequestMethod["Delete"] = "DELETE";
                RequestMethod["Path"] = "PATCH";
                RequestMethod["Options"] = "OPTIONS";
            })(RequestMethod || (RequestMethod = {}));
            exports_49("RequestMethod", RequestMethod);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/metadata/action", [], function (exports_50, context_50) {
    "use strict";
    var __moduleName = context_50 && context_50.id;
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/types/business", [], function (exports_51, context_51) {
    "use strict";
    var BusinessType;
    var __moduleName = context_51 && context_51.id;
    return {
        setters: [],
        execute: function () {
            (function (BusinessType) {
                BusinessType["Controller"] = "controller";
                BusinessType["Action"] = "action";
                BusinessType["Area"] = "area";
            })(BusinessType || (BusinessType = {}));
            exports_51("BusinessType", BusinessType);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/models/hook", [], function (exports_52, context_52) {
    "use strict";
    var __moduleName = context_52 && context_52.id;
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/metadata/hook", [], function (exports_53, context_53) {
    "use strict";
    var __moduleName = context_53 && context_53.id;
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/injection/reflect", [], function (exports_54, context_54) {
    "use strict";
    var Reflect;
    var __moduleName = context_54 && context_54.id;
    return {
        setters: [],
        execute: function () {
            (function (Reflect) {
                (function (factory) {
                    const root = typeof global === "object"
                        ? global
                        : typeof self === "object"
                            ? self
                            : typeof this === "object"
                                ? this
                                : Function("return this;")();
                    let exporter = makeExporter(Reflect);
                    if (typeof root.Reflect === "undefined") {
                        root.Reflect = Reflect;
                    }
                    else {
                        exporter = makeExporter(root.Reflect, exporter);
                    }
                    factory(exporter);
                    function makeExporter(target, previous) {
                        return (key, value) => {
                            if (typeof target[key] !== "function") {
                                Object.defineProperty(target, key, { configurable: true, writable: true, value });
                            }
                            if (previous)
                                previous(key, value);
                        };
                    }
                })(function (exporter) {
                    const hasOwn = Object.prototype.hasOwnProperty;
                    const supportsSymbol = typeof Symbol === "function";
                    const toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== "undefined"
                        ? Symbol.toPrimitive
                        : "@@toPrimitive";
                    const iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== "undefined"
                        ? Symbol.iterator
                        : "@@iterator";
                    const supportsCreate = typeof Object.create === "function";
                    const supportsProto = { __proto__: [] } instanceof Array;
                    const downLevel = !supportsCreate && !supportsProto;
                    const HashMap = {
                        create: supportsCreate
                            ? () => MakeDictionary(Object.create(null))
                            : supportsProto
                                ? () => MakeDictionary({ __proto__: null })
                                : () => MakeDictionary({}),
                        has: downLevel
                            ? (map, key) => hasOwn.call(map, key)
                            : (map, key) => key in map,
                        get: downLevel
                            ? (map, key) => hasOwn.call(map, key) ? map[key] : undefined
                            : (map, key) => map[key],
                    };
                    const functionPrototype = Object.getPrototypeOf(Function);
                    const usePolyfill = typeof process === "object" && process.env &&
                        process.env["REFLECT_METADATA_USE_MAP_POLYFILL"] === "true";
                    const _Map = !usePolyfill && typeof Map === "function" &&
                        typeof Map.prototype.entries === "function"
                        ? Map
                        : CreateMapPolyfill();
                    const _Set = !usePolyfill && typeof Set === "function" &&
                        typeof Set.prototype.entries === "function"
                        ? Set
                        : CreateSetPolyfill();
                    const _WeakMap = !usePolyfill && typeof WeakMap === "function"
                        ? WeakMap
                        : CreateWeakMapPolyfill();
                    const Metadata = new _WeakMap();
                    function decorate(decorators, target, propertyKey, attributes) {
                        if (!IsUndefined(propertyKey)) {
                            if (!IsArray(decorators))
                                throw new TypeError();
                            if (!IsObject(target))
                                throw new TypeError();
                            if (!IsObject(attributes) && !IsUndefined(attributes) &&
                                !IsNull(attributes)) {
                                throw new TypeError();
                            }
                            if (IsNull(attributes))
                                attributes = undefined;
                            propertyKey = ToPropertyKey(propertyKey);
                            return DecorateProperty(decorators, target, propertyKey, attributes);
                        }
                        else {
                            if (!IsArray(decorators))
                                throw new TypeError();
                            if (!IsConstructor(target))
                                throw new TypeError();
                            return DecorateConstructor(decorators, target);
                        }
                    }
                    exporter("decorate", decorate);
                    function metadata(metadataKey, metadataValue) {
                        function decorator(target, propertyKey) {
                            if (!IsObject(target))
                                throw new TypeError();
                            if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey)) {
                                throw new TypeError();
                            }
                            OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);
                        }
                        return decorator;
                    }
                    exporter("metadata", metadata);
                    function defineMetadata(metadataKey, metadataValue, target, propertyKey) {
                        if (!IsObject(target))
                            throw new TypeError();
                        if (!IsUndefined(propertyKey))
                            propertyKey = ToPropertyKey(propertyKey);
                        return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);
                    }
                    exporter("defineMetadata", defineMetadata);
                    function hasMetadata(metadataKey, target, propertyKey) {
                        if (!IsObject(target))
                            throw new TypeError();
                        if (!IsUndefined(propertyKey))
                            propertyKey = ToPropertyKey(propertyKey);
                        return OrdinaryHasMetadata(metadataKey, target, propertyKey);
                    }
                    exporter("hasMetadata", hasMetadata);
                    function hasOwnMetadata(metadataKey, target, propertyKey) {
                        if (!IsObject(target))
                            throw new TypeError();
                        if (!IsUndefined(propertyKey))
                            propertyKey = ToPropertyKey(propertyKey);
                        return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);
                    }
                    exporter("hasOwnMetadata", hasOwnMetadata);
                    function getMetadata(metadataKey, target, propertyKey) {
                        if (!IsObject(target))
                            throw new TypeError();
                        if (!IsUndefined(propertyKey))
                            propertyKey = ToPropertyKey(propertyKey);
                        return OrdinaryGetMetadata(metadataKey, target, propertyKey);
                    }
                    exporter("getMetadata", getMetadata);
                    function getOwnMetadata(metadataKey, target, propertyKey) {
                        if (!IsObject(target))
                            throw new TypeError();
                        if (!IsUndefined(propertyKey))
                            propertyKey = ToPropertyKey(propertyKey);
                        return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);
                    }
                    exporter("getOwnMetadata", getOwnMetadata);
                    function getMetadataKeys(target, propertyKey) {
                        if (!IsObject(target))
                            throw new TypeError();
                        if (!IsUndefined(propertyKey))
                            propertyKey = ToPropertyKey(propertyKey);
                        return OrdinaryMetadataKeys(target, propertyKey);
                    }
                    exporter("getMetadataKeys", getMetadataKeys);
                    function getOwnMetadataKeys(target, propertyKey) {
                        if (!IsObject(target))
                            throw new TypeError();
                        if (!IsUndefined(propertyKey))
                            propertyKey = ToPropertyKey(propertyKey);
                        return OrdinaryOwnMetadataKeys(target, propertyKey);
                    }
                    exporter("getOwnMetadataKeys", getOwnMetadataKeys);
                    function deleteMetadata(metadataKey, target, propertyKey) {
                        if (!IsObject(target))
                            throw new TypeError();
                        if (!IsUndefined(propertyKey))
                            propertyKey = ToPropertyKey(propertyKey);
                        const metadataMap = GetOrCreateMetadataMap(target, propertyKey, false);
                        if (IsUndefined(metadataMap))
                            return false;
                        if (!metadataMap.delete(metadataKey))
                            return false;
                        if (metadataMap.size > 0)
                            return true;
                        const targetMetadata = Metadata.get(target);
                        targetMetadata.delete(propertyKey);
                        if (targetMetadata.size > 0)
                            return true;
                        Metadata.delete(target);
                        return true;
                    }
                    exporter("deleteMetadata", deleteMetadata);
                    function DecorateConstructor(decorators, target) {
                        for (let i = decorators.length - 1; i >= 0; --i) {
                            const decorator = decorators[i];
                            const decorated = decorator(target);
                            if (!IsUndefined(decorated) && !IsNull(decorated)) {
                                if (!IsConstructor(decorated))
                                    throw new TypeError();
                                target = decorated;
                            }
                        }
                        return target;
                    }
                    function DecorateProperty(decorators, target, propertyKey, descriptor) {
                        for (let i = decorators.length - 1; i >= 0; --i) {
                            const decorator = decorators[i];
                            const decorated = decorator(target, propertyKey, descriptor);
                            if (!IsUndefined(decorated) && !IsNull(decorated)) {
                                if (!IsObject(decorated))
                                    throw new TypeError();
                                descriptor = decorated;
                            }
                        }
                        return descriptor;
                    }
                    function GetOrCreateMetadataMap(O, P, Create) {
                        let targetMetadata = Metadata.get(O);
                        if (IsUndefined(targetMetadata)) {
                            if (!Create)
                                return undefined;
                            targetMetadata = new _Map();
                            Metadata.set(O, targetMetadata);
                        }
                        let metadataMap = targetMetadata.get(P);
                        if (IsUndefined(metadataMap)) {
                            if (!Create)
                                return undefined;
                            metadataMap = new _Map();
                            targetMetadata.set(P, metadataMap);
                        }
                        return metadataMap;
                    }
                    function OrdinaryHasMetadata(MetadataKey, O, P) {
                        const hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);
                        if (hasOwn)
                            return true;
                        const parent = OrdinaryGetPrototypeOf(O);
                        if (!IsNull(parent))
                            return OrdinaryHasMetadata(MetadataKey, parent, P);
                        return false;
                    }
                    function OrdinaryHasOwnMetadata(MetadataKey, O, P) {
                        const metadataMap = GetOrCreateMetadataMap(O, P, false);
                        if (IsUndefined(metadataMap))
                            return false;
                        return ToBoolean(metadataMap.has(MetadataKey));
                    }
                    function OrdinaryGetMetadata(MetadataKey, O, P) {
                        const hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);
                        if (hasOwn)
                            return OrdinaryGetOwnMetadata(MetadataKey, O, P);
                        const parent = OrdinaryGetPrototypeOf(O);
                        if (!IsNull(parent))
                            return OrdinaryGetMetadata(MetadataKey, parent, P);
                        return undefined;
                    }
                    function OrdinaryGetOwnMetadata(MetadataKey, O, P) {
                        const metadataMap = GetOrCreateMetadataMap(O, P, false);
                        if (IsUndefined(metadataMap))
                            return undefined;
                        return metadataMap.get(MetadataKey);
                    }
                    function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {
                        const metadataMap = GetOrCreateMetadataMap(O, P, true);
                        metadataMap.set(MetadataKey, MetadataValue);
                    }
                    function OrdinaryMetadataKeys(O, P) {
                        const ownKeys = OrdinaryOwnMetadataKeys(O, P);
                        const parent = OrdinaryGetPrototypeOf(O);
                        if (parent === null)
                            return ownKeys;
                        const parentKeys = OrdinaryMetadataKeys(parent, P);
                        if (parentKeys.length <= 0)
                            return ownKeys;
                        if (ownKeys.length <= 0)
                            return parentKeys;
                        const set = new _Set();
                        const keys = [];
                        for (const key of ownKeys) {
                            const hasKey = set.has(key);
                            if (!hasKey) {
                                set.add(key);
                                keys.push(key);
                            }
                        }
                        for (const key of parentKeys) {
                            const hasKey = set.has(key);
                            if (!hasKey) {
                                set.add(key);
                                keys.push(key);
                            }
                        }
                        return keys;
                    }
                    function OrdinaryOwnMetadataKeys(O, P) {
                        const keys = [];
                        const metadataMap = GetOrCreateMetadataMap(O, P, false);
                        if (IsUndefined(metadataMap))
                            return keys;
                        const keysObj = metadataMap.keys();
                        const iterator = GetIterator(keysObj);
                        let k = 0;
                        while (true) {
                            const next = IteratorStep(iterator);
                            if (!next) {
                                keys.length = k;
                                return keys;
                            }
                            const nextValue = IteratorValue(next);
                            try {
                                keys[k] = nextValue;
                            }
                            catch (e) {
                                try {
                                    IteratorClose(iterator);
                                }
                                finally {
                                    throw e;
                                }
                            }
                            k++;
                        }
                    }
                    function Type(x) {
                        if (x === null)
                            return 1;
                        switch (typeof x) {
                            case "undefined":
                                return 0;
                            case "boolean":
                                return 2;
                            case "string":
                                return 3;
                            case "symbol":
                                return 4;
                            case "number":
                                return 5;
                            case "object":
                                return x === null ? 1 : 6;
                            default:
                                return 6;
                        }
                    }
                    function IsUndefined(x) {
                        return x === undefined;
                    }
                    function IsNull(x) {
                        return x === null;
                    }
                    function IsSymbol(x) {
                        return typeof x === "symbol";
                    }
                    function IsObject(x) {
                        return typeof x === "object" ? x !== null : typeof x === "function";
                    }
                    function ToPrimitive(input, PreferredType) {
                        switch (Type(input)) {
                            case 0:
                                return input;
                            case 1:
                                return input;
                            case 2:
                                return input;
                            case 3:
                                return input;
                            case 4:
                                return input;
                            case 5:
                                return input;
                        }
                        const hint = PreferredType === 3
                            ? "string"
                            : PreferredType === 5
                                ? "number"
                                : "default";
                        const exoticToPrim = GetMethod(input, toPrimitiveSymbol);
                        if (exoticToPrim !== undefined) {
                            const result = exoticToPrim.call(input, hint);
                            if (IsObject(result))
                                throw new TypeError();
                            return result;
                        }
                        return OrdinaryToPrimitive(input, hint === "default" ? "number" : hint);
                    }
                    function OrdinaryToPrimitive(O, hint) {
                        if (hint === "string") {
                            const toString = O.toString;
                            if (IsCallable(toString)) {
                                const result = toString.call(O);
                                if (!IsObject(result))
                                    return result;
                            }
                            const valueOf = O.valueOf;
                            if (IsCallable(valueOf)) {
                                const result = valueOf.call(O);
                                if (!IsObject(result))
                                    return result;
                            }
                        }
                        else {
                            const valueOf = O.valueOf;
                            if (IsCallable(valueOf)) {
                                const result = valueOf.call(O);
                                if (!IsObject(result))
                                    return result;
                            }
                            const toString = O.toString;
                            if (IsCallable(toString)) {
                                const result = toString.call(O);
                                if (!IsObject(result))
                                    return result;
                            }
                        }
                        throw new TypeError();
                    }
                    function ToBoolean(argument) {
                        return !!argument;
                    }
                    function ToString(argument) {
                        return "" + argument;
                    }
                    function ToPropertyKey(argument) {
                        const key = ToPrimitive(argument, 3);
                        if (IsSymbol(key))
                            return key;
                        return ToString(key);
                    }
                    function IsArray(argument) {
                        return Array.isArray
                            ? Array.isArray(argument)
                            : argument instanceof Object
                                ? argument instanceof Array
                                : Object.prototype.toString.call(argument) === "[object Array]";
                    }
                    function IsCallable(argument) {
                        return typeof argument === "function";
                    }
                    function IsConstructor(argument) {
                        return typeof argument === "function";
                    }
                    function IsPropertyKey(argument) {
                        switch (Type(argument)) {
                            case 3:
                                return true;
                            case 4:
                                return true;
                            default:
                                return false;
                        }
                    }
                    function GetMethod(V, P) {
                        const func = V[P];
                        if (func === undefined || func === null)
                            return undefined;
                        if (!IsCallable(func))
                            throw new TypeError();
                        return func;
                    }
                    function GetIterator(obj) {
                        const method = GetMethod(obj, iteratorSymbol);
                        if (!IsCallable(method))
                            throw new TypeError();
                        const iterator = method.call(obj);
                        if (!IsObject(iterator))
                            throw new TypeError();
                        return iterator;
                    }
                    function IteratorValue(iterResult) {
                        return iterResult.value;
                    }
                    function IteratorStep(iterator) {
                        const result = iterator.next();
                        return result.done ? false : result;
                    }
                    function IteratorClose(iterator) {
                        const f = iterator["return"];
                        if (f)
                            f.call(iterator);
                    }
                    function OrdinaryGetPrototypeOf(O) {
                        const proto = Object.getPrototypeOf(O);
                        if (typeof O !== "function" || O === functionPrototype)
                            return proto;
                        if (proto !== functionPrototype)
                            return proto;
                        const prototype = O.prototype;
                        const prototypeProto = prototype && Object.getPrototypeOf(prototype);
                        if (prototypeProto == null || prototypeProto === Object.prototype) {
                            return proto;
                        }
                        const constructor = prototypeProto.constructor;
                        if (typeof constructor !== "function")
                            return proto;
                        if (constructor === O)
                            return proto;
                        return constructor;
                    }
                    function CreateMapPolyfill() {
                        const cacheSentinel = {};
                        const arraySentinel = [];
                        class MapIterator {
                            constructor(keys, values, selector) {
                                this._index = 0;
                                this._keys = keys;
                                this._values = values;
                                this._selector = selector;
                            }
                            "@@iterator"() {
                                return this;
                            }
                            [iteratorSymbol]() {
                                return this;
                            }
                            next() {
                                const index = this._index;
                                if (index >= 0 && index < this._keys.length) {
                                    const result = this._selector(this._keys[index], this._values[index]);
                                    if (index + 1 >= this._keys.length) {
                                        this._index = -1;
                                        this._keys = arraySentinel;
                                        this._values = arraySentinel;
                                    }
                                    else {
                                        this._index++;
                                    }
                                    return { value: result, done: false };
                                }
                                return { value: undefined, done: true };
                            }
                            throw(error) {
                                if (this._index >= 0) {
                                    this._index = -1;
                                    this._keys = arraySentinel;
                                    this._values = arraySentinel;
                                }
                                throw error;
                            }
                            return(value) {
                                if (this._index >= 0) {
                                    this._index = -1;
                                    this._keys = arraySentinel;
                                    this._values = arraySentinel;
                                }
                                return { value: value, done: true };
                            }
                        }
                        return class Map {
                            constructor() {
                                this._keys = [];
                                this._values = [];
                                this._cacheKey = cacheSentinel;
                                this._cacheIndex = -2;
                            }
                            get size() {
                                return this._keys.length;
                            }
                            has(key) {
                                return this._find(key, false) >= 0;
                            }
                            get(key) {
                                const index = this._find(key, false);
                                return index >= 0 ? this._values[index] : undefined;
                            }
                            set(key, value) {
                                const index = this._find(key, true);
                                this._values[index] = value;
                                return this;
                            }
                            delete(key) {
                                const index = this._find(key, false);
                                if (index >= 0) {
                                    const size = this._keys.length;
                                    for (let i = index + 1; i < size; i++) {
                                        this._keys[i - 1] = this._keys[i];
                                        this._values[i - 1] = this._values[i];
                                    }
                                    this._keys.length--;
                                    this._values.length--;
                                    if (key === this._cacheKey) {
                                        this._cacheKey = cacheSentinel;
                                        this._cacheIndex = -2;
                                    }
                                    return true;
                                }
                                return false;
                            }
                            clear() {
                                this._keys.length = 0;
                                this._values.length = 0;
                                this._cacheKey = cacheSentinel;
                                this._cacheIndex = -2;
                            }
                            keys() {
                                return new MapIterator(this._keys, this._values, getKey);
                            }
                            values() {
                                return new MapIterator(this._keys, this._values, getValue);
                            }
                            entries() {
                                return new MapIterator(this._keys, this._values, getEntry);
                            }
                            "@@iterator"() {
                                return this.entries();
                            }
                            [iteratorSymbol]() {
                                return this.entries();
                            }
                            _find(key, insert) {
                                if (this._cacheKey !== key) {
                                    this._cacheIndex = this._keys.indexOf(this._cacheKey = key);
                                }
                                if (this._cacheIndex < 0 && insert) {
                                    this._cacheIndex = this._keys.length;
                                    this._keys.push(key);
                                    this._values.push(undefined);
                                }
                                return this._cacheIndex;
                            }
                        };
                        function getKey(key, _) {
                            return key;
                        }
                        function getValue(_, value) {
                            return value;
                        }
                        function getEntry(key, value) {
                            return [key, value];
                        }
                    }
                    function CreateSetPolyfill() {
                        return class Set {
                            constructor() {
                                this._map = new _Map();
                            }
                            get size() {
                                return this._map.size;
                            }
                            has(value) {
                                return this._map.has(value);
                            }
                            add(value) {
                                return this._map.set(value, value), this;
                            }
                            delete(value) {
                                return this._map.delete(value);
                            }
                            clear() {
                                this._map.clear();
                            }
                            keys() {
                                return this._map.keys();
                            }
                            values() {
                                return this._map.values();
                            }
                            entries() {
                                return this._map.entries();
                            }
                            "@@iterator"() {
                                return this.keys();
                            }
                            [iteratorSymbol]() {
                                return this.keys();
                            }
                        };
                    }
                    function CreateWeakMapPolyfill() {
                        const UUID_SIZE = 16;
                        const keys = HashMap.create();
                        const rootKey = CreateUniqueKey();
                        return class WeakMap {
                            constructor() {
                                this._key = CreateUniqueKey();
                            }
                            has(target) {
                                const table = GetOrCreateWeakMapTable(target, false);
                                return table !== undefined ? HashMap.has(table, this._key) : false;
                            }
                            get(target) {
                                const table = GetOrCreateWeakMapTable(target, false);
                                return table !== undefined
                                    ? HashMap.get(table, this._key)
                                    : undefined;
                            }
                            set(target, value) {
                                const table = GetOrCreateWeakMapTable(target, true);
                                table[this._key] = value;
                                return this;
                            }
                            delete(target) {
                                const table = GetOrCreateWeakMapTable(target, false);
                                return table !== undefined ? delete table[this._key] : false;
                            }
                            clear() {
                                this._key = CreateUniqueKey();
                            }
                        };
                        function CreateUniqueKey() {
                            let key;
                            do
                                key = "@@WeakMap@@" + CreateUUID();
                            while (HashMap.has(keys, key));
                            keys[key] = true;
                            return key;
                        }
                        function GetOrCreateWeakMapTable(target, create) {
                            if (!hasOwn.call(target, rootKey)) {
                                if (!create)
                                    return undefined;
                                Object.defineProperty(target, rootKey, { value: HashMap.create() });
                            }
                            return target[rootKey];
                        }
                        function FillRandomBytes(buffer, size) {
                            for (let i = 0; i < size; ++i)
                                buffer[i] = Math.random() * 0xff | 0;
                            return buffer;
                        }
                        function GenRandomBytes(size) {
                            if (typeof Uint8Array === "function") {
                                if (typeof crypto !== "undefined") {
                                    return crypto.getRandomValues(new Uint8Array(size));
                                }
                                if (typeof msCrypto !== "undefined") {
                                    return msCrypto.getRandomValues(new Uint8Array(size));
                                }
                                return FillRandomBytes(new Uint8Array(size), size);
                            }
                            return FillRandomBytes(new Array(size), size);
                        }
                        function CreateUUID() {
                            const data = GenRandomBytes(UUID_SIZE);
                            data[6] = data[6] & 0x4f | 0x40;
                            data[8] = data[8] & 0xbf | 0x80;
                            let result = "";
                            for (let offset = 0; offset < UUID_SIZE; ++offset) {
                                const byte = data[offset];
                                if (offset === 4 || offset === 6 || offset === 8)
                                    result += "-";
                                if (byte < 16)
                                    result += "0";
                                result += byte.toString(16).toLowerCase();
                            }
                            return result;
                        }
                    }
                    function MakeDictionary(obj) {
                        obj.__ = undefined;
                        delete obj.__;
                        return obj;
                    }
                });
            })(Reflect || (Reflect = {}));
            exports_54("Reflect", Reflect);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/injection/types/constructor", [], function (exports_55, context_55) {
    "use strict";
    var __moduleName = context_55 && context_55.id;
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/injection/lazy-helpers", [], function (exports_56, context_56) {
    "use strict";
    var DelayedConstructor;
    var __moduleName = context_56 && context_56.id;
    function delay(wrappedConstructor) {
        if (typeof wrappedConstructor === "undefined") {
            throw new Error("Attempt to `delay` undefined. Constructor must be wrapped in a callback");
        }
        return new DelayedConstructor(wrappedConstructor);
    }
    exports_56("delay", delay);
    return {
        setters: [],
        execute: function () {
            DelayedConstructor = class DelayedConstructor {
                constructor(wrap) {
                    this.wrap = wrap;
                    this.reflectMethods = [
                        "get",
                        "getPrototypeOf",
                        "setPrototypeOf",
                        "getOwnPropertyDescriptor",
                        "defineProperty",
                        "has",
                        "set",
                        "deleteProperty",
                        "apply",
                        "construct",
                    ];
                }
                createProxy(createObject) {
                    const target = {};
                    let init = false;
                    let value;
                    const delayedObject = () => {
                        if (!init) {
                            value = createObject(this.wrap());
                            init = true;
                        }
                        return value;
                    };
                    return new Proxy(target, this.createHandler(delayedObject));
                }
                createHandler(delayedObject) {
                    const handler = {};
                    const install = (name) => {
                        handler[name] = (...args) => {
                            args[0] = delayedObject();
                            const method = Reflect[name];
                            return method(...args);
                        };
                    };
                    this.reflectMethods.forEach(install);
                    return handler;
                }
            };
            exports_56("DelayedConstructor", DelayedConstructor);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/injection/providers/class-provider", [], function (exports_57, context_57) {
    "use strict";
    var __moduleName = context_57 && context_57.id;
    function isClassProvider(provider) {
        return !!provider.useClass;
    }
    exports_57("isClassProvider", isClassProvider);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/injection/providers/value-provider", [], function (exports_58, context_58) {
    "use strict";
    var __moduleName = context_58 && context_58.id;
    function isValueProvider(provider) {
        return provider.useValue != undefined;
    }
    exports_58("isValueProvider", isValueProvider);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/injection/providers/injection-token", ["https://deno.land/x/alosaur@v0.21.1/src/injection/lazy-helpers"], function (exports_59, context_59) {
    "use strict";
    var lazy_helpers_ts_1;
    var __moduleName = context_59 && context_59.id;
    function isNormalToken(token) {
        return typeof token === "string" || typeof token === "symbol";
    }
    exports_59("isNormalToken", isNormalToken);
    function isTokenDescriptor(descriptor) {
        return (typeof descriptor === "object" &&
            "token" in descriptor &&
            "multiple" in descriptor);
    }
    exports_59("isTokenDescriptor", isTokenDescriptor);
    function isConstructorToken(token) {
        return typeof token === "function" || token instanceof lazy_helpers_ts_1.DelayedConstructor;
    }
    exports_59("isConstructorToken", isConstructorToken);
    return {
        setters: [
            function (lazy_helpers_ts_1_1) {
                lazy_helpers_ts_1 = lazy_helpers_ts_1_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/injection/providers/token-provider", [], function (exports_60, context_60) {
    "use strict";
    var __moduleName = context_60 && context_60.id;
    function isTokenProvider(provider) {
        return !!provider.useToken;
    }
    exports_60("isTokenProvider", isTokenProvider);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/injection/providers/provider", ["https://deno.land/x/alosaur@v0.21.1/src/injection/providers/class-provider", "https://deno.land/x/alosaur@v0.21.1/src/injection/providers/value-provider", "https://deno.land/x/alosaur@v0.21.1/src/injection/providers/token-provider", "https://deno.land/x/alosaur@v0.21.1/src/injection/providers/factory-provider"], function (exports_61, context_61) {
    "use strict";
    var class_provider_ts_1, value_provider_ts_1, token_provider_ts_1, factory_provider_ts_1;
    var __moduleName = context_61 && context_61.id;
    function isProvider(provider) {
        return (class_provider_ts_1.isClassProvider(provider) ||
            value_provider_ts_1.isValueProvider(provider) ||
            token_provider_ts_1.isTokenProvider(provider) ||
            factory_provider_ts_1.isFactoryProvider(provider));
    }
    exports_61("isProvider", isProvider);
    return {
        setters: [
            function (class_provider_ts_1_1) {
                class_provider_ts_1 = class_provider_ts_1_1;
            },
            function (value_provider_ts_1_1) {
                value_provider_ts_1 = value_provider_ts_1_1;
            },
            function (token_provider_ts_1_1) {
                token_provider_ts_1 = token_provider_ts_1_1;
            },
            function (factory_provider_ts_1_1) {
                factory_provider_ts_1 = factory_provider_ts_1_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/injection/providers/factory-provider", [], function (exports_62, context_62) {
    "use strict";
    var __moduleName = context_62 && context_62.id;
    function isFactoryProvider(provider) {
        return !!provider.useFactory;
    }
    exports_62("isFactoryProvider", isFactoryProvider);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/injection/types/lifecycle", [], function (exports_63, context_63) {
    "use strict";
    var Lifecycle;
    var __moduleName = context_63 && context_63.id;
    return {
        setters: [],
        execute: function () {
            (function (Lifecycle) {
                Lifecycle[Lifecycle["Transient"] = 0] = "Transient";
                Lifecycle[Lifecycle["Singleton"] = 1] = "Singleton";
                Lifecycle[Lifecycle["ResolutionScoped"] = 2] = "ResolutionScoped";
                Lifecycle[Lifecycle["ContainerScoped"] = 3] = "ContainerScoped";
            })(Lifecycle || (Lifecycle = {}));
            exports_63("default", Lifecycle);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/injection/types/registration-options", [], function (exports_64, context_64) {
    "use strict";
    var __moduleName = context_64 && context_64.id;
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/injection/types/dependency-container", [], function (exports_65, context_65) {
    "use strict";
    var __moduleName = context_65 && context_65.id;
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/injection/types/dictionary", [], function (exports_66, context_66) {
    "use strict";
    var __moduleName = context_66 && context_66.id;
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/injection/types/index", ["https://deno.land/x/alosaur@v0.21.1/src/injection/types/lifecycle"], function (exports_67, context_67) {
    "use strict";
    var __moduleName = context_67 && context_67.id;
    return {
        setters: [
            function (lifecycle_ts_1_1) {
                exports_67({
                    "Lifecycle": lifecycle_ts_1_1["default"]
                });
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/injection/providers/index", ["https://deno.land/x/alosaur@v0.21.1/src/injection/providers/class-provider", "https://deno.land/x/alosaur@v0.21.1/src/injection/providers/factory-provider", "https://deno.land/x/alosaur@v0.21.1/src/injection/providers/injection-token", "https://deno.land/x/alosaur@v0.21.1/src/injection/providers/token-provider", "https://deno.land/x/alosaur@v0.21.1/src/injection/providers/value-provider"], function (exports_68, context_68) {
    "use strict";
    var __moduleName = context_68 && context_68.id;
    return {
        setters: [
            function (class_provider_ts_2_1) {
                exports_68({
                    "isClassProvider": class_provider_ts_2_1["isClassProvider"]
                });
            },
            function (factory_provider_ts_2_1) {
                exports_68({
                    "isFactoryProvider": factory_provider_ts_2_1["isFactoryProvider"]
                });
            },
            function (injection_token_ts_1_1) {
                exports_68({
                    "isNormalToken": injection_token_ts_1_1["isNormalToken"]
                });
            },
            function (token_provider_ts_2_1) {
                exports_68({
                    "isTokenProvider": token_provider_ts_2_1["isTokenProvider"]
                });
            },
            function (value_provider_ts_2_1) {
                exports_68({
                    "isValueProvider": value_provider_ts_2_1["isValueProvider"]
                });
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/injection/registry", [], function (exports_69, context_69) {
    "use strict";
    var Registry;
    var __moduleName = context_69 && context_69.id;
    return {
        setters: [],
        execute: function () {
            Registry = class Registry {
                constructor() {
                    this._registryMap = new Map();
                }
                entries() {
                    return this._registryMap.entries();
                }
                getAll(key) {
                    this.ensure(key);
                    return this._registryMap.get(key);
                }
                get(key) {
                    this.ensure(key);
                    const value = this._registryMap.get(key);
                    return value[value.length - 1] || null;
                }
                set(key, value) {
                    this.ensure(key);
                    this._registryMap.get(key).push(value);
                }
                setAll(key, value) {
                    this._registryMap.set(key, value);
                }
                has(key) {
                    this.ensure(key);
                    return this._registryMap.get(key).length > 0;
                }
                clear() {
                    this._registryMap.clear();
                }
                ensure(key) {
                    if (!this._registryMap.has(key)) {
                        this._registryMap.set(key, []);
                    }
                }
            };
            exports_69("default", Registry);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/injection/resolution-context", [], function (exports_70, context_70) {
    "use strict";
    var ResolutionContext;
    var __moduleName = context_70 && context_70.id;
    return {
        setters: [],
        execute: function () {
            ResolutionContext = class ResolutionContext {
                constructor() {
                    this.scopedResolutions = new Map();
                }
            };
            exports_70("default", ResolutionContext);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/injection/error-helpers", [], function (exports_71, context_71) {
    "use strict";
    var __moduleName = context_71 && context_71.id;
    function formatDependency(params, idx) {
        if (params === null) {
            return `at position #${idx}`;
        }
        const argName = params.split(",")[idx].trim();
        return `"${argName}" at position #${idx}`;
    }
    function composeErrorMessage(msg, e, indent = "    ") {
        return [msg, ...e.message.split("\n").map((l) => indent + l)].join("\n");
    }
    function formatErrorCtor(ctor, paramIdx, error) {
        const [, params = null] = ctor.toString().match(/constructor\(([\w, ]+)\)/) ||
            [];
        const dep = formatDependency(params, paramIdx);
        return composeErrorMessage(`Cannot inject the dependency ${dep} of "${ctor.name}" constructor. Reason:`, error);
    }
    exports_71("formatErrorCtor", formatErrorCtor);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/injection/dependency-container", ["https://deno.land/x/alosaur@v0.21.1/src/injection/providers/index", "https://deno.land/x/alosaur@v0.21.1/src/injection/providers/provider", "https://deno.land/x/alosaur@v0.21.1/src/injection/providers/injection-token", "https://deno.land/x/alosaur@v0.21.1/src/injection/registry", "https://deno.land/x/alosaur@v0.21.1/src/injection/types/lifecycle", "https://deno.land/x/alosaur@v0.21.1/src/injection/resolution-context", "https://deno.land/x/alosaur@v0.21.1/src/injection/error-helpers", "https://deno.land/x/alosaur@v0.21.1/src/injection/lazy-helpers"], function (exports_72, context_72) {
    "use strict";
    var index_ts_1, provider_ts_1, injection_token_ts_2, registry_ts_1, lifecycle_ts_2, resolution_context_ts_1, error_helpers_ts_1, lazy_helpers_ts_2, typeInfo, InternalDependencyContainer, instance;
    var __moduleName = context_72 && context_72.id;
    return {
        setters: [
            function (index_ts_1_1) {
                index_ts_1 = index_ts_1_1;
            },
            function (provider_ts_1_1) {
                provider_ts_1 = provider_ts_1_1;
            },
            function (injection_token_ts_2_1) {
                injection_token_ts_2 = injection_token_ts_2_1;
            },
            function (registry_ts_1_1) {
                registry_ts_1 = registry_ts_1_1;
            },
            function (lifecycle_ts_2_1) {
                lifecycle_ts_2 = lifecycle_ts_2_1;
            },
            function (resolution_context_ts_1_1) {
                resolution_context_ts_1 = resolution_context_ts_1_1;
            },
            function (error_helpers_ts_1_1) {
                error_helpers_ts_1 = error_helpers_ts_1_1;
            },
            function (lazy_helpers_ts_2_1) {
                lazy_helpers_ts_2 = lazy_helpers_ts_2_1;
            }
        ],
        execute: function () {
            exports_72("typeInfo", typeInfo = new Map());
            InternalDependencyContainer = class InternalDependencyContainer {
                constructor(parent) {
                    this.parent = parent;
                    this._registry = new registry_ts_1.default();
                }
                register(token, providerOrConstructor, options = { lifecycle: lifecycle_ts_2.default.Transient }) {
                    let provider;
                    if (!provider_ts_1.isProvider(providerOrConstructor)) {
                        provider = { useClass: providerOrConstructor };
                    }
                    else {
                        provider = providerOrConstructor;
                    }
                    if (options.lifecycle === lifecycle_ts_2.default.Singleton ||
                        options.lifecycle == lifecycle_ts_2.default.ContainerScoped ||
                        options.lifecycle == lifecycle_ts_2.default.ResolutionScoped) {
                        if (index_ts_1.isValueProvider(provider) || index_ts_1.isFactoryProvider(provider)) {
                            throw new Error(`Cannot use lifecycle "${lifecycle_ts_2.default[options.lifecycle]}" with ValueProviders or FactoryProviders`);
                        }
                    }
                    this._registry.set(token, { provider, options });
                    return this;
                }
                registerType(from, to) {
                    if (index_ts_1.isNormalToken(to)) {
                        return this.register(from, {
                            useToken: to,
                        });
                    }
                    return this.register(from, {
                        useClass: to,
                    });
                }
                registerInstance(token, instance) {
                    return this.register(token, {
                        useValue: instance,
                    });
                }
                registerSingleton(from, to) {
                    if (index_ts_1.isNormalToken(from)) {
                        if (index_ts_1.isNormalToken(to)) {
                            return this.register(from, {
                                useToken: to,
                            }, { lifecycle: lifecycle_ts_2.default.Singleton });
                        }
                        else if (to) {
                            return this.register(from, {
                                useClass: to,
                            }, { lifecycle: lifecycle_ts_2.default.Singleton });
                        }
                        throw new Error('Cannot register a type name as a singleton without a "to" token');
                    }
                    let useClass = from;
                    if (to && !index_ts_1.isNormalToken(to)) {
                        useClass = to;
                    }
                    return this.register(from, {
                        useClass,
                    }, { lifecycle: lifecycle_ts_2.default.Singleton });
                }
                resolve(token, context = new resolution_context_ts_1.default()) {
                    const registration = this.getRegistration(token);
                    if (!registration && index_ts_1.isNormalToken(token)) {
                        throw new Error(`Attempted to resolve unregistered dependency token: "${token.toString()}"`);
                    }
                    if (registration) {
                        return this.resolveRegistration(registration, context);
                    }
                    if (injection_token_ts_2.isConstructorToken(token)) {
                        return this.construct(token, context);
                    }
                    throw new Error("Attempted to construct an undefined constructor. Could mean a circular dependency problem. Try using `delay` function.");
                }
                resolveRegistration(registration, context) {
                    if (registration.options.lifecycle === lifecycle_ts_2.default.ResolutionScoped &&
                        context.scopedResolutions.has(registration)) {
                        return context.scopedResolutions.get(registration);
                    }
                    const isSingleton = registration.options.lifecycle === lifecycle_ts_2.default.Singleton;
                    const isContainerScoped = registration.options.lifecycle === lifecycle_ts_2.default.ContainerScoped;
                    const returnInstance = isSingleton || isContainerScoped;
                    let resolved;
                    if (index_ts_1.isValueProvider(registration.provider)) {
                        resolved = registration.provider.useValue;
                    }
                    else if (index_ts_1.isTokenProvider(registration.provider)) {
                        resolved = returnInstance
                            ? registration.instance ||
                                (registration.instance = this.resolve(registration.provider.useToken, context))
                            : this.resolve(registration.provider.useToken, context);
                    }
                    else if (index_ts_1.isClassProvider(registration.provider)) {
                        resolved = returnInstance
                            ? registration.instance ||
                                (registration.instance = this.construct(registration.provider.useClass, context))
                            : this.construct(registration.provider.useClass, context);
                    }
                    else if (index_ts_1.isFactoryProvider(registration.provider)) {
                        resolved = registration.provider.useFactory(this);
                    }
                    else {
                        resolved = this.construct(registration.provider, context);
                    }
                    if (registration.options.lifecycle === lifecycle_ts_2.default.ResolutionScoped) {
                        context.scopedResolutions.set(registration, resolved);
                    }
                    return resolved;
                }
                resolveAll(token, context = new resolution_context_ts_1.default()) {
                    const registrations = this.getAllRegistrations(token);
                    if (!registrations && index_ts_1.isNormalToken(token)) {
                        throw new Error(`Attempted to resolve unregistered dependency token: "${token.toString()}"`);
                    }
                    if (registrations) {
                        return registrations.map((item) => this.resolveRegistration(item, context));
                    }
                    return [this.construct(token, context)];
                }
                isRegistered(token, recursive = false) {
                    return (this._registry.has(token) ||
                        (recursive &&
                            (this.parent || false) &&
                            this.parent.isRegistered(token, true)));
                }
                reset() {
                    this._registry.clear();
                }
                clearInstances() {
                    for (const [token, registrations] of this._registry.entries()) {
                        this._registry.setAll(token, registrations
                            .filter((registration) => !index_ts_1.isValueProvider(registration.provider))
                            .map((registration) => {
                            registration.instance = undefined;
                            return registration;
                        }));
                    }
                }
                createChildContainer() {
                    const childContainer = new InternalDependencyContainer(this);
                    for (const [token, registrations] of this._registry.entries()) {
                        if (registrations.some(({ options }) => options.lifecycle === lifecycle_ts_2.default.ContainerScoped)) {
                            childContainer._registry.setAll(token, registrations.map((registration) => {
                                if (registration.options.lifecycle === lifecycle_ts_2.default.ContainerScoped) {
                                    return {
                                        provider: registration.provider,
                                        options: registration.options,
                                    };
                                }
                                return registration;
                            }));
                        }
                    }
                    return childContainer;
                }
                getRegistration(token) {
                    if (this.isRegistered(token)) {
                        return this._registry.get(token);
                    }
                    if (this.parent) {
                        return this.parent.getRegistration(token);
                    }
                    return null;
                }
                getAllRegistrations(token) {
                    if (this.isRegistered(token)) {
                        return this._registry.getAll(token);
                    }
                    if (this.parent) {
                        return this.parent.getAllRegistrations(token);
                    }
                    return null;
                }
                construct(ctor, context) {
                    if (ctor instanceof lazy_helpers_ts_2.DelayedConstructor) {
                        return ctor.createProxy((target) => this.resolve(target, context));
                    }
                    if (ctor.length === 0) {
                        return new ctor();
                    }
                    const paramInfo = typeInfo.get(ctor);
                    if (!paramInfo || paramInfo.length === 0) {
                        throw new Error(`TypeInfo not known for "${ctor.name}"`);
                    }
                    const params = paramInfo.map(this.resolveParams(context, ctor));
                    return new ctor(...params);
                }
                resolveParams(context, ctor) {
                    return (param, idx) => {
                        try {
                            if (injection_token_ts_2.isTokenDescriptor(param)) {
                                return param.multiple
                                    ? this.resolveAll(param.token)
                                    : this.resolve(param.token, context);
                            }
                            return this.resolve(param, context);
                        }
                        catch (e) {
                            throw new Error(error_helpers_ts_1.formatErrorCtor(ctor, idx, e));
                        }
                    };
                }
            };
            exports_72("InternalDependencyContainer", InternalDependencyContainer);
            exports_72("instance", instance = new InternalDependencyContainer());
            exports_72("default", instance);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/injection/reflection-helpers", ["https://deno.land/x/alosaur@v0.21.1/src/injection/reflect"], function (exports_73, context_73) {
    "use strict";
    var reflect_ts_1, INJECTION_TOKEN_METADATA_KEY;
    var __moduleName = context_73 && context_73.id;
    function getParamInfo(target) {
        const params = reflect_ts_1.Reflect.getMetadata("design:paramtypes", target) || [];
        const injectionTokens = reflect_ts_1.Reflect.getOwnMetadata(INJECTION_TOKEN_METADATA_KEY, target) || {};
        Object.keys(injectionTokens).forEach((key) => {
            params[+key] = injectionTokens[key];
        });
        return params;
    }
    exports_73("getParamInfo", getParamInfo);
    function defineInjectionTokenMetadata(data) {
        return function (target, _propertyKey, parameterIndex) {
            const injectionTokens = reflect_ts_1.Reflect.getOwnMetadata(INJECTION_TOKEN_METADATA_KEY, target) || {};
            injectionTokens[parameterIndex] = data;
            reflect_ts_1.Reflect.defineMetadata(INJECTION_TOKEN_METADATA_KEY, injectionTokens, target);
        };
    }
    exports_73("defineInjectionTokenMetadata", defineInjectionTokenMetadata);
    return {
        setters: [
            function (reflect_ts_1_1) {
                reflect_ts_1 = reflect_ts_1_1;
            }
        ],
        execute: function () {
            exports_73("INJECTION_TOKEN_METADATA_KEY", INJECTION_TOKEN_METADATA_KEY = "injectionTokens.ts");
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/injection/decorators/auto-injectable", ["https://deno.land/x/alosaur@v0.21.1/src/injection/reflection-helpers", "https://deno.land/x/alosaur@v0.21.1/src/injection/dependency-container", "https://deno.land/x/alosaur@v0.21.1/src/injection/providers/injection-token", "https://deno.land/x/alosaur@v0.21.1/src/injection/error-helpers"], function (exports_74, context_74) {
    "use strict";
    var reflection_helpers_ts_1, dependency_container_ts_1, injection_token_ts_3, error_helpers_ts_2;
    var __moduleName = context_74 && context_74.id;
    function autoInjectable() {
        return function (target) {
            const paramInfo = reflection_helpers_ts_1.getParamInfo(target);
            return class extends target {
                constructor(...args) {
                    super(...args.concat(paramInfo.slice(args.length).map((type, index) => {
                        try {
                            if (injection_token_ts_3.isTokenDescriptor(type)) {
                                return type.multiple
                                    ? dependency_container_ts_1.instance.resolveAll(type.token)
                                    : dependency_container_ts_1.instance.resolve(type.token);
                            }
                            return dependency_container_ts_1.instance.resolve(type);
                        }
                        catch (e) {
                            const argIndex = index + args.length;
                            throw new Error(error_helpers_ts_2.formatErrorCtor(target, argIndex, e));
                        }
                    })));
                }
            };
        };
    }
    return {
        setters: [
            function (reflection_helpers_ts_1_1) {
                reflection_helpers_ts_1 = reflection_helpers_ts_1_1;
            },
            function (dependency_container_ts_1_1) {
                dependency_container_ts_1 = dependency_container_ts_1_1;
            },
            function (injection_token_ts_3_1) {
                injection_token_ts_3 = injection_token_ts_3_1;
            },
            function (error_helpers_ts_2_1) {
                error_helpers_ts_2 = error_helpers_ts_2_1;
            }
        ],
        execute: function () {
            exports_74("default", autoInjectable);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/injection/decorators/inject", ["https://deno.land/x/alosaur@v0.21.1/src/injection/reflection-helpers"], function (exports_75, context_75) {
    "use strict";
    var reflection_helpers_ts_2;
    var __moduleName = context_75 && context_75.id;
    function inject(token) {
        return reflection_helpers_ts_2.defineInjectionTokenMetadata(token);
    }
    return {
        setters: [
            function (reflection_helpers_ts_2_1) {
                reflection_helpers_ts_2 = reflection_helpers_ts_2_1;
            }
        ],
        execute: function () {
            exports_75("default", inject);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/injection/decorators/injectable", ["https://deno.land/x/alosaur@v0.21.1/src/injection/reflection-helpers", "https://deno.land/x/alosaur@v0.21.1/src/injection/dependency-container"], function (exports_76, context_76) {
    "use strict";
    var reflection_helpers_ts_3, dependency_container_ts_2;
    var __moduleName = context_76 && context_76.id;
    function injectable() {
        return function (target) {
            dependency_container_ts_2.typeInfo.set(target, reflection_helpers_ts_3.getParamInfo(target));
        };
    }
    return {
        setters: [
            function (reflection_helpers_ts_3_1) {
                reflection_helpers_ts_3 = reflection_helpers_ts_3_1;
            },
            function (dependency_container_ts_2_1) {
                dependency_container_ts_2 = dependency_container_ts_2_1;
            }
        ],
        execute: function () {
            exports_76("default", injectable);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/injection/decorators/registry", ["https://deno.land/x/alosaur@v0.21.1/src/injection/dependency-container"], function (exports_77, context_77) {
    "use strict";
    var dependency_container_ts_3;
    var __moduleName = context_77 && context_77.id;
    function registry(registrations = []) {
        return function (target) {
            registrations.forEach(({ token, options, ...provider }) => dependency_container_ts_3.instance.register(token, provider, options));
            return target;
        };
    }
    return {
        setters: [
            function (dependency_container_ts_3_1) {
                dependency_container_ts_3 = dependency_container_ts_3_1;
            }
        ],
        execute: function () {
            exports_77("default", registry);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/injection/decorators/singleton", ["https://deno.land/x/alosaur@v0.21.1/src/injection/decorators/injectable", "https://deno.land/x/alosaur@v0.21.1/src/injection/dependency-container"], function (exports_78, context_78) {
    "use strict";
    var injectable_ts_1, dependency_container_ts_4;
    var __moduleName = context_78 && context_78.id;
    function singleton() {
        return function (target) {
            injectable_ts_1.default()(target);
            dependency_container_ts_4.instance.registerSingleton(target);
        };
    }
    return {
        setters: [
            function (injectable_ts_1_1) {
                injectable_ts_1 = injectable_ts_1_1;
            },
            function (dependency_container_ts_4_1) {
                dependency_container_ts_4 = dependency_container_ts_4_1;
            }
        ],
        execute: function () {
            exports_78("default", singleton);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/injection/decorators/inject-all", ["https://deno.land/x/alosaur@v0.21.1/src/injection/reflection-helpers"], function (exports_79, context_79) {
    "use strict";
    var reflection_helpers_ts_4;
    var __moduleName = context_79 && context_79.id;
    function injectAll(token) {
        const data = { token, multiple: true };
        return reflection_helpers_ts_4.defineInjectionTokenMetadata(data);
    }
    return {
        setters: [
            function (reflection_helpers_ts_4_1) {
                reflection_helpers_ts_4 = reflection_helpers_ts_4_1;
            }
        ],
        execute: function () {
            exports_79("default", injectAll);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/injection/decorators/scoped", ["https://deno.land/x/alosaur@v0.21.1/src/injection/decorators/injectable", "https://deno.land/x/alosaur@v0.21.1/src/injection/dependency-container"], function (exports_80, context_80) {
    "use strict";
    var injectable_ts_2, dependency_container_ts_5;
    var __moduleName = context_80 && context_80.id;
    function scoped(lifecycle, token) {
        return function (target) {
            injectable_ts_2.default()(target);
            dependency_container_ts_5.instance.register(token || target, target, {
                lifecycle,
            });
        };
    }
    exports_80("default", scoped);
    return {
        setters: [
            function (injectable_ts_2_1) {
                injectable_ts_2 = injectable_ts_2_1;
            },
            function (dependency_container_ts_5_1) {
                dependency_container_ts_5 = dependency_container_ts_5_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/injection/decorators/index", ["https://deno.land/x/alosaur@v0.21.1/src/injection/decorators/auto-injectable", "https://deno.land/x/alosaur@v0.21.1/src/injection/decorators/inject", "https://deno.land/x/alosaur@v0.21.1/src/injection/decorators/injectable", "https://deno.land/x/alosaur@v0.21.1/src/injection/decorators/registry", "https://deno.land/x/alosaur@v0.21.1/src/injection/decorators/singleton", "https://deno.land/x/alosaur@v0.21.1/src/injection/decorators/inject-all", "https://deno.land/x/alosaur@v0.21.1/src/injection/decorators/scoped"], function (exports_81, context_81) {
    "use strict";
    var __moduleName = context_81 && context_81.id;
    return {
        setters: [
            function (auto_injectable_ts_1_1) {
                exports_81({
                    "AutoInjectable": auto_injectable_ts_1_1["default"]
                });
            },
            function (inject_ts_1_1) {
                exports_81({
                    "Inject": inject_ts_1_1["default"]
                });
            },
            function (injectable_ts_3_1) {
                exports_81({
                    "Injectable": injectable_ts_3_1["default"]
                });
            },
            function (registry_ts_2_1) {
                exports_81({
                    "Registry": registry_ts_2_1["default"]
                });
            },
            function (singleton_ts_1_1) {
                exports_81({
                    "Singleton": singleton_ts_1_1["default"]
                });
            },
            function (inject_all_ts_1_1) {
                exports_81({
                    "InjectAll": inject_all_ts_1_1["default"]
                });
            },
            function (scoped_ts_1_1) {
                exports_81({
                    "Scoped": scoped_ts_1_1["default"]
                });
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/injection/factories/factory-function", [], function (exports_82, context_82) {
    "use strict";
    var __moduleName = context_82 && context_82.id;
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/injection/factories/instance-caching-factory", [], function (exports_83, context_83) {
    "use strict";
    var __moduleName = context_83 && context_83.id;
    function instanceCachingFactory(factoryFunc) {
        let instance;
        return (dependencyContainer) => {
            if (instance == undefined) {
                instance = factoryFunc(dependencyContainer);
            }
            return instance;
        };
    }
    exports_83("default", instanceCachingFactory);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/injection/factories/predicate-aware-class-factory", [], function (exports_84, context_84) {
    "use strict";
    var __moduleName = context_84 && context_84.id;
    function predicateAwareClassFactory(predicate, trueConstructor, falseConstructor, useCaching = true) {
        let instance;
        let previousPredicate;
        return (dependencyContainer) => {
            const currentPredicate = predicate(dependencyContainer);
            if (!useCaching || previousPredicate !== currentPredicate) {
                if ((previousPredicate = currentPredicate)) {
                    instance = dependencyContainer.resolve(trueConstructor);
                }
                else {
                    instance = dependencyContainer.resolve(falseConstructor);
                }
            }
            return instance;
        };
    }
    exports_84("default", predicateAwareClassFactory);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/injection/factories/index", ["https://deno.land/x/alosaur@v0.21.1/src/injection/factories/instance-caching-factory", "https://deno.land/x/alosaur@v0.21.1/src/injection/factories/predicate-aware-class-factory"], function (exports_85, context_85) {
    "use strict";
    var __moduleName = context_85 && context_85.id;
    return {
        setters: [
            function (instance_caching_factory_ts_1_1) {
                exports_85({
                    "instanceCachingFactory": instance_caching_factory_ts_1_1["default"]
                });
            },
            function (predicate_aware_class_factory_ts_1_1) {
                exports_85({
                    "predicateAwareClassFactory": predicate_aware_class_factory_ts_1_1["default"]
                });
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/injection/index", ["https://deno.land/x/alosaur@v0.21.1/src/injection/reflect", "https://deno.land/x/alosaur@v0.21.1/src/injection/types/index", "https://deno.land/x/alosaur@v0.21.1/src/injection/decorators/index", "https://deno.land/x/alosaur@v0.21.1/src/injection/factories/index", "https://deno.land/x/alosaur@v0.21.1/src/injection/providers/index", "https://deno.land/x/alosaur@v0.21.1/src/injection/lazy-helpers", "https://deno.land/x/alosaur@v0.21.1/src/injection/dependency-container"], function (exports_86, context_86) {
    "use strict";
    var __moduleName = context_86 && context_86.id;
    var exportedNames_2 = {
        "Lifecycle": true,
        "delay": true,
        "container": true,
        "InternalDependencyContainer": true
    };
    function exportStar_4(m) {
        var exports = {};
        for (var n in m) {
            if (n !== "default" && !exportedNames_2.hasOwnProperty(n)) exports[n] = m[n];
        }
        exports_86(exports);
    }
    return {
        setters: [
            function (_1) {
            },
            function (index_ts_2_1) {
                exports_86({
                    "Lifecycle": index_ts_2_1["Lifecycle"]
                });
            },
            function (index_ts_3_1) {
                exportStar_4(index_ts_3_1);
            },
            function (index_ts_4_1) {
                exportStar_4(index_ts_4_1);
            },
            function (index_ts_5_1) {
                exportStar_4(index_ts_5_1);
            },
            function (lazy_helpers_ts_3_1) {
                exports_86({
                    "delay": lazy_helpers_ts_3_1["delay"]
                });
            },
            function (dependency_container_ts_6_1) {
                exports_86({
                    "container": dependency_container_ts_6_1["instance"],
                    "InternalDependencyContainer": dependency_container_ts_6_1["InternalDependencyContainer"]
                });
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/metadata/metadata", ["https://deno.land/x/alosaur@v0.21.1/src/injection/index"], function (exports_87, context_87) {
    "use strict";
    var index_ts_6, MetadataArgsStorage;
    var __moduleName = context_87 && context_87.id;
    return {
        setters: [
            function (index_ts_6_1) {
                index_ts_6 = index_ts_6_1;
            }
        ],
        execute: function () {
            MetadataArgsStorage = class MetadataArgsStorage {
                constructor() {
                    this.middlewares = [];
                    this.areas = [];
                    this.controllers = [];
                    this.actions = [];
                    this.params = [];
                    this.hooks = [];
                    this.container = index_ts_6.container;
                }
            };
            exports_87("MetadataArgsStorage", MetadataArgsStorage);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/metadata/route", [], function (exports_88, context_88) {
    "use strict";
    var __moduleName = context_88 && context_88.id;
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/route/route.models", [], function (exports_89, context_89) {
    "use strict";
    var __moduleName = context_89 && context_89.id;
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/route/route.utils", [], function (exports_90, context_90) {
    "use strict";
    var allowedMethod, getRouteParams, getRouteParamPattern, getRouteWithRouteParams, getRouteFromFullPath, getRouteWithRegex, parsedUrlMap;
    var __moduleName = context_90 && context_90.id;
    function getPathNameFromUrl(url) {
        return getParsedUrl(url).pathname;
    }
    exports_90("getPathNameFromUrl", getPathNameFromUrl);
    function getParsedUrl(url) {
        if (!parsedUrlMap.has(url)) {
            parsedUrlMap.set(url, new URL("http://localhost" + url));
        }
        return parsedUrlMap.get(url);
    }
    return {
        setters: [],
        execute: function () {
            allowedMethod = (routeMethod, requestMethod) => {
                return !requestMethod || routeMethod === requestMethod;
            };
            exports_90("getRouteParams", getRouteParams = (route) => route.split("/").reduce((acc, el, i) => {
                if (/:[A-Za-z1-9]{1,}/.test(el)) {
                    const result = el.replace(":", "");
                    acc.push({ i, el: result });
                }
                return acc;
            }, []));
            getRouteParamPattern = (route) => route.replace(/\/\:[^/]{1,}/gi, "/[^/]{1,}").replace(/\//g, "\\/");
            exports_90("getRouteWithRouteParams", getRouteWithRouteParams = (routes, pathname, method) => {
                return routes
                    .filter((r) => r.route.includes("/:") && allowedMethod(r.method, method))
                    .find((r) => {
                    return new RegExp("^" + getRouteParamPattern(r.route) + "$").test(pathname);
                });
            });
            exports_90("getRouteFromFullPath", getRouteFromFullPath = (routes, pathname, method) => {
                return routes.find((r) => allowedMethod(r.method, method) && r.route === pathname);
            });
            exports_90("getRouteWithRegex", getRouteWithRegex = (routes, pathname, method) => {
                return routes
                    .filter((r) => r.regexpRoute && allowedMethod(r.method.toString(), method))
                    .find((r) => {
                    const baseRouteRegex = new RegExp("^" + r.route);
                    return baseRouteRegex.test(pathname) &&
                        r.regexpRoute.test(pathname.replace(baseRouteRegex, ""));
                });
            });
            parsedUrlMap = new Map();
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/route/get-action", ["https://deno.land/x/alosaur@v0.21.1/src/route/route.utils"], function (exports_91, context_91) {
    "use strict";
    var route_utils_ts_1;
    var __moduleName = context_91 && context_91.id;
    function getAction(routes, method, url) {
        const pathname = route_utils_ts_1.getPathNameFromUrl(url);
        const routeParams = {};
        let route = route_utils_ts_1.getRouteFromFullPath(routes, pathname, method);
        if (!route) {
            route = route_utils_ts_1.getRouteWithRegex(routes, pathname, method);
        }
        if (!route) {
            route = route_utils_ts_1.getRouteWithRouteParams(routes, pathname, method);
            if (route) {
                const params = route_utils_ts_1.getRouteParams(route.route);
                const routeMatch = pathname.split("/");
                params.forEach((p) => {
                    routeParams[p.el] = routeMatch[p.i];
                });
            }
        }
        if (route) {
            return {
                areaObject: route.areaObject,
                controllerObject: route.controllerObject,
                actionObject: route.actionObject,
                target: route.target,
                action: route.action,
                params: route.params,
                routeParams,
            };
        }
        return null;
    }
    exports_91("getAction", getAction);
    return {
        setters: [
            function (route_utils_ts_1_1) {
                route_utils_ts_1 = route_utils_ts_1_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/models/transform-config", [], function (exports_92, context_92) {
    "use strict";
    var __moduleName = context_92 && context_92.id;
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/route/get-action-params", ["https://deno.land/x/alosaur@v0.21.1/src/deps"], function (exports_93, context_93) {
    "use strict";
    var deps_ts_3;
    var __moduleName = context_93 && context_93.id;
    async function getActionParams(context, route, transformConfigMap) {
        if (route.params.length == 0) {
            return [];
        }
        const args = [];
        const params = route.params.sort((a, b) => a.index - b.index);
        for (let i = 0; i < params.length; i++) {
            const param = params[i];
            switch (param.type) {
                case "query":
                    const queryParams = getQueryParams(context.request.url);
                    if (queryParams && param.name) {
                        const paramsArgs = queryParams.get(param.name);
                        args.push(paramsArgs ? paramsArgs : undefined);
                    }
                    else {
                        args.push(undefined);
                    }
                    break;
                case "cookie":
                    if (param.name) {
                        const cookies = deps_ts_3.getCookies(context.request.serverRequest) || {};
                        args.push(cookies[param.name]);
                    }
                    else {
                        args.push(undefined);
                    }
                    break;
                case "body":
                    args.push(getTransformedParam(await context.request.body(), param.transform, param.type, transformConfigMap));
                    break;
                case "request":
                    args.push(context.request);
                    break;
                case "response":
                    args.push(context.response);
                    break;
                case "route-param":
                    if (route.routeParams && param.name) {
                        args.push(route.routeParams[param.name]);
                    }
                    else {
                        args.push(undefined);
                    }
                    break;
                default:
                    args.push(undefined);
                    break;
            }
        }
        return args;
    }
    exports_93("getActionParams", getActionParams);
    function getQueryParams(url) {
        const params = url.split("?")[1];
        if (!params)
            return undefined;
        return new URLSearchParams(params);
    }
    exports_93("getQueryParams", getQueryParams);
    function getTransformedParam(body, transform, type, config) {
        if (config !== undefined && transform !== undefined) {
            return config.get(type).getTransform(transform, body);
        }
        if (transform) {
            return transform(body);
        }
        return body;
    }
    return {
        setters: [
            function (deps_ts_3_1) {
                deps_ts_3 = deps_ts_3_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/models/static-config", [], function (exports_94, context_94) {
    "use strict";
    var __moduleName = context_94 && context_94.id;
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/models/view-render-config", [], function (exports_95, context_95) {
    "use strict";
    var __moduleName = context_95 && context_95.id;
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/middlewares/cors-builder", [], function (exports_96, context_96) {
    "use strict";
    var CorsBuilder;
    var __moduleName = context_96 && context_96.id;
    return {
        setters: [],
        execute: function () {
            CorsBuilder = class CorsBuilder {
                constructor() {
                    this.headers = new Map();
                    this.allowAnyOrigin = false;
                    this.allowAnyMethod = false;
                    this.allowAnyHeader = false;
                }
                onPreRequest(context) {
                    return new Promise((resolve, reject) => {
                        if (this.allowAnyOrigin) {
                            this.headers.set("Access-Control-Allow-Origin", context.request.headers.get("Origin") || "");
                        }
                        if (this.allowAnyMethod) {
                            this.headers.set("Access-Control-Allow-Methods", context.request.headers.get("Access-Control-Request-Method") || "");
                        }
                        if (this.allowAnyHeader) {
                            this.headers.set("Access-Control-Allow-Headers", context.request.headers.get("Access-Control-Request-Headers") || "");
                        }
                        if (context.request.method == "OPTIONS") {
                            this.onPostRequest(context);
                            context.response.status = 200;
                            context.response.setImmediately();
                        }
                        resolve();
                    });
                }
                onPostRequest(context) {
                    return new Promise((resolve, rej) => {
                        this.headers.forEach((el, key) => {
                            context.response.headers.set(key, el);
                        });
                        resolve();
                    });
                }
                WithOrigins(origins) {
                    this.headers.set("Access-Control-Allow-Origin", origins);
                    return this;
                }
                WithMethods(methods) {
                    this.headers.set("Access-Control-Allow-Methods", methods);
                    return this;
                }
                WithHeaders(headers) {
                    this.headers.set("Access-Control-Allow-Headers", headers);
                    return this;
                }
                AllowAnyOrigin() {
                    this.allowAnyOrigin = true;
                    return this;
                }
                AllowAnyMethod() {
                    this.allowAnyMethod = true;
                    return this;
                }
                AllowAnyHeader() {
                    this.allowAnyHeader = true;
                    return this;
                }
                AllowCredentials() {
                    this.headers.set("Access-Control-Allow-Credentials", "true");
                    return this;
                }
            };
            exports_96("CorsBuilder", CorsBuilder);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/utils/register-areas", [], function (exports_97, context_97) {
    "use strict";
    var __moduleName = context_97 && context_97.id;
    function registerAreas(metadata) {
        metadata.controllers.map((controller) => {
            if (controller.area === undefined) {
                controller.area = metadata.areas.find((area) => {
                    if (area.controllers) {
                        return !!area.controllers.find((areaController) => areaController === controller.target);
                    }
                    return false;
                });
            }
            return controller;
        });
    }
    exports_97("registerAreas", registerAreas);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/utils/register-controllers", ["https://deno.land/x/alosaur@v0.21.1/src/mod"], function (exports_98, context_98) {
    "use strict";
    var mod_ts_10;
    var __moduleName = context_98 && context_98.id;
    function registerControllers(controllers = [], classes = [], addToRoute, logging = true) {
        const container = mod_ts_10.getMetadataArgsStorage().container;
        controllers.forEach((controller) => {
            const actions = mod_ts_10.getMetadataArgsStorage().actions.filter((action) => action.target === controller.target);
            const params = mod_ts_10.getMetadataArgsStorage().params.filter((param) => param.target === controller.target);
            const target = container.resolve(controller.target);
            classes.push(target);
            if (logging) {
                console.debug(`The "${controller.target.name ||
                    controller.target.constructor.name}" controller has been registered.`);
            }
            let areaRoute = "";
            if (controller.area !== undefined && controller.area.baseRoute) {
                areaRoute = controller.area.baseRoute;
            }
            actions.forEach((action) => {
                let fullRoute = areaRoute;
                if (controller.route) {
                    fullRoute += controller.route;
                }
                const regexpRoute = action.route instanceof RegExp
                    ? action.route
                    : undefined;
                if (!regexpRoute && action.route) {
                    fullRoute += action.route;
                }
                if (fullRoute === "") {
                    fullRoute = "/";
                }
                const metaRoute = {
                    baseRoute: areaRoute,
                    route: fullRoute,
                    regexpRoute,
                    target: target,
                    areaObject: controller.area && controller.area.target,
                    actionObject: action.object,
                    controllerObject: controller.target,
                    action: action.method,
                    method: action.type,
                    params: params.filter((param) => param.method === action.method),
                };
                if (logging) {
                    console.debug(`The "${metaRoute.route}" route has been registered.`);
                }
                addToRoute(metaRoute);
            });
        });
    }
    exports_98("registerControllers", registerControllers);
    return {
        setters: [
            function (mod_ts_10_1) {
                mod_ts_10 = mod_ts_10_1;
            }
        ],
        execute: function () {
        }
    };
});
/*!
 * Adapted from koa-send at https://github.com/koajs/send and which is licensed
 * with the MIT license.
 */
System.register("https://deno.land/x/alosaur@v0.21.1/src/static/send", ["https://deno.land/x/alosaur@v0.21.1/src/deps"], function (exports_99, context_99) {
    "use strict";
    var deps_ts_4, deps_ts_5, UP_PATH_REGEXP;
    var __moduleName = context_99 && context_99.id;
    function decodeComponent(text) {
        try {
            return decodeURIComponent(text);
        }
        catch {
            return text;
        }
    }
    exports_99("decodeComponent", decodeComponent);
    function isHidden(root, path) {
        const pathArr = path.substr(root.length).split(deps_ts_4.sep);
        return !!pathArr.find((segment) => segment.startsWith("."));
    }
    async function exists(path) {
        try {
            return (await Deno.stat(path)).isFile;
        }
        catch {
            return false;
        }
    }
    function toUTCString(value) {
        return new Date(value).toUTCString();
    }
    async function send({ request, response }, path, options = { root: "" }) {
        const { brotli = true, extensions, format = true, gzip = true, index, hidden = false, immutable = false, maxAge = 0, root, } = options;
        const trailingSlash = path[path.length - 1] === "/";
        path = decodeComponent(path.substr(deps_ts_4.parse(path).root.length));
        if (index && trailingSlash) {
            path += index;
        }
        path = resolvePath(root, path);
        if (!hidden && isHidden(root, path)) {
            return;
        }
        if (!response) {
            response = { headers: new Headers() };
        }
        let encodingExt = "";
        if (brotli && (await exists(`${path}.br`))) {
            path = `${path}.br`;
            response.headers.set("Content-Encoding", "br");
            response.headers.delete("Content-Length");
            encodingExt = ".br";
        }
        else if (gzip && (await exists(`${path}.gz`))) {
            path = `${path}.gz`;
            response.headers.set("Content-Encoding", "gzip");
            response.headers.delete("Content-Length");
            encodingExt = ".gz";
        }
        if (extensions && !/\.[^/]*$/.exec(path)) {
            for (let ext of extensions) {
                if (!/^\./.exec(ext)) {
                    ext = `.${ext}`;
                }
                if (await exists(`${path}${ext}`)) {
                    path += ext;
                    break;
                }
            }
        }
        let stats;
        try {
            stats = await Deno.stat(path);
            if (stats.isDirectory) {
                if (format && index) {
                    path += `/${index}`;
                    stats = await Deno.stat(path);
                }
                else {
                    return;
                }
            }
        }
        catch (err) {
            if (err instanceof Deno.errors.NotFound) {
                throw new Error(err.message);
            }
            throw new Error(err.message);
        }
        response.headers.set("Content-Length", String(stats.size));
        if (!response.headers.has("Cache-Control")) {
            const directives = [`max-age=${(maxAge / 1000) | 0}`];
            if (immutable) {
                directives.push("immutable");
            }
            response.headers.set("Cache-Control", directives.join(","));
        }
        if (!response.headers.has("Content-Type")) {
            const type = deps_ts_4.contentType(encodingExt !== ""
                ? deps_ts_4.extname(deps_ts_4.basename(path, encodingExt))
                : deps_ts_4.extname(path));
            response.headers.set("Content-Type", type);
        }
        response.body = await Deno.readFile(path);
        return path;
    }
    exports_99("send", send);
    function resolvePath(rootPath, relativePath) {
        let path = relativePath;
        let root = rootPath;
        if (arguments.length === 1) {
            path = rootPath;
            root = Deno.cwd();
        }
        if (path === undefined) {
            throw new TypeError("Argument relativePath is required.");
        }
        if (path.includes("\0")) {
            throw new Error("Malicious Path");
        }
        if (deps_ts_5.isAbsolute(path)) {
            throw new Error("Malicious Path");
        }
        if (UP_PATH_REGEXP.test(deps_ts_5.normalize("." + deps_ts_4.sep + path))) {
            throw new Error("403");
        }
        return deps_ts_5.normalize(deps_ts_5.join(deps_ts_5.resolve(root), path));
    }
    exports_99("resolvePath", resolvePath);
    return {
        setters: [
            function (deps_ts_4_1) {
                deps_ts_4 = deps_ts_4_1;
                deps_ts_5 = deps_ts_4_1;
            }
        ],
        execute: function () {
            UP_PATH_REGEXP = /(?:^|[\\/])\.\.(?:[\\/]|$)/;
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/utils/get-static-file", ["https://deno.land/x/alosaur@v0.21.1/src/route/route.utils", "https://deno.land/x/alosaur@v0.21.1/src/static/send"], function (exports_100, context_100) {
    "use strict";
    var route_utils_ts_2, send_ts_1;
    var __moduleName = context_100 && context_100.id;
    async function getStaticFile(context, staticConfig, showError = true) {
        if (staticConfig == null) {
            return false;
        }
        let url = context.request.url;
        if (staticConfig.baseRoute) {
            const regexpUrl = new RegExp(`^${staticConfig.baseRoute}`);
            if (regexpUrl.test(url)) {
                url = url.replace(regexpUrl, "/");
            }
            else {
                return false;
            }
        }
        try {
            const filePath = await send_ts_1.send({ request: context.request.serverRequest, response: context.response }, route_utils_ts_2.getPathNameFromUrl(url), staticConfig);
            return !!filePath;
        }
        catch (error) {
            if (staticConfig.baseRoute && showError) {
                console.warn(error);
            }
            return null;
        }
    }
    exports_100("getStaticFile", getStaticFile);
    return {
        setters: [
            function (route_utils_ts_2_1) {
                route_utils_ts_2 = route_utils_ts_2_1;
            },
            function (send_ts_1_1) {
                send_ts_1 = send_ts_1_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/renderer/not-found", ["https://deno.land/x/alosaur@v0.21.1/src/renderer/content"], function (exports_101, context_101) {
    "use strict";
    var content_ts_2;
    var __moduleName = context_101 && context_101.id;
    function notFoundAction() {
        return content_ts_2.Content("Not found", 404);
    }
    exports_101("notFoundAction", notFoundAction);
    return {
        setters: [
            function (content_ts_2_1) {
                content_ts_2 = content_ts_2_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/models/app-settings", [], function (exports_102, context_102) {
    "use strict";
    var __moduleName = context_102 && context_102.id;
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/route/get-hooks", [], function (exports_103, context_103) {
    "use strict";
    var __moduleName = context_103 && context_103.id;
    function getGroupedHooks(hooks, action) {
        let result = {
            areaHooks: [],
            controllerHooks: [],
            actionHooks: [],
        };
        if (hooks.length > 0) {
            const group = getGrouped(hooks, action);
            result = {
                areaHooks: group.areaHooks,
                controllerHooks: group.controllerHooks,
                actionHooks: group.actionHooks,
            };
        }
        return result;
    }
    exports_103("getGroupedHooks", getGroupedHooks);
    function getHooksForAction(hooks, action) {
        const group = getGrouped(hooks, action);
        return [...group.areaHooks, ...group.controllerHooks, ...group.actionHooks];
    }
    exports_103("getHooksForAction", getHooksForAction);
    function getGrouped(hooks, action) {
        const areaHooks = [];
        const controllerHooks = [];
        const actionHooks = [];
        for (let hook of hooks) {
            if (hook.object === action.areaObject) {
                areaHooks.push(hook);
                continue;
            }
            if (hook.object === action.controllerObject) {
                controllerHooks.push(hook);
                continue;
            }
            if (hook.object === action.actionObject && hook.method === action.action) {
                actionHooks.push(hook);
            }
        }
        return {
            areaHooks,
            controllerHooks,
            actionHooks,
        };
    }
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/mod", ["https://deno.land/x/alosaur@v0.21.1/src/metadata/metadata", "https://deno.land/x/alosaur@v0.21.1/src/deps", "https://deno.land/x/alosaur@v0.21.1/src/route/get-action", "https://deno.land/x/alosaur@v0.21.1/src/route/get-action-params", "https://deno.land/x/alosaur@v0.21.1/src/renderer/content", "https://deno.land/x/alosaur@v0.21.1/src/utils/register-areas", "https://deno.land/x/alosaur@v0.21.1/src/utils/register-controllers", "https://deno.land/x/alosaur@v0.21.1/src/utils/get-static-file", "https://deno.land/x/alosaur@v0.21.1/src/models/context", "https://deno.land/x/alosaur@v0.21.1/src/renderer/not-found", "https://deno.land/x/alosaur@v0.21.1/src/route/get-hooks", "https://deno.land/x/alosaur@v0.21.1/src/http-error/HttpError", "https://deno.land/x/alosaur@v0.21.1/src/injection/index"], function (exports_104, context_104) {
    "use strict";
    var metadata_ts_1, deps_ts_6, get_action_ts_1, get_action_params_ts_1, content_ts_3, register_areas_ts_1, register_controllers_ts_1, get_static_file_ts_1, context_ts_1, not_found_ts_1, get_hooks_ts_1, HttpError_ts_9, index_ts_7, global, App;
    var __moduleName = context_104 && context_104.id;
    function getMetadataArgsStorage() {
        if (!global.routingControllersMetadataArgsStorage) {
            global.routingControllersMetadataArgsStorage =
                new metadata_ts_1.MetadataArgsStorage();
        }
        return global.routingControllersMetadataArgsStorage;
    }
    exports_104("getMetadataArgsStorage", getMetadataArgsStorage);
    function getViewRenderConfig() {
        return global.viewRenderConfig;
    }
    exports_104("getViewRenderConfig", getViewRenderConfig);
    async function resolveHooks(context, actionName, hooks) {
        const resolvedHooks = new Set();
        if (hasHooks(hooks)) {
            for (const hook of hooks) {
                const action = hook.instance[actionName];
                if (action !== undefined) {
                    await hook.instance[actionName](context, hook.payload);
                    if (context.response.isImmediately()) {
                        let reverseActionName = actionName === "onCatchAction"
                            ? "onCatchAction"
                            : "onPostAction";
                        await runHooks(context, reverseActionName, Array.from(resolvedHooks).reverse());
                        await context.request.serverRequest.respond(context.response.getMergedResult());
                        return true;
                    }
                }
                resolvedHooks.add(hook);
            }
        }
        return false;
    }
    function hasHooks(hooks) {
        return hooks !== undefined && hooks.length > 0;
    }
    async function runHooks(context, actionName, hooks) {
        for (const hook of hooks) {
            const action = hook.instance[actionName];
            if (action !== undefined) {
                await hook.instance[actionName](context, hook.payload);
            }
        }
    }
    function hasHooksAction(actionName, hooks) {
        return !!(hooks &&
            hooks.find((hook) => hook.instance[actionName] !== undefined));
    }
    return {
        setters: [
            function (metadata_ts_1_1) {
                metadata_ts_1 = metadata_ts_1_1;
            },
            function (deps_ts_6_1) {
                deps_ts_6 = deps_ts_6_1;
            },
            function (get_action_ts_1_1) {
                get_action_ts_1 = get_action_ts_1_1;
            },
            function (get_action_params_ts_1_1) {
                get_action_params_ts_1 = get_action_params_ts_1_1;
            },
            function (content_ts_3_1) {
                content_ts_3 = content_ts_3_1;
            },
            function (register_areas_ts_1_1) {
                register_areas_ts_1 = register_areas_ts_1_1;
            },
            function (register_controllers_ts_1_1) {
                register_controllers_ts_1 = register_controllers_ts_1_1;
            },
            function (get_static_file_ts_1_1) {
                get_static_file_ts_1 = get_static_file_ts_1_1;
            },
            function (context_ts_1_1) {
                context_ts_1 = context_ts_1_1;
            },
            function (not_found_ts_1_1) {
                not_found_ts_1 = not_found_ts_1_1;
            },
            function (get_hooks_ts_1_1) {
                get_hooks_ts_1 = get_hooks_ts_1_1;
            },
            function (HttpError_ts_9_1) {
                HttpError_ts_9 = HttpError_ts_9_1;
            },
            function (index_ts_7_1) {
                index_ts_7 = index_ts_7_1;
            }
        ],
        execute: function () {
            global = {};
            App = class App {
                constructor(settings) {
                    this.classes = [];
                    this.routes = [];
                    this.staticConfig = undefined;
                    this.viewRenderConfig = undefined;
                    this.transformConfigMap = undefined;
                    this.server = undefined;
                    this.metadata = getMetadataArgsStorage();
                    this.metadata.container = settings.container || index_ts_7.container;
                    register_areas_ts_1.registerAreas(this.metadata);
                    register_controllers_ts_1.registerControllers(this.metadata.controllers, this.classes, (route) => this.routes.push(route), settings.logging);
                    this.useStatic(settings.staticConfig);
                    this.useViewRender(settings.viewRenderConfig);
                }
                async listen(address = ":8000") {
                    const server = deps_ts_6.serve(address);
                    this.server = server;
                    console.log("Server start in", address);
                    for await (const req of server) {
                        const context = new context_ts_1.Context(req);
                        try {
                            const middlewares = this.metadata.middlewares.filter((m) => m.route.test(context.request.url));
                            for (const middleware of middlewares) {
                                await middleware.target.onPreRequest(context);
                            }
                            if (context.response.isImmediately()) {
                                req.respond(context.response.getRaw());
                                continue;
                            }
                            if (this.staticConfig && await get_static_file_ts_1.getStaticFile(context, this.staticConfig)) {
                                req.respond(context.response.getRaw());
                                continue;
                            }
                            const action = get_action_ts_1.getAction(this.routes, context.request.method, context.request.url);
                            if (action !== null) {
                                const hooks = get_hooks_ts_1.getHooksForAction(this.metadata.hooks, action);
                                if (hasHooks(hooks) && await resolveHooks(context, "onPreAction", hooks)) {
                                    continue;
                                }
                                const args = await get_action_params_ts_1.getActionParams(context, action, this.transformConfigMap);
                                try {
                                    context.response.result = await action.target[action.action](...args);
                                }
                                catch (error) {
                                    context.response.error = error;
                                    if (hasHooks(hooks) &&
                                        hasHooksAction("onCatchAction", hooks) &&
                                        await resolveHooks(context, "onCatchAction", hooks)) {
                                        continue;
                                    }
                                    else {
                                        for (const middleware of middlewares) {
                                            await middleware.target.onPostRequest(context);
                                        }
                                        if (context.response.isImmediately()) {
                                            req.respond(context.response.getMergedResult());
                                            continue;
                                        }
                                        throw error;
                                    }
                                }
                                if (hasHooks(hooks) &&
                                    await resolveHooks(context, "onPostAction", hooks)) {
                                    continue;
                                }
                            }
                            if (context.response.isImmediately()) {
                                req.respond(context.response.getMergedResult());
                                continue;
                            }
                            for (const middleware of middlewares) {
                                await middleware.target.onPostRequest(context);
                            }
                            if (context.response.isImmediately()) {
                                req.respond(context.response.getMergedResult());
                                continue;
                            }
                            if (context.response.result === undefined) {
                                context.response.result = not_found_ts_1.notFoundAction();
                                req.respond(context.response.getMergedResult());
                                continue;
                            }
                            req.respond(context.response.getMergedResult());
                        }
                        catch (error) {
                            if (this.globalErrorHandler) {
                                this.globalErrorHandler(context, error);
                                if (context.response.isImmediately()) {
                                    req.respond(context.response.getMergedResult());
                                    continue;
                                }
                            }
                            if (context.response.isImmediately()) {
                                req.respond(context.response.getMergedResult());
                                continue;
                            }
                            if (!(error instanceof HttpError_ts_9.HttpError)) {
                                console.error(error);
                            }
                            req.respond(content_ts_3.Content(error, error.httpCode || 500));
                        }
                    }
                    return server;
                }
                close() {
                    if (this.server) {
                        this.server.close();
                    }
                    else {
                        console.warn("Server is not listening");
                    }
                }
                useStatic(config) {
                    if (config && !this.staticConfig) {
                        this.staticConfig = config;
                    }
                }
                useViewRender(config) {
                    if (config && !this.viewRenderConfig) {
                        this.viewRenderConfig = config;
                        global.viewRenderConfig = config;
                    }
                }
                useTransform(transform) {
                    if (!this.transformConfigMap) {
                        this.transformConfigMap = new Map();
                    }
                    this.transformConfigMap.set(transform.type, transform);
                }
                useCors(builder) {
                    this.metadata.middlewares.push({
                        type: "middleware",
                        target: builder,
                        route: /\//,
                    });
                }
                use(route, middleware) {
                    this.metadata.middlewares.push({
                        type: "middleware",
                        target: middleware,
                        route,
                    });
                }
                error(globalErrorHandler) {
                    this.globalErrorHandler = globalErrorHandler;
                }
            };
            exports_104("App", App);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/renderer/view", ["https://deno.land/x/alosaur@v0.21.1/src/deps", "https://deno.land/x/alosaur@v0.21.1/src/mod"], function (exports_105, context_105) {
    "use strict";
    var deps_ts_7, mod_ts_11;
    var __moduleName = context_105 && context_105.id;
    async function View(path, model, status = 200) {
        const headers = new Headers();
        headers.set("content-type", deps_ts_7.contentType("text/html"));
        const renderConfig = mod_ts_11.getViewRenderConfig();
        return {
            body: await renderConfig.getBody(path, model, renderConfig),
            status,
            headers,
            __isActionResult: true,
        };
    }
    exports_105("View", View);
    return {
        setters: [
            function (deps_ts_7_1) {
                deps_ts_7 = deps_ts_7_1;
            },
            function (mod_ts_11_1) {
                mod_ts_11 = mod_ts_11_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/renderer/redirect", [], function (exports_106, context_106) {
    "use strict";
    var __moduleName = context_106 && context_106.id;
    function Redirect(url) {
        const headers = new Headers();
        headers.append("Location", url);
        return {
            status: 302,
            headers,
            __isActionResult: true,
        };
    }
    exports_106("Redirect", Redirect);
    function RedirectPermanent(url) {
        const headers = new Headers();
        headers.append("Location", url);
        return {
            status: 301,
            headers,
            __isActionResult: true,
        };
    }
    exports_106("RedirectPermanent", RedirectPermanent);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/renderer/mod", ["https://deno.land/x/alosaur@v0.21.1/src/renderer/content", "https://deno.land/x/alosaur@v0.21.1/src/renderer/view", "https://deno.land/x/alosaur@v0.21.1/src/renderer/redirect", "https://deno.land/x/alosaur@v0.21.1/src/renderer/not-found"], function (exports_107, context_107) {
    "use strict";
    var __moduleName = context_107 && context_107.id;
    function exportStar_5(m) {
        var exports = {};
        for (var n in m) {
            if (n !== "default") exports[n] = m[n];
        }
        exports_107(exports);
    }
    return {
        setters: [
            function (content_ts_4_1) {
                exportStar_5(content_ts_4_1);
            },
            function (view_ts_1_1) {
                exportStar_5(view_ts_1_1);
            },
            function (redirect_ts_1_1) {
                exportStar_5(redirect_ts_1_1);
            },
            function (not_found_ts_2_1) {
                exportStar_5(not_found_ts_2_1);
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/decorator/Area", ["https://deno.land/x/alosaur@v0.21.1/src/mod"], function (exports_108, context_108) {
    "use strict";
    var mod_ts_12;
    var __moduleName = context_108 && context_108.id;
    function Area(config) {
        return function (object) {
            mod_ts_12.getMetadataArgsStorage().areas.push({
                type: "area",
                target: object,
                controllers: config && config.controllers,
                baseRoute: config && config.baseRoute,
            });
        };
    }
    exports_108("Area", Area);
    return {
        setters: [
            function (mod_ts_12_1) {
                mod_ts_12 = mod_ts_12_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/decorator/Controller", ["https://deno.land/x/alosaur@v0.21.1/src/mod", "https://deno.land/x/alosaur@v0.21.1/src/injection/reflection-helpers", "https://deno.land/x/alosaur@v0.21.1/src/injection/dependency-container"], function (exports_109, context_109) {
    "use strict";
    var mod_ts_13, reflection_helpers_ts_5, dependency_container_ts_7;
    var __moduleName = context_109 && context_109.id;
    function Controller(baseRoute) {
        return function (object) {
            dependency_container_ts_7.typeInfo.set(object, reflection_helpers_ts_5.getParamInfo(object));
            mod_ts_13.getMetadataArgsStorage().controllers.push({
                type: "default",
                target: object,
                route: baseRoute,
            });
        };
    }
    exports_109("Controller", Controller);
    return {
        setters: [
            function (mod_ts_13_1) {
                mod_ts_13 = mod_ts_13_1;
            },
            function (reflection_helpers_ts_5_1) {
                reflection_helpers_ts_5 = reflection_helpers_ts_5_1;
            },
            function (dependency_container_ts_7_1) {
                dependency_container_ts_7 = dependency_container_ts_7_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/decorator/Get", ["https://deno.land/x/alosaur@v0.21.1/src/mod", "https://deno.land/x/alosaur@v0.21.1/src/types/request-method"], function (exports_110, context_110) {
    "use strict";
    var mod_ts_14, request_method_ts_1;
    var __moduleName = context_110 && context_110.id;
    function Get(route) {
        return function (object, methodName) {
            mod_ts_14.getMetadataArgsStorage().actions.push({
                type: request_method_ts_1.RequestMethod.Get,
                object: object,
                target: object.constructor,
                method: methodName,
                route: route,
            });
        };
    }
    exports_110("Get", Get);
    return {
        setters: [
            function (mod_ts_14_1) {
                mod_ts_14 = mod_ts_14_1;
            },
            function (request_method_ts_1_1) {
                request_method_ts_1 = request_method_ts_1_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/decorator/Post", ["https://deno.land/x/alosaur@v0.21.1/src/mod", "https://deno.land/x/alosaur@v0.21.1/src/types/request-method"], function (exports_111, context_111) {
    "use strict";
    var mod_ts_15, request_method_ts_2;
    var __moduleName = context_111 && context_111.id;
    function Post(route) {
        return function (object, methodName) {
            mod_ts_15.getMetadataArgsStorage().actions.push({
                type: request_method_ts_2.RequestMethod.Post,
                object: object,
                target: object.constructor,
                method: methodName,
                route: route,
            });
        };
    }
    exports_111("Post", Post);
    return {
        setters: [
            function (mod_ts_15_1) {
                mod_ts_15 = mod_ts_15_1;
            },
            function (request_method_ts_2_1) {
                request_method_ts_2 = request_method_ts_2_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/decorator/Patch", ["https://deno.land/x/alosaur@v0.21.1/src/mod", "https://deno.land/x/alosaur@v0.21.1/src/types/request-method"], function (exports_112, context_112) {
    "use strict";
    var mod_ts_16, request_method_ts_3;
    var __moduleName = context_112 && context_112.id;
    function Patch(route) {
        return function (object, methodName) {
            mod_ts_16.getMetadataArgsStorage().actions.push({
                type: request_method_ts_3.RequestMethod.Path,
                object: object,
                target: object.constructor,
                method: methodName,
                route: route,
            });
        };
    }
    exports_112("Patch", Patch);
    return {
        setters: [
            function (mod_ts_16_1) {
                mod_ts_16 = mod_ts_16_1;
            },
            function (request_method_ts_3_1) {
                request_method_ts_3 = request_method_ts_3_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/decorator/Put", ["https://deno.land/x/alosaur@v0.21.1/src/mod", "https://deno.land/x/alosaur@v0.21.1/src/types/request-method"], function (exports_113, context_113) {
    "use strict";
    var mod_ts_17, request_method_ts_4;
    var __moduleName = context_113 && context_113.id;
    function Put(route) {
        return function (object, methodName) {
            mod_ts_17.getMetadataArgsStorage().actions.push({
                type: request_method_ts_4.RequestMethod.Put,
                object: object,
                target: object.constructor,
                method: methodName,
                route: route,
            });
        };
    }
    exports_113("Put", Put);
    return {
        setters: [
            function (mod_ts_17_1) {
                mod_ts_17 = mod_ts_17_1;
            },
            function (request_method_ts_4_1) {
                request_method_ts_4 = request_method_ts_4_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/decorator/Delete", ["https://deno.land/x/alosaur@v0.21.1/src/mod", "https://deno.land/x/alosaur@v0.21.1/src/types/request-method"], function (exports_114, context_114) {
    "use strict";
    var mod_ts_18, request_method_ts_5;
    var __moduleName = context_114 && context_114.id;
    function Delete(route) {
        return function (object, methodName) {
            mod_ts_18.getMetadataArgsStorage().actions.push({
                type: request_method_ts_5.RequestMethod.Delete,
                object: object,
                target: object.constructor,
                method: methodName,
                route: route,
            });
        };
    }
    exports_114("Delete", Delete);
    return {
        setters: [
            function (mod_ts_18_1) {
                mod_ts_18 = mod_ts_18_1;
            },
            function (request_method_ts_5_1) {
                request_method_ts_5 = request_method_ts_5_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/decorator/Param", ["https://deno.land/x/alosaur@v0.21.1/src/mod", "https://deno.land/x/alosaur@v0.21.1/src/types/param"], function (exports_115, context_115) {
    "use strict";
    var mod_ts_19, param_ts_1;
    var __moduleName = context_115 && context_115.id;
    function Param(name) {
        return function (object, methodName, index) {
            mod_ts_19.getMetadataArgsStorage().params.push({
                type: param_ts_1.ParamType.RouteParam,
                target: object.constructor,
                method: methodName,
                index: index,
                name: name,
            });
        };
    }
    exports_115("Param", Param);
    return {
        setters: [
            function (mod_ts_19_1) {
                mod_ts_19 = mod_ts_19_1;
            },
            function (param_ts_1_1) {
                param_ts_1 = param_ts_1_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/decorator/QueryParam", ["https://deno.land/x/alosaur@v0.21.1/src/mod", "https://deno.land/x/alosaur@v0.21.1/src/types/param"], function (exports_116, context_116) {
    "use strict";
    var mod_ts_20, param_ts_2;
    var __moduleName = context_116 && context_116.id;
    function QueryParam(name) {
        return function (object, methodName, index) {
            mod_ts_20.getMetadataArgsStorage().params.push({
                type: param_ts_2.ParamType.Query,
                target: object.constructor,
                method: methodName,
                index: index,
                name: name,
            });
        };
    }
    exports_116("QueryParam", QueryParam);
    return {
        setters: [
            function (mod_ts_20_1) {
                mod_ts_20 = mod_ts_20_1;
            },
            function (param_ts_2_1) {
                param_ts_2 = param_ts_2_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/decorator/Req", ["https://deno.land/x/alosaur@v0.21.1/src/mod", "https://deno.land/x/alosaur@v0.21.1/src/types/param"], function (exports_117, context_117) {
    "use strict";
    var mod_ts_21, param_ts_3;
    var __moduleName = context_117 && context_117.id;
    function Req() {
        return function (object, methodName, index) {
            mod_ts_21.getMetadataArgsStorage().params.push({
                type: param_ts_3.ParamType.Request,
                target: object.constructor,
                method: methodName,
                index: index,
            });
        };
    }
    exports_117("Req", Req);
    return {
        setters: [
            function (mod_ts_21_1) {
                mod_ts_21 = mod_ts_21_1;
            },
            function (param_ts_3_1) {
                param_ts_3 = param_ts_3_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/decorator/Res", ["https://deno.land/x/alosaur@v0.21.1/src/mod", "https://deno.land/x/alosaur@v0.21.1/src/types/param"], function (exports_118, context_118) {
    "use strict";
    var mod_ts_22, param_ts_4;
    var __moduleName = context_118 && context_118.id;
    function Res() {
        return function (object, methodName, index) {
            mod_ts_22.getMetadataArgsStorage().params.push({
                type: param_ts_4.ParamType.Response,
                target: object.constructor,
                method: methodName,
                index: index,
            });
        };
    }
    exports_118("Res", Res);
    return {
        setters: [
            function (mod_ts_22_1) {
                mod_ts_22 = mod_ts_22_1;
            },
            function (param_ts_4_1) {
                param_ts_4 = param_ts_4_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/decorator/Cookie", ["https://deno.land/x/alosaur@v0.21.1/src/mod", "https://deno.land/x/alosaur@v0.21.1/src/types/param"], function (exports_119, context_119) {
    "use strict";
    var mod_ts_23, param_ts_5;
    var __moduleName = context_119 && context_119.id;
    function Cookie(name) {
        return function (object, methodName, index) {
            mod_ts_23.getMetadataArgsStorage().params.push({
                type: param_ts_5.ParamType.Cookie,
                target: object.constructor,
                method: methodName,
                index: index,
                name: name,
            });
        };
    }
    exports_119("Cookie", Cookie);
    return {
        setters: [
            function (mod_ts_23_1) {
                mod_ts_23 = mod_ts_23_1;
            },
            function (param_ts_5_1) {
                param_ts_5 = param_ts_5_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/decorator/Body", ["https://deno.land/x/alosaur@v0.21.1/src/mod", "https://deno.land/x/alosaur@v0.21.1/src/types/param"], function (exports_120, context_120) {
    "use strict";
    var mod_ts_24, param_ts_6;
    var __moduleName = context_120 && context_120.id;
    function Body(transform) {
        return function (object, methodName, index) {
            mod_ts_24.getMetadataArgsStorage().params.push({
                type: param_ts_6.ParamType.Body,
                target: object.constructor,
                method: methodName,
                index: index,
                transform,
            });
        };
    }
    exports_120("Body", Body);
    return {
        setters: [
            function (mod_ts_24_1) {
                mod_ts_24 = mod_ts_24_1;
            },
            function (param_ts_6_1) {
                param_ts_6 = param_ts_6_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/decorator/UseHook", ["https://deno.land/x/alosaur@v0.21.1/src/mod", "https://deno.land/x/alosaur@v0.21.1/src/types/business"], function (exports_121, context_121) {
    "use strict";
    var mod_ts_25, business_ts_1;
    var __moduleName = context_121 && context_121.id;
    function UseHook(hook, payload) {
        return function (object, methodName) {
            const metadata = mod_ts_25.getMetadataArgsStorage();
            metadata.hooks.push({
                type: methodName ? business_ts_1.BusinessType.Action : business_ts_1.BusinessType.Controller,
                object,
                target: object.constructor,
                method: methodName,
                instance: metadata.container.resolve(hook),
                payload,
            });
        };
    }
    exports_121("UseHook", UseHook);
    return {
        setters: [
            function (mod_ts_25_1) {
                mod_ts_25 = mod_ts_25_1;
            },
            function (business_ts_1_1) {
                business_ts_1 = business_ts_1_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/decorator/Middleware", ["https://deno.land/x/alosaur@v0.21.1/src/mod"], function (exports_122, context_122) {
    "use strict";
    var mod_ts_26;
    var __moduleName = context_122 && context_122.id;
    function Middleware(route) {
        return function (middleware) {
            mod_ts_26.getMetadataArgsStorage().middlewares.push({
                type: "middleware",
                target: new middleware(),
                route: route,
            });
        };
    }
    exports_122("Middleware", Middleware);
    return {
        setters: [
            function (mod_ts_26_1) {
                mod_ts_26 = mod_ts_26_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/decorator/mod", ["https://deno.land/x/alosaur@v0.21.1/src/decorator/Area", "https://deno.land/x/alosaur@v0.21.1/src/decorator/Controller", "https://deno.land/x/alosaur@v0.21.1/src/decorator/Get", "https://deno.land/x/alosaur@v0.21.1/src/decorator/Post", "https://deno.land/x/alosaur@v0.21.1/src/decorator/Patch", "https://deno.land/x/alosaur@v0.21.1/src/decorator/Put", "https://deno.land/x/alosaur@v0.21.1/src/decorator/Delete", "https://deno.land/x/alosaur@v0.21.1/src/decorator/Param", "https://deno.land/x/alosaur@v0.21.1/src/decorator/QueryParam", "https://deno.land/x/alosaur@v0.21.1/src/decorator/Req", "https://deno.land/x/alosaur@v0.21.1/src/decorator/Res", "https://deno.land/x/alosaur@v0.21.1/src/decorator/Cookie", "https://deno.land/x/alosaur@v0.21.1/src/decorator/Body", "https://deno.land/x/alosaur@v0.21.1/src/decorator/UseHook", "https://deno.land/x/alosaur@v0.21.1/src/decorator/Middleware"], function (exports_123, context_123) {
    "use strict";
    var __moduleName = context_123 && context_123.id;
    function exportStar_6(m) {
        var exports = {};
        for (var n in m) {
            if (n !== "default") exports[n] = m[n];
        }
        exports_123(exports);
    }
    return {
        setters: [
            function (Area_ts_1_1) {
                exportStar_6(Area_ts_1_1);
            },
            function (Controller_ts_1_1) {
                exportStar_6(Controller_ts_1_1);
            },
            function (Get_ts_1_1) {
                exportStar_6(Get_ts_1_1);
            },
            function (Post_ts_1_1) {
                exportStar_6(Post_ts_1_1);
            },
            function (Patch_ts_1_1) {
                exportStar_6(Patch_ts_1_1);
            },
            function (Put_ts_1_1) {
                exportStar_6(Put_ts_1_1);
            },
            function (Delete_ts_1_1) {
                exportStar_6(Delete_ts_1_1);
            },
            function (Param_ts_1_1) {
                exportStar_6(Param_ts_1_1);
            },
            function (QueryParam_ts_1_1) {
                exportStar_6(QueryParam_ts_1_1);
            },
            function (Req_ts_1_1) {
                exportStar_6(Req_ts_1_1);
            },
            function (Res_ts_1_1) {
                exportStar_6(Res_ts_1_1);
            },
            function (Cookie_ts_1_1) {
                exportStar_6(Cookie_ts_1_1);
            },
            function (Body_ts_1_1) {
                exportStar_6(Body_ts_1_1);
            },
            function (UseHook_ts_1_1) {
                exportStar_6(UseHook_ts_1_1);
            },
            function (Middleware_ts_1_1) {
                exportStar_6(Middleware_ts_1_1);
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/middlewares/spa-builder", ["https://deno.land/x/alosaur@v0.21.1/src/static/send", "https://deno.land/x/alosaur@v0.21.1/src/utils/get-static-file"], function (exports_124, context_124) {
    "use strict";
    var send_ts_2, get_static_file_ts_2, SpaBuilder;
    var __moduleName = context_124 && context_124.id;
    function hasUrlExtension(url) {
        const fragments = url.split("/");
        return fragments[fragments.length - 1].includes(".");
    }
    return {
        setters: [
            function (send_ts_2_1) {
                send_ts_2 = send_ts_2_1;
            },
            function (get_static_file_ts_2_1) {
                get_static_file_ts_2 = get_static_file_ts_2_1;
            }
        ],
        execute: function () {
            SpaBuilder = class SpaBuilder {
                constructor(staticConfig) {
                    this.staticConfig = staticConfig;
                }
                onPreRequest(context) {
                    return new Promise(async (resolve, reject) => {
                        if (await get_static_file_ts_2.getStaticFile(context, this.staticConfig, false)) {
                            context.response.setImmediately();
                        }
                        resolve();
                    });
                }
                onPostRequest(context) {
                    return new Promise(async (resolve, reject) => {
                        if (context.response.result === undefined && this.staticConfig.index &&
                            !hasUrlExtension(context.request.url)) {
                            if (await send_ts_2.send({
                                request: context.request.serverRequest,
                                response: context.response,
                            }, this.staticConfig.index, this.staticConfig)) {
                                context.response.setImmediately();
                            }
                        }
                        resolve();
                    });
                }
            };
            exports_124("SpaBuilder", SpaBuilder);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/middlewares/mod", ["https://deno.land/x/alosaur@v0.21.1/src/middlewares/cors-builder", "https://deno.land/x/alosaur@v0.21.1/src/middlewares/spa-builder"], function (exports_125, context_125) {
    "use strict";
    var __moduleName = context_125 && context_125.id;
    function exportStar_7(m) {
        var exports = {};
        for (var n in m) {
            if (n !== "default") exports[n] = m[n];
        }
        exports_125(exports);
    }
    return {
        setters: [
            function (cors_builder_ts_1_1) {
                exportStar_7(cors_builder_ts_1_1);
            },
            function (spa_builder_ts_1_1) {
                exportStar_7(spa_builder_ts_1_1);
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/src/models/mod", ["https://deno.land/x/alosaur@v0.21.1/src/models/context", "https://deno.land/x/alosaur@v0.21.1/src/models/hook", "https://deno.land/x/alosaur@v0.21.1/src/models/request", "https://deno.land/x/alosaur@v0.21.1/src/models/response", "https://deno.land/x/alosaur@v0.21.1/src/models/static-config", "https://deno.land/x/alosaur@v0.21.1/src/models/transform-config", "https://deno.land/x/alosaur@v0.21.1/src/models/view-render-config", "https://deno.land/x/alosaur@v0.21.1/src/models/middleware-target", "https://deno.land/x/alosaur@v0.21.1/src/models/app-settings"], function (exports_126, context_126) {
    "use strict";
    var __moduleName = context_126 && context_126.id;
    function exportStar_8(m) {
        var exports = {};
        for (var n in m) {
            if (n !== "default") exports[n] = m[n];
        }
        exports_126(exports);
    }
    return {
        setters: [
            function (context_ts_2_1) {
                exportStar_8(context_ts_2_1);
            },
            function (hook_ts_1_1) {
                exportStar_8(hook_ts_1_1);
            },
            function (request_ts_2_1) {
                exportStar_8(request_ts_2_1);
            },
            function (response_ts_2_1) {
                exportStar_8(response_ts_2_1);
            },
            function (static_config_ts_1_1) {
                exportStar_8(static_config_ts_1_1);
            },
            function (transform_config_ts_1_1) {
                exportStar_8(transform_config_ts_1_1);
            },
            function (view_render_config_ts_1_1) {
                exportStar_8(view_render_config_ts_1_1);
            },
            function (middleware_target_ts_1_1) {
                exportStar_8(middleware_target_ts_1_1);
            },
            function (app_settings_ts_1_1) {
                exportStar_8(app_settings_ts_1_1);
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/mod", ["https://deno.land/x/alosaur@v0.21.1/src/http-error/mod", "https://deno.land/x/alosaur@v0.21.1/src/renderer/mod", "https://deno.land/x/alosaur@v0.21.1/src/decorator/mod", "https://deno.land/x/alosaur@v0.21.1/src/middlewares/mod", "https://deno.land/x/alosaur@v0.21.1/src/injection/index", "https://deno.land/x/alosaur@v0.21.1/src/models/mod", "https://deno.land/x/alosaur@v0.21.1/src/mod"], function (exports_127, context_127) {
    "use strict";
    var __moduleName = context_127 && context_127.id;
    function exportStar_9(m) {
        var exports = {};
        for (var n in m) {
            if (n !== "default") exports[n] = m[n];
        }
        exports_127(exports);
    }
    return {
        setters: [
            function (mod_ts_27_1) {
                exportStar_9(mod_ts_27_1);
            },
            function (mod_ts_28_1) {
                exportStar_9(mod_ts_28_1);
            },
            function (mod_ts_29_1) {
                exportStar_9(mod_ts_29_1);
            },
            function (mod_ts_30_1) {
                exportStar_9(mod_ts_30_1);
            },
            function (index_ts_8_1) {
                exportStar_9(index_ts_8_1);
            },
            function (mod_ts_31_1) {
                exportStar_9(mod_ts_31_1);
            },
            function (mod_ts_32_1) {
                exportStar_9(mod_ts_32_1);
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/std@0.61.0/fs/write_json", [], function (exports_128, context_128) {
    "use strict";
    var __moduleName = context_128 && context_128.id;
    async function writeJson(filePath, object, options = {}) {
        let contentRaw = "";
        try {
            contentRaw = JSON.stringify(object, options.replacer, options.spaces);
        }
        catch (err) {
            err.message = `${filePath}: ${err.message}`;
            throw err;
        }
        await Deno.writeFile(filePath, new TextEncoder().encode(contentRaw));
    }
    exports_128("writeJson", writeJson);
    function writeJsonSync(filePath, object, options = {}) {
        let contentRaw = "";
        try {
            contentRaw = JSON.stringify(object, options.replacer, options.spaces);
        }
        catch (err) {
            err.message = `${filePath}: ${err.message}`;
            throw err;
        }
        Deno.writeFileSync(filePath, new TextEncoder().encode(contentRaw));
    }
    exports_128("writeJsonSync", writeJsonSync);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/openapi/builder/specification-extension", [], function (exports_129, context_129) {
    "use strict";
    var SpecificationExtension;
    var __moduleName = context_129 && context_129.id;
    return {
        setters: [],
        execute: function () {
            SpecificationExtension = class SpecificationExtension {
                static isValidExtension(extensionName) {
                    return /^x\-/.test(extensionName);
                }
                getExtension(extensionName) {
                    if (!SpecificationExtension.isValidExtension(extensionName)) {
                        throw new Error("Invalid specification extension: '" + extensionName +
                            "'. Extensions must start with prefix 'x-");
                    }
                    if (this[extensionName]) {
                        return this[extensionName];
                    }
                    return null;
                }
                addExtension(extensionName, payload) {
                    if (!SpecificationExtension.isValidExtension(extensionName)) {
                        throw new Error("Invalid specification extension: '" + extensionName +
                            "'. Extensions must start with prefix 'x-");
                    }
                    this[extensionName] = payload;
                }
                listExtensions() {
                    let res = [];
                    for (let propName in this) {
                        if (this.hasOwnProperty(propName)) {
                            if (SpecificationExtension.isValidExtension(propName)) {
                                res.push(propName);
                            }
                        }
                    }
                    return res;
                }
            };
            exports_129("SpecificationExtension", SpecificationExtension);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/openapi/builder/openapi-models", ["https://deno.land/x/alosaur@v0.21.1/openapi/builder/specification-extension"], function (exports_130, context_130) {
    "use strict";
    var specification_extension_ts_1;
    var __moduleName = context_130 && context_130.id;
    function getExtension(obj, extensionName) {
        if (specification_extension_ts_1.SpecificationExtension.isValidExtension(extensionName)) {
            return obj[extensionName];
        }
        return undefined;
    }
    exports_130("getExtension", getExtension);
    function addExtension(obj, extensionName, extension) {
        if (specification_extension_ts_1.SpecificationExtension.isValidExtension(extensionName)) {
            obj[extensionName] = extension;
        }
    }
    exports_130("addExtension", addExtension);
    function getPath(pathsObject, path) {
        if (specification_extension_ts_1.SpecificationExtension.isValidExtension(path)) {
            return undefined;
        }
        return pathsObject[path];
    }
    exports_130("getPath", getPath);
    function isReferenceObject(obj) {
        return obj.hasOwnProperty("$ref");
    }
    exports_130("isReferenceObject", isReferenceObject);
    function isSchemaObject(schema) {
        return !schema.hasOwnProperty("$ref");
    }
    exports_130("isSchemaObject", isSchemaObject);
    return {
        setters: [
            function (specification_extension_ts_1_1) {
                specification_extension_ts_1 = specification_extension_ts_1_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/openapi/builder/openapi-builder", [], function (exports_131, context_131) {
    "use strict";
    var OpenApiBuilder;
    var __moduleName = context_131 && context_131.id;
    return {
        setters: [],
        execute: function () {
            OpenApiBuilder = class OpenApiBuilder {
                constructor(doc) {
                    this.rootDoc = doc || {
                        openapi: "3.0.0",
                        info: {
                            title: "app",
                            version: "version",
                        },
                        paths: {},
                        components: {
                            schemas: {},
                            responses: {},
                            parameters: {},
                            examples: {},
                            requestBodies: {},
                            headers: {},
                            securitySchemes: {},
                            links: {},
                            callbacks: {},
                        },
                        tags: [],
                        servers: [],
                    };
                }
                static create(doc) {
                    return new OpenApiBuilder(doc);
                }
                getSpec() {
                    return this.rootDoc;
                }
                getSpecAsJson(replacer, space) {
                    return JSON.stringify(this.rootDoc, replacer, space);
                }
                getSpecAsYaml() {
                    throw Error("Not yet implemented.");
                }
                static isValidOpenApiVersion(v = "") {
                    let match = /(\d+)\.(\d+).(\d+)/.exec(v);
                    if (match) {
                        let major = parseInt(match[1], 10);
                        if (major >= 3) {
                            return true;
                        }
                    }
                    return false;
                }
                addOpenApiVersion(openApiVersion) {
                    if (!OpenApiBuilder.isValidOpenApiVersion(openApiVersion)) {
                        throw new Error("Invalid OpnApi version: " + openApiVersion +
                            ". Follow convention: 3.x.y");
                    }
                    this.rootDoc.openapi = openApiVersion;
                    return this;
                }
                addInfo(info) {
                    this.rootDoc.info = info;
                    return this;
                }
                addContact(contact) {
                    this.rootDoc.info.contact = contact;
                    return this;
                }
                addLicense(license) {
                    this.rootDoc.info.license = license;
                    return this;
                }
                addTitle(title) {
                    this.rootDoc.info.title = title;
                    return this;
                }
                addDescription(description) {
                    this.rootDoc.info.description = description;
                    return this;
                }
                addTermsOfService(termsOfService) {
                    this.rootDoc.info.termsOfService = termsOfService;
                    return this;
                }
                addVersion(version) {
                    this.rootDoc.info.version = version;
                    return this;
                }
                addPath(path, pathItem) {
                    this.rootDoc.paths[path] = pathItem;
                    return this;
                }
                addSchema(name, schema) {
                    this.rootDoc.components.schemas[name] = schema;
                    return this;
                }
                addResponse(name, response) {
                    this.rootDoc.components.responses[name] = response;
                    return this;
                }
                addParameter(name, parameter) {
                    this.rootDoc.components.parameters[name] = parameter;
                    return this;
                }
                addExample(name, example) {
                    this.rootDoc.components.examples[name] = example;
                    return this;
                }
                addRequestBody(name, reqBody) {
                    this.rootDoc.components.requestBodies[name] = reqBody;
                    return this;
                }
                addHeader(name, header) {
                    this.rootDoc.components.headers[name] = header;
                    return this;
                }
                addSecurityScheme(name, secScheme) {
                    this.rootDoc.components.securitySchemes[name] = secScheme;
                    return this;
                }
                addLink(name, link) {
                    this.rootDoc.components.links[name] = link;
                    return this;
                }
                addCallback(name, callback) {
                    this.rootDoc.components.callbacks[name] = callback;
                    return this;
                }
                addServer(server) {
                    this.rootDoc.servers.push(server);
                    return this;
                }
                addTag(tag) {
                    this.rootDoc.tags.push(tag);
                    return this;
                }
                addExternalDocs(extDoc) {
                    this.rootDoc.externalDocs = extDoc;
                    return this;
                }
            };
            exports_131("OpenApiBuilder", OpenApiBuilder);
        }
    };
});
System.register("https://deno.land/x/alosaur@v0.21.1/openapi/mod", ["https://deno.land/x/alosaur@v0.21.1/src/mod", "https://deno.land/std@0.61.0/fs/write_json", "https://deno.land/x/alosaur@v0.21.1/src/utils/register-controllers", "https://deno.land/x/alosaur@v0.21.1/src/utils/register-areas", "https://deno.land/x/alosaur@v0.21.1/openapi/builder/openapi-builder"], function (exports_132, context_132) {
    "use strict";
    var mod_ts_33, write_json_ts_1, register_controllers_ts_2, register_areas_ts_2, openapi_builder_ts_1, AlosaurOpenApiBuilder;
    var __moduleName = context_132 && context_132.id;
    return {
        setters: [
            function (mod_ts_33_1) {
                mod_ts_33 = mod_ts_33_1;
            },
            function (write_json_ts_1_1) {
                write_json_ts_1 = write_json_ts_1_1;
            },
            function (register_controllers_ts_2_1) {
                register_controllers_ts_2 = register_controllers_ts_2_1;
            },
            function (register_areas_ts_2_1) {
                register_areas_ts_2 = register_areas_ts_2_1;
            },
            function (openapi_builder_ts_1_1) {
                openapi_builder_ts_1 = openapi_builder_ts_1_1;
            }
        ],
        execute: function () {
            AlosaurOpenApiBuilder = class AlosaurOpenApiBuilder {
                constructor(settings) {
                    this.classes = [];
                    this.routes = [];
                    this.builder = new openapi_builder_ts_1.OpenApiBuilder();
                    this.metadata = mod_ts_33.getMetadataArgsStorage();
                    register_areas_ts_2.registerAreas(this.metadata);
                    register_controllers_ts_2.registerControllers(this.metadata.controllers, this.classes, (route) => {
                        const openApiRoute = route.route.replace(/:[A-Za-z1-9]+/g, (m) => `{${m.substr(1)}}`);
                        this.builder.addPath(openApiRoute, this.getPathItem(route));
                    }, false);
                }
                static create(settings) {
                    return new AlosaurOpenApiBuilder(settings);
                }
                getSpec() {
                    return this.builder.getSpec();
                }
                saveToFile(path = "./openapi.json") {
                    write_json_ts_1.writeJsonSync(path, this.getSpec());
                    return this;
                }
                print() {
                    console.log(this.builder.getSpec());
                }
                getPathItem(route) {
                    const operation = {
                        tags: [route.baseRoute],
                        responses: {
                            "200": {
                                description: "",
                            },
                        },
                    };
                    operation.parameters = [];
                    route.params.forEach((param) => {
                        switch (param.type) {
                            case "query":
                                operation.parameters.push({
                                    name: param.name,
                                    in: "query",
                                    schema: { type: "string" },
                                });
                                break;
                            case "route-param":
                                operation.parameters.push({
                                    name: param.name,
                                    required: true,
                                    in: "path",
                                    schema: { type: "string" },
                                });
                                break;
                            case "cookie":
                                operation.parameters.push({
                                    name: param.name,
                                    in: "cookie",
                                    schema: { type: "string" },
                                });
                                break;
                        }
                    });
                    return {
                        [route.method.toLowerCase()]: operation,
                    };
                }
                addTitle(title) {
                    this.builder.addTitle(title);
                    return this;
                }
                addVersion(version) {
                    this.builder.addVersion(version);
                    return this;
                }
                addDescription(description) {
                    this.builder.addDescription(description);
                    return this;
                }
                addServer(server) {
                    this.builder.addServer(server);
                    return this;
                }
            };
            exports_132("AlosaurOpenApiBuilder", AlosaurOpenApiBuilder);
        }
    };
});
System.register("https://deno.land/x/dotenv@v0.5.0/util", [], function (exports_133, context_133) {
    "use strict";
    var __moduleName = context_133 && context_133.id;
    function trim(val) {
        return val.trim();
    }
    exports_133("trim", trim);
    function compact(obj) {
        return Object.keys(obj).reduce((result, key) => {
            if (obj[key]) {
                result[key] = obj[key];
            }
            return result;
        }, {});
    }
    exports_133("compact", compact);
    function difference(arrA, arrB) {
        return arrA.filter((a) => arrB.indexOf(a) < 0);
    }
    exports_133("difference", difference);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/dotenv@v0.5.0/mod", ["https://deno.land/x/dotenv@v0.5.0/util"], function (exports_134, context_134) {
    "use strict";
    var util_ts_1, MissingEnvVarsError;
    var __moduleName = context_134 && context_134.id;
    function parse(rawDotenv) {
        return rawDotenv.split("\n").reduce((acc, line) => {
            if (!isVariableStart(line))
                return acc;
            let [key, ...vals] = line.split("=");
            let value = util_ts_1.trim(vals.join("="));
            if (/^"/.test(value)) {
                value = expandNewlines(value);
            }
            acc[util_ts_1.trim(key)] = util_ts_1.trim(cleanQuotes(value));
            return acc;
        }, {});
    }
    exports_134("parse", parse);
    function config(options = {}) {
        const o = Object.assign({
            path: `.env`,
            export: false,
            safe: false,
            example: `.env.example`,
            allowEmptyValues: false,
            defaults: `.env.defaults`,
        }, options);
        const conf = parseFile(o.path);
        if (o.safe) {
            const confExample = parseFile(o.example);
            assertSafe(conf, confExample, o.allowEmptyValues);
        }
        if (o.defaults) {
            const confDefaults = parseFile(o.defaults);
            for (let key in confDefaults) {
                if (!(key in conf)) {
                    conf[key] = confDefaults[key];
                }
            }
        }
        if (o.export) {
            for (let key in conf) {
                Deno.env.set(key, conf[key]);
            }
        }
        return conf;
    }
    exports_134("config", config);
    function parseFile(filepath) {
        try {
            return parse(new TextDecoder("utf-8").decode(Deno.readFileSync(filepath)));
        }
        catch (e) {
            if (e instanceof Deno.errors.NotFound)
                return {};
            throw e;
        }
    }
    function isVariableStart(str) {
        return /^\s*?[a-zA-Z_][a-zA-Z_0-9 ]*=/.test(str);
    }
    function cleanQuotes(value = "") {
        return value.replace(/^['"]([\s\S]*)['"]$/gm, "$1");
    }
    function expandNewlines(str) {
        return str.replace("\\n", "\n");
    }
    function assertSafe(conf, confExample, allowEmptyValues) {
        const currentEnv = Deno.env.toObject();
        const confWithEnv = Object.assign({}, currentEnv, conf);
        const missing = util_ts_1.difference(Object.keys(confExample), Object.keys(allowEmptyValues ? confWithEnv : util_ts_1.compact(confWithEnv)));
        if (missing.length > 0) {
            const errorMessages = [
                `The following variables were defined in the example file but are not present in the environment:\n  ${missing.join(", ")}`,
                `Make sure to add them to your env file.`,
                !allowEmptyValues &&
                    `If you expect any of these variables to be empty, you can set the allowEmptyValues option to true.`,
            ];
            throw new MissingEnvVarsError(errorMessages.filter(Boolean).join("\n\n"));
        }
    }
    return {
        setters: [
            function (util_ts_1_1) {
                util_ts_1 = util_ts_1_1;
            }
        ],
        execute: function () {
            MissingEnvVarsError = class MissingEnvVarsError extends Error {
                constructor(message) {
                    super(message);
                    this.name = "MissingEnvVarsError";
                    Object.setPrototypeOf(this, new.target.prototype);
                }
            };
            exports_134("MissingEnvVarsError", MissingEnvVarsError);
        }
    };
});
System.register("https://deno.land/x/colorlog@v1.0/mod", [], function (exports_135, context_135) {
    "use strict";
    var reset, red, green, yellow;
    var __moduleName = context_135 && context_135.id;
    function error(val) {
        return (red + val + reset);
    }
    exports_135("error", error);
    function success(val) {
        return (green + val + reset);
    }
    exports_135("success", success);
    function warning(val) {
        return (yellow + val + reset);
    }
    exports_135("warning", warning);
    function errorLog(val) {
        console.log(red + val + reset);
    }
    exports_135("errorLog", errorLog);
    function successLog(val) {
        console.log(green + val + reset);
    }
    exports_135("successLog", successLog);
    function warningLog(val) {
        console.log(yellow + val + reset);
    }
    exports_135("warningLog", warningLog);
    return {
        setters: [],
        execute: function () {
            reset = "\x1b[0m";
            red = "\x1b[31m";
            green = "\x1b[32m";
            yellow = "\x1b[33m";
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/chunk-0c2d1322", [], function (exports_136, context_136) {
    "use strict";
    var e, t, n, r, o, l, s, f, a, T, addListener, argv, binding, browser, chdir, cwd, emit, env, listeners, nextTick, off, on, once, prependListener, prependOnceListener, removeAllListeners, removeListener, title, umask, version, versions;
    var __moduleName = context_136 && context_136.id;
    function i() { throw new Error("setTimeout has not been defined"); }
    function u() { throw new Error("clearTimeout has not been defined"); }
    function c(e) { if (t === setTimeout)
        return setTimeout(e, 0); if ((t === i || !t) && setTimeout)
        return t = setTimeout, setTimeout(e, 0); try {
        return t(e, 0);
    }
    catch (n) {
        try {
            return t.call(null, e, 0);
        }
        catch (n) {
            return t.call(this || r, e, 0);
        }
    } }
    function h() { f && l && (f = !1, l.length ? s = l.concat(s) : a = -1, s.length && d()); }
    function d() { if (!f) {
        var e = c(h);
        f = !0;
        for (var t = s.length; t;) {
            for (l = s, s = []; ++a < t;)
                l && l[a].run();
            a = -1, t = s.length;
        }
        l = null, f = !1, function (e) { if (n === clearTimeout)
            return clearTimeout(e); if ((n === u || !n) && clearTimeout)
            return n = clearTimeout, clearTimeout(e); try {
            n(e);
        }
        catch (t) {
            try {
                return n.call(null, e);
            }
            catch (t) {
                return n.call(this || r, e);
            }
        } }(e);
    } }
    function m(e, t) { (this || r).fun = e, (this || r).array = t; }
    function p() { }
    return {
        setters: [],
        execute: function () {
            r = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self ? self : global, o = e = {};
            !function () { try {
                t = "function" == typeof setTimeout ? setTimeout : i;
            }
            catch (e) {
                t = i;
            } try {
                n = "function" == typeof clearTimeout ? clearTimeout : u;
            }
            catch (e) {
                n = u;
            } }();
            s = [], f = !1, a = -1;
            o.nextTick = function (e) { var t = new Array(arguments.length - 1); if (arguments.length > 1)
                for (var n = 1; n < arguments.length; n++)
                    t[n - 1] = arguments[n]; s.push(new m(e, t)), 1 !== s.length || f || c(d); }, m.prototype.run = function () { (this || r).fun.apply(null, (this || r).array); }, o.title = "browser", o.browser = !0, o.env = {}, o.argv = [], o.version = "", o.versions = {}, o.on = p, o.addListener = p, o.once = p, o.off = p, o.removeListener = p, o.removeAllListeners = p, o.emit = p, o.prependListener = p, o.prependOnceListener = p, o.listeners = function (e) { return []; }, o.binding = function (e) { throw new Error("process.binding is not supported"); }, o.cwd = function () { return "/"; }, o.chdir = function (e) { throw new Error("process.chdir is not supported"); }, o.umask = function () { return 0; };
            T = e;
            exports_136("h", T);
            exports_136("w", T);
            addListener = T.addListener;
            exports_136("a", addListener);
            argv = T.argv;
            exports_136("b", argv);
            binding = T.binding;
            exports_136("c", binding);
            browser = T.browser;
            exports_136("d", browser);
            chdir = T.chdir;
            exports_136("e", chdir);
            cwd = T.cwd;
            exports_136("f", cwd);
            emit = T.emit;
            exports_136("g", emit);
            env = T.env;
            exports_136("i", env);
            listeners = T.listeners;
            exports_136("l", listeners);
            nextTick = T.nextTick;
            exports_136("n", nextTick);
            off = T.off;
            exports_136("o", off);
            on = T.on;
            exports_136("j", on);
            once = T.once;
            exports_136("k", once);
            prependListener = T.prependListener;
            exports_136("p", prependListener);
            prependOnceListener = T.prependOnceListener;
            exports_136("m", prependOnceListener);
            removeAllListeners = T.removeAllListeners;
            exports_136("r", removeAllListeners);
            removeListener = T.removeListener;
            exports_136("q", removeListener);
            title = T.title;
            exports_136("t", title);
            umask = T.umask;
            exports_136("u", umask);
            version = T.version;
            exports_136("v", version);
            versions = T.versions;
            exports_136("s", versions);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/chunk-dac557ba", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/chunk-0c2d1322"], function (exports_137, context_137) {
    "use strict";
    var chunk_0c2d1322_js_1, t, e, o, n, r, l, t$1, o$1, n$1, e$1, r$1, c, u, i, t$2, i$1, o$2, u$1, f, a, s, p, y, l$1, d, m, h, j, A, Q, X, Y, ee, te, re, ne, Se, Ee;
    var __moduleName = context_137 && context_137.id;
    function c$1(e) { return e.call.bind(e); }
    function O(e, t) { if ("object" != typeof e)
        return !1; try {
        return t(e), !0;
    }
    catch (e) {
        return !1;
    } }
    function S(e) { return l$1 && y ? void 0 !== b(e) : B(e) || k(e) || E(e) || D(e) || U(e) || P(e) || x(e) || I(e) || M(e) || z(e) || F(e); }
    function B(e) { return l$1 && y ? "Uint8Array" === b(e) : "[object Uint8Array]" === m(e) || u$1(e) && void 0 !== e.buffer; }
    function k(e) { return l$1 && y ? "Uint8ClampedArray" === b(e) : "[object Uint8ClampedArray]" === m(e); }
    function E(e) { return l$1 && y ? "Uint16Array" === b(e) : "[object Uint16Array]" === m(e); }
    function D(e) { return l$1 && y ? "Uint32Array" === b(e) : "[object Uint32Array]" === m(e); }
    function U(e) { return l$1 && y ? "Int8Array" === b(e) : "[object Int8Array]" === m(e); }
    function P(e) { return l$1 && y ? "Int16Array" === b(e) : "[object Int16Array]" === m(e); }
    function x(e) { return l$1 && y ? "Int32Array" === b(e) : "[object Int32Array]" === m(e); }
    function I(e) { return l$1 && y ? "Float32Array" === b(e) : "[object Float32Array]" === m(e); }
    function M(e) { return l$1 && y ? "Float64Array" === b(e) : "[object Float64Array]" === m(e); }
    function z(e) { return l$1 && y ? "BigInt64Array" === b(e) : "[object BigInt64Array]" === m(e); }
    function F(e) { return l$1 && y ? "BigUint64Array" === b(e) : "[object BigUint64Array]" === m(e); }
    function T(e) { return "[object Map]" === m(e); }
    function N(e) { return "[object Set]" === m(e); }
    function W(e) { return "[object WeakMap]" === m(e); }
    function $(e) { return "[object WeakSet]" === m(e); }
    function C(e) { return "[object ArrayBuffer]" === m(e); }
    function V(e) { return "undefined" != typeof ArrayBuffer && (C.working ? C(e) : e instanceof ArrayBuffer); }
    function G(e) { return "[object DataView]" === m(e); }
    function R(e) { return "undefined" != typeof DataView && (G.working ? G(e) : e instanceof DataView); }
    function J(e) { return "[object SharedArrayBuffer]" === m(e); }
    function _(e) { return "undefined" != typeof SharedArrayBuffer && (J.working ? J(e) : e instanceof SharedArrayBuffer); }
    function H(e) { return O(e, h); }
    function Z(e) { return O(e, j); }
    function q(e) { return O(e, A); }
    function K(e) { return s && O(e, w); }
    function L(e) { return p && O(e, v); }
    function oe(e, t) { var r = { seen: [], stylize: fe }; return arguments.length >= 3 && (r.depth = arguments[2]), arguments.length >= 4 && (r.colors = arguments[3]), ye(t) ? r.showHidden = t : t && X._extend(r, t), be(r.showHidden) && (r.showHidden = !1), be(r.depth) && (r.depth = 2), be(r.colors) && (r.colors = !1), be(r.customInspect) && (r.customInspect = !0), r.colors && (r.stylize = ue), ae(r, e, r.depth); }
    function ue(e, t) { var r = oe.styles[t]; return r ? "[" + oe.colors[r][0] + "m" + e + "[" + oe.colors[r][1] + "m" : e; }
    function fe(e, t) { return e; }
    function ae(e, t, r) { if (e.customInspect && t && we(t.inspect) && t.inspect !== X.inspect && (!t.constructor || t.constructor.prototype !== t)) {
        var n = t.inspect(r, e);
        return ge(n) || (n = ae(e, n, r)), n;
    } var i = function (e, t) { if (be(t))
        return e.stylize("undefined", "undefined"); if (ge(t)) {
        var r = "'" + JSON.stringify(t).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
        return e.stylize(r, "string");
    } if (de(t))
        return e.stylize("" + t, "number"); if (ye(t))
        return e.stylize("" + t, "boolean"); if (le(t))
        return e.stylize("null", "null"); }(e, t); if (i)
        return i; var o = Object.keys(t), u = function (e) { var t = {}; return e.forEach((function (e, r) { t[e] = !0; })), t; }(o); if (e.showHidden && (o = Object.getOwnPropertyNames(t)), Ae(t) && (o.indexOf("message") >= 0 || o.indexOf("description") >= 0))
        return ce(t); if (0 === o.length) {
        if (we(t)) {
            var f = t.name ? ": " + t.name : "";
            return e.stylize("[Function" + f + "]", "special");
        }
        if (me(t))
            return e.stylize(RegExp.prototype.toString.call(t), "regexp");
        if (je(t))
            return e.stylize(Date.prototype.toString.call(t), "date");
        if (Ae(t))
            return ce(t);
    } var a, c = "", s = !1, p = ["{", "}"]; (pe(t) && (s = !0, p = ["[", "]"]), we(t)) && (c = " [Function" + (t.name ? ": " + t.name : "") + "]"); return me(t) && (c = " " + RegExp.prototype.toString.call(t)), je(t) && (c = " " + Date.prototype.toUTCString.call(t)), Ae(t) && (c = " " + ce(t)), 0 !== o.length || s && 0 != t.length ? r < 0 ? me(t) ? e.stylize(RegExp.prototype.toString.call(t), "regexp") : e.stylize("[Object]", "special") : (e.seen.push(t), a = s ? function (e, t, r, n, i) { for (var o = [], u = 0, f = t.length; u < f; ++u)
        ke(t, String(u)) ? o.push(se(e, t, r, n, String(u), !0)) : o.push(""); return i.forEach((function (i) { i.match(/^\d+$/) || o.push(se(e, t, r, n, i, !0)); })), o; }(e, t, r, u, o) : o.map((function (n) { return se(e, t, r, u, n, s); })), e.seen.pop(), function (e, t, r) { var n = 0; if (e.reduce((function (e, t) { return n++, t.indexOf("\n") >= 0 && n++, e + t.replace(/\u001b\[\d\d?m/g, "").length + 1; }), 0) > 60)
        return r[0] + ("" === t ? "" : t + "\n ") + " " + e.join(",\n  ") + " " + r[1]; return r[0] + t + " " + e.join(", ") + " " + r[1]; }(a, c, p)) : p[0] + c + p[1]; }
    function ce(e) { return "[" + Error.prototype.toString.call(e) + "]"; }
    function se(e, t, r, n, i, o) { var u, f, a; if ((a = Object.getOwnPropertyDescriptor(t, i) || { value: t[i] }).get ? f = a.set ? e.stylize("[Getter/Setter]", "special") : e.stylize("[Getter]", "special") : a.set && (f = e.stylize("[Setter]", "special")), ke(n, i) || (u = "[" + i + "]"), f || (e.seen.indexOf(a.value) < 0 ? (f = le(r) ? ae(e, a.value, null) : ae(e, a.value, r - 1)).indexOf("\n") > -1 && (f = o ? f.split("\n").map((function (e) { return "  " + e; })).join("\n").substr(2) : "\n" + f.split("\n").map((function (e) { return "   " + e; })).join("\n")) : f = e.stylize("[Circular]", "special")), be(u)) {
        if (o && i.match(/^\d+$/))
            return f;
        (u = JSON.stringify("" + i)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (u = u.substr(1, u.length - 2), u = e.stylize(u, "name")) : (u = u.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), u = e.stylize(u, "string"));
    } return u + ": " + f; }
    function pe(e) { return Array.isArray(e); }
    function ye(e) { return "boolean" == typeof e; }
    function le(e) { return null === e; }
    function de(e) { return "number" == typeof e; }
    function ge(e) { return "string" == typeof e; }
    function be(e) { return void 0 === e; }
    function me(e) { return he(e) && "[object RegExp]" === ve(e); }
    function he(e) { return "object" == typeof e && null !== e; }
    function je(e) { return he(e) && "[object Date]" === ve(e); }
    function Ae(e) { return he(e) && ("[object Error]" === ve(e) || e instanceof Error); }
    function we(e) { return "function" == typeof e; }
    function ve(e) { return Object.prototype.toString.call(e); }
    function Oe(e) { return e < 10 ? "0" + e.toString(10) : e.toString(10); }
    function Be() { var e = new Date, t = [Oe(e.getHours()), Oe(e.getMinutes()), Oe(e.getSeconds())].join(":"); return [e.getDate(), Se[e.getMonth()], t].join(" "); }
    function ke(e, t) { return Object.prototype.hasOwnProperty.call(e, t); }
    function De(e, t) { if (!e) {
        var r = new Error("Promise was rejected with a falsy value");
        r.reason = e, e = r;
    } return t(e); }
    return {
        setters: [
            function (chunk_0c2d1322_js_1_1) {
                chunk_0c2d1322_js_1 = chunk_0c2d1322_js_1_1;
            }
        ],
        execute: function () {
            t = "function" == typeof Symbol && "symbol" == typeof Symbol.toStringTag, e = Object.prototype.toString, o = function (o) { return !(t && o && "object" == typeof o && Symbol.toStringTag in o) && "[object Arguments]" === e.call(o); }, n = function (t) { return !!o(t) || null !== t && "object" == typeof t && "number" == typeof t.length && t.length >= 0 && "[object Array]" !== e.call(t) && "[object Function]" === e.call(t.callee); }, r = function () { return o(arguments); }();
            o.isLegacyArguments = n;
            l = r ? o : n;
            t$1 = Object.prototype.toString, o$1 = Function.prototype.toString, n$1 = /^\s*(?:function)?\*/, e$1 = "function" == typeof Symbol && "symbol" == typeof Symbol.toStringTag, r$1 = Object.getPrototypeOf, c = function () { if (!e$1)
                return !1; try {
                return Function("return function*() {}")();
            }
            catch (t) { } }(), u = c ? r$1(c) : {}, i = function (c) { return "function" == typeof c && (!!n$1.test(o$1.call(c)) || (e$1 ? r$1(c) === u : "[object GeneratorFunction]" === t$1.call(c))); };
            t$2 = "function" == typeof Object.create ? function (t, e) { e && (t.super_ = e, t.prototype = Object.create(e.prototype, { constructor: { value: t, enumerable: !1, writable: !0, configurable: !0 } })); } : function (t, e) { if (e) {
                t.super_ = e;
                var o = function () { };
                o.prototype = e.prototype, t.prototype = new o, t.prototype.constructor = t;
            } };
            exports_137("t", t$2);
            i$1 = function (e) { return e && "object" == typeof e && "function" == typeof e.copy && "function" == typeof e.fill && "function" == typeof e.readUInt8; }, o$2 = {}, u$1 = i$1, f = l, a = i;
            s = "undefined" != typeof BigInt, p = "undefined" != typeof Symbol, y = p && void 0 !== Symbol.toStringTag, l$1 = "undefined" != typeof Uint8Array, d = "undefined" != typeof ArrayBuffer;
            if (l$1 && y)
                var g = Object.getPrototypeOf(Uint8Array.prototype), b = c$1(Object.getOwnPropertyDescriptor(g, Symbol.toStringTag).get);
            m = c$1(Object.prototype.toString), h = c$1(Number.prototype.valueOf), j = c$1(String.prototype.valueOf), A = c$1(Boolean.prototype.valueOf);
            if (s)
                var w = c$1(BigInt.prototype.valueOf);
            if (p)
                var v = c$1(Symbol.prototype.valueOf);
            o$2.isArgumentsObject = f, o$2.isGeneratorFunction = a, o$2.isPromise = function (e) { return "undefined" != typeof Promise && e instanceof Promise || null !== e && "object" == typeof e && "function" == typeof e.then && "function" == typeof e.catch; }, o$2.isArrayBufferView = function (e) { return d && ArrayBuffer.isView ? ArrayBuffer.isView(e) : S(e) || R(e); }, o$2.isTypedArray = S, o$2.isUint8Array = B, o$2.isUint8ClampedArray = k, o$2.isUint16Array = E, o$2.isUint32Array = D, o$2.isInt8Array = U, o$2.isInt16Array = P, o$2.isInt32Array = x, o$2.isFloat32Array = I, o$2.isFloat64Array = M, o$2.isBigInt64Array = z, o$2.isBigUint64Array = F, T.working = "undefined" != typeof Map && T(new Map), o$2.isMap = function (e) { return "undefined" != typeof Map && (T.working ? T(e) : e instanceof Map); }, N.working = "undefined" != typeof Set && N(new Set), o$2.isSet = function (e) { return "undefined" != typeof Set && (N.working ? N(e) : e instanceof Set); }, W.working = "undefined" != typeof WeakMap && W(new WeakMap), o$2.isWeakMap = function (e) { return "undefined" != typeof WeakMap && (W.working ? W(e) : e instanceof WeakMap); }, $.working = "undefined" != typeof WeakSet && $(new WeakSet), o$2.isWeakSet = function (e) { return $(e); }, C.working = "undefined" != typeof ArrayBuffer && C(new ArrayBuffer), o$2.isArrayBuffer = V, G.working = "undefined" != typeof ArrayBuffer && "undefined" != typeof DataView && G(new DataView(new ArrayBuffer(1), 0, 1)), o$2.isDataView = R, J.working = "undefined" != typeof SharedArrayBuffer && J(new SharedArrayBuffer), o$2.isSharedArrayBuffer = _, o$2.isAsyncFunction = function (e) { return "[object AsyncFunction]" === m(e); }, o$2.isMapIterator = function (e) { return "[object Map Iterator]" === m(e); }, o$2.isSetIterator = function (e) { return "[object Set Iterator]" === m(e); }, o$2.isGeneratorObject = function (e) { return "[object Generator]" === m(e); }, o$2.isWebAssemblyCompiledModule = function (e) { return "[object WebAssembly.Module]" === m(e); }, o$2.isNumberObject = H, o$2.isStringObject = Z, o$2.isBooleanObject = q, o$2.isBigIntObject = K, o$2.isSymbolObject = L, o$2.isBoxedPrimitive = function (e) { return H(e) || Z(e) || q(e) || K(e) || L(e); }, o$2.isAnyArrayBuffer = function (e) { return l$1 && (V(e) || _(e)); }, ["isProxy", "isExternal", "isModuleNamespaceObject"].forEach((function (e) { Object.defineProperty(o$2, e, { enumerable: !1, value: function () { throw new Error(e + " is not supported in userland"); } }); }));
            Q = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self ? self : global, X = {}, Y = chunk_0c2d1322_js_1.h, ee = Object.getOwnPropertyDescriptors || function (e) { for (var t = Object.keys(e), r = {}, n = 0; n < t.length; n++)
                r[t[n]] = Object.getOwnPropertyDescriptor(e, t[n]); return r; }, te = /%[sdj%]/g;
            exports_137("u", X);
            X.format = function (e) { if (!ge(e)) {
                for (var t = [], r = 0; r < arguments.length; r++)
                    t.push(oe(arguments[r]));
                return t.join(" ");
            } r = 1; for (var n = arguments, i = n.length, o = String(e).replace(te, (function (e) { if ("%%" === e)
                return "%"; if (r >= i)
                return e; switch (e) {
                case "%s": return String(n[r++]);
                case "%d": return Number(n[r++]);
                case "%j": try {
                    return JSON.stringify(n[r++]);
                }
                catch (e) {
                    return "[Circular]";
                }
                default: return e;
            } })), u = n[r]; r < i; u = n[++r])
                le(u) || !he(u) ? o += " " + u : o += " " + oe(u); return o; }, X.deprecate = function (e, t) { if (void 0 !== Y && !0 === Y.noDeprecation)
                return e; if (void 0 === Y)
                return function () { return X.deprecate(e, t).apply(this || Q, arguments); }; var r = !1; return function () { if (!r) {
                if (Y.throwDeprecation)
                    throw new Error(t);
                Y.traceDeprecation ? console.trace(t) : console.error(t), r = !0;
            } return e.apply(this || Q, arguments); }; };
            re = {}, ne = /^$/;
            if (Y.env.NODE_DEBUG) {
                var ie = Y.env.NODE_DEBUG;
                ie = ie.replace(/[|\\{}()[\]^$+?.]/g, "\\$&").replace(/\*/g, ".*").replace(/,/g, "$|^").toUpperCase(), ne = new RegExp("^" + ie + "$", "i");
            }
            X.debuglog = function (e) { if (e = e.toUpperCase(), !re[e])
                if (ne.test(e)) {
                    var t = Y.pid;
                    re[e] = function () { var r = X.format.apply(X, arguments); console.error("%s %d: %s", e, t, r); };
                }
                else
                    re[e] = function () { }; return re[e]; }, X.inspect = oe, oe.colors = { bold: [1, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], white: [37, 39], grey: [90, 39], black: [30, 39], blue: [34, 39], cyan: [36, 39], green: [32, 39], magenta: [35, 39], red: [31, 39], yellow: [33, 39] }, oe.styles = { special: "cyan", number: "yellow", boolean: "yellow", undefined: "grey", null: "bold", string: "green", date: "magenta", regexp: "red" }, X.types = o$2, X.isArray = pe, X.isBoolean = ye, X.isNull = le, X.isNullOrUndefined = function (e) { return null == e; }, X.isNumber = de, X.isString = ge, X.isSymbol = function (e) { return "symbol" == typeof e; }, X.isUndefined = be, X.isRegExp = me, X.types.isRegExp = me, X.isObject = he, X.isDate = je, X.types.isDate = je, X.isError = Ae, X.types.isNativeError = Ae, X.isFunction = we, X.isPrimitive = function (e) { return null === e || "boolean" == typeof e || "number" == typeof e || "string" == typeof e || "symbol" == typeof e || void 0 === e; }, X.isBuffer = i$1;
            Se = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
            X.log = function () { console.log("%s - %s", Be(), X.format.apply(X, arguments)); }, X.inherits = t$2, X._extend = function (e, t) { if (!t || !he(t))
                return e; for (var r = Object.keys(t), n = r.length; n--;)
                e[r[n]] = t[r[n]]; return e; };
            Ee = "undefined" != typeof Symbol ? Symbol("util.promisify.custom") : void 0;
            X.promisify = function (e) { if ("function" != typeof e)
                throw new TypeError('The "original" argument must be of type Function'); if (Ee && e[Ee]) {
                var t;
                if ("function" != typeof (t = e[Ee]))
                    throw new TypeError('The "util.promisify.custom" argument must be of type Function');
                return Object.defineProperty(t, Ee, { value: t, enumerable: !1, writable: !1, configurable: !0 }), t;
            } function t() { for (var t, r, n = new Promise((function (e, n) { t = e, r = n; })), i = [], o = 0; o < arguments.length; o++)
                i.push(arguments[o]); i.push((function (e, n) { e ? r(e) : t(n); })); try {
                e.apply(this || Q, i);
            }
            catch (e) {
                r(e);
            } return n; } return Object.setPrototypeOf(t, Object.getPrototypeOf(e)), Ee && Object.defineProperty(t, Ee, { value: t, enumerable: !1, writable: !1, configurable: !0 }), Object.defineProperties(t, ee(e)); }, X.promisify.custom = Ee, X.callbackify = function (e) { if ("function" != typeof e)
                throw new TypeError('The "original" argument must be of type Function'); function t() { for (var t = [], r = 0; r < arguments.length; r++)
                t.push(arguments[r]); var n = t.pop(); if ("function" != typeof n)
                throw new TypeError("The last argument must be of type Function"); var i = this || Q, o = function () { return n.apply(i, arguments); }; e.apply(this || Q, t).then((function (e) { Y.nextTick(o.bind(null, null, e)); }), (function (e) { Y.nextTick(De.bind(null, e, o)); })); } return Object.setPrototypeOf(t, Object.getPrototypeOf(e)), Object.defineProperties(t, ee(e)), t; };
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/util", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/chunk-dac557ba", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/chunk-0c2d1322"], function (exports_138, context_138) {
    "use strict";
    var chunk_dac557ba_js_1, _extend, callbackify, debuglog, deprecate, format, inherits, inspect, isArray, isBoolean, isBuffer, isDate, isError, isFunction, isNull, isNullOrUndefined, isNumber, isObject, isPrimitive, isRegExp, isString, isSymbol, isUndefined, log, promisify;
    var __moduleName = context_138 && context_138.id;
    return {
        setters: [
            function (chunk_dac557ba_js_1_1) {
                chunk_dac557ba_js_1 = chunk_dac557ba_js_1_1;
            },
            function (_2) {
            }
        ],
        execute: function () {
            _extend = chunk_dac557ba_js_1.u._extend;
            exports_138("_extend", _extend);
            callbackify = chunk_dac557ba_js_1.u.callbackify;
            exports_138("callbackify", callbackify);
            debuglog = chunk_dac557ba_js_1.u.debuglog;
            exports_138("debuglog", debuglog);
            deprecate = chunk_dac557ba_js_1.u.deprecate;
            exports_138("deprecate", deprecate);
            format = chunk_dac557ba_js_1.u.format;
            exports_138("format", format);
            inherits = chunk_dac557ba_js_1.u.inherits;
            exports_138("inherits", inherits);
            inspect = chunk_dac557ba_js_1.u.inspect;
            exports_138("inspect", inspect);
            isArray = chunk_dac557ba_js_1.u.isArray;
            exports_138("isArray", isArray);
            isBoolean = chunk_dac557ba_js_1.u.isBoolean;
            exports_138("isBoolean", isBoolean);
            isBuffer = chunk_dac557ba_js_1.u.isBuffer;
            exports_138("isBuffer", isBuffer);
            isDate = chunk_dac557ba_js_1.u.isDate;
            exports_138("isDate", isDate);
            isError = chunk_dac557ba_js_1.u.isError;
            exports_138("isError", isError);
            isFunction = chunk_dac557ba_js_1.u.isFunction;
            exports_138("isFunction", isFunction);
            isNull = chunk_dac557ba_js_1.u.isNull;
            exports_138("isNull", isNull);
            isNullOrUndefined = chunk_dac557ba_js_1.u.isNullOrUndefined;
            exports_138("isNullOrUndefined", isNullOrUndefined);
            isNumber = chunk_dac557ba_js_1.u.isNumber;
            exports_138("isNumber", isNumber);
            isObject = chunk_dac557ba_js_1.u.isObject;
            exports_138("isObject", isObject);
            isPrimitive = chunk_dac557ba_js_1.u.isPrimitive;
            exports_138("isPrimitive", isPrimitive);
            isRegExp = chunk_dac557ba_js_1.u.isRegExp;
            exports_138("isRegExp", isRegExp);
            isString = chunk_dac557ba_js_1.u.isString;
            exports_138("isString", isString);
            isSymbol = chunk_dac557ba_js_1.u.isSymbol;
            exports_138("isSymbol", isSymbol);
            isUndefined = chunk_dac557ba_js_1.u.isUndefined;
            exports_138("isUndefined", isUndefined);
            log = chunk_dac557ba_js_1.u.log;
            exports_138("log", log);
            promisify = chunk_dac557ba_js_1.u.promisify;
            exports_138("promisify", promisify);
            exports_138("default", chunk_dac557ba_js_1.u);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits_browser.dew", [], function (exports_139, context_139) {
    "use strict";
    var exports, _dewExec;
    var __moduleName = context_139 && context_139.id;
    function dew() {
        if (_dewExec)
            return exports;
        _dewExec = true;
        if (typeof Object.create === 'function') {
            exports = function inherits(ctor, superCtor) {
                if (superCtor) {
                    ctor.super_ = superCtor;
                    ctor.prototype = Object.create(superCtor.prototype, {
                        constructor: {
                            value: ctor,
                            enumerable: false,
                            writable: true,
                            configurable: true
                        }
                    });
                }
            };
        }
        else {
            exports = function inherits(ctor, superCtor) {
                if (superCtor) {
                    ctor.super_ = superCtor;
                    var TempCtor = function () { };
                    TempCtor.prototype = superCtor.prototype;
                    ctor.prototype = new TempCtor();
                    ctor.prototype.constructor = ctor;
                }
            };
        }
        return exports;
    }
    exports_139("dew", dew);
    return {
        setters: [],
        execute: function () {
            exports = {}, _dewExec = false;
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits.dew", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/util", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits_browser.dew"], function (exports_140, context_140) {
    "use strict";
    var util_js_1, inherits_browser_dew_js_1, exports, _dewExec;
    var __moduleName = context_140 && context_140.id;
    function dew() {
        if (_dewExec)
            return exports;
        _dewExec = true;
        try {
            var util = util_js_1.default;
            if (typeof util.inherits !== 'function')
                throw '';
            exports = util.inherits;
        }
        catch (e) {
            exports = inherits_browser_dew_js_1.dew();
        }
        return exports;
    }
    exports_140("dew", dew);
    return {
        setters: [
            function (util_js_1_1) {
                util_js_1 = util_js_1_1;
            },
            function (inherits_browser_dew_js_1_1) {
                inherits_browser_dew_js_1 = inherits_browser_dew_js_1_1;
            }
        ],
        execute: function () {
            exports = {}, _dewExec = false;
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits.dew"], function (exports_141, context_141) {
    "use strict";
    var inherits_dew_js_1;
    var __moduleName = context_141 && context_141.id;
    return {
        setters: [
            function (inherits_dew_js_1_1) {
                inherits_dew_js_1 = inherits_dew_js_1_1;
            }
        ],
        execute: function () {
            exports_141("default", inherits_dew_js_1.dew());
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/lodash.dew", [], function (exports_142, context_142) {
    "use strict";
    var exports, _dewExec, module, _global;
    var __moduleName = context_142 && context_142.id;
    function dew() {
        if (_dewExec)
            return module.exports;
        _dewExec = true;
        ;
        (function () {
            var undefined;
            var VERSION = '4.17.15';
            var LARGE_ARRAY_SIZE = 200;
            var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.', FUNC_ERROR_TEXT = 'Expected a function';
            var HASH_UNDEFINED = '__lodash_hash_undefined__';
            var MAX_MEMOIZE_SIZE = 500;
            var PLACEHOLDER = '__lodash_placeholder__';
            var CLONE_DEEP_FLAG = 1, CLONE_FLAT_FLAG = 2, CLONE_SYMBOLS_FLAG = 4;
            var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;
            var WRAP_BIND_FLAG = 1, WRAP_BIND_KEY_FLAG = 2, WRAP_CURRY_BOUND_FLAG = 4, WRAP_CURRY_FLAG = 8, WRAP_CURRY_RIGHT_FLAG = 16, WRAP_PARTIAL_FLAG = 32, WRAP_PARTIAL_RIGHT_FLAG = 64, WRAP_ARY_FLAG = 128, WRAP_REARG_FLAG = 256, WRAP_FLIP_FLAG = 512;
            var DEFAULT_TRUNC_LENGTH = 30, DEFAULT_TRUNC_OMISSION = '...';
            var HOT_COUNT = 800, HOT_SPAN = 16;
            var LAZY_FILTER_FLAG = 1, LAZY_MAP_FLAG = 2, LAZY_WHILE_FLAG = 3;
            var INFINITY = 1 / 0, MAX_SAFE_INTEGER = 9007199254740991, MAX_INTEGER = 1.7976931348623157e+308, NAN = 0 / 0;
            var MAX_ARRAY_LENGTH = 4294967295, MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1, HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;
            var wrapFlags = [['ary', WRAP_ARY_FLAG], ['bind', WRAP_BIND_FLAG], ['bindKey', WRAP_BIND_KEY_FLAG], ['curry', WRAP_CURRY_FLAG], ['curryRight', WRAP_CURRY_RIGHT_FLAG], ['flip', WRAP_FLIP_FLAG], ['partial', WRAP_PARTIAL_FLAG], ['partialRight', WRAP_PARTIAL_RIGHT_FLAG], ['rearg', WRAP_REARG_FLAG]];
            var argsTag = '[object Arguments]', arrayTag = '[object Array]', asyncTag = '[object AsyncFunction]', boolTag = '[object Boolean]', dateTag = '[object Date]', domExcTag = '[object DOMException]', errorTag = '[object Error]', funcTag = '[object Function]', genTag = '[object GeneratorFunction]', mapTag = '[object Map]', numberTag = '[object Number]', nullTag = '[object Null]', objectTag = '[object Object]', promiseTag = '[object Promise]', proxyTag = '[object Proxy]', regexpTag = '[object RegExp]', setTag = '[object Set]', stringTag = '[object String]', symbolTag = '[object Symbol]', undefinedTag = '[object Undefined]', weakMapTag = '[object WeakMap]', weakSetTag = '[object WeakSet]';
            var arrayBufferTag = '[object ArrayBuffer]', dataViewTag = '[object DataView]', float32Tag = '[object Float32Array]', float64Tag = '[object Float64Array]', int8Tag = '[object Int8Array]', int16Tag = '[object Int16Array]', int32Tag = '[object Int32Array]', uint8Tag = '[object Uint8Array]', uint8ClampedTag = '[object Uint8ClampedArray]', uint16Tag = '[object Uint16Array]', uint32Tag = '[object Uint32Array]';
            var reEmptyStringLeading = /\b__p \+= '';/g, reEmptyStringMiddle = /\b(__p \+=) '' \+/g, reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
            var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g, reUnescapedHtml = /[&<>"']/g, reHasEscapedHtml = RegExp(reEscapedHtml.source), reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
            var reEscape = /<%-([\s\S]+?)%>/g, reEvaluate = /<%([\s\S]+?)%>/g, reInterpolate = /<%=([\s\S]+?)%>/g;
            var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, reIsPlainProp = /^\w*$/, rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
            var reRegExpChar = /[\\^$.*+?()[\]{}|]/g, reHasRegExpChar = RegExp(reRegExpChar.source);
            var reTrim = /^\s+|\s+$/g, reTrimStart = /^\s+/, reTrimEnd = /\s+$/;
            var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/, reSplitDetails = /,? & /;
            var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
            var reEscapeChar = /\\(\\)?/g;
            var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
            var reFlags = /\w*$/;
            var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
            var reIsBinary = /^0b[01]+$/i;
            var reIsHostCtor = /^\[object .+?Constructor\]$/;
            var reIsOctal = /^0o[0-7]+$/i;
            var reIsUint = /^(?:0|[1-9]\d*)$/;
            var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
            var reNoMatch = /($^)/;
            var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
            var rsAstralRange = '\\ud800-\\udfff', rsComboMarksRange = '\\u0300-\\u036f', reComboHalfMarksRange = '\\ufe20-\\ufe2f', rsComboSymbolsRange = '\\u20d0-\\u20ff', rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange, rsDingbatRange = '\\u2700-\\u27bf', rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff', rsMathOpRange = '\\xac\\xb1\\xd7\\xf7', rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf', rsPunctuationRange = '\\u2000-\\u206f', rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000', rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde', rsVarRange = '\\ufe0e\\ufe0f', rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
            var rsApos = "['\u2019]", rsAstral = '[' + rsAstralRange + ']', rsBreak = '[' + rsBreakRange + ']', rsCombo = '[' + rsComboRange + ']', rsDigits = '\\d+', rsDingbat = '[' + rsDingbatRange + ']', rsLower = '[' + rsLowerRange + ']', rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']', rsFitz = '\\ud83c[\\udffb-\\udfff]', rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')', rsNonAstral = '[^' + rsAstralRange + ']', rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}', rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]', rsUpper = '[' + rsUpperRange + ']', rsZWJ = '\\u200d';
            var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')', rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')', rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?', rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?', reOptMod = rsModifier + '?', rsOptVar = '[' + rsVarRange + ']?', rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*', rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])', rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])', rsSeq = rsOptVar + reOptMod + rsOptJoin, rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq, rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';
            var reApos = RegExp(rsApos, 'g');
            var reComboMark = RegExp(rsCombo, 'g');
            var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');
            var reUnicodeWord = RegExp([rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')', rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')', rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower, rsUpper + '+' + rsOptContrUpper, rsOrdUpper, rsOrdLower, rsDigits, rsEmoji].join('|'), 'g');
            var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + ']');
            var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
            var contextProps = ['Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array', 'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object', 'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap', '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'];
            var templateCounter = -1;
            var typedArrayTags = {};
            typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
            typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
            var cloneableTags = {};
            cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
            cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
            var deburredLetters = {
                '\xc0': 'A',
                '\xc1': 'A',
                '\xc2': 'A',
                '\xc3': 'A',
                '\xc4': 'A',
                '\xc5': 'A',
                '\xe0': 'a',
                '\xe1': 'a',
                '\xe2': 'a',
                '\xe3': 'a',
                '\xe4': 'a',
                '\xe5': 'a',
                '\xc7': 'C',
                '\xe7': 'c',
                '\xd0': 'D',
                '\xf0': 'd',
                '\xc8': 'E',
                '\xc9': 'E',
                '\xca': 'E',
                '\xcb': 'E',
                '\xe8': 'e',
                '\xe9': 'e',
                '\xea': 'e',
                '\xeb': 'e',
                '\xcc': 'I',
                '\xcd': 'I',
                '\xce': 'I',
                '\xcf': 'I',
                '\xec': 'i',
                '\xed': 'i',
                '\xee': 'i',
                '\xef': 'i',
                '\xd1': 'N',
                '\xf1': 'n',
                '\xd2': 'O',
                '\xd3': 'O',
                '\xd4': 'O',
                '\xd5': 'O',
                '\xd6': 'O',
                '\xd8': 'O',
                '\xf2': 'o',
                '\xf3': 'o',
                '\xf4': 'o',
                '\xf5': 'o',
                '\xf6': 'o',
                '\xf8': 'o',
                '\xd9': 'U',
                '\xda': 'U',
                '\xdb': 'U',
                '\xdc': 'U',
                '\xf9': 'u',
                '\xfa': 'u',
                '\xfb': 'u',
                '\xfc': 'u',
                '\xdd': 'Y',
                '\xfd': 'y',
                '\xff': 'y',
                '\xc6': 'Ae',
                '\xe6': 'ae',
                '\xde': 'Th',
                '\xfe': 'th',
                '\xdf': 'ss',
                '\u0100': 'A',
                '\u0102': 'A',
                '\u0104': 'A',
                '\u0101': 'a',
                '\u0103': 'a',
                '\u0105': 'a',
                '\u0106': 'C',
                '\u0108': 'C',
                '\u010a': 'C',
                '\u010c': 'C',
                '\u0107': 'c',
                '\u0109': 'c',
                '\u010b': 'c',
                '\u010d': 'c',
                '\u010e': 'D',
                '\u0110': 'D',
                '\u010f': 'd',
                '\u0111': 'd',
                '\u0112': 'E',
                '\u0114': 'E',
                '\u0116': 'E',
                '\u0118': 'E',
                '\u011a': 'E',
                '\u0113': 'e',
                '\u0115': 'e',
                '\u0117': 'e',
                '\u0119': 'e',
                '\u011b': 'e',
                '\u011c': 'G',
                '\u011e': 'G',
                '\u0120': 'G',
                '\u0122': 'G',
                '\u011d': 'g',
                '\u011f': 'g',
                '\u0121': 'g',
                '\u0123': 'g',
                '\u0124': 'H',
                '\u0126': 'H',
                '\u0125': 'h',
                '\u0127': 'h',
                '\u0128': 'I',
                '\u012a': 'I',
                '\u012c': 'I',
                '\u012e': 'I',
                '\u0130': 'I',
                '\u0129': 'i',
                '\u012b': 'i',
                '\u012d': 'i',
                '\u012f': 'i',
                '\u0131': 'i',
                '\u0134': 'J',
                '\u0135': 'j',
                '\u0136': 'K',
                '\u0137': 'k',
                '\u0138': 'k',
                '\u0139': 'L',
                '\u013b': 'L',
                '\u013d': 'L',
                '\u013f': 'L',
                '\u0141': 'L',
                '\u013a': 'l',
                '\u013c': 'l',
                '\u013e': 'l',
                '\u0140': 'l',
                '\u0142': 'l',
                '\u0143': 'N',
                '\u0145': 'N',
                '\u0147': 'N',
                '\u014a': 'N',
                '\u0144': 'n',
                '\u0146': 'n',
                '\u0148': 'n',
                '\u014b': 'n',
                '\u014c': 'O',
                '\u014e': 'O',
                '\u0150': 'O',
                '\u014d': 'o',
                '\u014f': 'o',
                '\u0151': 'o',
                '\u0154': 'R',
                '\u0156': 'R',
                '\u0158': 'R',
                '\u0155': 'r',
                '\u0157': 'r',
                '\u0159': 'r',
                '\u015a': 'S',
                '\u015c': 'S',
                '\u015e': 'S',
                '\u0160': 'S',
                '\u015b': 's',
                '\u015d': 's',
                '\u015f': 's',
                '\u0161': 's',
                '\u0162': 'T',
                '\u0164': 'T',
                '\u0166': 'T',
                '\u0163': 't',
                '\u0165': 't',
                '\u0167': 't',
                '\u0168': 'U',
                '\u016a': 'U',
                '\u016c': 'U',
                '\u016e': 'U',
                '\u0170': 'U',
                '\u0172': 'U',
                '\u0169': 'u',
                '\u016b': 'u',
                '\u016d': 'u',
                '\u016f': 'u',
                '\u0171': 'u',
                '\u0173': 'u',
                '\u0174': 'W',
                '\u0175': 'w',
                '\u0176': 'Y',
                '\u0177': 'y',
                '\u0178': 'Y',
                '\u0179': 'Z',
                '\u017b': 'Z',
                '\u017d': 'Z',
                '\u017a': 'z',
                '\u017c': 'z',
                '\u017e': 'z',
                '\u0132': 'IJ',
                '\u0133': 'ij',
                '\u0152': 'Oe',
                '\u0153': 'oe',
                '\u0149': "'n",
                '\u017f': 's'
            };
            var htmlEscapes = {
                '&': '&amp;',
                '<': '&lt;',
                '>': '&gt;',
                '"': '&quot;',
                "'": '&#39;'
            };
            var htmlUnescapes = {
                '&amp;': '&',
                '&lt;': '<',
                '&gt;': '>',
                '&quot;': '"',
                '&#39;': "'"
            };
            var stringEscapes = {
                '\\': '\\',
                "'": "'",
                '\n': 'n',
                '\r': 'r',
                '\u2028': 'u2028',
                '\u2029': 'u2029'
            };
            var freeParseFloat = parseFloat, freeParseInt = parseInt;
            var freeGlobal = typeof _global == 'object' && _global && _global.Object === Object && _global;
            var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
            var root = freeGlobal || freeSelf || Function('return this')();
            var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
            var freeModule = freeExports && true && module && !module.nodeType && module;
            var moduleExports = freeModule && freeModule.exports === freeExports;
            var freeProcess = moduleExports && freeGlobal.process;
            var nodeUtil = function () {
                try {
                    var types = freeModule && freeModule.require && freeModule.require('util').types;
                    if (types) {
                        return types;
                    }
                    return freeProcess && freeProcess.binding && freeProcess.binding('util');
                }
                catch (e) { }
            }();
            var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer, nodeIsDate = nodeUtil && nodeUtil.isDate, nodeIsMap = nodeUtil && nodeUtil.isMap, nodeIsRegExp = nodeUtil && nodeUtil.isRegExp, nodeIsSet = nodeUtil && nodeUtil.isSet, nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
            function apply(func, thisArg, args) {
                switch (args.length) {
                    case 0:
                        return func.call(thisArg);
                    case 1:
                        return func.call(thisArg, args[0]);
                    case 2:
                        return func.call(thisArg, args[0], args[1]);
                    case 3:
                        return func.call(thisArg, args[0], args[1], args[2]);
                }
                return func.apply(thisArg, args);
            }
            function arrayAggregator(array, setter, iteratee, accumulator) {
                var index = -1, length = array == null ? 0 : array.length;
                while (++index < length) {
                    var value = array[index];
                    setter(accumulator, value, iteratee(value), array);
                }
                return accumulator;
            }
            function arrayEach(array, iteratee) {
                var index = -1, length = array == null ? 0 : array.length;
                while (++index < length) {
                    if (iteratee(array[index], index, array) === false) {
                        break;
                    }
                }
                return array;
            }
            function arrayEachRight(array, iteratee) {
                var length = array == null ? 0 : array.length;
                while (length--) {
                    if (iteratee(array[length], length, array) === false) {
                        break;
                    }
                }
                return array;
            }
            function arrayEvery(array, predicate) {
                var index = -1, length = array == null ? 0 : array.length;
                while (++index < length) {
                    if (!predicate(array[index], index, array)) {
                        return false;
                    }
                }
                return true;
            }
            function arrayFilter(array, predicate) {
                var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
                while (++index < length) {
                    var value = array[index];
                    if (predicate(value, index, array)) {
                        result[resIndex++] = value;
                    }
                }
                return result;
            }
            function arrayIncludes(array, value) {
                var length = array == null ? 0 : array.length;
                return !!length && baseIndexOf(array, value, 0) > -1;
            }
            function arrayIncludesWith(array, value, comparator) {
                var index = -1, length = array == null ? 0 : array.length;
                while (++index < length) {
                    if (comparator(value, array[index])) {
                        return true;
                    }
                }
                return false;
            }
            function arrayMap(array, iteratee) {
                var index = -1, length = array == null ? 0 : array.length, result = Array(length);
                while (++index < length) {
                    result[index] = iteratee(array[index], index, array);
                }
                return result;
            }
            function arrayPush(array, values) {
                var index = -1, length = values.length, offset = array.length;
                while (++index < length) {
                    array[offset + index] = values[index];
                }
                return array;
            }
            function arrayReduce(array, iteratee, accumulator, initAccum) {
                var index = -1, length = array == null ? 0 : array.length;
                if (initAccum && length) {
                    accumulator = array[++index];
                }
                while (++index < length) {
                    accumulator = iteratee(accumulator, array[index], index, array);
                }
                return accumulator;
            }
            function arrayReduceRight(array, iteratee, accumulator, initAccum) {
                var length = array == null ? 0 : array.length;
                if (initAccum && length) {
                    accumulator = array[--length];
                }
                while (length--) {
                    accumulator = iteratee(accumulator, array[length], length, array);
                }
                return accumulator;
            }
            function arraySome(array, predicate) {
                var index = -1, length = array == null ? 0 : array.length;
                while (++index < length) {
                    if (predicate(array[index], index, array)) {
                        return true;
                    }
                }
                return false;
            }
            var asciiSize = baseProperty('length');
            function asciiToArray(string) {
                return string.split('');
            }
            function asciiWords(string) {
                return string.match(reAsciiWord) || [];
            }
            function baseFindKey(collection, predicate, eachFunc) {
                var result;
                eachFunc(collection, function (value, key, collection) {
                    if (predicate(value, key, collection)) {
                        result = key;
                        return false;
                    }
                });
                return result;
            }
            function baseFindIndex(array, predicate, fromIndex, fromRight) {
                var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
                while (fromRight ? index-- : ++index < length) {
                    if (predicate(array[index], index, array)) {
                        return index;
                    }
                }
                return -1;
            }
            function baseIndexOf(array, value, fromIndex) {
                return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
            }
            function baseIndexOfWith(array, value, fromIndex, comparator) {
                var index = fromIndex - 1, length = array.length;
                while (++index < length) {
                    if (comparator(array[index], value)) {
                        return index;
                    }
                }
                return -1;
            }
            function baseIsNaN(value) {
                return value !== value;
            }
            function baseMean(array, iteratee) {
                var length = array == null ? 0 : array.length;
                return length ? baseSum(array, iteratee) / length : NAN;
            }
            function baseProperty(key) {
                return function (object) {
                    return object == null ? undefined : object[key];
                };
            }
            function basePropertyOf(object) {
                return function (key) {
                    return object == null ? undefined : object[key];
                };
            }
            function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
                eachFunc(collection, function (value, index, collection) {
                    accumulator = initAccum ? (initAccum = false, value) : iteratee(accumulator, value, index, collection);
                });
                return accumulator;
            }
            function baseSortBy(array, comparer) {
                var length = array.length;
                array.sort(comparer);
                while (length--) {
                    array[length] = array[length].value;
                }
                return array;
            }
            function baseSum(array, iteratee) {
                var result, index = -1, length = array.length;
                while (++index < length) {
                    var current = iteratee(array[index]);
                    if (current !== undefined) {
                        result = result === undefined ? current : result + current;
                    }
                }
                return result;
            }
            function baseTimes(n, iteratee) {
                var index = -1, result = Array(n);
                while (++index < n) {
                    result[index] = iteratee(index);
                }
                return result;
            }
            function baseToPairs(object, props) {
                return arrayMap(props, function (key) {
                    return [key, object[key]];
                });
            }
            function baseUnary(func) {
                return function (value) {
                    return func(value);
                };
            }
            function baseValues(object, props) {
                return arrayMap(props, function (key) {
                    return object[key];
                });
            }
            function cacheHas(cache, key) {
                return cache.has(key);
            }
            function charsStartIndex(strSymbols, chrSymbols) {
                var index = -1, length = strSymbols.length;
                while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) { }
                return index;
            }
            function charsEndIndex(strSymbols, chrSymbols) {
                var index = strSymbols.length;
                while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) { }
                return index;
            }
            function countHolders(array, placeholder) {
                var length = array.length, result = 0;
                while (length--) {
                    if (array[length] === placeholder) {
                        ++result;
                    }
                }
                return result;
            }
            var deburrLetter = basePropertyOf(deburredLetters);
            var escapeHtmlChar = basePropertyOf(htmlEscapes);
            function escapeStringChar(chr) {
                return '\\' + stringEscapes[chr];
            }
            function getValue(object, key) {
                return object == null ? undefined : object[key];
            }
            function hasUnicode(string) {
                return reHasUnicode.test(string);
            }
            function hasUnicodeWord(string) {
                return reHasUnicodeWord.test(string);
            }
            function iteratorToArray(iterator) {
                var data, result = [];
                while (!(data = iterator.next()).done) {
                    result.push(data.value);
                }
                return result;
            }
            function mapToArray(map) {
                var index = -1, result = Array(map.size);
                map.forEach(function (value, key) {
                    result[++index] = [key, value];
                });
                return result;
            }
            function overArg(func, transform) {
                return function (arg) {
                    return func(transform(arg));
                };
            }
            function replaceHolders(array, placeholder) {
                var index = -1, length = array.length, resIndex = 0, result = [];
                while (++index < length) {
                    var value = array[index];
                    if (value === placeholder || value === PLACEHOLDER) {
                        array[index] = PLACEHOLDER;
                        result[resIndex++] = index;
                    }
                }
                return result;
            }
            function setToArray(set) {
                var index = -1, result = Array(set.size);
                set.forEach(function (value) {
                    result[++index] = value;
                });
                return result;
            }
            function setToPairs(set) {
                var index = -1, result = Array(set.size);
                set.forEach(function (value) {
                    result[++index] = [value, value];
                });
                return result;
            }
            function strictIndexOf(array, value, fromIndex) {
                var index = fromIndex - 1, length = array.length;
                while (++index < length) {
                    if (array[index] === value) {
                        return index;
                    }
                }
                return -1;
            }
            function strictLastIndexOf(array, value, fromIndex) {
                var index = fromIndex + 1;
                while (index--) {
                    if (array[index] === value) {
                        return index;
                    }
                }
                return index;
            }
            function stringSize(string) {
                return hasUnicode(string) ? unicodeSize(string) : asciiSize(string);
            }
            function stringToArray(string) {
                return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
            }
            var unescapeHtmlChar = basePropertyOf(htmlUnescapes);
            function unicodeSize(string) {
                var result = reUnicode.lastIndex = 0;
                while (reUnicode.test(string)) {
                    ++result;
                }
                return result;
            }
            function unicodeToArray(string) {
                return string.match(reUnicode) || [];
            }
            function unicodeWords(string) {
                return string.match(reUnicodeWord) || [];
            }
            var runInContext = function runInContext(context) {
                context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));
                var Array = context.Array, Date = context.Date, Error = context.Error, Function = context.Function, Math = context.Math, Object = context.Object, RegExp = context.RegExp, String = context.String, TypeError = context.TypeError;
                var arrayProto = Array.prototype, funcProto = Function.prototype, objectProto = Object.prototype;
                var coreJsData = context['__core-js_shared__'];
                var funcToString = funcProto.toString;
                var hasOwnProperty = objectProto.hasOwnProperty;
                var idCounter = 0;
                var maskSrcKey = function () {
                    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
                    return uid ? 'Symbol(src)_1.' + uid : '';
                }();
                var nativeObjectToString = objectProto.toString;
                var objectCtorString = funcToString.call(Object);
                var oldDash = root._;
                var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
                var Buffer = moduleExports ? context.Buffer : undefined, Symbol = context.Symbol, Uint8Array = context.Uint8Array, allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined, getPrototype = overArg(Object.getPrototypeOf, Object), objectCreate = Object.create, propertyIsEnumerable = objectProto.propertyIsEnumerable, splice = arrayProto.splice, spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined, symIterator = Symbol ? Symbol.iterator : undefined, symToStringTag = Symbol ? Symbol.toStringTag : undefined;
                var defineProperty = function () {
                    try {
                        var func = getNative(Object, 'defineProperty');
                        func({}, '', {});
                        return func;
                    }
                    catch (e) { }
                }();
                var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout, ctxNow = Date && Date.now !== root.Date.now && Date.now, ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;
                var nativeCeil = Math.ceil, nativeFloor = Math.floor, nativeGetSymbols = Object.getOwnPropertySymbols, nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined, nativeIsFinite = context.isFinite, nativeJoin = arrayProto.join, nativeKeys = overArg(Object.keys, Object), nativeMax = Math.max, nativeMin = Math.min, nativeNow = Date.now, nativeParseInt = context.parseInt, nativeRandom = Math.random, nativeReverse = arrayProto.reverse;
                var DataView = getNative(context, 'DataView'), Map = getNative(context, 'Map'), Promise = getNative(context, 'Promise'), Set = getNative(context, 'Set'), WeakMap = getNative(context, 'WeakMap'), nativeCreate = getNative(Object, 'create');
                var metaMap = WeakMap && new WeakMap();
                var realNames = {};
                var dataViewCtorString = toSource(DataView), mapCtorString = toSource(Map), promiseCtorString = toSource(Promise), setCtorString = toSource(Set), weakMapCtorString = toSource(WeakMap);
                var symbolProto = Symbol ? Symbol.prototype : undefined, symbolValueOf = symbolProto ? symbolProto.valueOf : undefined, symbolToString = symbolProto ? symbolProto.toString : undefined;
                function lodash(value) {
                    if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
                        if (value instanceof LodashWrapper) {
                            return value;
                        }
                        if (hasOwnProperty.call(value, '__wrapped__')) {
                            return wrapperClone(value);
                        }
                    }
                    return new LodashWrapper(value);
                }
                var baseCreate = function () {
                    function object() { }
                    return function (proto) {
                        if (!isObject(proto)) {
                            return {};
                        }
                        if (objectCreate) {
                            return objectCreate(proto);
                        }
                        object.prototype = proto;
                        var result = new object();
                        object.prototype = undefined;
                        return result;
                    };
                }();
                function baseLodash() { }
                function LodashWrapper(value, chainAll) {
                    (this || _global).__wrapped__ = value;
                    (this || _global).__actions__ = [];
                    (this || _global).__chain__ = !!chainAll;
                    (this || _global).__index__ = 0;
                    (this || _global).__values__ = undefined;
                }
                lodash.templateSettings = {
                    'escape': reEscape,
                    'evaluate': reEvaluate,
                    'interpolate': reInterpolate,
                    'variable': '',
                    'imports': {
                        '_': lodash
                    }
                };
                lodash.prototype = baseLodash.prototype;
                lodash.prototype.constructor = lodash;
                LodashWrapper.prototype = baseCreate(baseLodash.prototype);
                LodashWrapper.prototype.constructor = LodashWrapper;
                function LazyWrapper(value) {
                    (this || _global).__wrapped__ = value;
                    (this || _global).__actions__ = [];
                    (this || _global).__dir__ = 1;
                    (this || _global).__filtered__ = false;
                    (this || _global).__iteratees__ = [];
                    (this || _global).__takeCount__ = MAX_ARRAY_LENGTH;
                    (this || _global).__views__ = [];
                }
                function lazyClone() {
                    var result = new LazyWrapper((this || _global).__wrapped__);
                    result.__actions__ = copyArray((this || _global).__actions__);
                    result.__dir__ = (this || _global).__dir__;
                    result.__filtered__ = (this || _global).__filtered__;
                    result.__iteratees__ = copyArray((this || _global).__iteratees__);
                    result.__takeCount__ = (this || _global).__takeCount__;
                    result.__views__ = copyArray((this || _global).__views__);
                    return result;
                }
                function lazyReverse() {
                    if ((this || _global).__filtered__) {
                        var result = new LazyWrapper(this || _global);
                        result.__dir__ = -1;
                        result.__filtered__ = true;
                    }
                    else {
                        result = this.clone();
                        result.__dir__ *= -1;
                    }
                    return result;
                }
                function lazyValue() {
                    var array = (this || _global).__wrapped__.value(), dir = (this || _global).__dir__, isArr = isArray(array), isRight = dir < 0, arrLength = isArr ? array.length : 0, view = getView(0, arrLength, (this || _global).__views__), start = view.start, end = view.end, length = end - start, index = isRight ? end : start - 1, iteratees = (this || _global).__iteratees__, iterLength = iteratees.length, resIndex = 0, takeCount = nativeMin(length, (this || _global).__takeCount__);
                    if (!isArr || !isRight && arrLength == length && takeCount == length) {
                        return baseWrapperValue(array, (this || _global).__actions__);
                    }
                    var result = [];
                    outer: while (length-- && resIndex < takeCount) {
                        index += dir;
                        var iterIndex = -1, value = array[index];
                        while (++iterIndex < iterLength) {
                            var data = iteratees[iterIndex], iteratee = data.iteratee, type = data.type, computed = iteratee(value);
                            if (type == LAZY_MAP_FLAG) {
                                value = computed;
                            }
                            else if (!computed) {
                                if (type == LAZY_FILTER_FLAG) {
                                    continue outer;
                                }
                                else {
                                    break outer;
                                }
                            }
                        }
                        result[resIndex++] = value;
                    }
                    return result;
                }
                LazyWrapper.prototype = baseCreate(baseLodash.prototype);
                LazyWrapper.prototype.constructor = LazyWrapper;
                function Hash(entries) {
                    var index = -1, length = entries == null ? 0 : entries.length;
                    this.clear();
                    while (++index < length) {
                        var entry = entries[index];
                        this.set(entry[0], entry[1]);
                    }
                }
                function hashClear() {
                    (this || _global).__data__ = nativeCreate ? nativeCreate(null) : {};
                    (this || _global).size = 0;
                }
                function hashDelete(key) {
                    var result = this.has(key) && delete (this || _global).__data__[key];
                    (this || _global).size -= result ? 1 : 0;
                    return result;
                }
                function hashGet(key) {
                    var data = (this || _global).__data__;
                    if (nativeCreate) {
                        var result = data[key];
                        return result === HASH_UNDEFINED ? undefined : result;
                    }
                    return hasOwnProperty.call(data, key) ? data[key] : undefined;
                }
                function hashHas(key) {
                    var data = (this || _global).__data__;
                    return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
                }
                function hashSet(key, value) {
                    var data = (this || _global).__data__;
                    (this || _global).size += this.has(key) ? 0 : 1;
                    data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
                    return this || _global;
                }
                Hash.prototype.clear = hashClear;
                Hash.prototype['delete'] = hashDelete;
                Hash.prototype.get = hashGet;
                Hash.prototype.has = hashHas;
                Hash.prototype.set = hashSet;
                function ListCache(entries) {
                    var index = -1, length = entries == null ? 0 : entries.length;
                    this.clear();
                    while (++index < length) {
                        var entry = entries[index];
                        this.set(entry[0], entry[1]);
                    }
                }
                function listCacheClear() {
                    (this || _global).__data__ = [];
                    (this || _global).size = 0;
                }
                function listCacheDelete(key) {
                    var data = (this || _global).__data__, index = assocIndexOf(data, key);
                    if (index < 0) {
                        return false;
                    }
                    var lastIndex = data.length - 1;
                    if (index == lastIndex) {
                        data.pop();
                    }
                    else {
                        splice.call(data, index, 1);
                    }
                    --(this || _global).size;
                    return true;
                }
                function listCacheGet(key) {
                    var data = (this || _global).__data__, index = assocIndexOf(data, key);
                    return index < 0 ? undefined : data[index][1];
                }
                function listCacheHas(key) {
                    return assocIndexOf((this || _global).__data__, key) > -1;
                }
                function listCacheSet(key, value) {
                    var data = (this || _global).__data__, index = assocIndexOf(data, key);
                    if (index < 0) {
                        ++(this || _global).size;
                        data.push([key, value]);
                    }
                    else {
                        data[index][1] = value;
                    }
                    return this || _global;
                }
                ListCache.prototype.clear = listCacheClear;
                ListCache.prototype['delete'] = listCacheDelete;
                ListCache.prototype.get = listCacheGet;
                ListCache.prototype.has = listCacheHas;
                ListCache.prototype.set = listCacheSet;
                function MapCache(entries) {
                    var index = -1, length = entries == null ? 0 : entries.length;
                    this.clear();
                    while (++index < length) {
                        var entry = entries[index];
                        this.set(entry[0], entry[1]);
                    }
                }
                function mapCacheClear() {
                    (this || _global).size = 0;
                    (this || _global).__data__ = {
                        'hash': new Hash(),
                        'map': new (Map || ListCache)(),
                        'string': new Hash()
                    };
                }
                function mapCacheDelete(key) {
                    var result = getMapData(this || _global, key)['delete'](key);
                    (this || _global).size -= result ? 1 : 0;
                    return result;
                }
                function mapCacheGet(key) {
                    return getMapData(this || _global, key).get(key);
                }
                function mapCacheHas(key) {
                    return getMapData(this || _global, key).has(key);
                }
                function mapCacheSet(key, value) {
                    var data = getMapData(this || _global, key), size = data.size;
                    data.set(key, value);
                    (this || _global).size += data.size == size ? 0 : 1;
                    return this || _global;
                }
                MapCache.prototype.clear = mapCacheClear;
                MapCache.prototype['delete'] = mapCacheDelete;
                MapCache.prototype.get = mapCacheGet;
                MapCache.prototype.has = mapCacheHas;
                MapCache.prototype.set = mapCacheSet;
                function SetCache(values) {
                    var index = -1, length = values == null ? 0 : values.length;
                    (this || _global).__data__ = new MapCache();
                    while (++index < length) {
                        this.add(values[index]);
                    }
                }
                function setCacheAdd(value) {
                    (this || _global).__data__.set(value, HASH_UNDEFINED);
                    return this || _global;
                }
                function setCacheHas(value) {
                    return (this || _global).__data__.has(value);
                }
                SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
                SetCache.prototype.has = setCacheHas;
                function Stack(entries) {
                    var data = (this || _global).__data__ = new ListCache(entries);
                    (this || _global).size = data.size;
                }
                function stackClear() {
                    (this || _global).__data__ = new ListCache();
                    (this || _global).size = 0;
                }
                function stackDelete(key) {
                    var data = (this || _global).__data__, result = data['delete'](key);
                    (this || _global).size = data.size;
                    return result;
                }
                function stackGet(key) {
                    return (this || _global).__data__.get(key);
                }
                function stackHas(key) {
                    return (this || _global).__data__.has(key);
                }
                function stackSet(key, value) {
                    var data = (this || _global).__data__;
                    if (data instanceof ListCache) {
                        var pairs = data.__data__;
                        if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
                            pairs.push([key, value]);
                            (this || _global).size = ++data.size;
                            return this || _global;
                        }
                        data = (this || _global).__data__ = new MapCache(pairs);
                    }
                    data.set(key, value);
                    (this || _global).size = data.size;
                    return this || _global;
                }
                Stack.prototype.clear = stackClear;
                Stack.prototype['delete'] = stackDelete;
                Stack.prototype.get = stackGet;
                Stack.prototype.has = stackHas;
                Stack.prototype.set = stackSet;
                function arrayLikeKeys(value, inherited) {
                    var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
                    for (var key in value) {
                        if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (key == 'length' ||
                            isBuff && (key == 'offset' || key == 'parent') ||
                            isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') ||
                            isIndex(key, length)))) {
                            result.push(key);
                        }
                    }
                    return result;
                }
                function arraySample(array) {
                    var length = array.length;
                    return length ? array[baseRandom(0, length - 1)] : undefined;
                }
                function arraySampleSize(array, n) {
                    return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
                }
                function arrayShuffle(array) {
                    return shuffleSelf(copyArray(array));
                }
                function assignMergeValue(object, key, value) {
                    if (value !== undefined && !eq(object[key], value) || value === undefined && !(key in object)) {
                        baseAssignValue(object, key, value);
                    }
                }
                function assignValue(object, key, value) {
                    var objValue = object[key];
                    if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined && !(key in object)) {
                        baseAssignValue(object, key, value);
                    }
                }
                function assocIndexOf(array, key) {
                    var length = array.length;
                    while (length--) {
                        if (eq(array[length][0], key)) {
                            return length;
                        }
                    }
                    return -1;
                }
                function baseAggregator(collection, setter, iteratee, accumulator) {
                    baseEach(collection, function (value, key, collection) {
                        setter(accumulator, value, iteratee(value), collection);
                    });
                    return accumulator;
                }
                function baseAssign(object, source) {
                    return object && copyObject(source, keys(source), object);
                }
                function baseAssignIn(object, source) {
                    return object && copyObject(source, keysIn(source), object);
                }
                function baseAssignValue(object, key, value) {
                    if (key == '__proto__' && defineProperty) {
                        defineProperty(object, key, {
                            'configurable': true,
                            'enumerable': true,
                            'value': value,
                            'writable': true
                        });
                    }
                    else {
                        object[key] = value;
                    }
                }
                function baseAt(object, paths) {
                    var index = -1, length = paths.length, result = Array(length), skip = object == null;
                    while (++index < length) {
                        result[index] = skip ? undefined : get(object, paths[index]);
                    }
                    return result;
                }
                function baseClamp(number, lower, upper) {
                    if (number === number) {
                        if (upper !== undefined) {
                            number = number <= upper ? number : upper;
                        }
                        if (lower !== undefined) {
                            number = number >= lower ? number : lower;
                        }
                    }
                    return number;
                }
                function baseClone(value, bitmask, customizer, key, object, stack) {
                    var result, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
                    if (customizer) {
                        result = object ? customizer(value, key, object, stack) : customizer(value);
                    }
                    if (result !== undefined) {
                        return result;
                    }
                    if (!isObject(value)) {
                        return value;
                    }
                    var isArr = isArray(value);
                    if (isArr) {
                        result = initCloneArray(value);
                        if (!isDeep) {
                            return copyArray(value, result);
                        }
                    }
                    else {
                        var tag = getTag(value), isFunc = tag == funcTag || tag == genTag;
                        if (isBuffer(value)) {
                            return cloneBuffer(value, isDeep);
                        }
                        if (tag == objectTag || tag == argsTag || isFunc && !object) {
                            result = isFlat || isFunc ? {} : initCloneObject(value);
                            if (!isDeep) {
                                return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
                            }
                        }
                        else {
                            if (!cloneableTags[tag]) {
                                return object ? value : {};
                            }
                            result = initCloneByTag(value, tag, isDeep);
                        }
                    }
                    stack || (stack = new Stack());
                    var stacked = stack.get(value);
                    if (stacked) {
                        return stacked;
                    }
                    stack.set(value, result);
                    if (isSet(value)) {
                        value.forEach(function (subValue) {
                            result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
                        });
                    }
                    else if (isMap(value)) {
                        value.forEach(function (subValue, key) {
                            result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
                        });
                    }
                    var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
                    var props = isArr ? undefined : keysFunc(value);
                    arrayEach(props || value, function (subValue, key) {
                        if (props) {
                            key = subValue;
                            subValue = value[key];
                        }
                        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
                    });
                    return result;
                }
                function baseConforms(source) {
                    var props = keys(source);
                    return function (object) {
                        return baseConformsTo(object, source, props);
                    };
                }
                function baseConformsTo(object, source, props) {
                    var length = props.length;
                    if (object == null) {
                        return !length;
                    }
                    object = Object(object);
                    while (length--) {
                        var key = props[length], predicate = source[key], value = object[key];
                        if (value === undefined && !(key in object) || !predicate(value)) {
                            return false;
                        }
                    }
                    return true;
                }
                function baseDelay(func, wait, args) {
                    if (typeof func != 'function') {
                        throw new TypeError(FUNC_ERROR_TEXT);
                    }
                    return setTimeout(function () {
                        func.apply(undefined, args);
                    }, wait);
                }
                function baseDifference(array, values, iteratee, comparator) {
                    var index = -1, includes = arrayIncludes, isCommon = true, length = array.length, result = [], valuesLength = values.length;
                    if (!length) {
                        return result;
                    }
                    if (iteratee) {
                        values = arrayMap(values, baseUnary(iteratee));
                    }
                    if (comparator) {
                        includes = arrayIncludesWith;
                        isCommon = false;
                    }
                    else if (values.length >= LARGE_ARRAY_SIZE) {
                        includes = cacheHas;
                        isCommon = false;
                        values = new SetCache(values);
                    }
                    outer: while (++index < length) {
                        var value = array[index], computed = iteratee == null ? value : iteratee(value);
                        value = comparator || value !== 0 ? value : 0;
                        if (isCommon && computed === computed) {
                            var valuesIndex = valuesLength;
                            while (valuesIndex--) {
                                if (values[valuesIndex] === computed) {
                                    continue outer;
                                }
                            }
                            result.push(value);
                        }
                        else if (!includes(values, computed, comparator)) {
                            result.push(value);
                        }
                    }
                    return result;
                }
                var baseEach = createBaseEach(baseForOwn);
                var baseEachRight = createBaseEach(baseForOwnRight, true);
                function baseEvery(collection, predicate) {
                    var result = true;
                    baseEach(collection, function (value, index, collection) {
                        result = !!predicate(value, index, collection);
                        return result;
                    });
                    return result;
                }
                function baseExtremum(array, iteratee, comparator) {
                    var index = -1, length = array.length;
                    while (++index < length) {
                        var value = array[index], current = iteratee(value);
                        if (current != null && (computed === undefined ? current === current && !isSymbol(current) : comparator(current, computed))) {
                            var computed = current, result = value;
                        }
                    }
                    return result;
                }
                function baseFill(array, value, start, end) {
                    var length = array.length;
                    start = toInteger(start);
                    if (start < 0) {
                        start = -start > length ? 0 : length + start;
                    }
                    end = end === undefined || end > length ? length : toInteger(end);
                    if (end < 0) {
                        end += length;
                    }
                    end = start > end ? 0 : toLength(end);
                    while (start < end) {
                        array[start++] = value;
                    }
                    return array;
                }
                function baseFilter(collection, predicate) {
                    var result = [];
                    baseEach(collection, function (value, index, collection) {
                        if (predicate(value, index, collection)) {
                            result.push(value);
                        }
                    });
                    return result;
                }
                function baseFlatten(array, depth, predicate, isStrict, result) {
                    var index = -1, length = array.length;
                    predicate || (predicate = isFlattenable);
                    result || (result = []);
                    while (++index < length) {
                        var value = array[index];
                        if (depth > 0 && predicate(value)) {
                            if (depth > 1) {
                                baseFlatten(value, depth - 1, predicate, isStrict, result);
                            }
                            else {
                                arrayPush(result, value);
                            }
                        }
                        else if (!isStrict) {
                            result[result.length] = value;
                        }
                    }
                    return result;
                }
                var baseFor = createBaseFor();
                var baseForRight = createBaseFor(true);
                function baseForOwn(object, iteratee) {
                    return object && baseFor(object, iteratee, keys);
                }
                function baseForOwnRight(object, iteratee) {
                    return object && baseForRight(object, iteratee, keys);
                }
                function baseFunctions(object, props) {
                    return arrayFilter(props, function (key) {
                        return isFunction(object[key]);
                    });
                }
                function baseGet(object, path) {
                    path = castPath(path, object);
                    var index = 0, length = path.length;
                    while (object != null && index < length) {
                        object = object[toKey(path[index++])];
                    }
                    return index && index == length ? object : undefined;
                }
                function baseGetAllKeys(object, keysFunc, symbolsFunc) {
                    var result = keysFunc(object);
                    return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
                }
                function baseGetTag(value) {
                    if (value == null) {
                        return value === undefined ? undefinedTag : nullTag;
                    }
                    return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
                }
                function baseGt(value, other) {
                    return value > other;
                }
                function baseHas(object, key) {
                    return object != null && hasOwnProperty.call(object, key);
                }
                function baseHasIn(object, key) {
                    return object != null && key in Object(object);
                }
                function baseInRange(number, start, end) {
                    return number >= nativeMin(start, end) && number < nativeMax(start, end);
                }
                function baseIntersection(arrays, iteratee, comparator) {
                    var includes = comparator ? arrayIncludesWith : arrayIncludes, length = arrays[0].length, othLength = arrays.length, othIndex = othLength, caches = Array(othLength), maxLength = Infinity, result = [];
                    while (othIndex--) {
                        var array = arrays[othIndex];
                        if (othIndex && iteratee) {
                            array = arrayMap(array, baseUnary(iteratee));
                        }
                        maxLength = nativeMin(array.length, maxLength);
                        caches[othIndex] = !comparator && (iteratee || length >= 120 && array.length >= 120) ? new SetCache(othIndex && array) : undefined;
                    }
                    array = arrays[0];
                    var index = -1, seen = caches[0];
                    outer: while (++index < length && result.length < maxLength) {
                        var value = array[index], computed = iteratee ? iteratee(value) : value;
                        value = comparator || value !== 0 ? value : 0;
                        if (!(seen ? cacheHas(seen, computed) : includes(result, computed, comparator))) {
                            othIndex = othLength;
                            while (--othIndex) {
                                var cache = caches[othIndex];
                                if (!(cache ? cacheHas(cache, computed) : includes(arrays[othIndex], computed, comparator))) {
                                    continue outer;
                                }
                            }
                            if (seen) {
                                seen.push(computed);
                            }
                            result.push(value);
                        }
                    }
                    return result;
                }
                function baseInverter(object, setter, iteratee, accumulator) {
                    baseForOwn(object, function (value, key, object) {
                        setter(accumulator, iteratee(value), key, object);
                    });
                    return accumulator;
                }
                function baseInvoke(object, path, args) {
                    path = castPath(path, object);
                    object = parent(object, path);
                    var func = object == null ? object : object[toKey(last(path))];
                    return func == null ? undefined : apply(func, object, args);
                }
                function baseIsArguments(value) {
                    return isObjectLike(value) && baseGetTag(value) == argsTag;
                }
                function baseIsArrayBuffer(value) {
                    return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
                }
                function baseIsDate(value) {
                    return isObjectLike(value) && baseGetTag(value) == dateTag;
                }
                function baseIsEqual(value, other, bitmask, customizer, stack) {
                    if (value === other) {
                        return true;
                    }
                    if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
                        return value !== value && other !== other;
                    }
                    return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
                }
                function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
                    var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
                    objTag = objTag == argsTag ? objectTag : objTag;
                    othTag = othTag == argsTag ? objectTag : othTag;
                    var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
                    if (isSameTag && isBuffer(object)) {
                        if (!isBuffer(other)) {
                            return false;
                        }
                        objIsArr = true;
                        objIsObj = false;
                    }
                    if (isSameTag && !objIsObj) {
                        stack || (stack = new Stack());
                        return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
                    }
                    if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
                        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'), othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');
                        if (objIsWrapped || othIsWrapped) {
                            var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
                            stack || (stack = new Stack());
                            return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
                        }
                    }
                    if (!isSameTag) {
                        return false;
                    }
                    stack || (stack = new Stack());
                    return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
                }
                function baseIsMap(value) {
                    return isObjectLike(value) && getTag(value) == mapTag;
                }
                function baseIsMatch(object, source, matchData, customizer) {
                    var index = matchData.length, length = index, noCustomizer = !customizer;
                    if (object == null) {
                        return !length;
                    }
                    object = Object(object);
                    while (index--) {
                        var data = matchData[index];
                        if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
                            return false;
                        }
                    }
                    while (++index < length) {
                        data = matchData[index];
                        var key = data[0], objValue = object[key], srcValue = data[1];
                        if (noCustomizer && data[2]) {
                            if (objValue === undefined && !(key in object)) {
                                return false;
                            }
                        }
                        else {
                            var stack = new Stack();
                            if (customizer) {
                                var result = customizer(objValue, srcValue, key, object, source, stack);
                            }
                            if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {
                                return false;
                            }
                        }
                    }
                    return true;
                }
                function baseIsNative(value) {
                    if (!isObject(value) || isMasked(value)) {
                        return false;
                    }
                    var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
                    return pattern.test(toSource(value));
                }
                function baseIsRegExp(value) {
                    return isObjectLike(value) && baseGetTag(value) == regexpTag;
                }
                function baseIsSet(value) {
                    return isObjectLike(value) && getTag(value) == setTag;
                }
                function baseIsTypedArray(value) {
                    return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
                }
                function baseIteratee(value) {
                    if (typeof value == 'function') {
                        return value;
                    }
                    if (value == null) {
                        return identity;
                    }
                    if (typeof value == 'object') {
                        return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
                    }
                    return property(value);
                }
                function baseKeys(object) {
                    if (!isPrototype(object)) {
                        return nativeKeys(object);
                    }
                    var result = [];
                    for (var key in Object(object)) {
                        if (hasOwnProperty.call(object, key) && key != 'constructor') {
                            result.push(key);
                        }
                    }
                    return result;
                }
                function baseKeysIn(object) {
                    if (!isObject(object)) {
                        return nativeKeysIn(object);
                    }
                    var isProto = isPrototype(object), result = [];
                    for (var key in object) {
                        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
                            result.push(key);
                        }
                    }
                    return result;
                }
                function baseLt(value, other) {
                    return value < other;
                }
                function baseMap(collection, iteratee) {
                    var index = -1, result = isArrayLike(collection) ? Array(collection.length) : [];
                    baseEach(collection, function (value, key, collection) {
                        result[++index] = iteratee(value, key, collection);
                    });
                    return result;
                }
                function baseMatches(source) {
                    var matchData = getMatchData(source);
                    if (matchData.length == 1 && matchData[0][2]) {
                        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
                    }
                    return function (object) {
                        return object === source || baseIsMatch(object, source, matchData);
                    };
                }
                function baseMatchesProperty(path, srcValue) {
                    if (isKey(path) && isStrictComparable(srcValue)) {
                        return matchesStrictComparable(toKey(path), srcValue);
                    }
                    return function (object) {
                        var objValue = get(object, path);
                        return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
                    };
                }
                function baseMerge(object, source, srcIndex, customizer, stack) {
                    if (object === source) {
                        return;
                    }
                    baseFor(source, function (srcValue, key) {
                        stack || (stack = new Stack());
                        if (isObject(srcValue)) {
                            baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
                        }
                        else {
                            var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + '', object, source, stack) : undefined;
                            if (newValue === undefined) {
                                newValue = srcValue;
                            }
                            assignMergeValue(object, key, newValue);
                        }
                    }, keysIn);
                }
                function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
                    var objValue = safeGet(object, key), srcValue = safeGet(source, key), stacked = stack.get(srcValue);
                    if (stacked) {
                        assignMergeValue(object, key, stacked);
                        return;
                    }
                    var newValue = customizer ? customizer(objValue, srcValue, key + '', object, source, stack) : undefined;
                    var isCommon = newValue === undefined;
                    if (isCommon) {
                        var isArr = isArray(srcValue), isBuff = !isArr && isBuffer(srcValue), isTyped = !isArr && !isBuff && isTypedArray(srcValue);
                        newValue = srcValue;
                        if (isArr || isBuff || isTyped) {
                            if (isArray(objValue)) {
                                newValue = objValue;
                            }
                            else if (isArrayLikeObject(objValue)) {
                                newValue = copyArray(objValue);
                            }
                            else if (isBuff) {
                                isCommon = false;
                                newValue = cloneBuffer(srcValue, true);
                            }
                            else if (isTyped) {
                                isCommon = false;
                                newValue = cloneTypedArray(srcValue, true);
                            }
                            else {
                                newValue = [];
                            }
                        }
                        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
                            newValue = objValue;
                            if (isArguments(objValue)) {
                                newValue = toPlainObject(objValue);
                            }
                            else if (!isObject(objValue) || isFunction(objValue)) {
                                newValue = initCloneObject(srcValue);
                            }
                        }
                        else {
                            isCommon = false;
                        }
                    }
                    if (isCommon) {
                        stack.set(srcValue, newValue);
                        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
                        stack['delete'](srcValue);
                    }
                    assignMergeValue(object, key, newValue);
                }
                function baseNth(array, n) {
                    var length = array.length;
                    if (!length) {
                        return;
                    }
                    n += n < 0 ? length : 0;
                    return isIndex(n, length) ? array[n] : undefined;
                }
                function baseOrderBy(collection, iteratees, orders) {
                    var index = -1;
                    iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));
                    var result = baseMap(collection, function (value, key, collection) {
                        var criteria = arrayMap(iteratees, function (iteratee) {
                            return iteratee(value);
                        });
                        return {
                            'criteria': criteria,
                            'index': ++index,
                            'value': value
                        };
                    });
                    return baseSortBy(result, function (object, other) {
                        return compareMultiple(object, other, orders);
                    });
                }
                function basePick(object, paths) {
                    return basePickBy(object, paths, function (value, path) {
                        return hasIn(object, path);
                    });
                }
                function basePickBy(object, paths, predicate) {
                    var index = -1, length = paths.length, result = {};
                    while (++index < length) {
                        var path = paths[index], value = baseGet(object, path);
                        if (predicate(value, path)) {
                            baseSet(result, castPath(path, object), value);
                        }
                    }
                    return result;
                }
                function basePropertyDeep(path) {
                    return function (object) {
                        return baseGet(object, path);
                    };
                }
                function basePullAll(array, values, iteratee, comparator) {
                    var indexOf = comparator ? baseIndexOfWith : baseIndexOf, index = -1, length = values.length, seen = array;
                    if (array === values) {
                        values = copyArray(values);
                    }
                    if (iteratee) {
                        seen = arrayMap(array, baseUnary(iteratee));
                    }
                    while (++index < length) {
                        var fromIndex = 0, value = values[index], computed = iteratee ? iteratee(value) : value;
                        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
                            if (seen !== array) {
                                splice.call(seen, fromIndex, 1);
                            }
                            splice.call(array, fromIndex, 1);
                        }
                    }
                    return array;
                }
                function basePullAt(array, indexes) {
                    var length = array ? indexes.length : 0, lastIndex = length - 1;
                    while (length--) {
                        var index = indexes[length];
                        if (length == lastIndex || index !== previous) {
                            var previous = index;
                            if (isIndex(index)) {
                                splice.call(array, index, 1);
                            }
                            else {
                                baseUnset(array, index);
                            }
                        }
                    }
                    return array;
                }
                function baseRandom(lower, upper) {
                    return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
                }
                function baseRange(start, end, step, fromRight) {
                    var index = -1, length = nativeMax(nativeCeil((end - start) / (step || 1)), 0), result = Array(length);
                    while (length--) {
                        result[fromRight ? length : ++index] = start;
                        start += step;
                    }
                    return result;
                }
                function baseRepeat(string, n) {
                    var result = '';
                    if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
                        return result;
                    }
                    do {
                        if (n % 2) {
                            result += string;
                        }
                        n = nativeFloor(n / 2);
                        if (n) {
                            string += string;
                        }
                    } while (n);
                    return result;
                }
                function baseRest(func, start) {
                    return setToString(overRest(func, start, identity), func + '');
                }
                function baseSample(collection) {
                    return arraySample(values(collection));
                }
                function baseSampleSize(collection, n) {
                    var array = values(collection);
                    return shuffleSelf(array, baseClamp(n, 0, array.length));
                }
                function baseSet(object, path, value, customizer) {
                    if (!isObject(object)) {
                        return object;
                    }
                    path = castPath(path, object);
                    var index = -1, length = path.length, lastIndex = length - 1, nested = object;
                    while (nested != null && ++index < length) {
                        var key = toKey(path[index]), newValue = value;
                        if (index != lastIndex) {
                            var objValue = nested[key];
                            newValue = customizer ? customizer(objValue, key, nested) : undefined;
                            if (newValue === undefined) {
                                newValue = isObject(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};
                            }
                        }
                        assignValue(nested, key, newValue);
                        nested = nested[key];
                    }
                    return object;
                }
                var baseSetData = !metaMap ? identity : function (func, data) {
                    metaMap.set(func, data);
                    return func;
                };
                var baseSetToString = !defineProperty ? identity : function (func, string) {
                    return defineProperty(func, 'toString', {
                        'configurable': true,
                        'enumerable': false,
                        'value': constant(string),
                        'writable': true
                    });
                };
                function baseShuffle(collection) {
                    return shuffleSelf(values(collection));
                }
                function baseSlice(array, start, end) {
                    var index = -1, length = array.length;
                    if (start < 0) {
                        start = -start > length ? 0 : length + start;
                    }
                    end = end > length ? length : end;
                    if (end < 0) {
                        end += length;
                    }
                    length = start > end ? 0 : end - start >>> 0;
                    start >>>= 0;
                    var result = Array(length);
                    while (++index < length) {
                        result[index] = array[index + start];
                    }
                    return result;
                }
                function baseSome(collection, predicate) {
                    var result;
                    baseEach(collection, function (value, index, collection) {
                        result = predicate(value, index, collection);
                        return !result;
                    });
                    return !!result;
                }
                function baseSortedIndex(array, value, retHighest) {
                    var low = 0, high = array == null ? low : array.length;
                    if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
                        while (low < high) {
                            var mid = low + high >>> 1, computed = array[mid];
                            if (computed !== null && !isSymbol(computed) && (retHighest ? computed <= value : computed < value)) {
                                low = mid + 1;
                            }
                            else {
                                high = mid;
                            }
                        }
                        return high;
                    }
                    return baseSortedIndexBy(array, value, identity, retHighest);
                }
                function baseSortedIndexBy(array, value, iteratee, retHighest) {
                    value = iteratee(value);
                    var low = 0, high = array == null ? 0 : array.length, valIsNaN = value !== value, valIsNull = value === null, valIsSymbol = isSymbol(value), valIsUndefined = value === undefined;
                    while (low < high) {
                        var mid = nativeFloor((low + high) / 2), computed = iteratee(array[mid]), othIsDefined = computed !== undefined, othIsNull = computed === null, othIsReflexive = computed === computed, othIsSymbol = isSymbol(computed);
                        if (valIsNaN) {
                            var setLow = retHighest || othIsReflexive;
                        }
                        else if (valIsUndefined) {
                            setLow = othIsReflexive && (retHighest || othIsDefined);
                        }
                        else if (valIsNull) {
                            setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
                        }
                        else if (valIsSymbol) {
                            setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
                        }
                        else if (othIsNull || othIsSymbol) {
                            setLow = false;
                        }
                        else {
                            setLow = retHighest ? computed <= value : computed < value;
                        }
                        if (setLow) {
                            low = mid + 1;
                        }
                        else {
                            high = mid;
                        }
                    }
                    return nativeMin(high, MAX_ARRAY_INDEX);
                }
                function baseSortedUniq(array, iteratee) {
                    var index = -1, length = array.length, resIndex = 0, result = [];
                    while (++index < length) {
                        var value = array[index], computed = iteratee ? iteratee(value) : value;
                        if (!index || !eq(computed, seen)) {
                            var seen = computed;
                            result[resIndex++] = value === 0 ? 0 : value;
                        }
                    }
                    return result;
                }
                function baseToNumber(value) {
                    if (typeof value == 'number') {
                        return value;
                    }
                    if (isSymbol(value)) {
                        return NAN;
                    }
                    return +value;
                }
                function baseToString(value) {
                    if (typeof value == 'string') {
                        return value;
                    }
                    if (isArray(value)) {
                        return arrayMap(value, baseToString) + '';
                    }
                    if (isSymbol(value)) {
                        return symbolToString ? symbolToString.call(value) : '';
                    }
                    var result = value + '';
                    return result == '0' && 1 / value == -INFINITY ? '-0' : result;
                }
                function baseUniq(array, iteratee, comparator) {
                    var index = -1, includes = arrayIncludes, length = array.length, isCommon = true, result = [], seen = result;
                    if (comparator) {
                        isCommon = false;
                        includes = arrayIncludesWith;
                    }
                    else if (length >= LARGE_ARRAY_SIZE) {
                        var set = iteratee ? null : createSet(array);
                        if (set) {
                            return setToArray(set);
                        }
                        isCommon = false;
                        includes = cacheHas;
                        seen = new SetCache();
                    }
                    else {
                        seen = iteratee ? [] : result;
                    }
                    outer: while (++index < length) {
                        var value = array[index], computed = iteratee ? iteratee(value) : value;
                        value = comparator || value !== 0 ? value : 0;
                        if (isCommon && computed === computed) {
                            var seenIndex = seen.length;
                            while (seenIndex--) {
                                if (seen[seenIndex] === computed) {
                                    continue outer;
                                }
                            }
                            if (iteratee) {
                                seen.push(computed);
                            }
                            result.push(value);
                        }
                        else if (!includes(seen, computed, comparator)) {
                            if (seen !== result) {
                                seen.push(computed);
                            }
                            result.push(value);
                        }
                    }
                    return result;
                }
                function baseUnset(object, path) {
                    path = castPath(path, object);
                    object = parent(object, path);
                    return object == null || delete object[toKey(last(path))];
                }
                function baseUpdate(object, path, updater, customizer) {
                    return baseSet(object, path, updater(baseGet(object, path)), customizer);
                }
                function baseWhile(array, predicate, isDrop, fromRight) {
                    var length = array.length, index = fromRight ? length : -1;
                    while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) { }
                    return isDrop ? baseSlice(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice(array, fromRight ? index + 1 : 0, fromRight ? length : index);
                }
                function baseWrapperValue(value, actions) {
                    var result = value;
                    if (result instanceof LazyWrapper) {
                        result = result.value();
                    }
                    return arrayReduce(actions, function (result, action) {
                        return action.func.apply(action.thisArg, arrayPush([result], action.args));
                    }, result);
                }
                function baseXor(arrays, iteratee, comparator) {
                    var length = arrays.length;
                    if (length < 2) {
                        return length ? baseUniq(arrays[0]) : [];
                    }
                    var index = -1, result = Array(length);
                    while (++index < length) {
                        var array = arrays[index], othIndex = -1;
                        while (++othIndex < length) {
                            if (othIndex != index) {
                                result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
                            }
                        }
                    }
                    return baseUniq(baseFlatten(result, 1), iteratee, comparator);
                }
                function baseZipObject(props, values, assignFunc) {
                    var index = -1, length = props.length, valsLength = values.length, result = {};
                    while (++index < length) {
                        var value = index < valsLength ? values[index] : undefined;
                        assignFunc(result, props[index], value);
                    }
                    return result;
                }
                function castArrayLikeObject(value) {
                    return isArrayLikeObject(value) ? value : [];
                }
                function castFunction(value) {
                    return typeof value == 'function' ? value : identity;
                }
                function castPath(value, object) {
                    if (isArray(value)) {
                        return value;
                    }
                    return isKey(value, object) ? [value] : stringToPath(toString(value));
                }
                var castRest = baseRest;
                function castSlice(array, start, end) {
                    var length = array.length;
                    end = end === undefined ? length : end;
                    return !start && end >= length ? array : baseSlice(array, start, end);
                }
                var clearTimeout = ctxClearTimeout || function (id) {
                    return root.clearTimeout(id);
                };
                function cloneBuffer(buffer, isDeep) {
                    if (isDeep) {
                        return buffer.slice();
                    }
                    var length = buffer.length, result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
                    buffer.copy(result);
                    return result;
                }
                function cloneArrayBuffer(arrayBuffer) {
                    var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
                    new Uint8Array(result).set(new Uint8Array(arrayBuffer));
                    return result;
                }
                function cloneDataView(dataView, isDeep) {
                    var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
                    return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
                }
                function cloneRegExp(regexp) {
                    var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
                    result.lastIndex = regexp.lastIndex;
                    return result;
                }
                function cloneSymbol(symbol) {
                    return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
                }
                function cloneTypedArray(typedArray, isDeep) {
                    var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
                    return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
                }
                function compareAscending(value, other) {
                    if (value !== other) {
                        var valIsDefined = value !== undefined, valIsNull = value === null, valIsReflexive = value === value, valIsSymbol = isSymbol(value);
                        var othIsDefined = other !== undefined, othIsNull = other === null, othIsReflexive = other === other, othIsSymbol = isSymbol(other);
                        if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
                            return 1;
                        }
                        if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
                            return -1;
                        }
                    }
                    return 0;
                }
                function compareMultiple(object, other, orders) {
                    var index = -1, objCriteria = object.criteria, othCriteria = other.criteria, length = objCriteria.length, ordersLength = orders.length;
                    while (++index < length) {
                        var result = compareAscending(objCriteria[index], othCriteria[index]);
                        if (result) {
                            if (index >= ordersLength) {
                                return result;
                            }
                            var order = orders[index];
                            return result * (order == 'desc' ? -1 : 1);
                        }
                    }
                    return object.index - other.index;
                }
                function composeArgs(args, partials, holders, isCurried) {
                    var argsIndex = -1, argsLength = args.length, holdersLength = holders.length, leftIndex = -1, leftLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result = Array(leftLength + rangeLength), isUncurried = !isCurried;
                    while (++leftIndex < leftLength) {
                        result[leftIndex] = partials[leftIndex];
                    }
                    while (++argsIndex < holdersLength) {
                        if (isUncurried || argsIndex < argsLength) {
                            result[holders[argsIndex]] = args[argsIndex];
                        }
                    }
                    while (rangeLength--) {
                        result[leftIndex++] = args[argsIndex++];
                    }
                    return result;
                }
                function composeArgsRight(args, partials, holders, isCurried) {
                    var argsIndex = -1, argsLength = args.length, holdersIndex = -1, holdersLength = holders.length, rightIndex = -1, rightLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result = Array(rangeLength + rightLength), isUncurried = !isCurried;
                    while (++argsIndex < rangeLength) {
                        result[argsIndex] = args[argsIndex];
                    }
                    var offset = argsIndex;
                    while (++rightIndex < rightLength) {
                        result[offset + rightIndex] = partials[rightIndex];
                    }
                    while (++holdersIndex < holdersLength) {
                        if (isUncurried || argsIndex < argsLength) {
                            result[offset + holders[holdersIndex]] = args[argsIndex++];
                        }
                    }
                    return result;
                }
                function copyArray(source, array) {
                    var index = -1, length = source.length;
                    array || (array = Array(length));
                    while (++index < length) {
                        array[index] = source[index];
                    }
                    return array;
                }
                function copyObject(source, props, object, customizer) {
                    var isNew = !object;
                    object || (object = {});
                    var index = -1, length = props.length;
                    while (++index < length) {
                        var key = props[index];
                        var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;
                        if (newValue === undefined) {
                            newValue = source[key];
                        }
                        if (isNew) {
                            baseAssignValue(object, key, newValue);
                        }
                        else {
                            assignValue(object, key, newValue);
                        }
                    }
                    return object;
                }
                function copySymbols(source, object) {
                    return copyObject(source, getSymbols(source), object);
                }
                function copySymbolsIn(source, object) {
                    return copyObject(source, getSymbolsIn(source), object);
                }
                function createAggregator(setter, initializer) {
                    return function (collection, iteratee) {
                        var func = isArray(collection) ? arrayAggregator : baseAggregator, accumulator = initializer ? initializer() : {};
                        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
                    };
                }
                function createAssigner(assigner) {
                    return baseRest(function (object, sources) {
                        var index = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : undefined, guard = length > 2 ? sources[2] : undefined;
                        customizer = assigner.length > 3 && typeof customizer == 'function' ? (length--, customizer) : undefined;
                        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
                            customizer = length < 3 ? undefined : customizer;
                            length = 1;
                        }
                        object = Object(object);
                        while (++index < length) {
                            var source = sources[index];
                            if (source) {
                                assigner(object, source, index, customizer);
                            }
                        }
                        return object;
                    });
                }
                function createBaseEach(eachFunc, fromRight) {
                    return function (collection, iteratee) {
                        if (collection == null) {
                            return collection;
                        }
                        if (!isArrayLike(collection)) {
                            return eachFunc(collection, iteratee);
                        }
                        var length = collection.length, index = fromRight ? length : -1, iterable = Object(collection);
                        while (fromRight ? index-- : ++index < length) {
                            if (iteratee(iterable[index], index, iterable) === false) {
                                break;
                            }
                        }
                        return collection;
                    };
                }
                function createBaseFor(fromRight) {
                    return function (object, iteratee, keysFunc) {
                        var index = -1, iterable = Object(object), props = keysFunc(object), length = props.length;
                        while (length--) {
                            var key = props[fromRight ? length : ++index];
                            if (iteratee(iterable[key], key, iterable) === false) {
                                break;
                            }
                        }
                        return object;
                    };
                }
                function createBind(func, bitmask, thisArg) {
                    var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
                    function wrapper() {
                        var fn = (this || _global) && (this || _global) !== root && (this || _global) instanceof wrapper ? Ctor : func;
                        return fn.apply(isBind ? thisArg : this || _global, arguments);
                    }
                    return wrapper;
                }
                function createCaseFirst(methodName) {
                    return function (string) {
                        string = toString(string);
                        var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined;
                        var chr = strSymbols ? strSymbols[0] : string.charAt(0);
                        var trailing = strSymbols ? castSlice(strSymbols, 1).join('') : string.slice(1);
                        return chr[methodName]() + trailing;
                    };
                }
                function createCompounder(callback) {
                    return function (string) {
                        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
                    };
                }
                function createCtor(Ctor) {
                    return function () {
                        var args = arguments;
                        switch (args.length) {
                            case 0:
                                return new Ctor();
                            case 1:
                                return new Ctor(args[0]);
                            case 2:
                                return new Ctor(args[0], args[1]);
                            case 3:
                                return new Ctor(args[0], args[1], args[2]);
                            case 4:
                                return new Ctor(args[0], args[1], args[2], args[3]);
                            case 5:
                                return new Ctor(args[0], args[1], args[2], args[3], args[4]);
                            case 6:
                                return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
                            case 7:
                                return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
                        }
                        var thisBinding = baseCreate(Ctor.prototype), result = Ctor.apply(thisBinding, args);
                        return isObject(result) ? result : thisBinding;
                    };
                }
                function createCurry(func, bitmask, arity) {
                    var Ctor = createCtor(func);
                    function wrapper() {
                        var length = arguments.length, args = Array(length), index = length, placeholder = getHolder(wrapper);
                        while (index--) {
                            args[index] = arguments[index];
                        }
                        var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders(args, placeholder);
                        length -= holders.length;
                        if (length < arity) {
                            return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, undefined, args, holders, undefined, undefined, arity - length);
                        }
                        var fn = (this || _global) && (this || _global) !== root && (this || _global) instanceof wrapper ? Ctor : func;
                        return apply(fn, this || _global, args);
                    }
                    return wrapper;
                }
                function createFind(findIndexFunc) {
                    return function (collection, predicate, fromIndex) {
                        var iterable = Object(collection);
                        if (!isArrayLike(collection)) {
                            var iteratee = getIteratee(predicate, 3);
                            collection = keys(collection);
                            predicate = function (key) {
                                return iteratee(iterable[key], key, iterable);
                            };
                        }
                        var index = findIndexFunc(collection, predicate, fromIndex);
                        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
                    };
                }
                function createFlow(fromRight) {
                    return flatRest(function (funcs) {
                        var length = funcs.length, index = length, prereq = LodashWrapper.prototype.thru;
                        if (fromRight) {
                            funcs.reverse();
                        }
                        while (index--) {
                            var func = funcs[index];
                            if (typeof func != 'function') {
                                throw new TypeError(FUNC_ERROR_TEXT);
                            }
                            if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
                                var wrapper = new LodashWrapper([], true);
                            }
                        }
                        index = wrapper ? index : length;
                        while (++index < length) {
                            func = funcs[index];
                            var funcName = getFuncName(func), data = funcName == 'wrapper' ? getData(func) : undefined;
                            if (data && isLaziable(data[0]) && data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) && !data[4].length && data[9] == 1) {
                                wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
                            }
                            else {
                                wrapper = func.length == 1 && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);
                            }
                        }
                        return function () {
                            var args = arguments, value = args[0];
                            if (wrapper && args.length == 1 && isArray(value)) {
                                return wrapper.plant(value).value();
                            }
                            var index = 0, result = length ? funcs[index].apply(this || _global, args) : value;
                            while (++index < length) {
                                result = funcs[index].call(this || _global, result);
                            }
                            return result;
                        };
                    });
                }
                function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
                    var isAry = bitmask & WRAP_ARY_FLAG, isBind = bitmask & WRAP_BIND_FLAG, isBindKey = bitmask & WRAP_BIND_KEY_FLAG, isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG), isFlip = bitmask & WRAP_FLIP_FLAG, Ctor = isBindKey ? undefined : createCtor(func);
                    function wrapper() {
                        var length = arguments.length, args = Array(length), index = length;
                        while (index--) {
                            args[index] = arguments[index];
                        }
                        if (isCurried) {
                            var placeholder = getHolder(wrapper), holdersCount = countHolders(args, placeholder);
                        }
                        if (partials) {
                            args = composeArgs(args, partials, holders, isCurried);
                        }
                        if (partialsRight) {
                            args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
                        }
                        length -= holdersCount;
                        if (isCurried && length < arity) {
                            var newHolders = replaceHolders(args, placeholder);
                            return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, thisArg, args, newHolders, argPos, ary, arity - length);
                        }
                        var thisBinding = isBind ? thisArg : this || _global, fn = isBindKey ? thisBinding[func] : func;
                        length = args.length;
                        if (argPos) {
                            args = reorder(args, argPos);
                        }
                        else if (isFlip && length > 1) {
                            args.reverse();
                        }
                        if (isAry && ary < length) {
                            args.length = ary;
                        }
                        if ((this || _global) && (this || _global) !== root && (this || _global) instanceof wrapper) {
                            fn = Ctor || createCtor(fn);
                        }
                        return fn.apply(thisBinding, args);
                    }
                    return wrapper;
                }
                function createInverter(setter, toIteratee) {
                    return function (object, iteratee) {
                        return baseInverter(object, setter, toIteratee(iteratee), {});
                    };
                }
                function createMathOperation(operator, defaultValue) {
                    return function (value, other) {
                        var result;
                        if (value === undefined && other === undefined) {
                            return defaultValue;
                        }
                        if (value !== undefined) {
                            result = value;
                        }
                        if (other !== undefined) {
                            if (result === undefined) {
                                return other;
                            }
                            if (typeof value == 'string' || typeof other == 'string') {
                                value = baseToString(value);
                                other = baseToString(other);
                            }
                            else {
                                value = baseToNumber(value);
                                other = baseToNumber(other);
                            }
                            result = operator(value, other);
                        }
                        return result;
                    };
                }
                function createOver(arrayFunc) {
                    return flatRest(function (iteratees) {
                        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
                        return baseRest(function (args) {
                            var thisArg = this || _global;
                            return arrayFunc(iteratees, function (iteratee) {
                                return apply(iteratee, thisArg, args);
                            });
                        });
                    });
                }
                function createPadding(length, chars) {
                    chars = chars === undefined ? ' ' : baseToString(chars);
                    var charsLength = chars.length;
                    if (charsLength < 2) {
                        return charsLength ? baseRepeat(chars, length) : chars;
                    }
                    var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
                    return hasUnicode(chars) ? castSlice(stringToArray(result), 0, length).join('') : result.slice(0, length);
                }
                function createPartial(func, bitmask, thisArg, partials) {
                    var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
                    function wrapper() {
                        var argsIndex = -1, argsLength = arguments.length, leftIndex = -1, leftLength = partials.length, args = Array(leftLength + argsLength), fn = (this || _global) && (this || _global) !== root && (this || _global) instanceof wrapper ? Ctor : func;
                        while (++leftIndex < leftLength) {
                            args[leftIndex] = partials[leftIndex];
                        }
                        while (argsLength--) {
                            args[leftIndex++] = arguments[++argsIndex];
                        }
                        return apply(fn, isBind ? thisArg : this || _global, args);
                    }
                    return wrapper;
                }
                function createRange(fromRight) {
                    return function (start, end, step) {
                        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
                            end = step = undefined;
                        }
                        start = toFinite(start);
                        if (end === undefined) {
                            end = start;
                            start = 0;
                        }
                        else {
                            end = toFinite(end);
                        }
                        step = step === undefined ? start < end ? 1 : -1 : toFinite(step);
                        return baseRange(start, end, step, fromRight);
                    };
                }
                function createRelationalOperation(operator) {
                    return function (value, other) {
                        if (!(typeof value == 'string' && typeof other == 'string')) {
                            value = toNumber(value);
                            other = toNumber(other);
                        }
                        return operator(value, other);
                    };
                }
                function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
                    var isCurry = bitmask & WRAP_CURRY_FLAG, newHolders = isCurry ? holders : undefined, newHoldersRight = isCurry ? undefined : holders, newPartials = isCurry ? partials : undefined, newPartialsRight = isCurry ? undefined : partials;
                    bitmask |= isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG;
                    bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);
                    if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
                        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
                    }
                    var newData = [func, bitmask, thisArg, newPartials, newHolders, newPartialsRight, newHoldersRight, argPos, ary, arity];
                    var result = wrapFunc.apply(undefined, newData);
                    if (isLaziable(func)) {
                        setData(result, newData);
                    }
                    result.placeholder = placeholder;
                    return setWrapToString(result, func, bitmask);
                }
                function createRound(methodName) {
                    var func = Math[methodName];
                    return function (number, precision) {
                        number = toNumber(number);
                        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
                        if (precision && nativeIsFinite(number)) {
                            var pair = (toString(number) + 'e').split('e'), value = func(pair[0] + 'e' + (+pair[1] + precision));
                            pair = (toString(value) + 'e').split('e');
                            return +(pair[0] + 'e' + (+pair[1] - precision));
                        }
                        return func(number);
                    };
                }
                var createSet = !(Set && 1 / setToArray(new Set([, -0]))[1] == INFINITY) ? noop : function (values) {
                    return new Set(values);
                };
                function createToPairs(keysFunc) {
                    return function (object) {
                        var tag = getTag(object);
                        if (tag == mapTag) {
                            return mapToArray(object);
                        }
                        if (tag == setTag) {
                            return setToPairs(object);
                        }
                        return baseToPairs(object, keysFunc(object));
                    };
                }
                function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
                    var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
                    if (!isBindKey && typeof func != 'function') {
                        throw new TypeError(FUNC_ERROR_TEXT);
                    }
                    var length = partials ? partials.length : 0;
                    if (!length) {
                        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
                        partials = holders = undefined;
                    }
                    ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
                    arity = arity === undefined ? arity : toInteger(arity);
                    length -= holders ? holders.length : 0;
                    if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
                        var partialsRight = partials, holdersRight = holders;
                        partials = holders = undefined;
                    }
                    var data = isBindKey ? undefined : getData(func);
                    var newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];
                    if (data) {
                        mergeData(newData, data);
                    }
                    func = newData[0];
                    bitmask = newData[1];
                    thisArg = newData[2];
                    partials = newData[3];
                    holders = newData[4];
                    arity = newData[9] = newData[9] === undefined ? isBindKey ? 0 : func.length : nativeMax(newData[9] - length, 0);
                    if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
                        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
                    }
                    if (!bitmask || bitmask == WRAP_BIND_FLAG) {
                        var result = createBind(func, bitmask, thisArg);
                    }
                    else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
                        result = createCurry(func, bitmask, arity);
                    }
                    else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
                        result = createPartial(func, bitmask, thisArg, partials);
                    }
                    else {
                        result = createHybrid.apply(undefined, newData);
                    }
                    var setter = data ? baseSetData : setData;
                    return setWrapToString(setter(result, newData), func, bitmask);
                }
                function customDefaultsAssignIn(objValue, srcValue, key, object) {
                    if (objValue === undefined || eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key)) {
                        return srcValue;
                    }
                    return objValue;
                }
                function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
                    if (isObject(objValue) && isObject(srcValue)) {
                        stack.set(srcValue, objValue);
                        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
                        stack['delete'](srcValue);
                    }
                    return objValue;
                }
                function customOmitClone(value) {
                    return isPlainObject(value) ? undefined : value;
                }
                function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
                    var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
                    if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
                        return false;
                    }
                    var stacked = stack.get(array);
                    if (stacked && stack.get(other)) {
                        return stacked == other;
                    }
                    var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;
                    stack.set(array, other);
                    stack.set(other, array);
                    while (++index < arrLength) {
                        var arrValue = array[index], othValue = other[index];
                        if (customizer) {
                            var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
                        }
                        if (compared !== undefined) {
                            if (compared) {
                                continue;
                            }
                            result = false;
                            break;
                        }
                        if (seen) {
                            if (!arraySome(other, function (othValue, othIndex) {
                                if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                                    return seen.push(othIndex);
                                }
                            })) {
                                result = false;
                                break;
                            }
                        }
                        else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                            result = false;
                            break;
                        }
                    }
                    stack['delete'](array);
                    stack['delete'](other);
                    return result;
                }
                function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
                    switch (tag) {
                        case dataViewTag:
                            if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
                                return false;
                            }
                            object = object.buffer;
                            other = other.buffer;
                        case arrayBufferTag:
                            if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
                                return false;
                            }
                            return true;
                        case boolTag:
                        case dateTag:
                        case numberTag:
                            return eq(+object, +other);
                        case errorTag:
                            return object.name == other.name && object.message == other.message;
                        case regexpTag:
                        case stringTag:
                            return object == other + '';
                        case mapTag:
                            var convert = mapToArray;
                        case setTag:
                            var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
                            convert || (convert = setToArray);
                            if (object.size != other.size && !isPartial) {
                                return false;
                            }
                            var stacked = stack.get(object);
                            if (stacked) {
                                return stacked == other;
                            }
                            bitmask |= COMPARE_UNORDERED_FLAG;
                            stack.set(object, other);
                            var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
                            stack['delete'](object);
                            return result;
                        case symbolTag:
                            if (symbolValueOf) {
                                return symbolValueOf.call(object) == symbolValueOf.call(other);
                            }
                    }
                    return false;
                }
                function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
                    var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
                    if (objLength != othLength && !isPartial) {
                        return false;
                    }
                    var index = objLength;
                    while (index--) {
                        var key = objProps[index];
                        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
                            return false;
                        }
                    }
                    var stacked = stack.get(object);
                    if (stacked && stack.get(other)) {
                        return stacked == other;
                    }
                    var result = true;
                    stack.set(object, other);
                    stack.set(other, object);
                    var skipCtor = isPartial;
                    while (++index < objLength) {
                        key = objProps[index];
                        var objValue = object[key], othValue = other[key];
                        if (customizer) {
                            var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
                        }
                        if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
                            result = false;
                            break;
                        }
                        skipCtor || (skipCtor = key == 'constructor');
                    }
                    if (result && !skipCtor) {
                        var objCtor = object.constructor, othCtor = other.constructor;
                        if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {
                            result = false;
                        }
                    }
                    stack['delete'](object);
                    stack['delete'](other);
                    return result;
                }
                function flatRest(func) {
                    return setToString(overRest(func, undefined, flatten), func + '');
                }
                function getAllKeys(object) {
                    return baseGetAllKeys(object, keys, getSymbols);
                }
                function getAllKeysIn(object) {
                    return baseGetAllKeys(object, keysIn, getSymbolsIn);
                }
                var getData = !metaMap ? noop : function (func) {
                    return metaMap.get(func);
                };
                function getFuncName(func) {
                    var result = func.name + '', array = realNames[result], length = hasOwnProperty.call(realNames, result) ? array.length : 0;
                    while (length--) {
                        var data = array[length], otherFunc = data.func;
                        if (otherFunc == null || otherFunc == func) {
                            return data.name;
                        }
                    }
                    return result;
                }
                function getHolder(func) {
                    var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
                    return object.placeholder;
                }
                function getIteratee() {
                    var result = lodash.iteratee || iteratee;
                    result = result === iteratee ? baseIteratee : result;
                    return arguments.length ? result(arguments[0], arguments[1]) : result;
                }
                function getMapData(map, key) {
                    var data = map.__data__;
                    return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
                }
                function getMatchData(object) {
                    var result = keys(object), length = result.length;
                    while (length--) {
                        var key = result[length], value = object[key];
                        result[length] = [key, value, isStrictComparable(value)];
                    }
                    return result;
                }
                function getNative(object, key) {
                    var value = getValue(object, key);
                    return baseIsNative(value) ? value : undefined;
                }
                function getRawTag(value) {
                    var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
                    try {
                        value[symToStringTag] = undefined;
                        var unmasked = true;
                    }
                    catch (e) { }
                    var result = nativeObjectToString.call(value);
                    if (unmasked) {
                        if (isOwn) {
                            value[symToStringTag] = tag;
                        }
                        else {
                            delete value[symToStringTag];
                        }
                    }
                    return result;
                }
                var getSymbols = !nativeGetSymbols ? stubArray : function (object) {
                    if (object == null) {
                        return [];
                    }
                    object = Object(object);
                    return arrayFilter(nativeGetSymbols(object), function (symbol) {
                        return propertyIsEnumerable.call(object, symbol);
                    });
                };
                var getSymbolsIn = !nativeGetSymbols ? stubArray : function (object) {
                    var result = [];
                    while (object) {
                        arrayPush(result, getSymbols(object));
                        object = getPrototype(object);
                    }
                    return result;
                };
                var getTag = baseGetTag;
                if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
                    getTag = function (value) {
                        var result = baseGetTag(value), Ctor = result == objectTag ? value.constructor : undefined, ctorString = Ctor ? toSource(Ctor) : '';
                        if (ctorString) {
                            switch (ctorString) {
                                case dataViewCtorString:
                                    return dataViewTag;
                                case mapCtorString:
                                    return mapTag;
                                case promiseCtorString:
                                    return promiseTag;
                                case setCtorString:
                                    return setTag;
                                case weakMapCtorString:
                                    return weakMapTag;
                            }
                        }
                        return result;
                    };
                }
                function getView(start, end, transforms) {
                    var index = -1, length = transforms.length;
                    while (++index < length) {
                        var data = transforms[index], size = data.size;
                        switch (data.type) {
                            case 'drop':
                                start += size;
                                break;
                            case 'dropRight':
                                end -= size;
                                break;
                            case 'take':
                                end = nativeMin(end, start + size);
                                break;
                            case 'takeRight':
                                start = nativeMax(start, end - size);
                                break;
                        }
                    }
                    return {
                        'start': start,
                        'end': end
                    };
                }
                function getWrapDetails(source) {
                    var match = source.match(reWrapDetails);
                    return match ? match[1].split(reSplitDetails) : [];
                }
                function hasPath(object, path, hasFunc) {
                    path = castPath(path, object);
                    var index = -1, length = path.length, result = false;
                    while (++index < length) {
                        var key = toKey(path[index]);
                        if (!(result = object != null && hasFunc(object, key))) {
                            break;
                        }
                        object = object[key];
                    }
                    if (result || ++index != length) {
                        return result;
                    }
                    length = object == null ? 0 : object.length;
                    return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
                }
                function initCloneArray(array) {
                    var length = array.length, result = new array.constructor(length);
                    if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
                        result.index = array.index;
                        result.input = array.input;
                    }
                    return result;
                }
                function initCloneObject(object) {
                    return typeof object.constructor == 'function' && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
                }
                function initCloneByTag(object, tag, isDeep) {
                    var Ctor = object.constructor;
                    switch (tag) {
                        case arrayBufferTag:
                            return cloneArrayBuffer(object);
                        case boolTag:
                        case dateTag:
                            return new Ctor(+object);
                        case dataViewTag:
                            return cloneDataView(object, isDeep);
                        case float32Tag:
                        case float64Tag:
                        case int8Tag:
                        case int16Tag:
                        case int32Tag:
                        case uint8Tag:
                        case uint8ClampedTag:
                        case uint16Tag:
                        case uint32Tag:
                            return cloneTypedArray(object, isDeep);
                        case mapTag:
                            return new Ctor();
                        case numberTag:
                        case stringTag:
                            return new Ctor(object);
                        case regexpTag:
                            return cloneRegExp(object);
                        case setTag:
                            return new Ctor();
                        case symbolTag:
                            return cloneSymbol(object);
                    }
                }
                function insertWrapDetails(source, details) {
                    var length = details.length;
                    if (!length) {
                        return source;
                    }
                    var lastIndex = length - 1;
                    details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
                    details = details.join(length > 2 ? ', ' : ' ');
                    return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
                }
                function isFlattenable(value) {
                    return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
                }
                function isIndex(value, length) {
                    var type = typeof value;
                    length = length == null ? MAX_SAFE_INTEGER : length;
                    return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
                }
                function isIterateeCall(value, index, object) {
                    if (!isObject(object)) {
                        return false;
                    }
                    var type = typeof index;
                    if (type == 'number' ? isArrayLike(object) && isIndex(index, object.length) : type == 'string' && index in object) {
                        return eq(object[index], value);
                    }
                    return false;
                }
                function isKey(value, object) {
                    if (isArray(value)) {
                        return false;
                    }
                    var type = typeof value;
                    if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {
                        return true;
                    }
                    return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
                }
                function isKeyable(value) {
                    var type = typeof value;
                    return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;
                }
                function isLaziable(func) {
                    var funcName = getFuncName(func), other = lodash[funcName];
                    if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
                        return false;
                    }
                    if (func === other) {
                        return true;
                    }
                    var data = getData(other);
                    return !!data && func === data[0];
                }
                function isMasked(func) {
                    return !!maskSrcKey && maskSrcKey in func;
                }
                var isMaskable = coreJsData ? isFunction : stubFalse;
                function isPrototype(value) {
                    var Ctor = value && value.constructor, proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;
                    return value === proto;
                }
                function isStrictComparable(value) {
                    return value === value && !isObject(value);
                }
                function matchesStrictComparable(key, srcValue) {
                    return function (object) {
                        if (object == null) {
                            return false;
                        }
                        return object[key] === srcValue && (srcValue !== undefined || key in Object(object));
                    };
                }
                function memoizeCapped(func) {
                    var result = memoize(func, function (key) {
                        if (cache.size === MAX_MEMOIZE_SIZE) {
                            cache.clear();
                        }
                        return key;
                    });
                    var cache = result.cache;
                    return result;
                }
                function mergeData(data, source) {
                    var bitmask = data[1], srcBitmask = source[1], newBitmask = bitmask | srcBitmask, isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
                    var isCombo = srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_CURRY_FLAG || srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_REARG_FLAG && data[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG;
                    if (!(isCommon || isCombo)) {
                        return data;
                    }
                    if (srcBitmask & WRAP_BIND_FLAG) {
                        data[2] = source[2];
                        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
                    }
                    var value = source[3];
                    if (value) {
                        var partials = data[3];
                        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
                        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
                    }
                    value = source[5];
                    if (value) {
                        partials = data[5];
                        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
                        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
                    }
                    value = source[7];
                    if (value) {
                        data[7] = value;
                    }
                    if (srcBitmask & WRAP_ARY_FLAG) {
                        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
                    }
                    if (data[9] == null) {
                        data[9] = source[9];
                    }
                    data[0] = source[0];
                    data[1] = newBitmask;
                    return data;
                }
                function nativeKeysIn(object) {
                    var result = [];
                    if (object != null) {
                        for (var key in Object(object)) {
                            result.push(key);
                        }
                    }
                    return result;
                }
                function objectToString(value) {
                    return nativeObjectToString.call(value);
                }
                function overRest(func, start, transform) {
                    start = nativeMax(start === undefined ? func.length - 1 : start, 0);
                    return function () {
                        var args = arguments, index = -1, length = nativeMax(args.length - start, 0), array = Array(length);
                        while (++index < length) {
                            array[index] = args[start + index];
                        }
                        index = -1;
                        var otherArgs = Array(start + 1);
                        while (++index < start) {
                            otherArgs[index] = args[index];
                        }
                        otherArgs[start] = transform(array);
                        return apply(func, this || _global, otherArgs);
                    };
                }
                function parent(object, path) {
                    return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
                }
                function reorder(array, indexes) {
                    var arrLength = array.length, length = nativeMin(indexes.length, arrLength), oldArray = copyArray(array);
                    while (length--) {
                        var index = indexes[length];
                        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
                    }
                    return array;
                }
                function safeGet(object, key) {
                    if (key === 'constructor' && typeof object[key] === 'function') {
                        return;
                    }
                    if (key == '__proto__') {
                        return;
                    }
                    return object[key];
                }
                var setData = shortOut(baseSetData);
                var setTimeout = ctxSetTimeout || function (func, wait) {
                    return root.setTimeout(func, wait);
                };
                var setToString = shortOut(baseSetToString);
                function setWrapToString(wrapper, reference, bitmask) {
                    var source = reference + '';
                    return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
                }
                function shortOut(func) {
                    var count = 0, lastCalled = 0;
                    return function () {
                        var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
                        lastCalled = stamp;
                        if (remaining > 0) {
                            if (++count >= HOT_COUNT) {
                                return arguments[0];
                            }
                        }
                        else {
                            count = 0;
                        }
                        return func.apply(undefined, arguments);
                    };
                }
                function shuffleSelf(array, size) {
                    var index = -1, length = array.length, lastIndex = length - 1;
                    size = size === undefined ? length : size;
                    while (++index < size) {
                        var rand = baseRandom(index, lastIndex), value = array[rand];
                        array[rand] = array[index];
                        array[index] = value;
                    }
                    array.length = size;
                    return array;
                }
                var stringToPath = memoizeCapped(function (string) {
                    var result = [];
                    if (string.charCodeAt(0) === 46) {
                        result.push('');
                    }
                    string.replace(rePropName, function (match, number, quote, subString) {
                        result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);
                    });
                    return result;
                });
                function toKey(value) {
                    if (typeof value == 'string' || isSymbol(value)) {
                        return value;
                    }
                    var result = value + '';
                    return result == '0' && 1 / value == -INFINITY ? '-0' : result;
                }
                function toSource(func) {
                    if (func != null) {
                        try {
                            return funcToString.call(func);
                        }
                        catch (e) { }
                        try {
                            return func + '';
                        }
                        catch (e) { }
                    }
                    return '';
                }
                function updateWrapDetails(details, bitmask) {
                    arrayEach(wrapFlags, function (pair) {
                        var value = '_.' + pair[0];
                        if (bitmask & pair[1] && !arrayIncludes(details, value)) {
                            details.push(value);
                        }
                    });
                    return details.sort();
                }
                function wrapperClone(wrapper) {
                    if (wrapper instanceof LazyWrapper) {
                        return wrapper.clone();
                    }
                    var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
                    result.__actions__ = copyArray(wrapper.__actions__);
                    result.__index__ = wrapper.__index__;
                    result.__values__ = wrapper.__values__;
                    return result;
                }
                function chunk(array, size, guard) {
                    if (guard ? isIterateeCall(array, size, guard) : size === undefined) {
                        size = 1;
                    }
                    else {
                        size = nativeMax(toInteger(size), 0);
                    }
                    var length = array == null ? 0 : array.length;
                    if (!length || size < 1) {
                        return [];
                    }
                    var index = 0, resIndex = 0, result = Array(nativeCeil(length / size));
                    while (index < length) {
                        result[resIndex++] = baseSlice(array, index, index += size);
                    }
                    return result;
                }
                function compact(array) {
                    var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
                    while (++index < length) {
                        var value = array[index];
                        if (value) {
                            result[resIndex++] = value;
                        }
                    }
                    return result;
                }
                function concat() {
                    var length = arguments.length;
                    if (!length) {
                        return [];
                    }
                    var args = Array(length - 1), array = arguments[0], index = length;
                    while (index--) {
                        args[index - 1] = arguments[index];
                    }
                    return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
                }
                var difference = baseRest(function (array, values) {
                    return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true)) : [];
                });
                var differenceBy = baseRest(function (array, values) {
                    var iteratee = last(values);
                    if (isArrayLikeObject(iteratee)) {
                        iteratee = undefined;
                    }
                    return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2)) : [];
                });
                var differenceWith = baseRest(function (array, values) {
                    var comparator = last(values);
                    if (isArrayLikeObject(comparator)) {
                        comparator = undefined;
                    }
                    return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator) : [];
                });
                function drop(array, n, guard) {
                    var length = array == null ? 0 : array.length;
                    if (!length) {
                        return [];
                    }
                    n = guard || n === undefined ? 1 : toInteger(n);
                    return baseSlice(array, n < 0 ? 0 : n, length);
                }
                function dropRight(array, n, guard) {
                    var length = array == null ? 0 : array.length;
                    if (!length) {
                        return [];
                    }
                    n = guard || n === undefined ? 1 : toInteger(n);
                    n = length - n;
                    return baseSlice(array, 0, n < 0 ? 0 : n);
                }
                function dropRightWhile(array, predicate) {
                    return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true, true) : [];
                }
                function dropWhile(array, predicate) {
                    return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true) : [];
                }
                function fill(array, value, start, end) {
                    var length = array == null ? 0 : array.length;
                    if (!length) {
                        return [];
                    }
                    if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
                        start = 0;
                        end = length;
                    }
                    return baseFill(array, value, start, end);
                }
                function findIndex(array, predicate, fromIndex) {
                    var length = array == null ? 0 : array.length;
                    if (!length) {
                        return -1;
                    }
                    var index = fromIndex == null ? 0 : toInteger(fromIndex);
                    if (index < 0) {
                        index = nativeMax(length + index, 0);
                    }
                    return baseFindIndex(array, getIteratee(predicate, 3), index);
                }
                function findLastIndex(array, predicate, fromIndex) {
                    var length = array == null ? 0 : array.length;
                    if (!length) {
                        return -1;
                    }
                    var index = length - 1;
                    if (fromIndex !== undefined) {
                        index = toInteger(fromIndex);
                        index = fromIndex < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
                    }
                    return baseFindIndex(array, getIteratee(predicate, 3), index, true);
                }
                function flatten(array) {
                    var length = array == null ? 0 : array.length;
                    return length ? baseFlatten(array, 1) : [];
                }
                function flattenDeep(array) {
                    var length = array == null ? 0 : array.length;
                    return length ? baseFlatten(array, INFINITY) : [];
                }
                function flattenDepth(array, depth) {
                    var length = array == null ? 0 : array.length;
                    if (!length) {
                        return [];
                    }
                    depth = depth === undefined ? 1 : toInteger(depth);
                    return baseFlatten(array, depth);
                }
                function fromPairs(pairs) {
                    var index = -1, length = pairs == null ? 0 : pairs.length, result = {};
                    while (++index < length) {
                        var pair = pairs[index];
                        result[pair[0]] = pair[1];
                    }
                    return result;
                }
                function head(array) {
                    return array && array.length ? array[0] : undefined;
                }
                function indexOf(array, value, fromIndex) {
                    var length = array == null ? 0 : array.length;
                    if (!length) {
                        return -1;
                    }
                    var index = fromIndex == null ? 0 : toInteger(fromIndex);
                    if (index < 0) {
                        index = nativeMax(length + index, 0);
                    }
                    return baseIndexOf(array, value, index);
                }
                function initial(array) {
                    var length = array == null ? 0 : array.length;
                    return length ? baseSlice(array, 0, -1) : [];
                }
                var intersection = baseRest(function (arrays) {
                    var mapped = arrayMap(arrays, castArrayLikeObject);
                    return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped) : [];
                });
                var intersectionBy = baseRest(function (arrays) {
                    var iteratee = last(arrays), mapped = arrayMap(arrays, castArrayLikeObject);
                    if (iteratee === last(mapped)) {
                        iteratee = undefined;
                    }
                    else {
                        mapped.pop();
                    }
                    return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, getIteratee(iteratee, 2)) : [];
                });
                var intersectionWith = baseRest(function (arrays) {
                    var comparator = last(arrays), mapped = arrayMap(arrays, castArrayLikeObject);
                    comparator = typeof comparator == 'function' ? comparator : undefined;
                    if (comparator) {
                        mapped.pop();
                    }
                    return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, undefined, comparator) : [];
                });
                function join(array, separator) {
                    return array == null ? '' : nativeJoin.call(array, separator);
                }
                function last(array) {
                    var length = array == null ? 0 : array.length;
                    return length ? array[length - 1] : undefined;
                }
                function lastIndexOf(array, value, fromIndex) {
                    var length = array == null ? 0 : array.length;
                    if (!length) {
                        return -1;
                    }
                    var index = length;
                    if (fromIndex !== undefined) {
                        index = toInteger(fromIndex);
                        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
                    }
                    return value === value ? strictLastIndexOf(array, value, index) : baseFindIndex(array, baseIsNaN, index, true);
                }
                function nth(array, n) {
                    return array && array.length ? baseNth(array, toInteger(n)) : undefined;
                }
                var pull = baseRest(pullAll);
                function pullAll(array, values) {
                    return array && array.length && values && values.length ? basePullAll(array, values) : array;
                }
                function pullAllBy(array, values, iteratee) {
                    return array && array.length && values && values.length ? basePullAll(array, values, getIteratee(iteratee, 2)) : array;
                }
                function pullAllWith(array, values, comparator) {
                    return array && array.length && values && values.length ? basePullAll(array, values, undefined, comparator) : array;
                }
                var pullAt = flatRest(function (array, indexes) {
                    var length = array == null ? 0 : array.length, result = baseAt(array, indexes);
                    basePullAt(array, arrayMap(indexes, function (index) {
                        return isIndex(index, length) ? +index : index;
                    }).sort(compareAscending));
                    return result;
                });
                function remove(array, predicate) {
                    var result = [];
                    if (!(array && array.length)) {
                        return result;
                    }
                    var index = -1, indexes = [], length = array.length;
                    predicate = getIteratee(predicate, 3);
                    while (++index < length) {
                        var value = array[index];
                        if (predicate(value, index, array)) {
                            result.push(value);
                            indexes.push(index);
                        }
                    }
                    basePullAt(array, indexes);
                    return result;
                }
                function reverse(array) {
                    return array == null ? array : nativeReverse.call(array);
                }
                function slice(array, start, end) {
                    var length = array == null ? 0 : array.length;
                    if (!length) {
                        return [];
                    }
                    if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
                        start = 0;
                        end = length;
                    }
                    else {
                        start = start == null ? 0 : toInteger(start);
                        end = end === undefined ? length : toInteger(end);
                    }
                    return baseSlice(array, start, end);
                }
                function sortedIndex(array, value) {
                    return baseSortedIndex(array, value);
                }
                function sortedIndexBy(array, value, iteratee) {
                    return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
                }
                function sortedIndexOf(array, value) {
                    var length = array == null ? 0 : array.length;
                    if (length) {
                        var index = baseSortedIndex(array, value);
                        if (index < length && eq(array[index], value)) {
                            return index;
                        }
                    }
                    return -1;
                }
                function sortedLastIndex(array, value) {
                    return baseSortedIndex(array, value, true);
                }
                function sortedLastIndexBy(array, value, iteratee) {
                    return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
                }
                function sortedLastIndexOf(array, value) {
                    var length = array == null ? 0 : array.length;
                    if (length) {
                        var index = baseSortedIndex(array, value, true) - 1;
                        if (eq(array[index], value)) {
                            return index;
                        }
                    }
                    return -1;
                }
                function sortedUniq(array) {
                    return array && array.length ? baseSortedUniq(array) : [];
                }
                function sortedUniqBy(array, iteratee) {
                    return array && array.length ? baseSortedUniq(array, getIteratee(iteratee, 2)) : [];
                }
                function tail(array) {
                    var length = array == null ? 0 : array.length;
                    return length ? baseSlice(array, 1, length) : [];
                }
                function take(array, n, guard) {
                    if (!(array && array.length)) {
                        return [];
                    }
                    n = guard || n === undefined ? 1 : toInteger(n);
                    return baseSlice(array, 0, n < 0 ? 0 : n);
                }
                function takeRight(array, n, guard) {
                    var length = array == null ? 0 : array.length;
                    if (!length) {
                        return [];
                    }
                    n = guard || n === undefined ? 1 : toInteger(n);
                    n = length - n;
                    return baseSlice(array, n < 0 ? 0 : n, length);
                }
                function takeRightWhile(array, predicate) {
                    return array && array.length ? baseWhile(array, getIteratee(predicate, 3), false, true) : [];
                }
                function takeWhile(array, predicate) {
                    return array && array.length ? baseWhile(array, getIteratee(predicate, 3)) : [];
                }
                var union = baseRest(function (arrays) {
                    return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
                });
                var unionBy = baseRest(function (arrays) {
                    var iteratee = last(arrays);
                    if (isArrayLikeObject(iteratee)) {
                        iteratee = undefined;
                    }
                    return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
                });
                var unionWith = baseRest(function (arrays) {
                    var comparator = last(arrays);
                    comparator = typeof comparator == 'function' ? comparator : undefined;
                    return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
                });
                function uniq(array) {
                    return array && array.length ? baseUniq(array) : [];
                }
                function uniqBy(array, iteratee) {
                    return array && array.length ? baseUniq(array, getIteratee(iteratee, 2)) : [];
                }
                function uniqWith(array, comparator) {
                    comparator = typeof comparator == 'function' ? comparator : undefined;
                    return array && array.length ? baseUniq(array, undefined, comparator) : [];
                }
                function unzip(array) {
                    if (!(array && array.length)) {
                        return [];
                    }
                    var length = 0;
                    array = arrayFilter(array, function (group) {
                        if (isArrayLikeObject(group)) {
                            length = nativeMax(group.length, length);
                            return true;
                        }
                    });
                    return baseTimes(length, function (index) {
                        return arrayMap(array, baseProperty(index));
                    });
                }
                function unzipWith(array, iteratee) {
                    if (!(array && array.length)) {
                        return [];
                    }
                    var result = unzip(array);
                    if (iteratee == null) {
                        return result;
                    }
                    return arrayMap(result, function (group) {
                        return apply(iteratee, undefined, group);
                    });
                }
                var without = baseRest(function (array, values) {
                    return isArrayLikeObject(array) ? baseDifference(array, values) : [];
                });
                var xor = baseRest(function (arrays) {
                    return baseXor(arrayFilter(arrays, isArrayLikeObject));
                });
                var xorBy = baseRest(function (arrays) {
                    var iteratee = last(arrays);
                    if (isArrayLikeObject(iteratee)) {
                        iteratee = undefined;
                    }
                    return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
                });
                var xorWith = baseRest(function (arrays) {
                    var comparator = last(arrays);
                    comparator = typeof comparator == 'function' ? comparator : undefined;
                    return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
                });
                var zip = baseRest(unzip);
                function zipObject(props, values) {
                    return baseZipObject(props || [], values || [], assignValue);
                }
                function zipObjectDeep(props, values) {
                    return baseZipObject(props || [], values || [], baseSet);
                }
                var zipWith = baseRest(function (arrays) {
                    var length = arrays.length, iteratee = length > 1 ? arrays[length - 1] : undefined;
                    iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
                    return unzipWith(arrays, iteratee);
                });
                function chain(value) {
                    var result = lodash(value);
                    result.__chain__ = true;
                    return result;
                }
                function tap(value, interceptor) {
                    interceptor(value);
                    return value;
                }
                function thru(value, interceptor) {
                    return interceptor(value);
                }
                var wrapperAt = flatRest(function (paths) {
                    var length = paths.length, start = length ? paths[0] : 0, value = (this || _global).__wrapped__, interceptor = function (object) {
                        return baseAt(object, paths);
                    };
                    if (length > 1 || (this || _global).__actions__.length || !(value instanceof LazyWrapper) || !isIndex(start)) {
                        return this.thru(interceptor);
                    }
                    value = value.slice(start, +start + (length ? 1 : 0));
                    value.__actions__.push({
                        'func': thru,
                        'args': [interceptor],
                        'thisArg': undefined
                    });
                    return new LodashWrapper(value, (this || _global).__chain__).thru(function (array) {
                        if (length && !array.length) {
                            array.push(undefined);
                        }
                        return array;
                    });
                });
                function wrapperChain() {
                    return chain(this || _global);
                }
                function wrapperCommit() {
                    return new LodashWrapper(this.value(), (this || _global).__chain__);
                }
                function wrapperNext() {
                    if ((this || _global).__values__ === undefined) {
                        (this || _global).__values__ = toArray(this.value());
                    }
                    var done = (this || _global).__index__ >= (this || _global).__values__.length, value = done ? undefined : (this || _global).__values__[(this || _global).__index__++];
                    return {
                        'done': done,
                        'value': value
                    };
                }
                function wrapperToIterator() {
                    return this || _global;
                }
                function wrapperPlant(value) {
                    var result, parent = this || _global;
                    while (parent instanceof baseLodash) {
                        var clone = wrapperClone(parent);
                        clone.__index__ = 0;
                        clone.__values__ = undefined;
                        if (result) {
                            previous.__wrapped__ = clone;
                        }
                        else {
                            result = clone;
                        }
                        var previous = clone;
                        parent = parent.__wrapped__;
                    }
                    previous.__wrapped__ = value;
                    return result;
                }
                function wrapperReverse() {
                    var value = (this || _global).__wrapped__;
                    if (value instanceof LazyWrapper) {
                        var wrapped = value;
                        if ((this || _global).__actions__.length) {
                            wrapped = new LazyWrapper(this || _global);
                        }
                        wrapped = wrapped.reverse();
                        wrapped.__actions__.push({
                            'func': thru,
                            'args': [reverse],
                            'thisArg': undefined
                        });
                        return new LodashWrapper(wrapped, (this || _global).__chain__);
                    }
                    return this.thru(reverse);
                }
                function wrapperValue() {
                    return baseWrapperValue((this || _global).__wrapped__, (this || _global).__actions__);
                }
                var countBy = createAggregator(function (result, value, key) {
                    if (hasOwnProperty.call(result, key)) {
                        ++result[key];
                    }
                    else {
                        baseAssignValue(result, key, 1);
                    }
                });
                function every(collection, predicate, guard) {
                    var func = isArray(collection) ? arrayEvery : baseEvery;
                    if (guard && isIterateeCall(collection, predicate, guard)) {
                        predicate = undefined;
                    }
                    return func(collection, getIteratee(predicate, 3));
                }
                function filter(collection, predicate) {
                    var func = isArray(collection) ? arrayFilter : baseFilter;
                    return func(collection, getIteratee(predicate, 3));
                }
                var find = createFind(findIndex);
                var findLast = createFind(findLastIndex);
                function flatMap(collection, iteratee) {
                    return baseFlatten(map(collection, iteratee), 1);
                }
                function flatMapDeep(collection, iteratee) {
                    return baseFlatten(map(collection, iteratee), INFINITY);
                }
                function flatMapDepth(collection, iteratee, depth) {
                    depth = depth === undefined ? 1 : toInteger(depth);
                    return baseFlatten(map(collection, iteratee), depth);
                }
                function forEach(collection, iteratee) {
                    var func = isArray(collection) ? arrayEach : baseEach;
                    return func(collection, getIteratee(iteratee, 3));
                }
                function forEachRight(collection, iteratee) {
                    var func = isArray(collection) ? arrayEachRight : baseEachRight;
                    return func(collection, getIteratee(iteratee, 3));
                }
                var groupBy = createAggregator(function (result, value, key) {
                    if (hasOwnProperty.call(result, key)) {
                        result[key].push(value);
                    }
                    else {
                        baseAssignValue(result, key, [value]);
                    }
                });
                function includes(collection, value, fromIndex, guard) {
                    collection = isArrayLike(collection) ? collection : values(collection);
                    fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0;
                    var length = collection.length;
                    if (fromIndex < 0) {
                        fromIndex = nativeMax(length + fromIndex, 0);
                    }
                    return isString(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;
                }
                var invokeMap = baseRest(function (collection, path, args) {
                    var index = -1, isFunc = typeof path == 'function', result = isArrayLike(collection) ? Array(collection.length) : [];
                    baseEach(collection, function (value) {
                        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
                    });
                    return result;
                });
                var keyBy = createAggregator(function (result, value, key) {
                    baseAssignValue(result, key, value);
                });
                function map(collection, iteratee) {
                    var func = isArray(collection) ? arrayMap : baseMap;
                    return func(collection, getIteratee(iteratee, 3));
                }
                function orderBy(collection, iteratees, orders, guard) {
                    if (collection == null) {
                        return [];
                    }
                    if (!isArray(iteratees)) {
                        iteratees = iteratees == null ? [] : [iteratees];
                    }
                    orders = guard ? undefined : orders;
                    if (!isArray(orders)) {
                        orders = orders == null ? [] : [orders];
                    }
                    return baseOrderBy(collection, iteratees, orders);
                }
                var partition = createAggregator(function (result, value, key) {
                    result[key ? 0 : 1].push(value);
                }, function () {
                    return [[], []];
                });
                function reduce(collection, iteratee, accumulator) {
                    var func = isArray(collection) ? arrayReduce : baseReduce, initAccum = arguments.length < 3;
                    return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
                }
                function reduceRight(collection, iteratee, accumulator) {
                    var func = isArray(collection) ? arrayReduceRight : baseReduce, initAccum = arguments.length < 3;
                    return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
                }
                function reject(collection, predicate) {
                    var func = isArray(collection) ? arrayFilter : baseFilter;
                    return func(collection, negate(getIteratee(predicate, 3)));
                }
                function sample(collection) {
                    var func = isArray(collection) ? arraySample : baseSample;
                    return func(collection);
                }
                function sampleSize(collection, n, guard) {
                    if (guard ? isIterateeCall(collection, n, guard) : n === undefined) {
                        n = 1;
                    }
                    else {
                        n = toInteger(n);
                    }
                    var func = isArray(collection) ? arraySampleSize : baseSampleSize;
                    return func(collection, n);
                }
                function shuffle(collection) {
                    var func = isArray(collection) ? arrayShuffle : baseShuffle;
                    return func(collection);
                }
                function size(collection) {
                    if (collection == null) {
                        return 0;
                    }
                    if (isArrayLike(collection)) {
                        return isString(collection) ? stringSize(collection) : collection.length;
                    }
                    var tag = getTag(collection);
                    if (tag == mapTag || tag == setTag) {
                        return collection.size;
                    }
                    return baseKeys(collection).length;
                }
                function some(collection, predicate, guard) {
                    var func = isArray(collection) ? arraySome : baseSome;
                    if (guard && isIterateeCall(collection, predicate, guard)) {
                        predicate = undefined;
                    }
                    return func(collection, getIteratee(predicate, 3));
                }
                var sortBy = baseRest(function (collection, iteratees) {
                    if (collection == null) {
                        return [];
                    }
                    var length = iteratees.length;
                    if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
                        iteratees = [];
                    }
                    else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
                        iteratees = [iteratees[0]];
                    }
                    return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
                });
                var now = ctxNow || function () {
                    return root.Date.now();
                };
                function after(n, func) {
                    if (typeof func != 'function') {
                        throw new TypeError(FUNC_ERROR_TEXT);
                    }
                    n = toInteger(n);
                    return function () {
                        if (--n < 1) {
                            return func.apply(this || _global, arguments);
                        }
                    };
                }
                function ary(func, n, guard) {
                    n = guard ? undefined : n;
                    n = func && n == null ? func.length : n;
                    return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
                }
                function before(n, func) {
                    var result;
                    if (typeof func != 'function') {
                        throw new TypeError(FUNC_ERROR_TEXT);
                    }
                    n = toInteger(n);
                    return function () {
                        if (--n > 0) {
                            result = func.apply(this || _global, arguments);
                        }
                        if (n <= 1) {
                            func = undefined;
                        }
                        return result;
                    };
                }
                var bind = baseRest(function (func, thisArg, partials) {
                    var bitmask = WRAP_BIND_FLAG;
                    if (partials.length) {
                        var holders = replaceHolders(partials, getHolder(bind));
                        bitmask |= WRAP_PARTIAL_FLAG;
                    }
                    return createWrap(func, bitmask, thisArg, partials, holders);
                });
                var bindKey = baseRest(function (object, key, partials) {
                    var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
                    if (partials.length) {
                        var holders = replaceHolders(partials, getHolder(bindKey));
                        bitmask |= WRAP_PARTIAL_FLAG;
                    }
                    return createWrap(key, bitmask, object, partials, holders);
                });
                function curry(func, arity, guard) {
                    arity = guard ? undefined : arity;
                    var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
                    result.placeholder = curry.placeholder;
                    return result;
                }
                function curryRight(func, arity, guard) {
                    arity = guard ? undefined : arity;
                    var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
                    result.placeholder = curryRight.placeholder;
                    return result;
                }
                function debounce(func, wait, options) {
                    var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
                    if (typeof func != 'function') {
                        throw new TypeError(FUNC_ERROR_TEXT);
                    }
                    wait = toNumber(wait) || 0;
                    if (isObject(options)) {
                        leading = !!options.leading;
                        maxing = 'maxWait' in options;
                        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
                        trailing = 'trailing' in options ? !!options.trailing : trailing;
                    }
                    function invokeFunc(time) {
                        var args = lastArgs, thisArg = lastThis;
                        lastArgs = lastThis = undefined;
                        lastInvokeTime = time;
                        result = func.apply(thisArg, args);
                        return result;
                    }
                    function leadingEdge(time) {
                        lastInvokeTime = time;
                        timerId = setTimeout(timerExpired, wait);
                        return leading ? invokeFunc(time) : result;
                    }
                    function remainingWait(time) {
                        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
                        return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
                    }
                    function shouldInvoke(time) {
                        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
                        return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
                    }
                    function timerExpired() {
                        var time = now();
                        if (shouldInvoke(time)) {
                            return trailingEdge(time);
                        }
                        timerId = setTimeout(timerExpired, remainingWait(time));
                    }
                    function trailingEdge(time) {
                        timerId = undefined;
                        if (trailing && lastArgs) {
                            return invokeFunc(time);
                        }
                        lastArgs = lastThis = undefined;
                        return result;
                    }
                    function cancel() {
                        if (timerId !== undefined) {
                            clearTimeout(timerId);
                        }
                        lastInvokeTime = 0;
                        lastArgs = lastCallTime = lastThis = timerId = undefined;
                    }
                    function flush() {
                        return timerId === undefined ? result : trailingEdge(now());
                    }
                    function debounced() {
                        var time = now(), isInvoking = shouldInvoke(time);
                        lastArgs = arguments;
                        lastThis = this || _global;
                        lastCallTime = time;
                        if (isInvoking) {
                            if (timerId === undefined) {
                                return leadingEdge(lastCallTime);
                            }
                            if (maxing) {
                                clearTimeout(timerId);
                                timerId = setTimeout(timerExpired, wait);
                                return invokeFunc(lastCallTime);
                            }
                        }
                        if (timerId === undefined) {
                            timerId = setTimeout(timerExpired, wait);
                        }
                        return result;
                    }
                    debounced.cancel = cancel;
                    debounced.flush = flush;
                    return debounced;
                }
                var defer = baseRest(function (func, args) {
                    return baseDelay(func, 1, args);
                });
                var delay = baseRest(function (func, wait, args) {
                    return baseDelay(func, toNumber(wait) || 0, args);
                });
                function flip(func) {
                    return createWrap(func, WRAP_FLIP_FLAG);
                }
                function memoize(func, resolver) {
                    if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {
                        throw new TypeError(FUNC_ERROR_TEXT);
                    }
                    var memoized = function () {
                        var args = arguments, key = resolver ? resolver.apply(this || _global, args) : args[0], cache = memoized.cache;
                        if (cache.has(key)) {
                            return cache.get(key);
                        }
                        var result = func.apply(this || _global, args);
                        memoized.cache = cache.set(key, result) || cache;
                        return result;
                    };
                    memoized.cache = new (memoize.Cache || MapCache)();
                    return memoized;
                }
                memoize.Cache = MapCache;
                function negate(predicate) {
                    if (typeof predicate != 'function') {
                        throw new TypeError(FUNC_ERROR_TEXT);
                    }
                    return function () {
                        var args = arguments;
                        switch (args.length) {
                            case 0:
                                return !predicate.call(this || _global);
                            case 1:
                                return !predicate.call(this || _global, args[0]);
                            case 2:
                                return !predicate.call(this || _global, args[0], args[1]);
                            case 3:
                                return !predicate.call(this || _global, args[0], args[1], args[2]);
                        }
                        return !predicate.apply(this || _global, args);
                    };
                }
                function once(func) {
                    return before(2, func);
                }
                var overArgs = castRest(function (func, transforms) {
                    transforms = transforms.length == 1 && isArray(transforms[0]) ? arrayMap(transforms[0], baseUnary(getIteratee())) : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));
                    var funcsLength = transforms.length;
                    return baseRest(function (args) {
                        var index = -1, length = nativeMin(args.length, funcsLength);
                        while (++index < length) {
                            args[index] = transforms[index].call(this || _global, args[index]);
                        }
                        return apply(func, this || _global, args);
                    });
                });
                var partial = baseRest(function (func, partials) {
                    var holders = replaceHolders(partials, getHolder(partial));
                    return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
                });
                var partialRight = baseRest(function (func, partials) {
                    var holders = replaceHolders(partials, getHolder(partialRight));
                    return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
                });
                var rearg = flatRest(function (func, indexes) {
                    return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
                });
                function rest(func, start) {
                    if (typeof func != 'function') {
                        throw new TypeError(FUNC_ERROR_TEXT);
                    }
                    start = start === undefined ? start : toInteger(start);
                    return baseRest(func, start);
                }
                function spread(func, start) {
                    if (typeof func != 'function') {
                        throw new TypeError(FUNC_ERROR_TEXT);
                    }
                    start = start == null ? 0 : nativeMax(toInteger(start), 0);
                    return baseRest(function (args) {
                        var array = args[start], otherArgs = castSlice(args, 0, start);
                        if (array) {
                            arrayPush(otherArgs, array);
                        }
                        return apply(func, this || _global, otherArgs);
                    });
                }
                function throttle(func, wait, options) {
                    var leading = true, trailing = true;
                    if (typeof func != 'function') {
                        throw new TypeError(FUNC_ERROR_TEXT);
                    }
                    if (isObject(options)) {
                        leading = 'leading' in options ? !!options.leading : leading;
                        trailing = 'trailing' in options ? !!options.trailing : trailing;
                    }
                    return debounce(func, wait, {
                        'leading': leading,
                        'maxWait': wait,
                        'trailing': trailing
                    });
                }
                function unary(func) {
                    return ary(func, 1);
                }
                function wrap(value, wrapper) {
                    return partial(castFunction(wrapper), value);
                }
                function castArray() {
                    if (!arguments.length) {
                        return [];
                    }
                    var value = arguments[0];
                    return isArray(value) ? value : [value];
                }
                function clone(value) {
                    return baseClone(value, CLONE_SYMBOLS_FLAG);
                }
                function cloneWith(value, customizer) {
                    customizer = typeof customizer == 'function' ? customizer : undefined;
                    return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
                }
                function cloneDeep(value) {
                    return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
                }
                function cloneDeepWith(value, customizer) {
                    customizer = typeof customizer == 'function' ? customizer : undefined;
                    return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
                }
                function conformsTo(object, source) {
                    return source == null || baseConformsTo(object, source, keys(source));
                }
                function eq(value, other) {
                    return value === other || value !== value && other !== other;
                }
                var gt = createRelationalOperation(baseGt);
                var gte = createRelationalOperation(function (value, other) {
                    return value >= other;
                });
                var isArguments = baseIsArguments(function () {
                    return arguments;
                }()) ? baseIsArguments : function (value) {
                    return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
                };
                var isArray = Array.isArray;
                var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;
                function isArrayLike(value) {
                    return value != null && isLength(value.length) && !isFunction(value);
                }
                function isArrayLikeObject(value) {
                    return isObjectLike(value) && isArrayLike(value);
                }
                function isBoolean(value) {
                    return value === true || value === false || isObjectLike(value) && baseGetTag(value) == boolTag;
                }
                var isBuffer = nativeIsBuffer || stubFalse;
                var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;
                function isElement(value) {
                    return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
                }
                function isEmpty(value) {
                    if (value == null) {
                        return true;
                    }
                    if (isArrayLike(value) && (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' || isBuffer(value) || isTypedArray(value) || isArguments(value))) {
                        return !value.length;
                    }
                    var tag = getTag(value);
                    if (tag == mapTag || tag == setTag) {
                        return !value.size;
                    }
                    if (isPrototype(value)) {
                        return !baseKeys(value).length;
                    }
                    for (var key in value) {
                        if (hasOwnProperty.call(value, key)) {
                            return false;
                        }
                    }
                    return true;
                }
                function isEqual(value, other) {
                    return baseIsEqual(value, other);
                }
                function isEqualWith(value, other, customizer) {
                    customizer = typeof customizer == 'function' ? customizer : undefined;
                    var result = customizer ? customizer(value, other) : undefined;
                    return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
                }
                function isError(value) {
                    if (!isObjectLike(value)) {
                        return false;
                    }
                    var tag = baseGetTag(value);
                    return tag == errorTag || tag == domExcTag || typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value);
                }
                function isFinite(value) {
                    return typeof value == 'number' && nativeIsFinite(value);
                }
                function isFunction(value) {
                    if (!isObject(value)) {
                        return false;
                    }
                    var tag = baseGetTag(value);
                    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
                }
                function isInteger(value) {
                    return typeof value == 'number' && value == toInteger(value);
                }
                function isLength(value) {
                    return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
                }
                function isObject(value) {
                    var type = typeof value;
                    return value != null && (type == 'object' || type == 'function');
                }
                function isObjectLike(value) {
                    return value != null && typeof value == 'object';
                }
                var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
                function isMatch(object, source) {
                    return object === source || baseIsMatch(object, source, getMatchData(source));
                }
                function isMatchWith(object, source, customizer) {
                    customizer = typeof customizer == 'function' ? customizer : undefined;
                    return baseIsMatch(object, source, getMatchData(source), customizer);
                }
                function isNaN(value) {
                    return isNumber(value) && value != +value;
                }
                function isNative(value) {
                    if (isMaskable(value)) {
                        throw new Error(CORE_ERROR_TEXT);
                    }
                    return baseIsNative(value);
                }
                function isNull(value) {
                    return value === null;
                }
                function isNil(value) {
                    return value == null;
                }
                function isNumber(value) {
                    return typeof value == 'number' || isObjectLike(value) && baseGetTag(value) == numberTag;
                }
                function isPlainObject(value) {
                    if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
                        return false;
                    }
                    var proto = getPrototype(value);
                    if (proto === null) {
                        return true;
                    }
                    var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
                    return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
                }
                var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;
                function isSafeInteger(value) {
                    return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
                }
                var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
                function isString(value) {
                    return typeof value == 'string' || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
                }
                function isSymbol(value) {
                    return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;
                }
                var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
                function isUndefined(value) {
                    return value === undefined;
                }
                function isWeakMap(value) {
                    return isObjectLike(value) && getTag(value) == weakMapTag;
                }
                function isWeakSet(value) {
                    return isObjectLike(value) && baseGetTag(value) == weakSetTag;
                }
                var lt = createRelationalOperation(baseLt);
                var lte = createRelationalOperation(function (value, other) {
                    return value <= other;
                });
                function toArray(value) {
                    if (!value) {
                        return [];
                    }
                    if (isArrayLike(value)) {
                        return isString(value) ? stringToArray(value) : copyArray(value);
                    }
                    if (symIterator && value[symIterator]) {
                        return iteratorToArray(value[symIterator]());
                    }
                    var tag = getTag(value), func = tag == mapTag ? mapToArray : tag == setTag ? setToArray : values;
                    return func(value);
                }
                function toFinite(value) {
                    if (!value) {
                        return value === 0 ? value : 0;
                    }
                    value = toNumber(value);
                    if (value === INFINITY || value === -INFINITY) {
                        var sign = value < 0 ? -1 : 1;
                        return sign * MAX_INTEGER;
                    }
                    return value === value ? value : 0;
                }
                function toInteger(value) {
                    var result = toFinite(value), remainder = result % 1;
                    return result === result ? remainder ? result - remainder : result : 0;
                }
                function toLength(value) {
                    return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
                }
                function toNumber(value) {
                    if (typeof value == 'number') {
                        return value;
                    }
                    if (isSymbol(value)) {
                        return NAN;
                    }
                    if (isObject(value)) {
                        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
                        value = isObject(other) ? other + '' : other;
                    }
                    if (typeof value != 'string') {
                        return value === 0 ? value : +value;
                    }
                    value = value.replace(reTrim, '');
                    var isBinary = reIsBinary.test(value);
                    return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
                }
                function toPlainObject(value) {
                    return copyObject(value, keysIn(value));
                }
                function toSafeInteger(value) {
                    return value ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER) : value === 0 ? value : 0;
                }
                function toString(value) {
                    return value == null ? '' : baseToString(value);
                }
                var assign = createAssigner(function (object, source) {
                    if (isPrototype(source) || isArrayLike(source)) {
                        copyObject(source, keys(source), object);
                        return;
                    }
                    for (var key in source) {
                        if (hasOwnProperty.call(source, key)) {
                            assignValue(object, key, source[key]);
                        }
                    }
                });
                var assignIn = createAssigner(function (object, source) {
                    copyObject(source, keysIn(source), object);
                });
                var assignInWith = createAssigner(function (object, source, srcIndex, customizer) {
                    copyObject(source, keysIn(source), object, customizer);
                });
                var assignWith = createAssigner(function (object, source, srcIndex, customizer) {
                    copyObject(source, keys(source), object, customizer);
                });
                var at = flatRest(baseAt);
                function create(prototype, properties) {
                    var result = baseCreate(prototype);
                    return properties == null ? result : baseAssign(result, properties);
                }
                var defaults = baseRest(function (object, sources) {
                    object = Object(object);
                    var index = -1;
                    var length = sources.length;
                    var guard = length > 2 ? sources[2] : undefined;
                    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
                        length = 1;
                    }
                    while (++index < length) {
                        var source = sources[index];
                        var props = keysIn(source);
                        var propsIndex = -1;
                        var propsLength = props.length;
                        while (++propsIndex < propsLength) {
                            var key = props[propsIndex];
                            var value = object[key];
                            if (value === undefined || eq(value, objectProto[key]) && !hasOwnProperty.call(object, key)) {
                                object[key] = source[key];
                            }
                        }
                    }
                    return object;
                });
                var defaultsDeep = baseRest(function (args) {
                    args.push(undefined, customDefaultsMerge);
                    return apply(mergeWith, undefined, args);
                });
                function findKey(object, predicate) {
                    return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
                }
                function findLastKey(object, predicate) {
                    return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
                }
                function forIn(object, iteratee) {
                    return object == null ? object : baseFor(object, getIteratee(iteratee, 3), keysIn);
                }
                function forInRight(object, iteratee) {
                    return object == null ? object : baseForRight(object, getIteratee(iteratee, 3), keysIn);
                }
                function forOwn(object, iteratee) {
                    return object && baseForOwn(object, getIteratee(iteratee, 3));
                }
                function forOwnRight(object, iteratee) {
                    return object && baseForOwnRight(object, getIteratee(iteratee, 3));
                }
                function functions(object) {
                    return object == null ? [] : baseFunctions(object, keys(object));
                }
                function functionsIn(object) {
                    return object == null ? [] : baseFunctions(object, keysIn(object));
                }
                function get(object, path, defaultValue) {
                    var result = object == null ? undefined : baseGet(object, path);
                    return result === undefined ? defaultValue : result;
                }
                function has(object, path) {
                    return object != null && hasPath(object, path, baseHas);
                }
                function hasIn(object, path) {
                    return object != null && hasPath(object, path, baseHasIn);
                }
                var invert = createInverter(function (result, value, key) {
                    if (value != null && typeof value.toString != 'function') {
                        value = nativeObjectToString.call(value);
                    }
                    result[value] = key;
                }, constant(identity));
                var invertBy = createInverter(function (result, value, key) {
                    if (value != null && typeof value.toString != 'function') {
                        value = nativeObjectToString.call(value);
                    }
                    if (hasOwnProperty.call(result, value)) {
                        result[value].push(key);
                    }
                    else {
                        result[value] = [key];
                    }
                }, getIteratee);
                var invoke = baseRest(baseInvoke);
                function keys(object) {
                    return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
                }
                function keysIn(object) {
                    return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
                }
                function mapKeys(object, iteratee) {
                    var result = {};
                    iteratee = getIteratee(iteratee, 3);
                    baseForOwn(object, function (value, key, object) {
                        baseAssignValue(result, iteratee(value, key, object), value);
                    });
                    return result;
                }
                function mapValues(object, iteratee) {
                    var result = {};
                    iteratee = getIteratee(iteratee, 3);
                    baseForOwn(object, function (value, key, object) {
                        baseAssignValue(result, key, iteratee(value, key, object));
                    });
                    return result;
                }
                var merge = createAssigner(function (object, source, srcIndex) {
                    baseMerge(object, source, srcIndex);
                });
                var mergeWith = createAssigner(function (object, source, srcIndex, customizer) {
                    baseMerge(object, source, srcIndex, customizer);
                });
                var omit = flatRest(function (object, paths) {
                    var result = {};
                    if (object == null) {
                        return result;
                    }
                    var isDeep = false;
                    paths = arrayMap(paths, function (path) {
                        path = castPath(path, object);
                        isDeep || (isDeep = path.length > 1);
                        return path;
                    });
                    copyObject(object, getAllKeysIn(object), result);
                    if (isDeep) {
                        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
                    }
                    var length = paths.length;
                    while (length--) {
                        baseUnset(result, paths[length]);
                    }
                    return result;
                });
                function omitBy(object, predicate) {
                    return pickBy(object, negate(getIteratee(predicate)));
                }
                var pick = flatRest(function (object, paths) {
                    return object == null ? {} : basePick(object, paths);
                });
                function pickBy(object, predicate) {
                    if (object == null) {
                        return {};
                    }
                    var props = arrayMap(getAllKeysIn(object), function (prop) {
                        return [prop];
                    });
                    predicate = getIteratee(predicate);
                    return basePickBy(object, props, function (value, path) {
                        return predicate(value, path[0]);
                    });
                }
                function result(object, path, defaultValue) {
                    path = castPath(path, object);
                    var index = -1, length = path.length;
                    if (!length) {
                        length = 1;
                        object = undefined;
                    }
                    while (++index < length) {
                        var value = object == null ? undefined : object[toKey(path[index])];
                        if (value === undefined) {
                            index = length;
                            value = defaultValue;
                        }
                        object = isFunction(value) ? value.call(object) : value;
                    }
                    return object;
                }
                function set(object, path, value) {
                    return object == null ? object : baseSet(object, path, value);
                }
                function setWith(object, path, value, customizer) {
                    customizer = typeof customizer == 'function' ? customizer : undefined;
                    return object == null ? object : baseSet(object, path, value, customizer);
                }
                var toPairs = createToPairs(keys);
                var toPairsIn = createToPairs(keysIn);
                function transform(object, iteratee, accumulator) {
                    var isArr = isArray(object), isArrLike = isArr || isBuffer(object) || isTypedArray(object);
                    iteratee = getIteratee(iteratee, 4);
                    if (accumulator == null) {
                        var Ctor = object && object.constructor;
                        if (isArrLike) {
                            accumulator = isArr ? new Ctor() : [];
                        }
                        else if (isObject(object)) {
                            accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
                        }
                        else {
                            accumulator = {};
                        }
                    }
                    (isArrLike ? arrayEach : baseForOwn)(object, function (value, index, object) {
                        return iteratee(accumulator, value, index, object);
                    });
                    return accumulator;
                }
                function unset(object, path) {
                    return object == null ? true : baseUnset(object, path);
                }
                function update(object, path, updater) {
                    return object == null ? object : baseUpdate(object, path, castFunction(updater));
                }
                function updateWith(object, path, updater, customizer) {
                    customizer = typeof customizer == 'function' ? customizer : undefined;
                    return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
                }
                function values(object) {
                    return object == null ? [] : baseValues(object, keys(object));
                }
                function valuesIn(object) {
                    return object == null ? [] : baseValues(object, keysIn(object));
                }
                function clamp(number, lower, upper) {
                    if (upper === undefined) {
                        upper = lower;
                        lower = undefined;
                    }
                    if (upper !== undefined) {
                        upper = toNumber(upper);
                        upper = upper === upper ? upper : 0;
                    }
                    if (lower !== undefined) {
                        lower = toNumber(lower);
                        lower = lower === lower ? lower : 0;
                    }
                    return baseClamp(toNumber(number), lower, upper);
                }
                function inRange(number, start, end) {
                    start = toFinite(start);
                    if (end === undefined) {
                        end = start;
                        start = 0;
                    }
                    else {
                        end = toFinite(end);
                    }
                    number = toNumber(number);
                    return baseInRange(number, start, end);
                }
                function random(lower, upper, floating) {
                    if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
                        upper = floating = undefined;
                    }
                    if (floating === undefined) {
                        if (typeof upper == 'boolean') {
                            floating = upper;
                            upper = undefined;
                        }
                        else if (typeof lower == 'boolean') {
                            floating = lower;
                            lower = undefined;
                        }
                    }
                    if (lower === undefined && upper === undefined) {
                        lower = 0;
                        upper = 1;
                    }
                    else {
                        lower = toFinite(lower);
                        if (upper === undefined) {
                            upper = lower;
                            lower = 0;
                        }
                        else {
                            upper = toFinite(upper);
                        }
                    }
                    if (lower > upper) {
                        var temp = lower;
                        lower = upper;
                        upper = temp;
                    }
                    if (floating || lower % 1 || upper % 1) {
                        var rand = nativeRandom();
                        return nativeMin(lower + rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1))), upper);
                    }
                    return baseRandom(lower, upper);
                }
                var camelCase = createCompounder(function (result, word, index) {
                    word = word.toLowerCase();
                    return result + (index ? capitalize(word) : word);
                });
                function capitalize(string) {
                    return upperFirst(toString(string).toLowerCase());
                }
                function deburr(string) {
                    string = toString(string);
                    return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
                }
                function endsWith(string, target, position) {
                    string = toString(string);
                    target = baseToString(target);
                    var length = string.length;
                    position = position === undefined ? length : baseClamp(toInteger(position), 0, length);
                    var end = position;
                    position -= target.length;
                    return position >= 0 && string.slice(position, end) == target;
                }
                function escape(string) {
                    string = toString(string);
                    return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;
                }
                function escapeRegExp(string) {
                    string = toString(string);
                    return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, '\\$&') : string;
                }
                var kebabCase = createCompounder(function (result, word, index) {
                    return result + (index ? '-' : '') + word.toLowerCase();
                });
                var lowerCase = createCompounder(function (result, word, index) {
                    return result + (index ? ' ' : '') + word.toLowerCase();
                });
                var lowerFirst = createCaseFirst('toLowerCase');
                function pad(string, length, chars) {
                    string = toString(string);
                    length = toInteger(length);
                    var strLength = length ? stringSize(string) : 0;
                    if (!length || strLength >= length) {
                        return string;
                    }
                    var mid = (length - strLength) / 2;
                    return createPadding(nativeFloor(mid), chars) + string + createPadding(nativeCeil(mid), chars);
                }
                function padEnd(string, length, chars) {
                    string = toString(string);
                    length = toInteger(length);
                    var strLength = length ? stringSize(string) : 0;
                    return length && strLength < length ? string + createPadding(length - strLength, chars) : string;
                }
                function padStart(string, length, chars) {
                    string = toString(string);
                    length = toInteger(length);
                    var strLength = length ? stringSize(string) : 0;
                    return length && strLength < length ? createPadding(length - strLength, chars) + string : string;
                }
                function parseInt(string, radix, guard) {
                    if (guard || radix == null) {
                        radix = 0;
                    }
                    else if (radix) {
                        radix = +radix;
                    }
                    return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
                }
                function repeat(string, n, guard) {
                    if (guard ? isIterateeCall(string, n, guard) : n === undefined) {
                        n = 1;
                    }
                    else {
                        n = toInteger(n);
                    }
                    return baseRepeat(toString(string), n);
                }
                function replace() {
                    var args = arguments, string = toString(args[0]);
                    return args.length < 3 ? string : string.replace(args[1], args[2]);
                }
                var snakeCase = createCompounder(function (result, word, index) {
                    return result + (index ? '_' : '') + word.toLowerCase();
                });
                function split(string, separator, limit) {
                    if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
                        separator = limit = undefined;
                    }
                    limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
                    if (!limit) {
                        return [];
                    }
                    string = toString(string);
                    if (string && (typeof separator == 'string' || separator != null && !isRegExp(separator))) {
                        separator = baseToString(separator);
                        if (!separator && hasUnicode(string)) {
                            return castSlice(stringToArray(string), 0, limit);
                        }
                    }
                    return string.split(separator, limit);
                }
                var startCase = createCompounder(function (result, word, index) {
                    return result + (index ? ' ' : '') + upperFirst(word);
                });
                function startsWith(string, target, position) {
                    string = toString(string);
                    position = position == null ? 0 : baseClamp(toInteger(position), 0, string.length);
                    target = baseToString(target);
                    return string.slice(position, position + target.length) == target;
                }
                function template(string, options, guard) {
                    var settings = lodash.templateSettings;
                    if (guard && isIterateeCall(string, options, guard)) {
                        options = undefined;
                    }
                    string = toString(string);
                    options = assignInWith({}, options, settings, customDefaultsAssignIn);
                    var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn), importsKeys = keys(imports), importsValues = baseValues(imports, importsKeys);
                    var isEscaping, isEvaluating, index = 0, interpolate = options.interpolate || reNoMatch, source = "__p += '";
                    var reDelimiters = RegExp((options.escape || reNoMatch).source + '|' + interpolate.source + '|' + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' + (options.evaluate || reNoMatch).source + '|$', 'g');
                    var sourceURL = '//# sourceURL=' + (hasOwnProperty.call(options, 'sourceURL') ? (options.sourceURL + '').replace(/[\r\n]/g, ' ') : 'lodash.templateSources[' + ++templateCounter + ']') + '\n';
                    string.replace(reDelimiters, function (match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
                        interpolateValue || (interpolateValue = esTemplateValue);
                        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);
                        if (escapeValue) {
                            isEscaping = true;
                            source += "' +\n__e(" + escapeValue + ") +\n'";
                        }
                        if (evaluateValue) {
                            isEvaluating = true;
                            source += "';\n" + evaluateValue + ";\n__p += '";
                        }
                        if (interpolateValue) {
                            source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
                        }
                        index = offset + match.length;
                        return match;
                    });
                    source += "';\n";
                    var variable = hasOwnProperty.call(options, 'variable') && options.variable;
                    if (!variable) {
                        source = 'with (obj) {\n' + source + '\n}\n';
                    }
                    source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source).replace(reEmptyStringMiddle, '$1').replace(reEmptyStringTrailing, '$1;');
                    source = 'function(' + (variable || 'obj') + ') {\n' + (variable ? '' : 'obj || (obj = {});\n') + "var __t, __p = ''" + (isEscaping ? ', __e = _.escape' : '') + (isEvaluating ? ', __j = Array.prototype.join;\n' + "function print() { __p += __j.call(arguments, '') }\n" : ';\n') + source + 'return __p\n}';
                    var result = attempt(function () {
                        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);
                    });
                    result.source = source;
                    if (isError(result)) {
                        throw result;
                    }
                    return result;
                }
                function toLower(value) {
                    return toString(value).toLowerCase();
                }
                function toUpper(value) {
                    return toString(value).toUpperCase();
                }
                function trim(string, chars, guard) {
                    string = toString(string);
                    if (string && (guard || chars === undefined)) {
                        return string.replace(reTrim, '');
                    }
                    if (!string || !(chars = baseToString(chars))) {
                        return string;
                    }
                    var strSymbols = stringToArray(string), chrSymbols = stringToArray(chars), start = charsStartIndex(strSymbols, chrSymbols), end = charsEndIndex(strSymbols, chrSymbols) + 1;
                    return castSlice(strSymbols, start, end).join('');
                }
                function trimEnd(string, chars, guard) {
                    string = toString(string);
                    if (string && (guard || chars === undefined)) {
                        return string.replace(reTrimEnd, '');
                    }
                    if (!string || !(chars = baseToString(chars))) {
                        return string;
                    }
                    var strSymbols = stringToArray(string), end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;
                    return castSlice(strSymbols, 0, end).join('');
                }
                function trimStart(string, chars, guard) {
                    string = toString(string);
                    if (string && (guard || chars === undefined)) {
                        return string.replace(reTrimStart, '');
                    }
                    if (!string || !(chars = baseToString(chars))) {
                        return string;
                    }
                    var strSymbols = stringToArray(string), start = charsStartIndex(strSymbols, stringToArray(chars));
                    return castSlice(strSymbols, start).join('');
                }
                function truncate(string, options) {
                    var length = DEFAULT_TRUNC_LENGTH, omission = DEFAULT_TRUNC_OMISSION;
                    if (isObject(options)) {
                        var separator = 'separator' in options ? options.separator : separator;
                        length = 'length' in options ? toInteger(options.length) : length;
                        omission = 'omission' in options ? baseToString(options.omission) : omission;
                    }
                    string = toString(string);
                    var strLength = string.length;
                    if (hasUnicode(string)) {
                        var strSymbols = stringToArray(string);
                        strLength = strSymbols.length;
                    }
                    if (length >= strLength) {
                        return string;
                    }
                    var end = length - stringSize(omission);
                    if (end < 1) {
                        return omission;
                    }
                    var result = strSymbols ? castSlice(strSymbols, 0, end).join('') : string.slice(0, end);
                    if (separator === undefined) {
                        return result + omission;
                    }
                    if (strSymbols) {
                        end += result.length - end;
                    }
                    if (isRegExp(separator)) {
                        if (string.slice(end).search(separator)) {
                            var match, substring = result;
                            if (!separator.global) {
                                separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
                            }
                            separator.lastIndex = 0;
                            while (match = separator.exec(substring)) {
                                var newEnd = match.index;
                            }
                            result = result.slice(0, newEnd === undefined ? end : newEnd);
                        }
                    }
                    else if (string.indexOf(baseToString(separator), end) != end) {
                        var index = result.lastIndexOf(separator);
                        if (index > -1) {
                            result = result.slice(0, index);
                        }
                    }
                    return result + omission;
                }
                function unescape(string) {
                    string = toString(string);
                    return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;
                }
                var upperCase = createCompounder(function (result, word, index) {
                    return result + (index ? ' ' : '') + word.toUpperCase();
                });
                var upperFirst = createCaseFirst('toUpperCase');
                function words(string, pattern, guard) {
                    string = toString(string);
                    pattern = guard ? undefined : pattern;
                    if (pattern === undefined) {
                        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
                    }
                    return string.match(pattern) || [];
                }
                var attempt = baseRest(function (func, args) {
                    try {
                        return apply(func, undefined, args);
                    }
                    catch (e) {
                        return isError(e) ? e : new Error(e);
                    }
                });
                var bindAll = flatRest(function (object, methodNames) {
                    arrayEach(methodNames, function (key) {
                        key = toKey(key);
                        baseAssignValue(object, key, bind(object[key], object));
                    });
                    return object;
                });
                function cond(pairs) {
                    var length = pairs == null ? 0 : pairs.length, toIteratee = getIteratee();
                    pairs = !length ? [] : arrayMap(pairs, function (pair) {
                        if (typeof pair[1] != 'function') {
                            throw new TypeError(FUNC_ERROR_TEXT);
                        }
                        return [toIteratee(pair[0]), pair[1]];
                    });
                    return baseRest(function (args) {
                        var index = -1;
                        while (++index < length) {
                            var pair = pairs[index];
                            if (apply(pair[0], this || _global, args)) {
                                return apply(pair[1], this || _global, args);
                            }
                        }
                    });
                }
                function conforms(source) {
                    return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
                }
                function constant(value) {
                    return function () {
                        return value;
                    };
                }
                function defaultTo(value, defaultValue) {
                    return value == null || value !== value ? defaultValue : value;
                }
                var flow = createFlow();
                var flowRight = createFlow(true);
                function identity(value) {
                    return value;
                }
                function iteratee(func) {
                    return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
                }
                function matches(source) {
                    return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
                }
                function matchesProperty(path, srcValue) {
                    return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
                }
                var method = baseRest(function (path, args) {
                    return function (object) {
                        return baseInvoke(object, path, args);
                    };
                });
                var methodOf = baseRest(function (object, args) {
                    return function (path) {
                        return baseInvoke(object, path, args);
                    };
                });
                function mixin(object, source, options) {
                    var props = keys(source), methodNames = baseFunctions(source, props);
                    if (options == null && !(isObject(source) && (methodNames.length || !props.length))) {
                        options = source;
                        source = object;
                        object = this || _global;
                        methodNames = baseFunctions(source, keys(source));
                    }
                    var chain = !(isObject(options) && 'chain' in options) || !!options.chain, isFunc = isFunction(object);
                    arrayEach(methodNames, function (methodName) {
                        var func = source[methodName];
                        object[methodName] = func;
                        if (isFunc) {
                            object.prototype[methodName] = function () {
                                var chainAll = (this || _global).__chain__;
                                if (chain || chainAll) {
                                    var result = object((this || _global).__wrapped__), actions = result.__actions__ = copyArray((this || _global).__actions__);
                                    actions.push({
                                        'func': func,
                                        'args': arguments,
                                        'thisArg': object
                                    });
                                    result.__chain__ = chainAll;
                                    return result;
                                }
                                return func.apply(object, arrayPush([this.value()], arguments));
                            };
                        }
                    });
                    return object;
                }
                function noConflict() {
                    if (root._ === (this || _global)) {
                        root._ = oldDash;
                    }
                    return this || _global;
                }
                function noop() { }
                function nthArg(n) {
                    n = toInteger(n);
                    return baseRest(function (args) {
                        return baseNth(args, n);
                    });
                }
                var over = createOver(arrayMap);
                var overEvery = createOver(arrayEvery);
                var overSome = createOver(arraySome);
                function property(path) {
                    return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
                }
                function propertyOf(object) {
                    return function (path) {
                        return object == null ? undefined : baseGet(object, path);
                    };
                }
                var range = createRange();
                var rangeRight = createRange(true);
                function stubArray() {
                    return [];
                }
                function stubFalse() {
                    return false;
                }
                function stubObject() {
                    return {};
                }
                function stubString() {
                    return '';
                }
                function stubTrue() {
                    return true;
                }
                function times(n, iteratee) {
                    n = toInteger(n);
                    if (n < 1 || n > MAX_SAFE_INTEGER) {
                        return [];
                    }
                    var index = MAX_ARRAY_LENGTH, length = nativeMin(n, MAX_ARRAY_LENGTH);
                    iteratee = getIteratee(iteratee);
                    n -= MAX_ARRAY_LENGTH;
                    var result = baseTimes(length, iteratee);
                    while (++index < n) {
                        iteratee(index);
                    }
                    return result;
                }
                function toPath(value) {
                    if (isArray(value)) {
                        return arrayMap(value, toKey);
                    }
                    return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
                }
                function uniqueId(prefix) {
                    var id = ++idCounter;
                    return toString(prefix) + id;
                }
                var add = createMathOperation(function (augend, addend) {
                    return augend + addend;
                }, 0);
                var ceil = createRound('ceil');
                var divide = createMathOperation(function (dividend, divisor) {
                    return dividend / divisor;
                }, 1);
                var floor = createRound('floor');
                function max(array) {
                    return array && array.length ? baseExtremum(array, identity, baseGt) : undefined;
                }
                function maxBy(array, iteratee) {
                    return array && array.length ? baseExtremum(array, getIteratee(iteratee, 2), baseGt) : undefined;
                }
                function mean(array) {
                    return baseMean(array, identity);
                }
                function meanBy(array, iteratee) {
                    return baseMean(array, getIteratee(iteratee, 2));
                }
                function min(array) {
                    return array && array.length ? baseExtremum(array, identity, baseLt) : undefined;
                }
                function minBy(array, iteratee) {
                    return array && array.length ? baseExtremum(array, getIteratee(iteratee, 2), baseLt) : undefined;
                }
                var multiply = createMathOperation(function (multiplier, multiplicand) {
                    return multiplier * multiplicand;
                }, 1);
                var round = createRound('round');
                var subtract = createMathOperation(function (minuend, subtrahend) {
                    return minuend - subtrahend;
                }, 0);
                function sum(array) {
                    return array && array.length ? baseSum(array, identity) : 0;
                }
                function sumBy(array, iteratee) {
                    return array && array.length ? baseSum(array, getIteratee(iteratee, 2)) : 0;
                }
                lodash.after = after;
                lodash.ary = ary;
                lodash.assign = assign;
                lodash.assignIn = assignIn;
                lodash.assignInWith = assignInWith;
                lodash.assignWith = assignWith;
                lodash.at = at;
                lodash.before = before;
                lodash.bind = bind;
                lodash.bindAll = bindAll;
                lodash.bindKey = bindKey;
                lodash.castArray = castArray;
                lodash.chain = chain;
                lodash.chunk = chunk;
                lodash.compact = compact;
                lodash.concat = concat;
                lodash.cond = cond;
                lodash.conforms = conforms;
                lodash.constant = constant;
                lodash.countBy = countBy;
                lodash.create = create;
                lodash.curry = curry;
                lodash.curryRight = curryRight;
                lodash.debounce = debounce;
                lodash.defaults = defaults;
                lodash.defaultsDeep = defaultsDeep;
                lodash.defer = defer;
                lodash.delay = delay;
                lodash.difference = difference;
                lodash.differenceBy = differenceBy;
                lodash.differenceWith = differenceWith;
                lodash.drop = drop;
                lodash.dropRight = dropRight;
                lodash.dropRightWhile = dropRightWhile;
                lodash.dropWhile = dropWhile;
                lodash.fill = fill;
                lodash.filter = filter;
                lodash.flatMap = flatMap;
                lodash.flatMapDeep = flatMapDeep;
                lodash.flatMapDepth = flatMapDepth;
                lodash.flatten = flatten;
                lodash.flattenDeep = flattenDeep;
                lodash.flattenDepth = flattenDepth;
                lodash.flip = flip;
                lodash.flow = flow;
                lodash.flowRight = flowRight;
                lodash.fromPairs = fromPairs;
                lodash.functions = functions;
                lodash.functionsIn = functionsIn;
                lodash.groupBy = groupBy;
                lodash.initial = initial;
                lodash.intersection = intersection;
                lodash.intersectionBy = intersectionBy;
                lodash.intersectionWith = intersectionWith;
                lodash.invert = invert;
                lodash.invertBy = invertBy;
                lodash.invokeMap = invokeMap;
                lodash.iteratee = iteratee;
                lodash.keyBy = keyBy;
                lodash.keys = keys;
                lodash.keysIn = keysIn;
                lodash.map = map;
                lodash.mapKeys = mapKeys;
                lodash.mapValues = mapValues;
                lodash.matches = matches;
                lodash.matchesProperty = matchesProperty;
                lodash.memoize = memoize;
                lodash.merge = merge;
                lodash.mergeWith = mergeWith;
                lodash.method = method;
                lodash.methodOf = methodOf;
                lodash.mixin = mixin;
                lodash.negate = negate;
                lodash.nthArg = nthArg;
                lodash.omit = omit;
                lodash.omitBy = omitBy;
                lodash.once = once;
                lodash.orderBy = orderBy;
                lodash.over = over;
                lodash.overArgs = overArgs;
                lodash.overEvery = overEvery;
                lodash.overSome = overSome;
                lodash.partial = partial;
                lodash.partialRight = partialRight;
                lodash.partition = partition;
                lodash.pick = pick;
                lodash.pickBy = pickBy;
                lodash.property = property;
                lodash.propertyOf = propertyOf;
                lodash.pull = pull;
                lodash.pullAll = pullAll;
                lodash.pullAllBy = pullAllBy;
                lodash.pullAllWith = pullAllWith;
                lodash.pullAt = pullAt;
                lodash.range = range;
                lodash.rangeRight = rangeRight;
                lodash.rearg = rearg;
                lodash.reject = reject;
                lodash.remove = remove;
                lodash.rest = rest;
                lodash.reverse = reverse;
                lodash.sampleSize = sampleSize;
                lodash.set = set;
                lodash.setWith = setWith;
                lodash.shuffle = shuffle;
                lodash.slice = slice;
                lodash.sortBy = sortBy;
                lodash.sortedUniq = sortedUniq;
                lodash.sortedUniqBy = sortedUniqBy;
                lodash.split = split;
                lodash.spread = spread;
                lodash.tail = tail;
                lodash.take = take;
                lodash.takeRight = takeRight;
                lodash.takeRightWhile = takeRightWhile;
                lodash.takeWhile = takeWhile;
                lodash.tap = tap;
                lodash.throttle = throttle;
                lodash.thru = thru;
                lodash.toArray = toArray;
                lodash.toPairs = toPairs;
                lodash.toPairsIn = toPairsIn;
                lodash.toPath = toPath;
                lodash.toPlainObject = toPlainObject;
                lodash.transform = transform;
                lodash.unary = unary;
                lodash.union = union;
                lodash.unionBy = unionBy;
                lodash.unionWith = unionWith;
                lodash.uniq = uniq;
                lodash.uniqBy = uniqBy;
                lodash.uniqWith = uniqWith;
                lodash.unset = unset;
                lodash.unzip = unzip;
                lodash.unzipWith = unzipWith;
                lodash.update = update;
                lodash.updateWith = updateWith;
                lodash.values = values;
                lodash.valuesIn = valuesIn;
                lodash.without = without;
                lodash.words = words;
                lodash.wrap = wrap;
                lodash.xor = xor;
                lodash.xorBy = xorBy;
                lodash.xorWith = xorWith;
                lodash.zip = zip;
                lodash.zipObject = zipObject;
                lodash.zipObjectDeep = zipObjectDeep;
                lodash.zipWith = zipWith;
                lodash.entries = toPairs;
                lodash.entriesIn = toPairsIn;
                lodash.extend = assignIn;
                lodash.extendWith = assignInWith;
                mixin(lodash, lodash);
                lodash.add = add;
                lodash.attempt = attempt;
                lodash.camelCase = camelCase;
                lodash.capitalize = capitalize;
                lodash.ceil = ceil;
                lodash.clamp = clamp;
                lodash.clone = clone;
                lodash.cloneDeep = cloneDeep;
                lodash.cloneDeepWith = cloneDeepWith;
                lodash.cloneWith = cloneWith;
                lodash.conformsTo = conformsTo;
                lodash.deburr = deburr;
                lodash.defaultTo = defaultTo;
                lodash.divide = divide;
                lodash.endsWith = endsWith;
                lodash.eq = eq;
                lodash.escape = escape;
                lodash.escapeRegExp = escapeRegExp;
                lodash.every = every;
                lodash.find = find;
                lodash.findIndex = findIndex;
                lodash.findKey = findKey;
                lodash.findLast = findLast;
                lodash.findLastIndex = findLastIndex;
                lodash.findLastKey = findLastKey;
                lodash.floor = floor;
                lodash.forEach = forEach;
                lodash.forEachRight = forEachRight;
                lodash.forIn = forIn;
                lodash.forInRight = forInRight;
                lodash.forOwn = forOwn;
                lodash.forOwnRight = forOwnRight;
                lodash.get = get;
                lodash.gt = gt;
                lodash.gte = gte;
                lodash.has = has;
                lodash.hasIn = hasIn;
                lodash.head = head;
                lodash.identity = identity;
                lodash.includes = includes;
                lodash.indexOf = indexOf;
                lodash.inRange = inRange;
                lodash.invoke = invoke;
                lodash.isArguments = isArguments;
                lodash.isArray = isArray;
                lodash.isArrayBuffer = isArrayBuffer;
                lodash.isArrayLike = isArrayLike;
                lodash.isArrayLikeObject = isArrayLikeObject;
                lodash.isBoolean = isBoolean;
                lodash.isBuffer = isBuffer;
                lodash.isDate = isDate;
                lodash.isElement = isElement;
                lodash.isEmpty = isEmpty;
                lodash.isEqual = isEqual;
                lodash.isEqualWith = isEqualWith;
                lodash.isError = isError;
                lodash.isFinite = isFinite;
                lodash.isFunction = isFunction;
                lodash.isInteger = isInteger;
                lodash.isLength = isLength;
                lodash.isMap = isMap;
                lodash.isMatch = isMatch;
                lodash.isMatchWith = isMatchWith;
                lodash.isNaN = isNaN;
                lodash.isNative = isNative;
                lodash.isNil = isNil;
                lodash.isNull = isNull;
                lodash.isNumber = isNumber;
                lodash.isObject = isObject;
                lodash.isObjectLike = isObjectLike;
                lodash.isPlainObject = isPlainObject;
                lodash.isRegExp = isRegExp;
                lodash.isSafeInteger = isSafeInteger;
                lodash.isSet = isSet;
                lodash.isString = isString;
                lodash.isSymbol = isSymbol;
                lodash.isTypedArray = isTypedArray;
                lodash.isUndefined = isUndefined;
                lodash.isWeakMap = isWeakMap;
                lodash.isWeakSet = isWeakSet;
                lodash.join = join;
                lodash.kebabCase = kebabCase;
                lodash.last = last;
                lodash.lastIndexOf = lastIndexOf;
                lodash.lowerCase = lowerCase;
                lodash.lowerFirst = lowerFirst;
                lodash.lt = lt;
                lodash.lte = lte;
                lodash.max = max;
                lodash.maxBy = maxBy;
                lodash.mean = mean;
                lodash.meanBy = meanBy;
                lodash.min = min;
                lodash.minBy = minBy;
                lodash.stubArray = stubArray;
                lodash.stubFalse = stubFalse;
                lodash.stubObject = stubObject;
                lodash.stubString = stubString;
                lodash.stubTrue = stubTrue;
                lodash.multiply = multiply;
                lodash.nth = nth;
                lodash.noConflict = noConflict;
                lodash.noop = noop;
                lodash.now = now;
                lodash.pad = pad;
                lodash.padEnd = padEnd;
                lodash.padStart = padStart;
                lodash.parseInt = parseInt;
                lodash.random = random;
                lodash.reduce = reduce;
                lodash.reduceRight = reduceRight;
                lodash.repeat = repeat;
                lodash.replace = replace;
                lodash.result = result;
                lodash.round = round;
                lodash.runInContext = runInContext;
                lodash.sample = sample;
                lodash.size = size;
                lodash.snakeCase = snakeCase;
                lodash.some = some;
                lodash.sortedIndex = sortedIndex;
                lodash.sortedIndexBy = sortedIndexBy;
                lodash.sortedIndexOf = sortedIndexOf;
                lodash.sortedLastIndex = sortedLastIndex;
                lodash.sortedLastIndexBy = sortedLastIndexBy;
                lodash.sortedLastIndexOf = sortedLastIndexOf;
                lodash.startCase = startCase;
                lodash.startsWith = startsWith;
                lodash.subtract = subtract;
                lodash.sum = sum;
                lodash.sumBy = sumBy;
                lodash.template = template;
                lodash.times = times;
                lodash.toFinite = toFinite;
                lodash.toInteger = toInteger;
                lodash.toLength = toLength;
                lodash.toLower = toLower;
                lodash.toNumber = toNumber;
                lodash.toSafeInteger = toSafeInteger;
                lodash.toString = toString;
                lodash.toUpper = toUpper;
                lodash.trim = trim;
                lodash.trimEnd = trimEnd;
                lodash.trimStart = trimStart;
                lodash.truncate = truncate;
                lodash.unescape = unescape;
                lodash.uniqueId = uniqueId;
                lodash.upperCase = upperCase;
                lodash.upperFirst = upperFirst;
                lodash.each = forEach;
                lodash.eachRight = forEachRight;
                lodash.first = head;
                mixin(lodash, function () {
                    var source = {};
                    baseForOwn(lodash, function (func, methodName) {
                        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
                            source[methodName] = func;
                        }
                    });
                    return source;
                }(), {
                    'chain': false
                });
                lodash.VERSION = VERSION;
                arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function (methodName) {
                    lodash[methodName].placeholder = lodash;
                });
                arrayEach(['drop', 'take'], function (methodName, index) {
                    LazyWrapper.prototype[methodName] = function (n) {
                        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);
                        var result = (this || _global).__filtered__ && !index ? new LazyWrapper(this || _global) : this.clone();
                        if (result.__filtered__) {
                            result.__takeCount__ = nativeMin(n, result.__takeCount__);
                        }
                        else {
                            result.__views__.push({
                                'size': nativeMin(n, MAX_ARRAY_LENGTH),
                                'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
                            });
                        }
                        return result;
                    };
                    LazyWrapper.prototype[methodName + 'Right'] = function (n) {
                        return this.reverse()[methodName](n).reverse();
                    };
                });
                arrayEach(['filter', 'map', 'takeWhile'], function (methodName, index) {
                    var type = index + 1, isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;
                    LazyWrapper.prototype[methodName] = function (iteratee) {
                        var result = this.clone();
                        result.__iteratees__.push({
                            'iteratee': getIteratee(iteratee, 3),
                            'type': type
                        });
                        result.__filtered__ = result.__filtered__ || isFilter;
                        return result;
                    };
                });
                arrayEach(['head', 'last'], function (methodName, index) {
                    var takeName = 'take' + (index ? 'Right' : '');
                    LazyWrapper.prototype[methodName] = function () {
                        return this[takeName](1).value()[0];
                    };
                });
                arrayEach(['initial', 'tail'], function (methodName, index) {
                    var dropName = 'drop' + (index ? '' : 'Right');
                    LazyWrapper.prototype[methodName] = function () {
                        return (this || _global).__filtered__ ? new LazyWrapper(this || _global) : this[dropName](1);
                    };
                });
                LazyWrapper.prototype.compact = function () {
                    return this.filter(identity);
                };
                LazyWrapper.prototype.find = function (predicate) {
                    return this.filter(predicate).head();
                };
                LazyWrapper.prototype.findLast = function (predicate) {
                    return this.reverse().find(predicate);
                };
                LazyWrapper.prototype.invokeMap = baseRest(function (path, args) {
                    if (typeof path == 'function') {
                        return new LazyWrapper(this || _global);
                    }
                    return this.map(function (value) {
                        return baseInvoke(value, path, args);
                    });
                });
                LazyWrapper.prototype.reject = function (predicate) {
                    return this.filter(negate(getIteratee(predicate)));
                };
                LazyWrapper.prototype.slice = function (start, end) {
                    start = toInteger(start);
                    var result = this || _global;
                    if (result.__filtered__ && (start > 0 || end < 0)) {
                        return new LazyWrapper(result);
                    }
                    if (start < 0) {
                        result = result.takeRight(-start);
                    }
                    else if (start) {
                        result = result.drop(start);
                    }
                    if (end !== undefined) {
                        end = toInteger(end);
                        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
                    }
                    return result;
                };
                LazyWrapper.prototype.takeRightWhile = function (predicate) {
                    return this.reverse().takeWhile(predicate).reverse();
                };
                LazyWrapper.prototype.toArray = function () {
                    return this.take(MAX_ARRAY_LENGTH);
                };
                baseForOwn(LazyWrapper.prototype, function (func, methodName) {
                    var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName), isTaker = /^(?:head|last)$/.test(methodName), lodashFunc = lodash[isTaker ? 'take' + (methodName == 'last' ? 'Right' : '') : methodName], retUnwrapped = isTaker || /^find/.test(methodName);
                    if (!lodashFunc) {
                        return;
                    }
                    lodash.prototype[methodName] = function () {
                        var value = (this || _global).__wrapped__, args = isTaker ? [1] : arguments, isLazy = value instanceof LazyWrapper, iteratee = args[0], useLazy = isLazy || isArray(value);
                        var interceptor = function (value) {
                            var result = lodashFunc.apply(lodash, arrayPush([value], args));
                            return isTaker && chainAll ? result[0] : result;
                        };
                        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
                            isLazy = useLazy = false;
                        }
                        var chainAll = (this || _global).__chain__, isHybrid = !!(this || _global).__actions__.length, isUnwrapped = retUnwrapped && !chainAll, onlyLazy = isLazy && !isHybrid;
                        if (!retUnwrapped && useLazy) {
                            value = onlyLazy ? value : new LazyWrapper(this || _global);
                            var result = func.apply(value, args);
                            result.__actions__.push({
                                'func': thru,
                                'args': [interceptor],
                                'thisArg': undefined
                            });
                            return new LodashWrapper(result, chainAll);
                        }
                        if (isUnwrapped && onlyLazy) {
                            return func.apply(this || _global, args);
                        }
                        result = this.thru(interceptor);
                        return isUnwrapped ? isTaker ? result.value()[0] : result.value() : result;
                    };
                });
                arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function (methodName) {
                    var func = arrayProto[methodName], chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru', retUnwrapped = /^(?:pop|shift)$/.test(methodName);
                    lodash.prototype[methodName] = function () {
                        var args = arguments;
                        if (retUnwrapped && !(this || _global).__chain__) {
                            var value = this.value();
                            return func.apply(isArray(value) ? value : [], args);
                        }
                        return this[chainName](function (value) {
                            return func.apply(isArray(value) ? value : [], args);
                        });
                    };
                });
                baseForOwn(LazyWrapper.prototype, function (func, methodName) {
                    var lodashFunc = lodash[methodName];
                    if (lodashFunc) {
                        var key = lodashFunc.name + '';
                        if (!hasOwnProperty.call(realNames, key)) {
                            realNames[key] = [];
                        }
                        realNames[key].push({
                            'name': methodName,
                            'func': lodashFunc
                        });
                    }
                });
                realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
                        'name': 'wrapper',
                        'func': undefined
                    }];
                LazyWrapper.prototype.clone = lazyClone;
                LazyWrapper.prototype.reverse = lazyReverse;
                LazyWrapper.prototype.value = lazyValue;
                lodash.prototype.at = wrapperAt;
                lodash.prototype.chain = wrapperChain;
                lodash.prototype.commit = wrapperCommit;
                lodash.prototype.next = wrapperNext;
                lodash.prototype.plant = wrapperPlant;
                lodash.prototype.reverse = wrapperReverse;
                lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;
                lodash.prototype.first = lodash.prototype.head;
                if (symIterator) {
                    lodash.prototype[symIterator] = wrapperToIterator;
                }
                return lodash;
            };
            var _ = runInContext();
            if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {
                root._ = _;
                define(function () {
                    return _;
                });
            }
            else if (freeModule) {
                (freeModule.exports = _)._ = _;
                freeExports._ = _;
            }
            else {
                root._ = _;
            }
        }).call(exports);
        return module.exports;
    }
    exports_142("dew", dew);
    return {
        setters: [],
        execute: function () {
            exports = {}, _dewExec = false;
            module = {
                exports: exports
            };
            _global = typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : global;
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index.dew", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/lodash.dew"], function (exports_143, context_143) {
    "use strict";
    var __moduleName = context_143 && context_143.id;
    return {
        setters: [
            function (lodash_dew_js_1_1) {
                exports_143({
                    "dew": lodash_dew_js_1_1["dew"]
                });
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index.dew"], function (exports_144, context_144) {
    "use strict";
    var index_dew_js_1;
    var __moduleName = context_144 && context_144.id;
    return {
        setters: [
            function (index_dew_js_1_1) {
                index_dew_js_1 = index_dew_js_1_1;
            }
        ],
        execute: function () {
            exports_144("default", index_dew_js_1.dew());
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/constants", [], function (exports_145, context_145) {
    "use strict";
    var CLIENT_ALIASES, SUPPORTED_CLIENTS, POOL_CONFIG_OPTIONS;
    var __moduleName = context_145 && context_145.id;
    return {
        setters: [],
        execute: function () {
            exports_145("CLIENT_ALIASES", CLIENT_ALIASES = Object.freeze({
                pg: 'postgres',
                postgresql: 'postgres',
                sqlite: 'sqlite3',
            }));
            exports_145("SUPPORTED_CLIENTS", SUPPORTED_CLIENTS = Object.freeze([
                'mssql',
                'mysql',
                'mysql2',
                'oracledb',
                'postgres',
                'redshift',
                'sqlite3',
            ].concat(Object.keys(CLIENT_ALIASES))));
            exports_145("POOL_CONFIG_OPTIONS", POOL_CONFIG_OPTIONS = Object.freeze([
                'maxWaitingClients',
                'testOnBorrow',
                'fifo',
                'priorityRange',
                'autostart',
                'evictionRunIntervalMillis',
                'numTestsPerRun',
                'softIdleTimeoutMillis',
                'Promise',
            ]));
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/helpers", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/constants"], function (exports_146, context_146) {
    "use strict";
    var index_js_1, isFunction, isPlainObject, isTypedArray, constants_js_1;
    var __moduleName = context_146 && context_146.id;
    function normalizeArr() {
        const args = new Array(arguments.length);
        for (let i = 0; i < args.length; i++) {
            args[i] = arguments[i];
        }
        if (Array.isArray(args[0])) {
            return args[0];
        }
        return args;
    }
    exports_146("normalizeArr", normalizeArr);
    function containsUndefined(mixed) {
        let argContainsUndefined = false;
        if (isTypedArray(mixed))
            return false;
        if (mixed && isFunction(mixed.toSQL)) {
            return argContainsUndefined;
        }
        if (Array.isArray(mixed)) {
            for (let i = 0; i < mixed.length; i++) {
                if (argContainsUndefined)
                    break;
                argContainsUndefined = containsUndefined(mixed[i]);
            }
        }
        else if (isPlainObject(mixed)) {
            Object.keys(mixed).forEach((key) => {
                if (!argContainsUndefined) {
                    argContainsUndefined = containsUndefined(mixed[key]);
                }
            });
        }
        else {
            argContainsUndefined = mixed === undefined;
        }
        return argContainsUndefined;
    }
    exports_146("containsUndefined", containsUndefined);
    function getUndefinedIndices(mixed) {
        const indices = [];
        if (Array.isArray(mixed)) {
            mixed.forEach((item, index) => {
                if (containsUndefined(item)) {
                    indices.push(index);
                }
            });
        }
        else if (isPlainObject(mixed)) {
            Object.keys(mixed).forEach((key) => {
                if (containsUndefined(mixed[key])) {
                    indices.push(key);
                }
            });
        }
        else {
            indices.push(0);
        }
        return indices;
    }
    exports_146("getUndefinedIndices", getUndefinedIndices);
    function addQueryContext(Target) {
        Target.prototype.queryContext = function (context) {
            if (context === undefined) {
                return this._queryContext;
            }
            this._queryContext = context;
            return this;
        };
    }
    exports_146("addQueryContext", addQueryContext);
    function resolveClientNameWithAliases(clientName) {
        return constants_js_1.CLIENT_ALIASES[clientName] || clientName;
    }
    exports_146("resolveClientNameWithAliases", resolveClientNameWithAliases);
    return {
        setters: [
            function (index_js_1_1) {
                index_js_1 = index_js_1_1;
            },
            function (constants_js_1_1) {
                constants_js_1 = constants_js_1_1;
            }
        ],
        execute: function () {
            isFunction = index_js_1.default.isFunction;
            isPlainObject = index_js_1.default.isPlainObject;
            isTypedArray = index_js_1.default.isTypedArray;
            exports_146("default", {
                addQueryContext,
                containsUndefined,
                normalizeArr,
                resolveClientNameWithAliases,
                getUndefinedIndices,
            });
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/events", [], function (exports_147, context_147) {
    "use strict";
    var e, t, n, r, i, s, y, EventEmitter, defaultMaxListeners, init, listenerCount;
    var __moduleName = context_147 && context_147.id;
    function o() { o.init.call(this); }
    function u(e) { if ("function" != typeof e)
        throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof e); }
    function f(e) { return void 0 === e._maxListeners ? o.defaultMaxListeners : e._maxListeners; }
    function v(e, t, n, r) { var i, o, s, v; if (u(n), void 0 === (o = e._events) ? (o = e._events = Object.create(null), e._eventsCount = 0) : (void 0 !== o.newListener && (e.emit("newListener", t, n.listener ? n.listener : n), o = e._events), s = o[t]), void 0 === s)
        s = o[t] = n, ++e._eventsCount;
    else if ("function" == typeof s ? s = o[t] = r ? [n, s] : [s, n] : r ? s.unshift(n) : s.push(n), (i = f(e)) > 0 && s.length > i && !s.warned) {
        s.warned = !0;
        var a = new Error("Possible EventEmitter memory leak detected. " + s.length + " " + String(t) + " listeners added. Use emitter.setMaxListeners() to increase limit");
        a.name = "MaxListenersExceededWarning", a.emitter = e, a.type = t, a.count = s.length, v = a, console && console.warn && console.warn(v);
    } return e; }
    function a() { if (!this.fired)
        return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, 0 === arguments.length ? this.listener.call(this.target) : this.listener.apply(this.target, arguments); }
    function l(e, t, n) { var r = { fired: !1, wrapFn: void 0, target: e, type: t, listener: n }, i = a.bind(r); return i.listener = n, r.wrapFn = i, i; }
    function h(e, t, n) { var r = e._events; if (void 0 === r)
        return []; var i = r[t]; return void 0 === i ? [] : "function" == typeof i ? n ? [i.listener || i] : [i] : n ? function (e) { for (var t = new Array(e.length), n = 0; n < t.length; ++n)
        t[n] = e[n].listener || e[n]; return t; }(i) : c(i, i.length); }
    function p(e) { var t = this._events; if (void 0 !== t) {
        var n = t[e];
        if ("function" == typeof n)
            return 1;
        if (void 0 !== n)
            return n.length;
    } return 0; }
    function c(e, t) { for (var n = new Array(t), r = 0; r < t; ++r)
        n[r] = e[r]; return n; }
    return {
        setters: [],
        execute: function () {
            n = "object" == typeof Reflect ? Reflect : null, r = n && "function" == typeof n.apply ? n.apply : function (e, t, n) { return Function.prototype.apply.call(e, t, n); };
            t = n && "function" == typeof n.ownKeys ? n.ownKeys : Object.getOwnPropertySymbols ? function (e) { return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e)); } : function (e) { return Object.getOwnPropertyNames(e); };
            i = Number.isNaN || function (e) { return e != e; };
            e = o, o.EventEmitter = o, o.prototype._events = void 0, o.prototype._eventsCount = 0, o.prototype._maxListeners = void 0;
            s = 10;
            Object.defineProperty(o, "defaultMaxListeners", { enumerable: !0, get: function () { return s; }, set: function (e) { if ("number" != typeof e || e < 0 || i(e))
                    throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + e + "."); s = e; } }), o.init = function () { void 0 !== this._events && this._events !== Object.getPrototypeOf(this)._events || (this._events = Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0; }, o.prototype.setMaxListeners = function (e) { if ("number" != typeof e || e < 0 || i(e))
                throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + e + "."); return this._maxListeners = e, this; }, o.prototype.getMaxListeners = function () { return f(this); }, o.prototype.emit = function (e) { for (var t = [], n = 1; n < arguments.length; n++)
                t.push(arguments[n]); var i = "error" === e, o = this._events; if (void 0 !== o)
                i = i && void 0 === o.error;
            else if (!i)
                return !1; if (i) {
                var s;
                if (t.length > 0 && (s = t[0]), s instanceof Error)
                    throw s;
                var u = new Error("Unhandled error." + (s ? " (" + s.message + ")" : ""));
                throw u.context = s, u;
            } var f = o[e]; if (void 0 === f)
                return !1; if ("function" == typeof f)
                r(f, this, t);
            else {
                var v = f.length, a = c(f, v);
                for (n = 0; n < v; ++n)
                    r(a[n], this, t);
            } return !0; }, o.prototype.addListener = function (e, t) { return v(this, e, t, !1); }, o.prototype.on = o.prototype.addListener, o.prototype.prependListener = function (e, t) { return v(this, e, t, !0); }, o.prototype.once = function (e, t) { return u(t), this.on(e, l(this, e, t)), this; }, o.prototype.prependOnceListener = function (e, t) { return u(t), this.prependListener(e, l(this, e, t)), this; }, o.prototype.removeListener = function (e, t) { var n, r, i, o, s; if (u(t), void 0 === (r = this._events))
                return this; if (void 0 === (n = r[e]))
                return this; if (n === t || n.listener === t)
                0 == --this._eventsCount ? this._events = Object.create(null) : (delete r[e], r.removeListener && this.emit("removeListener", e, n.listener || t));
            else if ("function" != typeof n) {
                for (i = -1, o = n.length - 1; o >= 0; o--)
                    if (n[o] === t || n[o].listener === t) {
                        s = n[o].listener, i = o;
                        break;
                    }
                if (i < 0)
                    return this;
                0 === i ? n.shift() : !function (e, t) { for (; t + 1 < e.length; t++)
                    e[t] = e[t + 1]; e.pop(); }(n, i), 1 === n.length && (r[e] = n[0]), void 0 !== r.removeListener && this.emit("removeListener", e, s || t);
            } return this; }, o.prototype.off = o.prototype.removeListener, o.prototype.removeAllListeners = function (e) { var t, n, r; if (void 0 === (n = this._events))
                return this; if (void 0 === n.removeListener)
                return 0 === arguments.length ? (this._events = Object.create(null), this._eventsCount = 0) : void 0 !== n[e] && (0 == --this._eventsCount ? this._events = Object.create(null) : delete n[e]), this; if (0 === arguments.length) {
                var i, o = Object.keys(n);
                for (r = 0; r < o.length; ++r)
                    "removeListener" !== (i = o[r]) && this.removeAllListeners(i);
                return this.removeAllListeners("removeListener"), this._events = Object.create(null), this._eventsCount = 0, this;
            } if ("function" == typeof (t = n[e]))
                this.removeListener(e, t);
            else if (void 0 !== t)
                for (r = t.length - 1; r >= 0; r--)
                    this.removeListener(e, t[r]); return this; }, o.prototype.listeners = function (e) { return h(this, e, !0); }, o.prototype.rawListeners = function (e) { return h(this, e, !1); }, o.listenerCount = function (e, t) { return "function" == typeof e.listenerCount ? e.listenerCount(t) : p.call(e, t); }, o.prototype.listenerCount = p, o.prototype.eventNames = function () { return this._eventsCount > 0 ? t(this._events) : []; };
            y = e;
            EventEmitter = y.EventEmitter;
            exports_147("EventEmitter", EventEmitter);
            defaultMaxListeners = y.defaultMaxListeners;
            exports_147("defaultMaxListeners", defaultMaxListeners);
            init = y.init;
            exports_147("init", init);
            listenerCount = y.listenerCount;
            exports_147("listenerCount", listenerCount);
            exports_147("default", y);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/ms@2.1.2/index.dew", [], function (exports_148, context_148) {
    "use strict";
    var exports, _dewExec;
    var __moduleName = context_148 && context_148.id;
    function dew() {
        if (_dewExec)
            return exports;
        _dewExec = true;
        var s = 1000;
        var m = s * 60;
        var h = m * 60;
        var d = h * 24;
        var w = d * 7;
        var y = d * 365.25;
        exports = function (val, options) {
            options = options || {};
            var type = typeof val;
            if (type === 'string' && val.length > 0) {
                return parse(val);
            }
            else if (type === 'number' && isFinite(val)) {
                return options.long ? fmtLong(val) : fmtShort(val);
            }
            throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));
        };
        function parse(str) {
            str = String(str);
            if (str.length > 100) {
                return;
            }
            var match = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(str);
            if (!match) {
                return;
            }
            var n = parseFloat(match[1]);
            var type = (match[2] || 'ms').toLowerCase();
            switch (type) {
                case 'years':
                case 'year':
                case 'yrs':
                case 'yr':
                case 'y':
                    return n * y;
                case 'weeks':
                case 'week':
                case 'w':
                    return n * w;
                case 'days':
                case 'day':
                case 'd':
                    return n * d;
                case 'hours':
                case 'hour':
                case 'hrs':
                case 'hr':
                case 'h':
                    return n * h;
                case 'minutes':
                case 'minute':
                case 'mins':
                case 'min':
                case 'm':
                    return n * m;
                case 'seconds':
                case 'second':
                case 'secs':
                case 'sec':
                case 's':
                    return n * s;
                case 'milliseconds':
                case 'millisecond':
                case 'msecs':
                case 'msec':
                case 'ms':
                    return n;
                default:
                    return undefined;
            }
        }
        function fmtShort(ms) {
            var msAbs = Math.abs(ms);
            if (msAbs >= d) {
                return Math.round(ms / d) + 'd';
            }
            if (msAbs >= h) {
                return Math.round(ms / h) + 'h';
            }
            if (msAbs >= m) {
                return Math.round(ms / m) + 'm';
            }
            if (msAbs >= s) {
                return Math.round(ms / s) + 's';
            }
            return ms + 'ms';
        }
        function fmtLong(ms) {
            var msAbs = Math.abs(ms);
            if (msAbs >= d) {
                return plural(ms, msAbs, d, 'day');
            }
            if (msAbs >= h) {
                return plural(ms, msAbs, h, 'hour');
            }
            if (msAbs >= m) {
                return plural(ms, msAbs, m, 'minute');
            }
            if (msAbs >= s) {
                return plural(ms, msAbs, s, 'second');
            }
            return ms + ' ms';
        }
        function plural(ms, msAbs, n, name) {
            var isPlural = msAbs >= n * 1.5;
            return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');
        }
        return exports;
    }
    exports_148("dew", dew);
    return {
        setters: [],
        execute: function () {
            exports = {}, _dewExec = false;
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/debug@4.1.1/src/common.dew", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/ms@2.1.2/index.dew"], function (exports_149, context_149) {
    "use strict";
    var index_dew_js_2, exports, _dewExec, _global;
    var __moduleName = context_149 && context_149.id;
    function dew() {
        if (_dewExec)
            return exports;
        _dewExec = true;
        function setup(env) {
            createDebug.debug = createDebug;
            createDebug.default = createDebug;
            createDebug.coerce = coerce;
            createDebug.disable = disable;
            createDebug.enable = enable;
            createDebug.enabled = enabled;
            createDebug.humanize = index_dew_js_2.dew();
            Object.keys(env).forEach(key => {
                createDebug[key] = env[key];
            });
            createDebug.instances = [];
            createDebug.names = [];
            createDebug.skips = [];
            createDebug.formatters = {};
            function selectColor(namespace) {
                let hash = 0;
                for (let i = 0; i < namespace.length; i++) {
                    hash = (hash << 5) - hash + namespace.charCodeAt(i);
                    hash |= 0;
                }
                return createDebug.colors[Math.abs(hash) % createDebug.colors.length];
            }
            createDebug.selectColor = selectColor;
            function createDebug(namespace) {
                let prevTime;
                function debug(...args) {
                    if (!debug.enabled) {
                        return;
                    }
                    const self = debug;
                    const curr = Number(new Date());
                    const ms = curr - (prevTime || curr);
                    self.diff = ms;
                    self.prev = prevTime;
                    self.curr = curr;
                    prevTime = curr;
                    args[0] = createDebug.coerce(args[0]);
                    if (typeof args[0] !== 'string') {
                        args.unshift('%O');
                    }
                    let index = 0;
                    args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {
                        if (match === '%%') {
                            return match;
                        }
                        index++;
                        const formatter = createDebug.formatters[format];
                        if (typeof formatter === 'function') {
                            const val = args[index];
                            match = formatter.call(self, val);
                            args.splice(index, 1);
                            index--;
                        }
                        return match;
                    });
                    createDebug.formatArgs.call(self, args);
                    const logFn = self.log || createDebug.log;
                    logFn.apply(self, args);
                }
                debug.namespace = namespace;
                debug.enabled = createDebug.enabled(namespace);
                debug.useColors = createDebug.useColors();
                debug.color = selectColor(namespace);
                debug.destroy = destroy;
                debug.extend = extend;
                if (typeof createDebug.init === 'function') {
                    createDebug.init(debug);
                }
                createDebug.instances.push(debug);
                return debug;
            }
            function destroy() {
                const index = createDebug.instances.indexOf(this || _global);
                if (index !== -1) {
                    createDebug.instances.splice(index, 1);
                    return true;
                }
                return false;
            }
            function extend(namespace, delimiter) {
                const newDebug = createDebug((this || _global).namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);
                newDebug.log = (this || _global).log;
                return newDebug;
            }
            function enable(namespaces) {
                createDebug.save(namespaces);
                createDebug.names = [];
                createDebug.skips = [];
                let i;
                const split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
                const len = split.length;
                for (i = 0; i < len; i++) {
                    if (!split[i]) {
                        continue;
                    }
                    namespaces = split[i].replace(/\*/g, '.*?');
                    if (namespaces[0] === '-') {
                        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
                    }
                    else {
                        createDebug.names.push(new RegExp('^' + namespaces + '$'));
                    }
                }
                for (i = 0; i < createDebug.instances.length; i++) {
                    const instance = createDebug.instances[i];
                    instance.enabled = createDebug.enabled(instance.namespace);
                }
            }
            function disable() {
                const namespaces = [...createDebug.names.map(toNamespace), ...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)].join(',');
                createDebug.enable('');
                return namespaces;
            }
            function enabled(name) {
                if (name[name.length - 1] === '*') {
                    return true;
                }
                let i;
                let len;
                for (i = 0, len = createDebug.skips.length; i < len; i++) {
                    if (createDebug.skips[i].test(name)) {
                        return false;
                    }
                }
                for (i = 0, len = createDebug.names.length; i < len; i++) {
                    if (createDebug.names[i].test(name)) {
                        return true;
                    }
                }
                return false;
            }
            function toNamespace(regexp) {
                return regexp.toString().substring(2, regexp.toString().length - 2).replace(/\.\*\?$/, '*');
            }
            function coerce(val) {
                if (val instanceof Error) {
                    return val.stack || val.message;
                }
                return val;
            }
            createDebug.enable(createDebug.load());
            return createDebug;
        }
        exports = setup;
        return exports;
    }
    exports_149("dew", dew);
    return {
        setters: [
            function (index_dew_js_2_1) {
                index_dew_js_2 = index_dew_js_2_1;
            }
        ],
        execute: function () {
            exports = {}, _dewExec = false;
            _global = typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : global;
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/process", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/chunk-0c2d1322"], function (exports_150, context_150) {
    "use strict";
    var __moduleName = context_150 && context_150.id;
    return {
        setters: [
            function (chunk_0c2d1322_js_2_1) {
                exports_150({
                    "addListener": chunk_0c2d1322_js_2_1["a"],
                    "argv": chunk_0c2d1322_js_2_1["b"],
                    "binding": chunk_0c2d1322_js_2_1["c"],
                    "browser": chunk_0c2d1322_js_2_1["d"],
                    "chdir": chunk_0c2d1322_js_2_1["e"],
                    "cwd": chunk_0c2d1322_js_2_1["f"],
                    "default": chunk_0c2d1322_js_2_1["h"],
                    "emit": chunk_0c2d1322_js_2_1["g"],
                    "env": chunk_0c2d1322_js_2_1["i"],
                    "listeners": chunk_0c2d1322_js_2_1["l"],
                    "nextTick": chunk_0c2d1322_js_2_1["n"],
                    "off": chunk_0c2d1322_js_2_1["o"],
                    "on": chunk_0c2d1322_js_2_1["j"],
                    "once": chunk_0c2d1322_js_2_1["k"],
                    "prependListener": chunk_0c2d1322_js_2_1["p"],
                    "prependOnceListener": chunk_0c2d1322_js_2_1["m"],
                    "removeAllListeners": chunk_0c2d1322_js_2_1["r"],
                    "removeListener": chunk_0c2d1322_js_2_1["q"],
                    "title": chunk_0c2d1322_js_2_1["t"],
                    "umask": chunk_0c2d1322_js_2_1["u"],
                    "version": chunk_0c2d1322_js_2_1["v"],
                    "versions": chunk_0c2d1322_js_2_1["s"]
                });
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/debug@4.1.1/src/browser.dew", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/debug@4.1.1/src/common.dew", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/process"], function (exports_151, context_151) {
    "use strict";
    var common_dew_js_1, process_js_1, exports, _dewExec, _global;
    var __moduleName = context_151 && context_151.id;
    function dew() {
        if (_dewExec)
            return exports;
        _dewExec = true;
        var process = process_js_1.default;
        exports.log = log;
        exports.formatArgs = formatArgs;
        exports.save = save;
        exports.load = load;
        exports.useColors = useColors;
        exports.storage = localstorage();
        exports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];
        function useColors() {
            if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {
                return true;
            }
            if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
                return false;
            }
            return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance ||
                typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) ||
                typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 ||
                typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
        }
        function formatArgs(args) {
            args[0] = ((this || _global).useColors ? '%c' : '') + (this || _global).namespace + ((this || _global).useColors ? ' %c' : ' ') + args[0] + ((this || _global).useColors ? '%c ' : ' ') + '+' + exports.humanize((this || _global).diff);
            if (!(this || _global).useColors) {
                return;
            }
            const c = 'color: ' + (this || _global).color;
            args.splice(1, 0, c, 'color: inherit');
            let index = 0;
            let lastC = 0;
            args[0].replace(/%[a-zA-Z%]/g, match => {
                if (match === '%%') {
                    return;
                }
                index++;
                if (match === '%c') {
                    lastC = index;
                }
            });
            args.splice(lastC, 0, c);
        }
        function log(...args) {
            return typeof console === 'object' && console.log && console.log(...args);
        }
        function save(namespaces) {
            try {
                if (namespaces) {
                    exports.storage.setItem('debug', namespaces);
                }
                else {
                    exports.storage.removeItem('debug');
                }
            }
            catch (error) {
            }
        }
        function load() {
            let r;
            try {
                r = exports.storage.getItem('debug');
            }
            catch (error) { }
            if (!r && typeof process !== 'undefined' && 'env' in process) {
                r = process.env.DEBUG;
            }
            return r;
        }
        function localstorage() {
            try {
                return localStorage;
            }
            catch (error) {
            }
        }
        exports = common_dew_js_1.dew()(exports);
        const { formatters } = exports;
        formatters.j = function (v) {
            try {
                return JSON.stringify(v);
            }
            catch (error) {
                return '[UnexpectedJSONParseError]: ' + error.message;
            }
        };
        return exports;
    }
    exports_151("dew", dew);
    return {
        setters: [
            function (common_dew_js_1_1) {
                common_dew_js_1 = common_dew_js_1_1;
            },
            function (process_js_1_1) {
                process_js_1 = process_js_1_1;
            }
        ],
        execute: function () {
            exports = {}, _dewExec = false;
            _global = typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : global;
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/tty", [], function (exports_152, context_152) {
    "use strict";
    var t, ReadStream, WriteStream, isatty;
    var __moduleName = context_152 && context_152.id;
    return {
        setters: [],
        execute: function () {
            t = {};
            t.isatty = function () { return !1; }, t.ReadStream = function () { throw new Error("tty.ReadStream is not implemented"); }, t.WriteStream = function () { throw new Error("tty.WriteStream is not implemented"); };
            ReadStream = t.ReadStream;
            exports_152("ReadStream", ReadStream);
            WriteStream = t.WriteStream;
            exports_152("WriteStream", WriteStream);
            isatty = t.isatty;
            exports_152("isatty", isatty);
            exports_152("default", t);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/debug@4.1.1/src/node.dew", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/tty", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/util", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/debug@4.1.1/src/common.dew", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/process"], function (exports_153, context_153) {
    "use strict";
    var tty_js_1, util_js_2, common_dew_js_2, process_js_2, exports, _dewExec, _global;
    var __moduleName = context_153 && context_153.id;
    function dew() {
        if (_dewExec)
            return exports;
        _dewExec = true;
        var process = process_js_2.default;
        const tty = tty_js_1.default;
        const util = util_js_2.default;
        exports.init = init;
        exports.log = log;
        exports.formatArgs = formatArgs;
        exports.save = save;
        exports.load = load;
        exports.useColors = useColors;
        exports.colors = [6, 2, 3, 4, 5, 1];
        try {
        }
        catch (error) { }
        exports.inspectOpts = Object.keys(process.env).filter(key => {
            return /^debug_/i.test(key);
        }).reduce((obj, key) => {
            const prop = key.substring(6).toLowerCase().replace(/_([a-z])/g, (_, k) => {
                return k.toUpperCase();
            });
            let val = process.env[key];
            if (/^(yes|on|true|enabled)$/i.test(val)) {
                val = true;
            }
            else if (/^(no|off|false|disabled)$/i.test(val)) {
                val = false;
            }
            else if (val === 'null') {
                val = null;
            }
            else {
                val = Number(val);
            }
            obj[prop] = val;
            return obj;
        }, {});
        function useColors() {
            return 'colors' in exports.inspectOpts ? Boolean(exports.inspectOpts.colors) : tty.isatty(process.stderr.fd);
        }
        function formatArgs(args) {
            const { namespace: name, useColors } = this || _global;
            if (useColors) {
                const c = (this || _global).color;
                const colorCode = '\u001B[3' + (c < 8 ? c : '8;5;' + c);
                const prefix = `  ${colorCode};1m${name} \u001B[0m`;
                args[0] = prefix + args[0].split('\n').join('\n' + prefix);
                args.push(colorCode + 'm+' + exports.humanize((this || _global).diff) + '\u001B[0m');
            }
            else {
                args[0] = getDate() + name + ' ' + args[0];
            }
        }
        function getDate() {
            if (exports.inspectOpts.hideDate) {
                return '';
            }
            return new Date().toISOString() + ' ';
        }
        function log(...args) {
            return process.stderr.write(util.format(...args) + '\n');
        }
        function save(namespaces) {
            if (namespaces) {
                process.env.DEBUG = namespaces;
            }
            else {
                delete process.env.DEBUG;
            }
        }
        function load() {
            return process.env.DEBUG;
        }
        function init(debug) {
            debug.inspectOpts = {};
            const keys = Object.keys(exports.inspectOpts);
            for (let i = 0; i < keys.length; i++) {
                debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];
            }
        }
        exports = common_dew_js_2.dew()(exports);
        const { formatters } = exports;
        formatters.o = function (v) {
            (this || _global).inspectOpts.colors = (this || _global).useColors;
            return util.inspect(v, (this || _global).inspectOpts).replace(/\s*\n\s*/g, ' ');
        };
        formatters.O = function (v) {
            (this || _global).inspectOpts.colors = (this || _global).useColors;
            return util.inspect(v, (this || _global).inspectOpts);
        };
        return exports;
    }
    exports_153("dew", dew);
    return {
        setters: [
            function (tty_js_1_1) {
                tty_js_1 = tty_js_1_1;
            },
            function (util_js_2_1) {
                util_js_2 = util_js_2_1;
            },
            function (common_dew_js_2_1) {
                common_dew_js_2 = common_dew_js_2_1;
            },
            function (process_js_2_1) {
                process_js_2 = process_js_2_1;
            }
        ],
        execute: function () {
            exports = {}, _dewExec = false;
            _global = typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : global;
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/debug@4.1.1/src/index.dew", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/debug@4.1.1/src/browser.dew", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/debug@4.1.1/src/node.dew", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/process"], function (exports_154, context_154) {
    "use strict";
    var browser_dew_js_1, node_dew_js_1, process_js_3, exports, _dewExec;
    var __moduleName = context_154 && context_154.id;
    function dew() {
        if (_dewExec)
            return exports;
        _dewExec = true;
        var process = process_js_3.default;
        if (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {
            exports = browser_dew_js_1.dew();
        }
        else {
            exports = node_dew_js_1.dew();
        }
        return exports;
    }
    exports_154("dew", dew);
    return {
        setters: [
            function (browser_dew_js_1_1) {
                browser_dew_js_1 = browser_dew_js_1_1;
            },
            function (node_dew_js_1_1) {
                node_dew_js_1 = node_dew_js_1_1;
            },
            function (process_js_3_1) {
                process_js_3 = process_js_3_1;
            }
        ],
        execute: function () {
            exports = {}, _dewExec = false;
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/debug@4.1.1/src/index", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/debug@4.1.1/src/index.dew"], function (exports_155, context_155) {
    "use strict";
    var index_dew_js_3;
    var __moduleName = context_155 && context_155.id;
    return {
        setters: [
            function (index_dew_js_3_1) {
                index_dew_js_3 = index_dew_js_3_1;
            }
        ],
        execute: function () {
            exports_155("default", index_dew_js_3.dew());
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/util/save-async-stack", [], function (exports_156, context_156) {
    "use strict";
    var __moduleName = context_156 && context_156.id;
    function saveAsyncStack(instance, lines) {
        if (instance.client.config.asyncStackTraces) {
            const stackByLines = new Error().stack.split('\n');
            stackByLines.splice(0, lines);
            instance._asyncStack = stackByLines;
        }
    }
    exports_156("default", saveAsyncStack);
    return {
        setters: [],
        execute: function () {
            ;
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/uuid/_common", [], function (exports_157, context_157) {
    "use strict";
    var __moduleName = context_157 && context_157.id;
    function bytesToUuid(bytes) {
        const bits = [...bytes].map((bit) => {
            const s = bit.toString(16);
            return bit < 0x10 ? "0" + s : s;
        });
        return [
            ...bits.slice(0, 4),
            "-",
            ...bits.slice(4, 6),
            "-",
            ...bits.slice(6, 8),
            "-",
            ...bits.slice(8, 10),
            "-",
            ...bits.slice(10, 16),
        ].join("");
    }
    exports_157("bytesToUuid", bytesToUuid);
    function uuidToBytes(uuid) {
        const bytes = [];
        uuid.replace(/[a-fA-F0-9]{2}/g, (hex) => {
            bytes.push(parseInt(hex, 16));
            return "";
        });
        return bytes;
    }
    exports_157("uuidToBytes", uuidToBytes);
    function stringToBytes(str) {
        str = unescape(encodeURIComponent(str));
        const bytes = new Array(str.length);
        for (let i = 0; i < str.length; i++) {
            bytes[i] = str.charCodeAt(i);
        }
        return bytes;
    }
    exports_157("stringToBytes", stringToBytes);
    function createBuffer(content) {
        const arrayBuffer = new ArrayBuffer(content.length);
        const uint8Array = new Uint8Array(arrayBuffer);
        for (let i = 0; i < content.length; i++) {
            uint8Array[i] = content[i];
        }
        return arrayBuffer;
    }
    exports_157("createBuffer", createBuffer);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/uuid/v1", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/uuid/_common"], function (exports_158, context_158) {
    "use strict";
    var _common_ts_1, UUID_RE, _nodeId, _clockseq, _lastMSecs, _lastNSecs;
    var __moduleName = context_158 && context_158.id;
    function validate(id) {
        return UUID_RE.test(id);
    }
    exports_158("validate", validate);
    function generate(options, buf, offset) {
        let i = (buf && offset) || 0;
        const b = buf || [];
        options = options || {};
        let node = options.node || _nodeId;
        let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;
        if (node == null || clockseq == null) {
            const seedBytes = options.random ||
                options.rng ||
                crypto.getRandomValues(new Uint8Array(16));
            if (node == null) {
                node = _nodeId = [
                    seedBytes[0] | 0x01,
                    seedBytes[1],
                    seedBytes[2],
                    seedBytes[3],
                    seedBytes[4],
                    seedBytes[5],
                ];
            }
            if (clockseq == null) {
                clockseq = _clockseq = ((seedBytes[6] << 8) | seedBytes[7]) & 0x3fff;
            }
        }
        let msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();
        let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;
        const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000;
        if (dt < 0 && options.clockseq === undefined) {
            clockseq = (clockseq + 1) & 0x3fff;
        }
        if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {
            nsecs = 0;
        }
        if (nsecs >= 10000) {
            throw new Error("Can't create more than 10M uuids/sec");
        }
        _lastMSecs = msecs;
        _lastNSecs = nsecs;
        _clockseq = clockseq;
        msecs += 12219292800000;
        const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
        b[i++] = (tl >>> 24) & 0xff;
        b[i++] = (tl >>> 16) & 0xff;
        b[i++] = (tl >>> 8) & 0xff;
        b[i++] = tl & 0xff;
        const tmh = ((msecs / 0x100000000) * 10000) & 0xfffffff;
        b[i++] = (tmh >>> 8) & 0xff;
        b[i++] = tmh & 0xff;
        b[i++] = ((tmh >>> 24) & 0xf) | 0x10;
        b[i++] = (tmh >>> 16) & 0xff;
        b[i++] = (clockseq >>> 8) | 0x80;
        b[i++] = clockseq & 0xff;
        for (let n = 0; n < 6; ++n) {
            b[i + n] = node[n];
        }
        return buf ? buf : _common_ts_1.bytesToUuid(b);
    }
    exports_158("generate", generate);
    return {
        setters: [
            function (_common_ts_1_1) {
                _common_ts_1 = _common_ts_1_1;
            }
        ],
        execute: function () {
            UUID_RE = new RegExp("^[0-9a-f]{8}-[0-9a-f]{4}-1[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$", "i");
            _lastMSecs = 0;
            _lastNSecs = 0;
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/uuid/v4", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/uuid/_common"], function (exports_159, context_159) {
    "use strict";
    var _common_ts_2, UUID_RE;
    var __moduleName = context_159 && context_159.id;
    function validate(id) {
        return UUID_RE.test(id);
    }
    exports_159("validate", validate);
    function generate() {
        const rnds = crypto.getRandomValues(new Uint8Array(16));
        rnds[6] = (rnds[6] & 0x0f) | 0x40;
        rnds[8] = (rnds[8] & 0x3f) | 0x80;
        return _common_ts_2.bytesToUuid(rnds);
    }
    exports_159("generate", generate);
    return {
        setters: [
            function (_common_ts_2_1) {
                _common_ts_2 = _common_ts_2_1;
            }
        ],
        execute: function () {
            UUID_RE = new RegExp("^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$", "i");
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/hash/sha1", [], function (exports_160, context_160) {
    "use strict";
    var HEX_CHARS, EXTRA, SHIFT, blocks, Sha1;
    var __moduleName = context_160 && context_160.id;
    return {
        setters: [],
        execute: function () {
            HEX_CHARS = "0123456789abcdef".split("");
            EXTRA = Uint32Array.of(-2147483648, 8388608, 32768, 128);
            SHIFT = Uint32Array.of(24, 16, 8, 0);
            blocks = new Uint32Array(80);
            Sha1 = class Sha1 {
                constructor(sharedMemory = false) {
                    this.#h0 = 0x67452301;
                    this.#h1 = 0xefcdab89;
                    this.#h2 = 0x98badcfe;
                    this.#h3 = 0x10325476;
                    this.#h4 = 0xc3d2e1f0;
                    this.#lastByteIndex = 0;
                    if (sharedMemory) {
                        this.#blocks = blocks.fill(0, 0, 17);
                    }
                    else {
                        this.#blocks = new Uint32Array(80);
                    }
                    this.#h0 = 0x67452301;
                    this.#h1 = 0xefcdab89;
                    this.#h2 = 0x98badcfe;
                    this.#h3 = 0x10325476;
                    this.#h4 = 0xc3d2e1f0;
                    this.#block = this.#start = this.#bytes = this.#hBytes = 0;
                    this.#finalized = this.#hashed = false;
                }
                #blocks;
                #block;
                #start;
                #bytes;
                #hBytes;
                #finalized;
                #hashed;
                #h0;
                #h1;
                #h2;
                #h3;
                #h4;
                #lastByteIndex;
                update(data) {
                    if (this.#finalized) {
                        return this;
                    }
                    let notString = true;
                    let message;
                    if (data instanceof ArrayBuffer) {
                        message = new Uint8Array(data);
                    }
                    else if (ArrayBuffer.isView(data)) {
                        message = new Uint8Array(data.buffer);
                    }
                    else {
                        notString = false;
                        message = String(data);
                    }
                    let code;
                    let index = 0;
                    let i;
                    const start = this.#start;
                    const length = message.length || 0;
                    const blocks = this.#blocks;
                    while (index < length) {
                        if (this.#hashed) {
                            this.#hashed = false;
                            blocks[0] = this.#block;
                            blocks.fill(0, 1, 17);
                        }
                        if (notString) {
                            for (i = start; index < length && i < 64; ++index) {
                                blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];
                            }
                        }
                        else {
                            for (i = start; index < length && i < 64; ++index) {
                                code = message.charCodeAt(index);
                                if (code < 0x80) {
                                    blocks[i >> 2] |= code << SHIFT[i++ & 3];
                                }
                                else if (code < 0x800) {
                                    blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];
                                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
                                }
                                else if (code < 0xd800 || code >= 0xe000) {
                                    blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];
                                    blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
                                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
                                }
                                else {
                                    code =
                                        0x10000 +
                                            (((code & 0x3ff) << 10) |
                                                (message.charCodeAt(++index) & 0x3ff));
                                    blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];
                                    blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];
                                    blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
                                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
                                }
                            }
                        }
                        this.#lastByteIndex = i;
                        this.#bytes += i - start;
                        if (i >= 64) {
                            this.#block = blocks[16];
                            this.#start = i - 64;
                            this.hash();
                            this.#hashed = true;
                        }
                        else {
                            this.#start = i;
                        }
                    }
                    if (this.#bytes > 4294967295) {
                        this.#hBytes += (this.#bytes / 4294967296) >>> 0;
                        this.#bytes = this.#bytes >>> 0;
                    }
                    return this;
                }
                finalize() {
                    if (this.#finalized) {
                        return;
                    }
                    this.#finalized = true;
                    const blocks = this.#blocks;
                    const i = this.#lastByteIndex;
                    blocks[16] = this.#block;
                    blocks[i >> 2] |= EXTRA[i & 3];
                    this.#block = blocks[16];
                    if (i >= 56) {
                        if (!this.#hashed) {
                            this.hash();
                        }
                        blocks[0] = this.#block;
                        blocks.fill(0, 1, 17);
                    }
                    blocks[14] = (this.#hBytes << 3) | (this.#bytes >>> 29);
                    blocks[15] = this.#bytes << 3;
                    this.hash();
                }
                hash() {
                    let a = this.#h0;
                    let b = this.#h1;
                    let c = this.#h2;
                    let d = this.#h3;
                    let e = this.#h4;
                    let f, j, t;
                    const blocks = this.#blocks;
                    for (j = 16; j < 80; ++j) {
                        t = blocks[j - 3] ^ blocks[j - 8] ^ blocks[j - 14] ^ blocks[j - 16];
                        blocks[j] = (t << 1) | (t >>> 31);
                    }
                    for (j = 0; j < 20; j += 5) {
                        f = (b & c) | (~b & d);
                        t = (a << 5) | (a >>> 27);
                        e = (t + f + e + 1518500249 + blocks[j]) >>> 0;
                        b = (b << 30) | (b >>> 2);
                        f = (a & b) | (~a & c);
                        t = (e << 5) | (e >>> 27);
                        d = (t + f + d + 1518500249 + blocks[j + 1]) >>> 0;
                        a = (a << 30) | (a >>> 2);
                        f = (e & a) | (~e & b);
                        t = (d << 5) | (d >>> 27);
                        c = (t + f + c + 1518500249 + blocks[j + 2]) >>> 0;
                        e = (e << 30) | (e >>> 2);
                        f = (d & e) | (~d & a);
                        t = (c << 5) | (c >>> 27);
                        b = (t + f + b + 1518500249 + blocks[j + 3]) >>> 0;
                        d = (d << 30) | (d >>> 2);
                        f = (c & d) | (~c & e);
                        t = (b << 5) | (b >>> 27);
                        a = (t + f + a + 1518500249 + blocks[j + 4]) >>> 0;
                        c = (c << 30) | (c >>> 2);
                    }
                    for (; j < 40; j += 5) {
                        f = b ^ c ^ d;
                        t = (a << 5) | (a >>> 27);
                        e = (t + f + e + 1859775393 + blocks[j]) >>> 0;
                        b = (b << 30) | (b >>> 2);
                        f = a ^ b ^ c;
                        t = (e << 5) | (e >>> 27);
                        d = (t + f + d + 1859775393 + blocks[j + 1]) >>> 0;
                        a = (a << 30) | (a >>> 2);
                        f = e ^ a ^ b;
                        t = (d << 5) | (d >>> 27);
                        c = (t + f + c + 1859775393 + blocks[j + 2]) >>> 0;
                        e = (e << 30) | (e >>> 2);
                        f = d ^ e ^ a;
                        t = (c << 5) | (c >>> 27);
                        b = (t + f + b + 1859775393 + blocks[j + 3]) >>> 0;
                        d = (d << 30) | (d >>> 2);
                        f = c ^ d ^ e;
                        t = (b << 5) | (b >>> 27);
                        a = (t + f + a + 1859775393 + blocks[j + 4]) >>> 0;
                        c = (c << 30) | (c >>> 2);
                    }
                    for (; j < 60; j += 5) {
                        f = (b & c) | (b & d) | (c & d);
                        t = (a << 5) | (a >>> 27);
                        e = (t + f + e - 1894007588 + blocks[j]) >>> 0;
                        b = (b << 30) | (b >>> 2);
                        f = (a & b) | (a & c) | (b & c);
                        t = (e << 5) | (e >>> 27);
                        d = (t + f + d - 1894007588 + blocks[j + 1]) >>> 0;
                        a = (a << 30) | (a >>> 2);
                        f = (e & a) | (e & b) | (a & b);
                        t = (d << 5) | (d >>> 27);
                        c = (t + f + c - 1894007588 + blocks[j + 2]) >>> 0;
                        e = (e << 30) | (e >>> 2);
                        f = (d & e) | (d & a) | (e & a);
                        t = (c << 5) | (c >>> 27);
                        b = (t + f + b - 1894007588 + blocks[j + 3]) >>> 0;
                        d = (d << 30) | (d >>> 2);
                        f = (c & d) | (c & e) | (d & e);
                        t = (b << 5) | (b >>> 27);
                        a = (t + f + a - 1894007588 + blocks[j + 4]) >>> 0;
                        c = (c << 30) | (c >>> 2);
                    }
                    for (; j < 80; j += 5) {
                        f = b ^ c ^ d;
                        t = (a << 5) | (a >>> 27);
                        e = (t + f + e - 899497514 + blocks[j]) >>> 0;
                        b = (b << 30) | (b >>> 2);
                        f = a ^ b ^ c;
                        t = (e << 5) | (e >>> 27);
                        d = (t + f + d - 899497514 + blocks[j + 1]) >>> 0;
                        a = (a << 30) | (a >>> 2);
                        f = e ^ a ^ b;
                        t = (d << 5) | (d >>> 27);
                        c = (t + f + c - 899497514 + blocks[j + 2]) >>> 0;
                        e = (e << 30) | (e >>> 2);
                        f = d ^ e ^ a;
                        t = (c << 5) | (c >>> 27);
                        b = (t + f + b - 899497514 + blocks[j + 3]) >>> 0;
                        d = (d << 30) | (d >>> 2);
                        f = c ^ d ^ e;
                        t = (b << 5) | (b >>> 27);
                        a = (t + f + a - 899497514 + blocks[j + 4]) >>> 0;
                        c = (c << 30) | (c >>> 2);
                    }
                    this.#h0 = (this.#h0 + a) >>> 0;
                    this.#h1 = (this.#h1 + b) >>> 0;
                    this.#h2 = (this.#h2 + c) >>> 0;
                    this.#h3 = (this.#h3 + d) >>> 0;
                    this.#h4 = (this.#h4 + e) >>> 0;
                }
                hex() {
                    this.finalize();
                    const h0 = this.#h0;
                    const h1 = this.#h1;
                    const h2 = this.#h2;
                    const h3 = this.#h3;
                    const h4 = this.#h4;
                    return (HEX_CHARS[(h0 >> 28) & 0x0f] +
                        HEX_CHARS[(h0 >> 24) & 0x0f] +
                        HEX_CHARS[(h0 >> 20) & 0x0f] +
                        HEX_CHARS[(h0 >> 16) & 0x0f] +
                        HEX_CHARS[(h0 >> 12) & 0x0f] +
                        HEX_CHARS[(h0 >> 8) & 0x0f] +
                        HEX_CHARS[(h0 >> 4) & 0x0f] +
                        HEX_CHARS[h0 & 0x0f] +
                        HEX_CHARS[(h1 >> 28) & 0x0f] +
                        HEX_CHARS[(h1 >> 24) & 0x0f] +
                        HEX_CHARS[(h1 >> 20) & 0x0f] +
                        HEX_CHARS[(h1 >> 16) & 0x0f] +
                        HEX_CHARS[(h1 >> 12) & 0x0f] +
                        HEX_CHARS[(h1 >> 8) & 0x0f] +
                        HEX_CHARS[(h1 >> 4) & 0x0f] +
                        HEX_CHARS[h1 & 0x0f] +
                        HEX_CHARS[(h2 >> 28) & 0x0f] +
                        HEX_CHARS[(h2 >> 24) & 0x0f] +
                        HEX_CHARS[(h2 >> 20) & 0x0f] +
                        HEX_CHARS[(h2 >> 16) & 0x0f] +
                        HEX_CHARS[(h2 >> 12) & 0x0f] +
                        HEX_CHARS[(h2 >> 8) & 0x0f] +
                        HEX_CHARS[(h2 >> 4) & 0x0f] +
                        HEX_CHARS[h2 & 0x0f] +
                        HEX_CHARS[(h3 >> 28) & 0x0f] +
                        HEX_CHARS[(h3 >> 24) & 0x0f] +
                        HEX_CHARS[(h3 >> 20) & 0x0f] +
                        HEX_CHARS[(h3 >> 16) & 0x0f] +
                        HEX_CHARS[(h3 >> 12) & 0x0f] +
                        HEX_CHARS[(h3 >> 8) & 0x0f] +
                        HEX_CHARS[(h3 >> 4) & 0x0f] +
                        HEX_CHARS[h3 & 0x0f] +
                        HEX_CHARS[(h4 >> 28) & 0x0f] +
                        HEX_CHARS[(h4 >> 24) & 0x0f] +
                        HEX_CHARS[(h4 >> 20) & 0x0f] +
                        HEX_CHARS[(h4 >> 16) & 0x0f] +
                        HEX_CHARS[(h4 >> 12) & 0x0f] +
                        HEX_CHARS[(h4 >> 8) & 0x0f] +
                        HEX_CHARS[(h4 >> 4) & 0x0f] +
                        HEX_CHARS[h4 & 0x0f]);
                }
                toString() {
                    return this.hex();
                }
                digest() {
                    this.finalize();
                    const h0 = this.#h0;
                    const h1 = this.#h1;
                    const h2 = this.#h2;
                    const h3 = this.#h3;
                    const h4 = this.#h4;
                    return [
                        (h0 >> 24) & 0xff,
                        (h0 >> 16) & 0xff,
                        (h0 >> 8) & 0xff,
                        h0 & 0xff,
                        (h1 >> 24) & 0xff,
                        (h1 >> 16) & 0xff,
                        (h1 >> 8) & 0xff,
                        h1 & 0xff,
                        (h2 >> 24) & 0xff,
                        (h2 >> 16) & 0xff,
                        (h2 >> 8) & 0xff,
                        h2 & 0xff,
                        (h3 >> 24) & 0xff,
                        (h3 >> 16) & 0xff,
                        (h3 >> 8) & 0xff,
                        h3 & 0xff,
                        (h4 >> 24) & 0xff,
                        (h4 >> 16) & 0xff,
                        (h4 >> 8) & 0xff,
                        h4 & 0xff,
                    ];
                }
                array() {
                    return this.digest();
                }
                arrayBuffer() {
                    this.finalize();
                    return Uint32Array.of(this.#h0, this.#h1, this.#h2, this.#h3, this.#h4)
                        .buffer;
                }
            };
            exports_160("Sha1", Sha1);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/node/util", [], function (exports_161, context_161) {
    "use strict";
    var __moduleName = context_161 && context_161.id;
    function isArray(value) {
        return Array.isArray(value);
    }
    exports_161("isArray", isArray);
    function isBoolean(value) {
        return typeof value === "boolean" || value instanceof Boolean;
    }
    exports_161("isBoolean", isBoolean);
    function isNull(value) {
        return value === null;
    }
    exports_161("isNull", isNull);
    function isNullOrUndefined(value) {
        return value === null || value === undefined;
    }
    exports_161("isNullOrUndefined", isNullOrUndefined);
    function isNumber(value) {
        return typeof value === "number" || value instanceof Number;
    }
    exports_161("isNumber", isNumber);
    function isString(value) {
        return typeof value === "string" || value instanceof String;
    }
    exports_161("isString", isString);
    function isSymbol(value) {
        return typeof value === "symbol";
    }
    exports_161("isSymbol", isSymbol);
    function isUndefined(value) {
        return value === undefined;
    }
    exports_161("isUndefined", isUndefined);
    function isObject(value) {
        return value !== null && typeof value === "object";
    }
    exports_161("isObject", isObject);
    function isError(e) {
        return e instanceof Error;
    }
    exports_161("isError", isError);
    function isFunction(value) {
        return typeof value === "function";
    }
    exports_161("isFunction", isFunction);
    function isRegExp(value) {
        return value instanceof RegExp;
    }
    exports_161("isRegExp", isRegExp);
    function isPrimitive(value) {
        return (value === null || (typeof value !== "object" && typeof value !== "function"));
    }
    exports_161("isPrimitive", isPrimitive);
    function validateIntegerRange(value, name, min = -2147483648, max = 2147483647) {
        if (!Number.isInteger(value)) {
            throw new Error(`${name} must be 'an integer' but was ${value}`);
        }
        if (value < min || value > max) {
            throw new Error(`${name} must be >= ${min} && <= ${max}.  Value was ${value}`);
        }
    }
    exports_161("validateIntegerRange", validateIntegerRange);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/fmt/colors", [], function (exports_162, context_162) {
    "use strict";
    var noColor, enabled;
    var __moduleName = context_162 && context_162.id;
    function setColorEnabled(value) {
        if (noColor) {
            return;
        }
        enabled = value;
    }
    exports_162("setColorEnabled", setColorEnabled);
    function getColorEnabled() {
        return enabled;
    }
    exports_162("getColorEnabled", getColorEnabled);
    function code(open, close) {
        return {
            open: `\x1b[${open.join(";")}m`,
            close: `\x1b[${close}m`,
            regexp: new RegExp(`\\x1b\\[${close}m`, "g"),
        };
    }
    function run(str, code) {
        return enabled
            ? `${code.open}${str.replace(code.regexp, code.open)}${code.close}`
            : str;
    }
    function reset(str) {
        return run(str, code([0], 0));
    }
    exports_162("reset", reset);
    function bold(str) {
        return run(str, code([1], 22));
    }
    exports_162("bold", bold);
    function dim(str) {
        return run(str, code([2], 22));
    }
    exports_162("dim", dim);
    function italic(str) {
        return run(str, code([3], 23));
    }
    exports_162("italic", italic);
    function underline(str) {
        return run(str, code([4], 24));
    }
    exports_162("underline", underline);
    function inverse(str) {
        return run(str, code([7], 27));
    }
    exports_162("inverse", inverse);
    function hidden(str) {
        return run(str, code([8], 28));
    }
    exports_162("hidden", hidden);
    function strikethrough(str) {
        return run(str, code([9], 29));
    }
    exports_162("strikethrough", strikethrough);
    function black(str) {
        return run(str, code([30], 39));
    }
    exports_162("black", black);
    function red(str) {
        return run(str, code([31], 39));
    }
    exports_162("red", red);
    function green(str) {
        return run(str, code([32], 39));
    }
    exports_162("green", green);
    function yellow(str) {
        return run(str, code([33], 39));
    }
    exports_162("yellow", yellow);
    function blue(str) {
        return run(str, code([34], 39));
    }
    exports_162("blue", blue);
    function magenta(str) {
        return run(str, code([35], 39));
    }
    exports_162("magenta", magenta);
    function cyan(str) {
        return run(str, code([36], 39));
    }
    exports_162("cyan", cyan);
    function white(str) {
        return run(str, code([37], 39));
    }
    exports_162("white", white);
    function gray(str) {
        return run(str, code([90], 39));
    }
    exports_162("gray", gray);
    function bgBlack(str) {
        return run(str, code([40], 49));
    }
    exports_162("bgBlack", bgBlack);
    function bgRed(str) {
        return run(str, code([41], 49));
    }
    exports_162("bgRed", bgRed);
    function bgGreen(str) {
        return run(str, code([42], 49));
    }
    exports_162("bgGreen", bgGreen);
    function bgYellow(str) {
        return run(str, code([43], 49));
    }
    exports_162("bgYellow", bgYellow);
    function bgBlue(str) {
        return run(str, code([44], 49));
    }
    exports_162("bgBlue", bgBlue);
    function bgMagenta(str) {
        return run(str, code([45], 49));
    }
    exports_162("bgMagenta", bgMagenta);
    function bgCyan(str) {
        return run(str, code([46], 49));
    }
    exports_162("bgCyan", bgCyan);
    function bgWhite(str) {
        return run(str, code([47], 49));
    }
    exports_162("bgWhite", bgWhite);
    function clampAndTruncate(n, max = 255, min = 0) {
        return Math.trunc(Math.max(Math.min(n, max), min));
    }
    function rgb8(str, color) {
        return run(str, code([38, 5, clampAndTruncate(color)], 39));
    }
    exports_162("rgb8", rgb8);
    function bgRgb8(str, color) {
        return run(str, code([48, 5, clampAndTruncate(color)], 49));
    }
    exports_162("bgRgb8", bgRgb8);
    function rgb24(str, color) {
        return run(str, code([
            38,
            2,
            clampAndTruncate(color.r),
            clampAndTruncate(color.g),
            clampAndTruncate(color.b),
        ], 39));
    }
    exports_162("rgb24", rgb24);
    function bgRgb24(str, color) {
        return run(str, code([
            48,
            2,
            clampAndTruncate(color.r),
            clampAndTruncate(color.g),
            clampAndTruncate(color.b),
        ], 49));
    }
    exports_162("bgRgb24", bgRgb24);
    return {
        setters: [],
        execute: function () {
            noColor = Deno.noColor;
            enabled = !noColor;
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/testing/diff", [], function (exports_163, context_163) {
    "use strict";
    var DiffType, REMOVED, COMMON, ADDED;
    var __moduleName = context_163 && context_163.id;
    function createCommon(A, B, reverse) {
        const common = [];
        if (A.length === 0 || B.length === 0)
            return [];
        for (let i = 0; i < Math.min(A.length, B.length); i += 1) {
            if (A[reverse ? A.length - i - 1 : i] === B[reverse ? B.length - i - 1 : i]) {
                common.push(A[reverse ? A.length - i - 1 : i]);
            }
            else {
                return common;
            }
        }
        return common;
    }
    function diff(A, B) {
        const prefixCommon = createCommon(A, B);
        const suffixCommon = createCommon(A.slice(prefixCommon.length), B.slice(prefixCommon.length), true).reverse();
        A = suffixCommon.length
            ? A.slice(prefixCommon.length, -suffixCommon.length)
            : A.slice(prefixCommon.length);
        B = suffixCommon.length
            ? B.slice(prefixCommon.length, -suffixCommon.length)
            : B.slice(prefixCommon.length);
        const swapped = B.length > A.length;
        [A, B] = swapped ? [B, A] : [A, B];
        const M = A.length;
        const N = B.length;
        if (!M && !N && !suffixCommon.length && !prefixCommon.length)
            return [];
        if (!N) {
            return [
                ...prefixCommon.map((c) => ({ type: DiffType.common, value: c })),
                ...A.map((a) => ({
                    type: swapped ? DiffType.added : DiffType.removed,
                    value: a,
                })),
                ...suffixCommon.map((c) => ({ type: DiffType.common, value: c })),
            ];
        }
        const offset = N;
        const delta = M - N;
        const size = M + N + 1;
        const fp = new Array(size).fill({ y: -1 });
        const routes = new Uint32Array((M * N + size + 1) * 2);
        const diffTypesPtrOffset = routes.length / 2;
        let ptr = 0;
        let p = -1;
        function backTrace(A, B, current, swapped) {
            const M = A.length;
            const N = B.length;
            const result = [];
            let a = M - 1;
            let b = N - 1;
            let j = routes[current.id];
            let type = routes[current.id + diffTypesPtrOffset];
            while (true) {
                if (!j && !type)
                    break;
                const prev = j;
                if (type === REMOVED) {
                    result.unshift({
                        type: swapped ? DiffType.removed : DiffType.added,
                        value: B[b],
                    });
                    b -= 1;
                }
                else if (type === ADDED) {
                    result.unshift({
                        type: swapped ? DiffType.added : DiffType.removed,
                        value: A[a],
                    });
                    a -= 1;
                }
                else {
                    result.unshift({ type: DiffType.common, value: A[a] });
                    a -= 1;
                    b -= 1;
                }
                j = routes[prev];
                type = routes[prev + diffTypesPtrOffset];
            }
            return result;
        }
        function createFP(slide, down, k, M) {
            if (slide && slide.y === -1 && down && down.y === -1) {
                return { y: 0, id: 0 };
            }
            if ((down && down.y === -1) ||
                k === M ||
                (slide && slide.y) > (down && down.y) + 1) {
                const prev = slide.id;
                ptr++;
                routes[ptr] = prev;
                routes[ptr + diffTypesPtrOffset] = ADDED;
                return { y: slide.y, id: ptr };
            }
            else {
                const prev = down.id;
                ptr++;
                routes[ptr] = prev;
                routes[ptr + diffTypesPtrOffset] = REMOVED;
                return { y: down.y + 1, id: ptr };
            }
        }
        function snake(k, slide, down, _offset, A, B) {
            const M = A.length;
            const N = B.length;
            if (k < -N || M < k)
                return { y: -1, id: -1 };
            const fp = createFP(slide, down, k, M);
            while (fp.y + k < M && fp.y < N && A[fp.y + k] === B[fp.y]) {
                const prev = fp.id;
                ptr++;
                fp.id = ptr;
                fp.y += 1;
                routes[ptr] = prev;
                routes[ptr + diffTypesPtrOffset] = COMMON;
            }
            return fp;
        }
        while (fp[delta + offset].y < N) {
            p = p + 1;
            for (let k = -p; k < delta; ++k) {
                fp[k + offset] = snake(k, fp[k - 1 + offset], fp[k + 1 + offset], offset, A, B);
            }
            for (let k = delta + p; k > delta; --k) {
                fp[k + offset] = snake(k, fp[k - 1 + offset], fp[k + 1 + offset], offset, A, B);
            }
            fp[delta + offset] = snake(delta, fp[delta - 1 + offset], fp[delta + 1 + offset], offset, A, B);
        }
        return [
            ...prefixCommon.map((c) => ({ type: DiffType.common, value: c })),
            ...backTrace(A, B, fp[delta + offset], swapped),
            ...suffixCommon.map((c) => ({ type: DiffType.common, value: c })),
        ];
    }
    exports_163("default", diff);
    return {
        setters: [],
        execute: function () {
            (function (DiffType) {
                DiffType["removed"] = "removed";
                DiffType["common"] = "common";
                DiffType["added"] = "added";
            })(DiffType || (DiffType = {}));
            exports_163("DiffType", DiffType);
            REMOVED = 1;
            COMMON = 2;
            ADDED = 3;
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/testing/asserts", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/fmt/colors", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/testing/diff"], function (exports_164, context_164) {
    "use strict";
    var colors_ts_1, diff_ts_1, CAN_NOT_DISPLAY, AssertionError;
    var __moduleName = context_164 && context_164.id;
    function format(v) {
        let string = Deno.inspect(v);
        if (typeof v == "string") {
            string = `"${string.replace(/(?=["\\])/g, "\\")}"`;
        }
        return string;
    }
    function createColor(diffType) {
        switch (diffType) {
            case diff_ts_1.DiffType.added:
                return (s) => colors_ts_1.green(colors_ts_1.bold(s));
            case diff_ts_1.DiffType.removed:
                return (s) => colors_ts_1.red(colors_ts_1.bold(s));
            default:
                return colors_ts_1.white;
        }
    }
    function createSign(diffType) {
        switch (diffType) {
            case diff_ts_1.DiffType.added:
                return "+   ";
            case diff_ts_1.DiffType.removed:
                return "-   ";
            default:
                return "    ";
        }
    }
    function buildMessage(diffResult) {
        const messages = [];
        messages.push("");
        messages.push("");
        messages.push(`    ${colors_ts_1.gray(colors_ts_1.bold("[Diff]"))} ${colors_ts_1.red(colors_ts_1.bold("Actual"))} / ${colors_ts_1.green(colors_ts_1.bold("Expected"))}`);
        messages.push("");
        messages.push("");
        diffResult.forEach((result) => {
            const c = createColor(result.type);
            messages.push(c(`${createSign(result.type)}${result.value}`));
        });
        messages.push("");
        return messages;
    }
    function isKeyedCollection(x) {
        return [Symbol.iterator, "size"].every((k) => k in x);
    }
    function equal(c, d) {
        const seen = new Map();
        return (function compare(a, b) {
            if (a &&
                b &&
                ((a instanceof RegExp && b instanceof RegExp) ||
                    (a instanceof Date && b instanceof Date))) {
                return String(a) === String(b);
            }
            if (Object.is(a, b)) {
                return true;
            }
            if (a && typeof a === "object" && b && typeof b === "object") {
                if (seen.get(a) === b) {
                    return true;
                }
                if (Object.keys(a || {}).length !== Object.keys(b || {}).length) {
                    return false;
                }
                if (isKeyedCollection(a) && isKeyedCollection(b)) {
                    if (a.size !== b.size) {
                        return false;
                    }
                    let unmatchedEntries = a.size;
                    for (const [aKey, aValue] of a.entries()) {
                        for (const [bKey, bValue] of b.entries()) {
                            if ((aKey === aValue && bKey === bValue && compare(aKey, bKey)) ||
                                (compare(aKey, bKey) && compare(aValue, bValue))) {
                                unmatchedEntries--;
                            }
                        }
                    }
                    return unmatchedEntries === 0;
                }
                const merged = { ...a, ...b };
                for (const key in merged) {
                    if (!compare(a && a[key], b && b[key])) {
                        return false;
                    }
                }
                seen.set(a, b);
                return true;
            }
            return false;
        })(c, d);
    }
    exports_164("equal", equal);
    function assert(expr, msg = "") {
        if (!expr) {
            throw new AssertionError(msg);
        }
    }
    exports_164("assert", assert);
    function assertEquals(actual, expected, msg) {
        if (equal(actual, expected)) {
            return;
        }
        let message = "";
        const actualString = format(actual);
        const expectedString = format(expected);
        try {
            const diffResult = diff_ts_1.default(actualString.split("\n"), expectedString.split("\n"));
            message = buildMessage(diffResult).join("\n");
        }
        catch (e) {
            message = `\n${colors_ts_1.red(CAN_NOT_DISPLAY)} + \n\n`;
        }
        if (msg) {
            message = msg;
        }
        throw new AssertionError(message);
    }
    exports_164("assertEquals", assertEquals);
    function assertNotEquals(actual, expected, msg) {
        if (!equal(actual, expected)) {
            return;
        }
        let actualString;
        let expectedString;
        try {
            actualString = String(actual);
        }
        catch (e) {
            actualString = "[Cannot display]";
        }
        try {
            expectedString = String(expected);
        }
        catch (e) {
            expectedString = "[Cannot display]";
        }
        if (!msg) {
            msg = `actual: ${actualString} expected: ${expectedString}`;
        }
        throw new AssertionError(msg);
    }
    exports_164("assertNotEquals", assertNotEquals);
    function assertStrictEq(actual, expected, msg) {
        if (actual !== expected) {
            let actualString;
            let expectedString;
            try {
                actualString = String(actual);
            }
            catch (e) {
                actualString = "[Cannot display]";
            }
            try {
                expectedString = String(expected);
            }
            catch (e) {
                expectedString = "[Cannot display]";
            }
            if (!msg) {
                msg = `actual: ${actualString} expected: ${expectedString}`;
            }
            throw new AssertionError(msg);
        }
    }
    exports_164("assertStrictEq", assertStrictEq);
    function assertStrContains(actual, expected, msg) {
        if (!actual.includes(expected)) {
            if (!msg) {
                msg = `actual: "${actual}" expected to contains: "${expected}"`;
            }
            throw new AssertionError(msg);
        }
    }
    exports_164("assertStrContains", assertStrContains);
    function assertArrayContains(actual, expected, msg) {
        const missing = [];
        for (let i = 0; i < expected.length; i++) {
            let found = false;
            for (let j = 0; j < actual.length; j++) {
                if (equal(expected[i], actual[j])) {
                    found = true;
                    break;
                }
            }
            if (!found) {
                missing.push(expected[i]);
            }
        }
        if (missing.length === 0) {
            return;
        }
        if (!msg) {
            msg = `actual: "${actual}" expected to contains: "${expected}"`;
            msg += "\n";
            msg += `missing: ${missing}`;
        }
        throw new AssertionError(msg);
    }
    exports_164("assertArrayContains", assertArrayContains);
    function assertMatch(actual, expected, msg) {
        if (!expected.test(actual)) {
            if (!msg) {
                msg = `actual: "${actual}" expected to match: "${expected}"`;
            }
            throw new AssertionError(msg);
        }
    }
    exports_164("assertMatch", assertMatch);
    function fail(msg) {
        assert(false, `Failed assertion${msg ? `: ${msg}` : "."}`);
    }
    exports_164("fail", fail);
    function assertThrows(fn, ErrorClass, msgIncludes = "", msg) {
        let doesThrow = false;
        let error = null;
        try {
            fn();
        }
        catch (e) {
            if (ErrorClass && !(Object.getPrototypeOf(e) === ErrorClass.prototype)) {
                msg = `Expected error to be instance of "${ErrorClass.name}", but was "${e.constructor.name}"${msg ? `: ${msg}` : "."}`;
                throw new AssertionError(msg);
            }
            if (msgIncludes && !e.message.includes(msgIncludes)) {
                msg = `Expected error message to include "${msgIncludes}", but got "${e.message}"${msg ? `: ${msg}` : "."}`;
                throw new AssertionError(msg);
            }
            doesThrow = true;
            error = e;
        }
        if (!doesThrow) {
            msg = `Expected function to throw${msg ? `: ${msg}` : "."}`;
            throw new AssertionError(msg);
        }
        return error;
    }
    exports_164("assertThrows", assertThrows);
    async function assertThrowsAsync(fn, ErrorClass, msgIncludes = "", msg) {
        let doesThrow = false;
        let error = null;
        try {
            await fn();
        }
        catch (e) {
            if (ErrorClass && !(Object.getPrototypeOf(e) === ErrorClass.prototype)) {
                msg = `Expected error to be instance of "${ErrorClass.name}", but got "${e.name}"${msg ? `: ${msg}` : "."}`;
                throw new AssertionError(msg);
            }
            if (msgIncludes && !e.message.includes(msgIncludes)) {
                msg = `Expected error message to include "${msgIncludes}", but got "${e.message}"${msg ? `: ${msg}` : "."}`;
                throw new AssertionError(msg);
            }
            doesThrow = true;
            error = e;
        }
        if (!doesThrow) {
            msg = `Expected function to throw${msg ? `: ${msg}` : "."}`;
            throw new AssertionError(msg);
        }
        return error;
    }
    exports_164("assertThrowsAsync", assertThrowsAsync);
    function unimplemented(msg) {
        throw new AssertionError(msg || "unimplemented");
    }
    exports_164("unimplemented", unimplemented);
    function unreachable() {
        throw new AssertionError("unreachable");
    }
    exports_164("unreachable", unreachable);
    return {
        setters: [
            function (colors_ts_1_1) {
                colors_ts_1 = colors_ts_1_1;
            },
            function (diff_ts_1_1) {
                diff_ts_1 = diff_ts_1_1;
            }
        ],
        execute: function () {
            CAN_NOT_DISPLAY = "[Cannot display]";
            AssertionError = class AssertionError extends Error {
                constructor(message) {
                    super(message);
                    this.name = "AssertionError";
                }
            };
            exports_164("AssertionError", AssertionError);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/uuid/v5", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/uuid/_common", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/hash/sha1", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/node/util", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/testing/asserts"], function (exports_165, context_165) {
    "use strict";
    var _common_ts_3, sha1_ts_1, util_ts_2, asserts_ts_1, UUID_RE;
    var __moduleName = context_165 && context_165.id;
    function validate(id) {
        return UUID_RE.test(id);
    }
    exports_165("validate", validate);
    function generate(options, buf, offset) {
        const i = (buf && offset) || 0;
        let { value, namespace } = options;
        if (util_ts_2.isString(value))
            value = _common_ts_3.stringToBytes(value);
        if (util_ts_2.isString(namespace))
            namespace = _common_ts_3.uuidToBytes(namespace);
        asserts_ts_1.assert(namespace.length === 16, "namespace must be uuid string or an Array of 16 byte values");
        const content = namespace.concat(value);
        const bytes = new sha1_ts_1.Sha1().update(_common_ts_3.createBuffer(content)).digest();
        bytes[6] = (bytes[6] & 0x0f) | 0x50;
        bytes[8] = (bytes[8] & 0x3f) | 0x80;
        if (buf) {
            for (let idx = 0; idx < 16; ++idx) {
                buf[i + idx] = bytes[idx];
            }
        }
        return buf || _common_ts_3.bytesToUuid(bytes);
    }
    exports_165("generate", generate);
    return {
        setters: [
            function (_common_ts_3_1) {
                _common_ts_3 = _common_ts_3_1;
            },
            function (sha1_ts_1_1) {
                sha1_ts_1 = sha1_ts_1_1;
            },
            function (util_ts_2_1) {
                util_ts_2 = util_ts_2_1;
            },
            function (asserts_ts_1_1) {
                asserts_ts_1 = asserts_ts_1_1;
            }
        ],
        execute: function () {
            UUID_RE = /^[0-9a-f]{8}-[0-9a-f]{4}-[5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/uuid/mod", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/uuid/v1", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/uuid/v4", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/uuid/v5"], function (exports_166, context_166) {
    "use strict";
    var v1, v4, v5, NIL_UUID, NOT_IMPLEMENTED, v3;
    var __moduleName = context_166 && context_166.id;
    function isNil(val) {
        return val === NIL_UUID;
    }
    exports_166("isNil", isNil);
    return {
        setters: [
            function (v1_1) {
                v1 = v1_1;
            },
            function (v4_1) {
                v4 = v4_1;
            },
            function (v5_1) {
                v5 = v5_1;
            }
        ],
        execute: function () {
            exports_166("v1", v1);
            exports_166("v4", v4);
            exports_166("v5", v5);
            exports_166("NIL_UUID", NIL_UUID = "00000000-0000-0000-0000-000000000000");
            NOT_IMPLEMENTED = {
                generate() {
                    throw new Error("Not implemented");
                },
                validate() {
                    throw new Error("Not implemented");
                },
            };
            exports_166("v3", v3 = NOT_IMPLEMENTED);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/util/noop", [], function (exports_167, context_167) {
    "use strict";
    var __moduleName = context_167 && context_167.id;
    function default_1() { }
    exports_167("default", default_1);
    return {
        setters: [],
        execute: function () {
            ;
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/util/finally-mixin", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/util/noop"], function (exports_168, context_168) {
    "use strict";
    var noop_js_1, finallyMixin;
    var __moduleName = context_168 && context_168.id;
    return {
        setters: [
            function (noop_js_1_1) {
                noop_js_1 = noop_js_1_1;
            }
        ],
        execute: function () {
            finallyMixin = (prototype) => Object.assign(prototype, {
                finally(onFinally) {
                    return this.then().finally(onFinally);
                },
            });
            exports_168("default", Promise.prototype.finally ? finallyMixin : noop_js_1.default);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/interface", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/util", "https://raw.githubusercontent.com/denjucks/dex/master/lib/util/finally-mixin"], function (exports_169, context_169) {
    "use strict";
    var index_js_2, clone, isEmpty, util_js_3, finally_mixin_js_1;
    var __moduleName = context_169 && context_169.id;
    function default_2(Target) {
        Target.prototype.toQuery = function (tz) {
            let data = this.toSQL(this._method, tz);
            if (!Array.isArray(data))
                data = [data];
            return data
                .map((statement) => {
                return this.client._formatQuery(statement.sql, statement.bindings, tz);
            })
                .join(';\n');
        };
        Target.prototype.then = function () {
            let result = this.client.runner(this).run();
            if (this.client.config.asyncStackTraces) {
                result = result.catch((err) => {
                    err.originalStack = err.stack;
                    const firstLine = err.stack.split('\n')[0];
                    this._asyncStack.unshift(firstLine);
                    err.stack = this._asyncStack.join('\n');
                    throw err;
                });
            }
            return result.then.apply(result, arguments);
        };
        Target.prototype.options = function (opts) {
            this._options = this._options || [];
            this._options.push(clone(opts) || {});
            return this;
        };
        Target.prototype.connection = function (connection) {
            this._connection = connection;
            return this;
        };
        Target.prototype.debug = function (enabled) {
            this._debug = arguments.length ? enabled : true;
            return this;
        };
        Target.prototype.transacting = function (t) {
            if (t && t.client) {
                if (!t.client.transacting) {
                    t.client.logger.warn(`Invalid transaction value: ${t.client}`);
                }
                else {
                    this.client = t.client;
                }
            }
            if (isEmpty(t)) {
                this.client.logger.error('Invalid value on transacting call, potential bug');
                throw Error('Invalid transacting value (null, undefined or empty object)');
            }
            return this;
        };
        Target.prototype.stream = function (options) {
            return this.client.runner(this).stream(options);
        };
        Target.prototype.pipe = function (writable, options) {
            return this.client.runner(this).pipe(writable, options);
        };
        Target.prototype.asCallback = function (cb) {
            const promise = this.then();
            util_js_3.callbackify(() => promise)(cb);
            return promise;
        };
        Target.prototype.catch = function (onReject) {
            return this.then().catch(onReject);
        };
        Object.defineProperty(Target.prototype, Symbol.toStringTag, {
            get: () => 'object',
        });
        finally_mixin_js_1.default(Target.prototype);
    }
    exports_169("default", default_2);
    return {
        setters: [
            function (index_js_2_1) {
                index_js_2 = index_js_2_1;
            },
            function (util_js_3_1) {
                util_js_3 = util_js_3_1;
            },
            function (finally_mixin_js_1_1) {
                finally_mixin_js_1 = finally_mixin_js_1_1;
            }
        ],
        execute: function () {
            clone = index_js_2.default.clone;
            isEmpty = index_js_2.default.isEmpty;
            ;
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/raw", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/helpers", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/events", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/debug@4.1.1/src/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/util/save-async-stack", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/uuid/mod", "https://raw.githubusercontent.com/denjucks/dex/master/lib/interface"], function (exports_170, context_170) {
    "use strict";
    var inherits_js_1, helpers_js_1, events_js_1, index_js_3, index_js_4, assign, isNumber, isObject, isPlainObject, reduce, save_async_stack_js_1, uuidlib, uuid, debugBindings, interface_js_1;
    var __moduleName = context_170 && context_170.id;
    function Raw(client) {
        this.client = client;
        this.sql = '';
        this.bindings = [];
        this._wrappedBefore = undefined;
        this._wrappedAfter = undefined;
        if (client && client.config) {
            this._debug = client.config.debug;
            save_async_stack_js_1.default(this, 4);
        }
    }
    function replaceRawArrBindings(raw, formatter) {
        const expectedBindings = raw.bindings.length;
        const values = raw.bindings;
        let index = 0;
        const sql = raw.sql.replace(/\\?\?\??/g, function (match) {
            if (match === '\\?') {
                return match;
            }
            const value = values[index++];
            if (match === '??') {
                return formatter.columnize(value);
            }
            return formatter.parameter(value);
        });
        if (expectedBindings !== index) {
            throw new Error(`Expected ${expectedBindings} bindings, saw ${index}`);
        }
        return {
            method: 'raw',
            sql,
            bindings: formatter.bindings,
        };
    }
    function replaceKeyBindings(raw, formatter) {
        const values = raw.bindings;
        const regex = /\\?(:(\w+):(?=::)|:(\w+):(?!:)|:(\w+))/g;
        const sql = raw.sql.replace(regex, function (match, p1, p2, p3, p4) {
            if (match !== p1) {
                return p1;
            }
            const part = p2 || p3 || p4;
            const key = match.trim();
            const isIdentifier = key[key.length - 1] === ':';
            const value = values[part];
            if (value === undefined) {
                if (Object.prototype.hasOwnProperty.call(values, part)) {
                    formatter.bindings.push(value);
                }
                return match;
            }
            if (isIdentifier) {
                return match.replace(p1, formatter.columnize(value));
            }
            return match.replace(p1, formatter.parameter(value));
        });
        return {
            method: 'raw',
            sql,
            bindings: formatter.bindings,
        };
    }
    return {
        setters: [
            function (inherits_js_1_1) {
                inherits_js_1 = inherits_js_1_1;
            },
            function (helpers_js_1_1) {
                helpers_js_1 = helpers_js_1_1;
            },
            function (events_js_1_1) {
                events_js_1 = events_js_1_1;
            },
            function (index_js_3_1) {
                index_js_3 = index_js_3_1;
            },
            function (index_js_4_1) {
                index_js_4 = index_js_4_1;
            },
            function (save_async_stack_js_1_1) {
                save_async_stack_js_1 = save_async_stack_js_1_1;
            },
            function (uuidlib_1) {
                uuidlib = uuidlib_1;
            },
            function (interface_js_1_1) {
                interface_js_1 = interface_js_1_1;
            }
        ],
        execute: function () {
            assign = index_js_4.default.assign;
            isNumber = index_js_4.default.isNumber;
            isObject = index_js_4.default.isObject;
            isPlainObject = index_js_4.default.isPlainObject;
            reduce = index_js_4.default.reduce;
            uuid = {
                v1: uuidlib.v1.generate
            };
            debugBindings = index_js_3.default('knex:bindings');
            inherits_js_1.default(Raw, events_js_1.EventEmitter);
            assign(Raw.prototype, {
                set(sql, bindings) {
                    this.sql = sql;
                    this.bindings =
                        (isObject(bindings) && !bindings.toSQL) || bindings === undefined
                            ? bindings
                            : [bindings];
                    return this;
                },
                timeout(ms, { cancel } = {}) {
                    if (isNumber(ms) && ms > 0) {
                        this._timeout = ms;
                        if (cancel) {
                            this.client.assertCanCancelQuery();
                            this._cancelOnTimeout = true;
                        }
                    }
                    return this;
                },
                wrap(before, after) {
                    this._wrappedBefore = before;
                    this._wrappedAfter = after;
                    return this;
                },
                toString() {
                    return this.toQuery();
                },
                toSQL(method, tz) {
                    let obj;
                    const formatter = this.client.formatter(this);
                    if (Array.isArray(this.bindings)) {
                        obj = replaceRawArrBindings(this, formatter);
                    }
                    else if (this.bindings && isPlainObject(this.bindings)) {
                        obj = replaceKeyBindings(this, formatter);
                    }
                    else {
                        obj = {
                            method: 'raw',
                            sql: this.sql,
                            bindings: this.bindings === undefined ? [] : [this.bindings],
                        };
                    }
                    if (this._wrappedBefore) {
                        obj.sql = this._wrappedBefore + obj.sql;
                    }
                    if (this._wrappedAfter) {
                        obj.sql = obj.sql + this._wrappedAfter;
                    }
                    obj.options = reduce(this._options, assign, {});
                    if (this._timeout) {
                        obj.timeout = this._timeout;
                        if (this._cancelOnTimeout) {
                            obj.cancelOnTimeout = this._cancelOnTimeout;
                        }
                    }
                    obj.bindings = obj.bindings || [];
                    if (helpers_js_1.default.containsUndefined(obj.bindings)) {
                        const undefinedBindingIndices = helpers_js_1.default.getUndefinedIndices(this.bindings);
                        debugBindings(obj.bindings);
                        throw new Error(`Undefined binding(s) detected for keys [${undefinedBindingIndices}] when compiling RAW query: ${obj.sql}`);
                    }
                    obj.__knexQueryUid = uuid.v1();
                    return obj;
                },
            });
            interface_js_1.default(Raw);
            helpers_js_1.default.addQueryContext(Raw);
            exports_170("default", Raw);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/ref", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/raw"], function (exports_171, context_171) {
    "use strict";
    var raw_js_1, Ref;
    var __moduleName = context_171 && context_171.id;
    return {
        setters: [
            function (raw_js_1_1) {
                raw_js_1 = raw_js_1_1;
            }
        ],
        execute: function () {
            Ref = class Ref extends raw_js_1.default {
                constructor(client, ref) {
                    super(client);
                    this.ref = ref;
                    this._schema = null;
                    this._alias = null;
                }
                withSchema(schema) {
                    this._schema = schema;
                    return this;
                }
                as(alias) {
                    this._alias = alias;
                    return this;
                }
                toSQL() {
                    const string = this._schema ? `${this._schema}.${this.ref}` : this.ref;
                    const formatter = this.client.formatter(this);
                    const ref = formatter.columnize(string);
                    const sql = this._alias ? `${ref} as ${formatter.wrap(this._alias)}` : ref;
                    this.set(sql, []);
                    return super.toSQL(...arguments);
                }
            };
            exports_171("default", Ref);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/util/timeout", [], function (exports_172, context_172) {
    "use strict";
    var KnexTimeoutError;
    var __moduleName = context_172 && context_172.id;
    function timeout(promise, ms) {
        return new Promise(function (resolve, reject) {
            const id = setTimeout(function () {
                reject(new KnexTimeoutError('operation timed out'));
            }, ms);
            function wrappedResolve(value) {
                clearTimeout(id);
                resolve(value);
            }
            function wrappedReject(err) {
                clearTimeout(id);
                reject(err);
            }
            promise.then(wrappedResolve, wrappedReject);
        });
    }
    exports_172("timeout", timeout);
    return {
        setters: [],
        execute: function () {
            KnexTimeoutError = class KnexTimeoutError extends Error {
                constructor(message) {
                    super(message);
                    this.name = 'KnexTimeoutError';
                }
            };
            exports_172("KnexTimeoutError", KnexTimeoutError);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/runner", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/util/timeout"], function (exports_173, context_173) {
    "use strict";
    var timeout_js_1, timeout_js_2, PassThrough;
    var __moduleName = context_173 && context_173.id;
    function Runner(client, builder) {
        this.client = client;
        this.builder = builder;
        this.queries = [];
        this.connection = void 0;
    }
    return {
        setters: [
            function (timeout_js_1_1) {
                timeout_js_1 = timeout_js_1_1;
                timeout_js_2 = timeout_js_1_1;
            }
        ],
        execute: function () {
            Object.assign(Runner.prototype, {
                run() {
                    const runner = this;
                    return (this.ensureConnection(function (connection) {
                        runner.connection = connection;
                        runner.client.emit('start', runner.builder);
                        runner.builder.emit('start', runner.builder);
                        const sql = runner.builder.toSQL();
                        if (runner.builder._debug) {
                            runner.client.logger.debug(sql);
                        }
                        if (Array.isArray(sql)) {
                            return runner.queryArray(sql);
                        }
                        return runner.query(sql);
                    })
                        .catch(function (err) {
                        if (runner.builder._events && runner.builder._events.error) {
                            runner.builder.emit('error', err);
                        }
                        throw err;
                    })
                        .then(function (res) {
                        runner.builder.emit('end');
                        return res;
                    }));
                },
                stream(options, handler) {
                    if (arguments.length === 1) {
                        if (typeof options === 'function') {
                            handler = options;
                            options = {};
                        }
                    }
                    const hasHandler = typeof handler === 'function';
                    PassThrough = PassThrough || require('stream').PassThrough;
                    const runner = this;
                    const stream = new PassThrough({ objectMode: true });
                    let hasConnection = false;
                    const promise = this.ensureConnection(function (connection) {
                        hasConnection = true;
                        runner.connection = connection;
                        try {
                            const sql = runner.builder.toSQL();
                            if (Array.isArray(sql) && hasHandler) {
                                throw new Error('The stream may only be used with a single query statement.');
                            }
                            return runner.client.stream(runner.connection, sql, stream, options);
                        }
                        catch (e) {
                            stream.emit('error', e);
                            throw e;
                        }
                    });
                    if (hasHandler) {
                        handler(stream);
                        return promise;
                    }
                    promise.catch(function (err) {
                        if (!hasConnection)
                            stream.emit('error', err);
                    });
                    return stream;
                },
                pipe(writable, options) {
                    return this.stream(options).pipe(writable);
                },
                query: async function (obj) {
                    const { __knexUid, __knexTxId } = this.connection;
                    this.builder.emit('query', Object.assign({ __knexUid, __knexTxId }, obj));
                    const runner = this;
                    let queryPromise = this.client.query(this.connection, obj);
                    if (obj.timeout) {
                        queryPromise = timeout_js_2.timeout(queryPromise, obj.timeout);
                    }
                    return queryPromise
                        .then((resp) => this.client.processResponse(resp, runner))
                        .then((processedResponse) => {
                        const queryContext = this.builder.queryContext();
                        const postProcessedResponse = this.client.postProcessResponse(processedResponse, queryContext);
                        this.builder.emit('query-response', postProcessedResponse, Object.assign({ __knexUid: this.connection.__knexUid }, obj), this.builder);
                        this.client.emit('query-response', postProcessedResponse, Object.assign({ __knexUid: this.connection.__knexUid }, obj), this.builder);
                        return postProcessedResponse;
                    })
                        .catch((error) => {
                        if (!(error instanceof timeout_js_1.KnexTimeoutError)) {
                            return Promise.reject(error);
                        }
                        const { timeout, sql, bindings } = obj;
                        let cancelQuery;
                        if (obj.cancelOnTimeout) {
                            cancelQuery = this.client.cancelQuery(this.connection);
                        }
                        else {
                            this.connection.__knex__disposed = error;
                            cancelQuery = Promise.resolve();
                        }
                        return cancelQuery
                            .catch((cancelError) => {
                            this.connection.__knex__disposed = error;
                            throw Object.assign(cancelError, {
                                message: `After query timeout of ${timeout}ms exceeded, cancelling of query failed.`,
                                sql,
                                bindings,
                                timeout,
                            });
                        })
                            .then(() => {
                            throw Object.assign(error, {
                                message: `Defined query timeout of ${timeout}ms exceeded when running query.`,
                                sql,
                                bindings,
                                timeout,
                            });
                        });
                    })
                        .catch((error) => {
                        this.builder.emit('query-error', error, Object.assign({ __knexUid: this.connection.__knexUid }, obj));
                        throw error;
                    });
                },
                async queryArray(queries) {
                    if (queries.length === 1) {
                        return this.query(queries[0]);
                    }
                    const results = [];
                    for (const query of queries) {
                        results.push(await this.query(query));
                    }
                    return results;
                },
                async ensureConnection(cb) {
                    if (this.builder._connection) {
                        return cb(this.builder._connection);
                    }
                    if (this.connection) {
                        return cb(this.connection);
                    }
                    return this.client
                        .acquireConnection()
                        .catch((error) => {
                        if (!(error instanceof timeout_js_1.KnexTimeoutError)) {
                            return Promise.reject(error);
                        }
                        if (this.builder) {
                            error.sql = this.builder.sql;
                            error.bindings = this.builder.bindings;
                        }
                        throw error;
                    })
                        .then(async (connection) => {
                        try {
                            return await cb(connection);
                        }
                        finally {
                            await this.client.releaseConnection(this.connection);
                        }
                    });
                },
            });
            exports_173("default", Runner);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/assert", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/chunk-dac557ba", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/chunk-0c2d1322"], function (exports_174, context_174) {
    "use strict";
    var chunk_dac557ba_js_2, chunk_0c2d1322_js_3, r, t, e$1, r$1, y, b, g, h, $, j, w, r$2, e$2, o$1, n$1, a$1, c$1, l$1, u$1, f$1, t$1, f$2, e$3, l$2, t$2, n$2, o$2, r$3, e$4, o$3, t$3, n$3, y$1, a$2, i$1, d, f$3, u$2, A, l$3, v, P, c$2, t$4, p$1, o$4, i$2, a$3, l$4, r$4, n$4, i$3, o$5, c$3, f$4, u$3, s$1, a$4, l$5, p$2, m, N, e$5, i$4, n$5, t$5, u$4, a$5, m$1, o$6, s$2, f$5, c$4, a$6, u$5, l$6, g$1, h$1, y$2, b$1, v$1, d$1, E, w$1, S, j$1, O, x, q, R, A$1, k, _, T, P$1, I, D, F, N$1, L, M, X, Z, $$1, et, AssertionError, deepEqual, deepStrictEqual, doesNotReject, doesNotThrow, equal, fail, ifError, notDeepEqual, notDeepStrictEqual, notEqual, notStrictEqual, ok, rejects, strict, strictEqual, throws;
    var __moduleName = context_174 && context_174.id;
    function e(e, r) { if (null == e)
        throw new TypeError("Cannot convert first argument to object"); for (var t = Object(e), n = 1; n < arguments.length; n++) {
        var o = arguments[n];
        if (null != o)
            for (var a = Object.keys(Object(o)), l = 0, i = a.length; l < i; l++) {
                var c = a[l], b = Object.getOwnPropertyDescriptor(o, c);
                void 0 !== b && b.enumerable && (t[c] = o[c]);
            }
    } return t; }
    function i$5() { if (a$6)
        return c$4; function e(t) { return (e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) { return typeof t; } : function (t) { return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t; })(t); } function n(t, n) { return !n || "object" !== e(n) && "function" != typeof n ? function (t) { if (void 0 === t)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return t; }(t) : n; } function r(t) { return (r = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) { return t.__proto__ || Object.getPrototypeOf(t); })(t); } function o(t, e) { return (o = Object.setPrototypeOf || function (t, e) { return t.__proto__ = e, t; })(t, e); } a$6 = !0; var i, u, l = {}; function f(t, e, c) { c || (c = Error); var a = function (c) { function a(o, c, i) { var u; return !function (t, e) { if (!(t instanceof e))
        throw new TypeError("Cannot call a class as a function"); }(this, a), (u = n(this, r(a).call(this, function (t, n, r) { return "string" == typeof e ? e : e(t, n, r); }(o, c, i)))).code = t, u; } return !function (t, e) { if ("function" != typeof e && null !== e)
        throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), e && o(t, e); }(a, c), a; }(c); l[t] = a; } function s(t, e) { if (Array.isArray(t)) {
        var n = t.length;
        return t = t.map((function (t) { return String(t); })), n > 2 ? "one of ".concat(e, " ").concat(t.slice(0, n - 1).join(", "), ", or ") + t[n - 1] : 2 === n ? "one of ".concat(e, " ").concat(t[0], " or ").concat(t[1]) : "of ".concat(e, " ").concat(t[0]);
    } return "of ".concat(e, " ").concat(String(t)); } return f("ERR_AMBIGUOUS_ARGUMENT", 'The "%s" argument is ambiguous. %s', TypeError), f("ERR_INVALID_ARG_TYPE", (function (t, n, r) { var o, c, u; if (void 0 === i && (i = tt()), i("string" == typeof t, "'name' must be a string"), "string" == typeof n && (c = "not ", n.substr(0, c.length) === c) ? (o = "must not be", n = n.replace(/^not /, "")) : o = "must be", function (t, e, n) { return (void 0 === n || n > t.length) && (n = t.length), t.substring(n - e.length, n) === e; }(t, " argument"))
        u = "The ".concat(t, " ").concat(o, " ").concat(s(n, "type"));
    else {
        var l = function (t, e, n) { return "number" != typeof n && (n = 0), !(n + e.length > t.length) && -1 !== t.indexOf(e, n); }(t, ".") ? "property" : "argument";
        u = 'The "'.concat(t, '" ').concat(l, " ").concat(o, " ").concat(s(n, "type"));
    } return u += ". Received type ".concat(e(r)); }), TypeError), f("ERR_INVALID_ARG_VALUE", (function (e, n) { var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "is invalid"; void 0 === u && (u = chunk_dac557ba_js_2.u); var o = u.inspect(n); return o.length > 128 && (o = "".concat(o.slice(0, 128), "...")), "The argument '".concat(e, "' ").concat(r, ". Received ").concat(o); }), TypeError), f("ERR_INVALID_RETURN_VALUE", (function (t, n, r) { var o; return o = r && r.constructor && r.constructor.name ? "instance of ".concat(r.constructor.name) : "type ".concat(e(r)), "Expected ".concat(t, ' to be returned from the "').concat(n, '"') + " function but got ".concat(o, "."); }), TypeError), f("ERR_MISSING_ARGS", (function () { for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)
        e[n] = arguments[n]; void 0 === i && (i = tt()), i(e.length > 0, "At least one arg needs to be specified"); var r = "The ", o = e.length; switch (e = e.map((function (t) { return '"'.concat(t, '"'); })), o) {
        case 1:
            r += "".concat(e[0], " argument");
            break;
        case 2:
            r += "".concat(e[0], " and ").concat(e[1], " arguments");
            break;
        default: r += e.slice(0, o - 1).join(", "), r += ", and ".concat(e[o - 1], " arguments");
    } return "".concat(r, " must be specified"); }), TypeError), c$4.codes = l, c$4; }
    function f$6() { if (l$6)
        return u$5; l$6 = !0; var n = chunk_0c2d1322_js_3.h; function r(t, e, n) { return e in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t; } function o(t, e) { for (var n = 0; n < e.length; n++) {
        var r = e[n];
        r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r);
    } } function c(t, e) { return !e || "object" !== y(e) && "function" != typeof e ? a(t) : e; } function a(t) { if (void 0 === t)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return t; } function f(t) { var e = "function" == typeof Map ? new Map : void 0; return (f = function (t) { if (null === t || (n = t, -1 === Function.toString.call(n).indexOf("[native code]")))
        return t; var n; if ("function" != typeof t)
        throw new TypeError("Super expression must either be null or a function"); if (void 0 !== e) {
        if (e.has(t))
            return e.get(t);
        e.set(t, r);
    } function r() { return p(t, arguments, h(this).constructor); } return r.prototype = Object.create(t.prototype, { constructor: { value: r, enumerable: !1, writable: !0, configurable: !0 } }), g(r, t); })(t); } function s() { if ("undefined" == typeof Reflect || !Reflect.construct)
        return !1; if (Reflect.construct.sham)
        return !1; if ("function" == typeof Proxy)
        return !0; try {
        return Date.prototype.toString.call(Reflect.construct(Date, [], (function () { }))), !0;
    }
    catch (t) {
        return !1;
    } } function p(t, e, n) { return (p = s() ? Reflect.construct : function (t, e, n) { var r = [null]; r.push.apply(r, e); var o = new (Function.bind.apply(t, r)); return n && g(o, n.prototype), o; }).apply(null, arguments); } function g(t, e) { return (g = Object.setPrototypeOf || function (t, e) { return t.__proto__ = e, t; })(t, e); } function h(t) { return (h = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) { return t.__proto__ || Object.getPrototypeOf(t); })(t); } function y(t) { return (y = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) { return typeof t; } : function (t) { return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t; })(t); } var b = chunk_dac557ba_js_2.u.inspect, v = i$5().codes.ERR_INVALID_ARG_TYPE; function d(t, e, n) { return (void 0 === n || n > t.length) && (n = t.length), t.substring(n - e.length, n) === e; } var m = "", E = "", w = "", S = "", j = { deepStrictEqual: "Expected values to be strictly deep-equal:", strictEqual: "Expected values to be strictly equal:", strictEqualObject: 'Expected "actual" to be reference-equal to "expected":', deepEqual: "Expected values to be loosely deep-equal:", equal: "Expected values to be loosely equal:", notDeepStrictEqual: 'Expected "actual" not to be strictly deep-equal to:', notStrictEqual: 'Expected "actual" to be strictly unequal to:', notStrictEqualObject: 'Expected "actual" not to be reference-equal to "expected":', notDeepEqual: 'Expected "actual" not to be loosely deep-equal to:', notEqual: 'Expected "actual" to be loosely unequal to:', notIdentical: "Values identical but not reference-equal:" }; function O(t) { var e = Object.keys(t), n = Object.create(Object.getPrototypeOf(t)); return e.forEach((function (e) { n[e] = t[e]; })), Object.defineProperty(n, "message", { value: t.message }), n; } function x(t) { return b(t, { compact: !1, customInspect: !1, depth: 1e3, maxArrayLength: 1 / 0, showHidden: !1, breakLength: 1 / 0, showProxy: !1, sorted: !0, getters: !0 }); } function q(t, e, r) { var o = "", c = "", a = 0, i = "", u = !1, l = x(t), f = l.split("\n"), s = x(e).split("\n"), p = 0, g = ""; if ("strictEqual" === r && "object" === y(t) && "object" === y(e) && null !== t && null !== e && (r = "strictEqualObject"), 1 === f.length && 1 === s.length && f[0] !== s[0]) {
        var h = f[0].length + s[0].length;
        if (h <= 10) {
            if (!("object" === y(t) && null !== t || "object" === y(e) && null !== e || 0 === t && 0 === e))
                return "".concat(j[r], "\n\n") + "".concat(f[0], " !== ").concat(s[0], "\n");
        }
        else if ("strictEqualObject" !== r) {
            if (h < (n.stderr && n.stderr.isTTY ? n.stderr.columns : 80)) {
                for (; f[0][p] === s[0][p];)
                    p++;
                p > 2 && (g = "\n  ".concat(function (t, e) { if (e = Math.floor(e), 0 == t.length || 0 == e)
                    return ""; var n = t.length * e; for (e = Math.floor(Math.log(e) / Math.log(2)); e;)
                    t += t, e--; return t += t.substring(0, n - t.length); }(" ", p), "^"), p = 0);
            }
        }
    } for (var b = f[f.length - 1], v = s[s.length - 1]; b === v && (p++ < 2 ? i = "\n  ".concat(b).concat(i) : o = b, f.pop(), s.pop(), 0 !== f.length && 0 !== s.length);)
        b = f[f.length - 1], v = s[s.length - 1]; var O = Math.max(f.length, s.length); if (0 === O) {
        var q = l.split("\n");
        if (q.length > 30)
            for (q[26] = "".concat(m, "...").concat(S); q.length > 27;)
                q.pop();
        return "".concat(j.notIdentical, "\n\n").concat(q.join("\n"), "\n");
    } p > 3 && (i = "\n".concat(m, "...").concat(S).concat(i), u = !0), "" !== o && (i = "\n  ".concat(o).concat(i), o = ""); var R = 0, A = j[r] + "\n".concat(E, "+ actual").concat(S, " ").concat(w, "- expected").concat(S), k = " ".concat(m, "...").concat(S, " Lines skipped"); for (p = 0; p < O; p++) {
        var _ = p - a;
        if (f.length < p + 1)
            _ > 1 && p > 2 && (_ > 4 ? (c += "\n".concat(m, "...").concat(S), u = !0) : _ > 3 && (c += "\n  ".concat(s[p - 2]), R++), c += "\n  ".concat(s[p - 1]), R++), a = p, o += "\n".concat(w, "-").concat(S, " ").concat(s[p]), R++;
        else if (s.length < p + 1)
            _ > 1 && p > 2 && (_ > 4 ? (c += "\n".concat(m, "...").concat(S), u = !0) : _ > 3 && (c += "\n  ".concat(f[p - 2]), R++), c += "\n  ".concat(f[p - 1]), R++), a = p, c += "\n".concat(E, "+").concat(S, " ").concat(f[p]), R++;
        else {
            var T = s[p], P = f[p], I = P !== T && (!d(P, ",") || P.slice(0, -1) !== T);
            I && d(T, ",") && T.slice(0, -1) === P && (I = !1, P += ","), I ? (_ > 1 && p > 2 && (_ > 4 ? (c += "\n".concat(m, "...").concat(S), u = !0) : _ > 3 && (c += "\n  ".concat(f[p - 2]), R++), c += "\n  ".concat(f[p - 1]), R++), a = p, c += "\n".concat(E, "+").concat(S, " ").concat(P), o += "\n".concat(w, "-").concat(S, " ").concat(T), R += 2) : (c += o, o = "", 1 !== _ && 0 !== p || (c += "\n  ".concat(P), R++));
        }
        if (R > 20 && p < O - 2)
            return "".concat(A).concat(k, "\n").concat(c, "\n").concat(m, "...").concat(S).concat(o, "\n") + "".concat(m, "...").concat(S);
    } return "".concat(A).concat(u ? k : "", "\n").concat(c).concat(o).concat(i).concat(g); } var R = function (t) { function e(t) { var r; if (!function (t, e) { if (!(t instanceof e))
        throw new TypeError("Cannot call a class as a function"); }(this, e), "object" !== y(t) || null === t)
        throw new v("options", "Object", t); var o = t.message, i = t.operator, u = t.stackStartFn, l = t.actual, f = t.expected, s = Error.stackTraceLimit; if (Error.stackTraceLimit = 0, null != o)
        r = c(this, h(e).call(this, String(o)));
    else if (n.stderr && n.stderr.isTTY && (n.stderr && n.stderr.getColorDepth && 1 !== n.stderr.getColorDepth() ? (m = "[34m", E = "[32m", S = "[39m", w = "[31m") : (m = "", E = "", S = "", w = "")), "object" === y(l) && null !== l && "object" === y(f) && null !== f && "stack" in l && l instanceof Error && "stack" in f && f instanceof Error && (l = O(l), f = O(f)), "deepStrictEqual" === i || "strictEqual" === i)
        r = c(this, h(e).call(this, q(l, f, i)));
    else if ("notDeepStrictEqual" === i || "notStrictEqual" === i) {
        var p = j[i], g = x(l).split("\n");
        if ("notStrictEqual" === i && "object" === y(l) && null !== l && (p = j.notStrictEqualObject), g.length > 30)
            for (g[26] = "".concat(m, "...").concat(S); g.length > 27;)
                g.pop();
        r = 1 === g.length ? c(this, h(e).call(this, "".concat(p, " ").concat(g[0]))) : c(this, h(e).call(this, "".concat(p, "\n\n").concat(g.join("\n"), "\n")));
    }
    else {
        var b = x(l), d = "", R = j[i];
        "notDeepEqual" === i || "notEqual" === i ? (b = "".concat(j[i], "\n\n").concat(b)).length > 1024 && (b = "".concat(b.slice(0, 1021), "...")) : (d = "".concat(x(f)), b.length > 512 && (b = "".concat(b.slice(0, 509), "...")), d.length > 512 && (d = "".concat(d.slice(0, 509), "...")), "deepEqual" === i || "equal" === i ? b = "".concat(R, "\n\n").concat(b, "\n\nshould equal\n\n") : d = " ".concat(i, " ").concat(d)), r = c(this, h(e).call(this, "".concat(b).concat(d)));
    } return Error.stackTraceLimit = s, r.generatedMessage = !o, Object.defineProperty(a(r), "name", { value: "AssertionError [ERR_ASSERTION]", enumerable: !1, writable: !0, configurable: !0 }), r.code = "ERR_ASSERTION", r.actual = l, r.expected = f, r.operator = i, Error.captureStackTrace && Error.captureStackTrace(a(r), u), r.stack, r.name = "AssertionError", c(r); } var i, u; return !function (t, e) { if ("function" != typeof e && null !== e)
        throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), e && g(t, e); }(e, t), i = e, (u = [{ key: "toString", value: function () { return "".concat(this.name, " [").concat(this.code, "]: ").concat(this.message); } }, { key: b.custom, value: function (t, e) { return b(this, function (t) { for (var e = 1; e < arguments.length; e++) {
                var n = null != arguments[e] ? arguments[e] : {}, o = Object.keys(n);
                "function" == typeof Object.getOwnPropertySymbols && (o = o.concat(Object.getOwnPropertySymbols(n).filter((function (t) { return Object.getOwnPropertyDescriptor(n, t).enumerable; })))), o.forEach((function (e) { r(t, e, n[e]); }));
            } return t; }({}, e, { customInspect: !1, depth: 0 })); } }]) && o(i.prototype, u), e; }(f(Error)); return u$5 = R; }
    function s$3(t, e) { return function (t) { if (Array.isArray(t))
        return t; }(t) || function (t, e) { var n = [], r = !0, o = !1, c = void 0; try {
        for (var a, i = t[Symbol.iterator](); !(r = (a = i.next()).done) && (n.push(a.value), !e || n.length !== e); r = !0)
            ;
    }
    catch (t) {
        o = !0, c = t;
    }
    finally {
        try {
            r || null == i.return || i.return();
        }
        finally {
            if (o)
                throw c;
        }
    } return n; }(t, e) || function () { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }(); }
    function p$3(t) { return (p$3 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) { return typeof t; } : function (t) { return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t; })(t); }
    function m$2(t) { return t.call.bind(t); }
    function U(t) { if (0 === t.length || t.length > 10)
        return !0; for (var e = 0; e < t.length; e++) {
        var n = t.charCodeAt(e);
        if (n < 48 || n > 57)
            return !0;
    } return 10 === t.length && t >= Math.pow(2, 32); }
    function G(t) { return Object.keys(t).filter(U).concat(v$1(t).filter(Object.prototype.propertyIsEnumerable.bind(t))); }
    function V(t, e) { if (t === e)
        return 0; for (var n = t.length, r = e.length, o = 0, c = Math.min(n, r); o < c; ++o)
        if (t[o] !== e[o]) {
            n = t[o], r = e[o];
            break;
        } return n < r ? -1 : r < n ? 1 : 0; }
    function B(t, e, n, r) { if (t === e)
        return 0 !== t || (!n || b$1(t, e)); if (n) {
        if ("object" !== p$3(t))
            return "number" == typeof t && d$1(t) && d$1(e);
        if ("object" !== p$3(e) || null === t || null === e)
            return !1;
        if (Object.getPrototypeOf(t) !== Object.getPrototypeOf(e))
            return !1;
    }
    else {
        if (null === t || "object" !== p$3(t))
            return (null === e || "object" !== p$3(e)) && t == e;
        if (null === e || "object" !== p$3(e))
            return !1;
    } var o, c, a, i, u = S(t); if (u !== S(e))
        return !1; if (Array.isArray(t)) {
        if (t.length !== e.length)
            return !1;
        var l = G(t), f = G(e);
        return l.length === f.length && C(t, e, n, r, 1, l);
    } if ("[object Object]" === u && (!R(t) && R(e) || !k(t) && k(e)))
        return !1; if (q(t)) {
        if (!q(e) || Date.prototype.getTime.call(t) !== Date.prototype.getTime.call(e))
            return !1;
    }
    else if (A$1(t)) {
        if (!A$1(e) || (a = t, i = e, !(g$1 ? a.source === i.source && a.flags === i.flags : RegExp.prototype.toString.call(a) === RegExp.prototype.toString.call(i))))
            return !1;
    }
    else if (_(t) || t instanceof Error) {
        if (t.message !== e.message || t.name !== e.name)
            return !1;
    }
    else {
        if (x(t)) {
            if (n || !L(t) && !M(t)) {
                if (!function (t, e) { return t.byteLength === e.byteLength && 0 === V(new Uint8Array(t.buffer, t.byteOffset, t.byteLength), new Uint8Array(e.buffer, e.byteOffset, e.byteLength)); }(t, e))
                    return !1;
            }
            else if (!function (t, e) { if (t.byteLength !== e.byteLength)
                return !1; for (var n = 0; n < t.byteLength; n++)
                if (t[n] !== e[n])
                    return !1; return !0; }(t, e))
                return !1;
            var s = G(t), h = G(e);
            return s.length === h.length && C(t, e, n, r, 0, s);
        }
        if (k(t))
            return !(!k(e) || t.size !== e.size) && C(t, e, n, r, 2);
        if (R(t))
            return !(!R(e) || t.size !== e.size) && C(t, e, n, r, 3);
        if (O(t)) {
            if (c = e, (o = t).byteLength !== c.byteLength || 0 !== V(new Uint8Array(o), new Uint8Array(c)))
                return !1;
        }
        else if (T(t) && !function (t, e) { return P$1(t) ? P$1(e) && b$1(Number.prototype.valueOf.call(t), Number.prototype.valueOf.call(e)) : I(t) ? I(e) && String.prototype.valueOf.call(t) === String.prototype.valueOf.call(e) : D(t) ? D(e) && Boolean.prototype.valueOf.call(t) === Boolean.prototype.valueOf.call(e) : F(t) ? F(e) && BigInt.prototype.valueOf.call(t) === BigInt.prototype.valueOf.call(e) : N$1(e) && Symbol.prototype.valueOf.call(t) === Symbol.prototype.valueOf.call(e); }(t, e))
            return !1;
    } return C(t, e, n, r, 0); }
    function z(t, e) { return e.filter((function (e) { return w$1(t, e); })); }
    function C(t, e, n, r, o, c) { if (5 === arguments.length) {
        c = Object.keys(t);
        var a = Object.keys(e);
        if (c.length !== a.length)
            return !1;
    } for (var i = 0; i < c.length; i++)
        if (!E(e, c[i]))
            return !1; if (n && 5 === arguments.length) {
        var u = v$1(t);
        if (0 !== u.length) {
            var l = 0;
            for (i = 0; i < u.length; i++) {
                var f = u[i];
                if (w$1(t, f)) {
                    if (!w$1(e, f))
                        return !1;
                    c.push(f), l++;
                }
                else if (w$1(e, f))
                    return !1;
            }
            var s = v$1(e);
            if (u.length !== s.length && z(e, s).length !== l)
                return !1;
        }
        else {
            var p = v$1(e);
            if (0 !== p.length && 0 !== z(e, p).length)
                return !1;
        }
    } if (0 === c.length && (0 === o || 1 === o && 0 === t.length || 0 === t.size))
        return !0; if (void 0 === r)
        r = { val1: new Map, val2: new Map, position: 0 };
    else {
        var g = r.val1.get(t);
        if (void 0 !== g) {
            var h = r.val2.get(e);
            if (void 0 !== h)
                return g === h;
        }
        r.position++;
    } r.val1.set(t, r.position), r.val2.set(e, r.position); var y = Q(t, e, n, c, r, o); return r.val1.delete(t), r.val2.delete(e), y; }
    function Y(t, e, n, r) { for (var o = h$1(t), c = 0; c < o.length; c++) {
        var a = o[c];
        if (B(e, a, n, r))
            return t.delete(a), !0;
    } return !1; }
    function W(t) { switch (p$3(t)) {
        case "undefined": return null;
        case "object": return;
        case "symbol": return !1;
        case "string": t = +t;
        case "number": if (d$1(t))
            return !1;
    } return !0; }
    function H(t, e, n) { var r = W(n); return null != r ? r : e.has(r) && !t.has(r); }
    function J(t, e, n, r, o) { var c = W(n); if (null != c)
        return c; var a = e.get(c); return !(void 0 === a && !e.has(c) || !B(r, a, !1, o)) && (!t.has(c) && B(r, a, !1, o)); }
    function K(t, e, n, r, o, c) { for (var a = h$1(t), i = 0; i < a.length; i++) {
        var u = a[i];
        if (B(n, u, o, c) && B(r, e.get(u), o, c))
            return t.delete(u), !0;
    } return !1; }
    function Q(t, e, n, r, o, c) { var a = 0; if (2 === c) {
        if (!function (t, e, n, r) { for (var o = null, c = h$1(t), a = 0; a < c.length; a++) {
            var i = c[a];
            if ("object" === p$3(i) && null !== i)
                null === o && (o = new Set), o.add(i);
            else if (!e.has(i)) {
                if (n)
                    return !1;
                if (!H(t, e, i))
                    return !1;
                null === o && (o = new Set), o.add(i);
            }
        } if (null !== o) {
            for (var u = h$1(e), l = 0; l < u.length; l++) {
                var f = u[l];
                if ("object" === p$3(f) && null !== f) {
                    if (!Y(o, f, n, r))
                        return !1;
                }
                else if (!n && !t.has(f) && !Y(o, f, n, r))
                    return !1;
            }
            return 0 === o.size;
        } return !0; }(t, e, n, o))
            return !1;
    }
    else if (3 === c) {
        if (!function (t, e, n, r) { for (var o = null, c = y$2(t), a = 0; a < c.length; a++) {
            var i = s$3(c[a], 2), u = i[0], l = i[1];
            if ("object" === p$3(u) && null !== u)
                null === o && (o = new Set), o.add(u);
            else {
                var f = e.get(u);
                if (void 0 === f && !e.has(u) || !B(l, f, n, r)) {
                    if (n)
                        return !1;
                    if (!J(t, e, u, l, r))
                        return !1;
                    null === o && (o = new Set), o.add(u);
                }
            }
        } if (null !== o) {
            for (var g = y$2(e), h = 0; h < g.length; h++) {
                var b = s$3(g[h], 2), v = (u = b[0], b[1]);
                if ("object" === p$3(u) && null !== u) {
                    if (!K(o, t, u, v, n, r))
                        return !1;
                }
                else if (!(n || t.has(u) && B(t.get(u), v, !1, r) || K(o, t, u, v, !1, r)))
                    return !1;
            }
            return 0 === o.size;
        } return !0; }(t, e, n, o))
            return !1;
    }
    else if (1 === c)
        for (; a < t.length; a++) {
            if (!E(t, a)) {
                if (E(e, a))
                    return !1;
                for (var i = Object.keys(t); a < i.length; a++) {
                    var u = i[a];
                    if (!E(e, u) || !B(t[u], e[u], n, o))
                        return !1;
                }
                return i.length === Object.keys(e).length;
            }
            if (!E(e, a) || !B(t[a], e[a], n, o))
                return !1;
        } for (a = 0; a < r.length; a++) {
        var l = r[a];
        if (!B(t[l], e[l], n, o))
            return !1;
    } return !0; }
    function tt() { if ($$1)
        return Z; $$1 = !0; var o = chunk_0c2d1322_js_3.h; function c(t) { return (c = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) { return typeof t; } : function (t) { return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t; })(t); } var a, u, l = i$5().codes, s = l.ERR_AMBIGUOUS_ARGUMENT, p = l.ERR_INVALID_ARG_TYPE, g = l.ERR_INVALID_ARG_VALUE, h = l.ERR_INVALID_RETURN_VALUE, y = l.ERR_MISSING_ARGS, b = f$6(), v = chunk_dac557ba_js_2.u.inspect, d = chunk_dac557ba_js_2.u.types, m$1 = d.isPromise, E = d.isRegExp, w = Object.assign ? Object.assign : r.assign, S = Object.is ? Object.is : m; function j() { a = X.isDeepEqual, u = X.isDeepStrictEqual; } var O = !1, x = Z = k, q = {}; function R(t) { if (t.message instanceof Error)
        throw t.message; throw new b(t); } function A(t, e, n, r) { if (!n) {
        var o = !1;
        if (0 === e)
            o = !0, r = "No value argument passed to `assert.ok()`";
        else if (r instanceof Error)
            throw r;
        var c = new b({ actual: n, expected: !0, message: r, operator: "==", stackStartFn: t });
        throw c.generatedMessage = o, c;
    } } function k() { for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)
        e[n] = arguments[n]; A.apply(void 0, [k, e.length].concat(e)); } x.fail = function t(e, n, r, c, a) { var i, u = arguments.length; if (0 === u)
        i = "Failed";
    else if (1 === u)
        r = e, e = void 0;
    else {
        if (!1 === O) {
            O = !0;
            var l = o.emitWarning ? o.emitWarning : console.warn.bind(console);
            l("assert.fail() with more than one argument is deprecated. Please use assert.strictEqual() instead or only pass a message.", "DeprecationWarning", "DEP0094");
        }
        2 === u && (c = "!=");
    } if (r instanceof Error)
        throw r; var f = { actual: e, expected: n, operator: void 0 === c ? "fail" : c, stackStartFn: a || t }; void 0 !== r && (f.message = r); var s = new b(f); throw i && (s.message = i, s.generatedMessage = !0), s; }, x.AssertionError = b, x.ok = k, x.equal = function t(e, n, r) { if (arguments.length < 2)
        throw new y("actual", "expected"); e != n && R({ actual: e, expected: n, message: r, operator: "==", stackStartFn: t }); }, x.notEqual = function t(e, n, r) { if (arguments.length < 2)
        throw new y("actual", "expected"); e == n && R({ actual: e, expected: n, message: r, operator: "!=", stackStartFn: t }); }, x.deepEqual = function t(e, n, r) { if (arguments.length < 2)
        throw new y("actual", "expected"); void 0 === a && j(), a(e, n) || R({ actual: e, expected: n, message: r, operator: "deepEqual", stackStartFn: t }); }, x.notDeepEqual = function t(e, n, r) { if (arguments.length < 2)
        throw new y("actual", "expected"); void 0 === a && j(), a(e, n) && R({ actual: e, expected: n, message: r, operator: "notDeepEqual", stackStartFn: t }); }, x.deepStrictEqual = function t(e, n, r) { if (arguments.length < 2)
        throw new y("actual", "expected"); void 0 === a && j(), u(e, n) || R({ actual: e, expected: n, message: r, operator: "deepStrictEqual", stackStartFn: t }); }, x.notDeepStrictEqual = function t(e, n, r) { if (arguments.length < 2)
        throw new y("actual", "expected"); void 0 === a && j(); u(e, n) && R({ actual: e, expected: n, message: r, operator: "notDeepStrictEqual", stackStartFn: t }); }, x.strictEqual = function t(e, n, r) { if (arguments.length < 2)
        throw new y("actual", "expected"); S(e, n) || R({ actual: e, expected: n, message: r, operator: "strictEqual", stackStartFn: t }); }, x.notStrictEqual = function t(e, n, r) { if (arguments.length < 2)
        throw new y("actual", "expected"); S(e, n) && R({ actual: e, expected: n, message: r, operator: "notStrictEqual", stackStartFn: t }); }; var _ = function t(e, n, r) { var o = this; !function (t, e) { if (!(t instanceof e))
        throw new TypeError("Cannot call a class as a function"); }(this, t), n.forEach((function (t) { t in e && (void 0 !== r && "string" == typeof r[t] && E(e[t]) && e[t].test(r[t]) ? o[t] = r[t] : o[t] = e[t]); })); }; function T(t, e, n, r, o, c) { if (!(n in t) || !u(t[n], e[n])) {
        if (!r) {
            var a = new _(t, o), i = new _(e, o, t), l = new b({ actual: a, expected: i, operator: "deepStrictEqual", stackStartFn: c });
            throw l.actual = t, l.expected = e, l.operator = c.name, l;
        }
        R({ actual: t, expected: e, message: r, operator: c.name, stackStartFn: c });
    } } function P(t, e, n, r) { if ("function" != typeof e) {
        if (E(e))
            return e.test(t);
        if (2 === arguments.length)
            throw new p("expected", ["Function", "RegExp"], e);
        if ("object" !== c(t) || null === t) {
            var o = new b({ actual: t, expected: e, message: n, operator: "deepStrictEqual", stackStartFn: r });
            throw o.operator = r.name, o;
        }
        var i = Object.keys(e);
        if (e instanceof Error)
            i.push("name", "message");
        else if (0 === i.length)
            throw new g("error", e, "may not be an empty object");
        return void 0 === a && j(), i.forEach((function (o) { "string" == typeof t[o] && E(e[o]) && e[o].test(t[o]) || T(t, e, o, n, i, r); })), !0;
    } return void 0 !== e.prototype && t instanceof e || !Error.isPrototypeOf(e) && !0 === e.call({}, t); } function I(t) { if ("function" != typeof t)
        throw new p("fn", "Function", t); try {
        t();
    }
    catch (t) {
        return t;
    } return q; } function D(t) { return m$1(t) || null !== t && "object" === c(t) && "function" == typeof t.then && "function" == typeof t.catch; } function F(t) { return Promise.resolve().then((function () { var e; if ("function" == typeof t) {
        if (!D(e = t()))
            throw new h("instance of Promise", "promiseFn", e);
    }
    else {
        if (!D(t))
            throw new p("promiseFn", ["Function", "Promise"], t);
        e = t;
    } return Promise.resolve().then((function () { return e; })).then((function () { return q; })).catch((function (t) { return t; })); })); } function N(t, e, n, r) { if ("string" == typeof n) {
        if (4 === arguments.length)
            throw new p("error", ["Object", "Error", "Function", "RegExp"], n);
        if ("object" === c(e) && null !== e) {
            if (e.message === n)
                throw new s("error/message", 'The error message "'.concat(e.message, '" is identical to the message.'));
        }
        else if (e === n)
            throw new s("error/message", 'The error "'.concat(e, '" is identical to the message.'));
        r = n, n = void 0;
    }
    else if (null != n && "object" !== c(n) && "function" != typeof n)
        throw new p("error", ["Object", "Error", "Function", "RegExp"], n); if (e === q) {
        var o = "";
        n && n.name && (o += " (".concat(n.name, ")")), o += r ? ": ".concat(r) : ".";
        var a = "rejects" === t.name ? "rejection" : "exception";
        R({ actual: void 0, expected: n, operator: t.name, message: "Missing expected ".concat(a).concat(o), stackStartFn: t });
    } if (n && !P(e, n, r, t))
        throw e; } function L(t, e, n, r) { if (e !== q) {
        if ("string" == typeof n && (r = n, n = void 0), !n || P(e, n)) {
            var o = r ? ": ".concat(r) : ".", c = "doesNotReject" === t.name ? "rejection" : "exception";
            R({ actual: e, expected: n, operator: t.name, message: "Got unwanted ".concat(c).concat(o, "\n") + 'Actual message: "'.concat(e && e.message, '"'), stackStartFn: t });
        }
        throw e;
    } } function M() { for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)
        e[n] = arguments[n]; A.apply(void 0, [M, e.length].concat(e)); } return x.throws = function t(e) { for (var n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), o = 1; o < n; o++)
        r[o - 1] = arguments[o]; N.apply(void 0, [t, I(e)].concat(r)); }, x.rejects = function t(e) { for (var n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), o = 1; o < n; o++)
        r[o - 1] = arguments[o]; return F(e).then((function (e) { return N.apply(void 0, [t, e].concat(r)); })); }, x.doesNotThrow = function t(e) { for (var n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), o = 1; o < n; o++)
        r[o - 1] = arguments[o]; L.apply(void 0, [t, I(e)].concat(r)); }, x.doesNotReject = function t(e) { for (var n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), o = 1; o < n; o++)
        r[o - 1] = arguments[o]; return F(e).then((function (e) { return L.apply(void 0, [t, e].concat(r)); })); }, x.ifError = function t(e) { if (null != e) {
        var n = "ifError got unwanted exception: ";
        "object" === c(e) && "string" == typeof e.message ? 0 === e.message.length && e.constructor ? n += e.constructor.name : n += e.message : n += v(e);
        var r = new b({ actual: e, expected: null, operator: "ifError", message: n, stackStartFn: t }), o = e.stack;
        if ("string" == typeof o) {
            var a = o.split("\n");
            a.shift();
            for (var i = r.stack.split("\n"), u = 0; u < a.length; u++) {
                var l = i.indexOf(a[u]);
                if (-1 !== l) {
                    i = i.slice(0, l);
                    break;
                }
            }
            r.stack = "".concat(i.join("\n"), "\n").concat(a.join("\n"));
        }
        throw r;
    } }, x.strict = w(M, x, { equal: x.strictEqual, deepEqual: x.deepStrictEqual, notEqual: x.notStrictEqual, notDeepEqual: x.notDeepStrictEqual }), x.strict.strict = x.strict, Z; }
    return {
        setters: [
            function (chunk_dac557ba_js_2_1) {
                chunk_dac557ba_js_2 = chunk_dac557ba_js_2_1;
            },
            function (chunk_0c2d1322_js_3_1) {
                chunk_0c2d1322_js_3 = chunk_0c2d1322_js_3_1;
            }
        ],
        execute: function () {
            r = { assign: e, polyfill: function () { Object.assign || Object.defineProperty(Object, "assign", { enumerable: !1, configurable: !0, writable: !0, value: e }); } };
            e$1 = Object.prototype.toString, r$1 = function (t) { var r = e$1.call(t), n = "[object Arguments]" === r; return n || (n = "[object Array]" !== r && null !== t && "object" == typeof t && "number" == typeof t.length && t.length >= 0 && "[object Function]" === e$1.call(t.callee)), n; };
            if (!Object.keys) {
                var n = Object.prototype.hasOwnProperty, o = Object.prototype.toString, c = r$1, l = Object.prototype.propertyIsEnumerable, i = !l.call({ toString: null }, "toString"), a = l.call((function () { }), "prototype"), u = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"], f = function (t) { var e = t.constructor; return e && e.prototype === t; }, p = { $applicationCache: !0, $console: !0, $external: !0, $frame: !0, $frameElement: !0, $frames: !0, $innerHeight: !0, $innerWidth: !0, $onmozfullscreenchange: !0, $onmozfullscreenerror: !0, $outerHeight: !0, $outerWidth: !0, $pageXOffset: !0, $pageYOffset: !0, $parent: !0, $scrollLeft: !0, $scrollTop: !0, $scrollX: !0, $scrollY: !0, $self: !0, $webkitIndexedDB: !0, $webkitStorageInfo: !0, $window: !0 }, s = function () { if ("undefined" == typeof window)
                    return !1; for (var t in window)
                    try {
                        if (!p["$" + t] && n.call(window, t) && null !== window[t] && "object" == typeof window[t])
                            try {
                                f(window[t]);
                            }
                            catch (t) {
                                return !0;
                            }
                    }
                    catch (t) {
                        return !0;
                    } return !1; }();
                t = function (t) { var e = null !== t && "object" == typeof t, r = "[object Function]" === o.call(t), l = c(t), p = e && "[object String]" === o.call(t), y = []; if (!e && !r && !l)
                    throw new TypeError("Object.keys called on a non-object"); var b = a && r; if (p && t.length > 0 && !n.call(t, 0))
                    for (var g = 0; g < t.length; ++g)
                        y.push(String(g)); if (l && t.length > 0)
                    for (var h = 0; h < t.length; ++h)
                        y.push(String(h));
                else
                    for (var $ in t)
                        b && "prototype" === $ || !n.call(t, $) || y.push(String($)); if (i)
                    for (var j = function (t) { if ("undefined" == typeof window || !s)
                        return f(t); try {
                        return f(t);
                    }
                    catch (t) {
                        return !1;
                    } }(t), w = 0; w < u.length; ++w)
                        j && "constructor" === u[w] || !n.call(t, u[w]) || y.push(u[w]); return y; };
            }
            y = t, b = Array.prototype.slice, g = r$1, h = Object.keys, $ = h ? function (t) { return h(t); } : y, j = Object.keys;
            $.shim = function () { Object.keys ? function () { var t = Object.keys(arguments); return t && t.length === arguments.length; }(1, 2) || (Object.keys = function (t) { return g(t) ? j(b.call(t)) : j(t); }) : Object.keys = $; return Object.keys || $; };
            w = $;
            r$2 = w, e$2 = "function" == typeof Symbol && "symbol" == typeof Symbol("foo"), o$1 = Object.prototype.toString, n$1 = Array.prototype.concat, a$1 = Object.defineProperty, c$1 = a$1 && function () { var t = {}; try {
                for (var r in a$1(t, "x", { enumerable: !1, value: t }), t)
                    return !1;
                return t.x === t;
            }
            catch (t) {
                return !1;
            } }(), l$1 = function (t, r, e, n) { var l; (!(r in t) || "function" == typeof (l = n) && "[object Function]" === o$1.call(l) && n()) && (c$1 ? a$1(t, r, { configurable: !0, enumerable: !1, value: e, writable: !0 }) : t[r] = e); }, u$1 = function (t, o) { var a = arguments.length > 2 ? arguments[2] : {}, c = r$2(o); e$2 && (c = n$1.call(c, Object.getOwnPropertySymbols(o))); for (var u = 0; u < c.length; u += 1)
                l$1(t, c[u], o[c[u]], a[c[u]]); };
            u$1.supportsDescriptors = !!c$1;
            f$1 = u$1;
            t$1 = function () { if ("function" != typeof Symbol || "function" != typeof Object.getOwnPropertySymbols)
                return !1; if ("symbol" == typeof Symbol.iterator)
                return !0; var t = {}, e = Symbol("test"), r = Object(e); if ("string" == typeof e)
                return !1; if ("[object Symbol]" !== Object.prototype.toString.call(e))
                return !1; if ("[object Symbol]" !== Object.prototype.toString.call(r))
                return !1; for (e in t[e] = 42, t)
                return !1; if ("function" == typeof Object.keys && 0 !== Object.keys(t).length)
                return !1; if ("function" == typeof Object.getOwnPropertyNames && 0 !== Object.getOwnPropertyNames(t).length)
                return !1; var o = Object.getOwnPropertySymbols(t); if (1 !== o.length || o[0] !== e)
                return !1; if (!Object.prototype.propertyIsEnumerable.call(t, e))
                return !1; if ("function" == typeof Object.getOwnPropertyDescriptor) {
                var n = Object.getOwnPropertyDescriptor(t, e);
                if (42 !== n.value || !0 !== n.enumerable)
                    return !1;
            } return !0; };
            f$2 = ("undefined" != typeof globalThis ? globalThis : "undefined" != typeof self ? self : global).Symbol, e$3 = t$1, l$2 = function () { return "function" == typeof f$2 && ("function" == typeof Symbol && ("symbol" == typeof f$2("foo") && ("symbol" == typeof Symbol("bar") && e$3()))); };
            t$2 = "Function.prototype.bind called on incompatible ", n$2 = Array.prototype.slice, o$2 = Object.prototype.toString, r$3 = function (r) { var e = this; if ("function" != typeof e || "[object Function]" !== o$2.call(e))
                throw new TypeError(t$2 + e); for (var p, i = n$2.call(arguments, 1), c = function () { if (this instanceof p) {
                var t = e.apply(this, i.concat(n$2.call(arguments)));
                return Object(t) === t ? t : this;
            } return e.apply(r, i.concat(n$2.call(arguments))); }, a = Math.max(0, e.length - i.length), l = [], u = 0; u < a; u++)
                l.push("$" + u); if (p = Function("binder", "return function (" + l.join(",") + "){ return binder.apply(this,arguments); }")(c), e.prototype) {
                var y = function () { };
                y.prototype = e.prototype, p.prototype = new y, y.prototype = null;
            } return p; }, e$4 = Function.prototype.bind || r$3;
            o$3 = TypeError, t$3 = Object.getOwnPropertyDescriptor;
            if (t$3)
                try {
                    t$3({}, "");
                }
                catch (r) {
                    t$3 = null;
                }
            n$3 = function () { throw new o$3; }, y$1 = t$3 ? function () { try {
                return arguments.callee, n$3;
            }
            catch (r) {
                try {
                    return t$3(arguments, "callee").get;
                }
                catch (r) {
                    return n$3;
                }
            } }() : n$3, a$2 = l$2(), i$1 = Object.getPrototypeOf || function (r) { return r.__proto__; }, d = "undefined" == typeof Uint8Array ? void 0 : i$1(Uint8Array), f$3 = { "%Array%": Array, "%ArrayBuffer%": "undefined" == typeof ArrayBuffer ? void 0 : ArrayBuffer, "%ArrayBufferPrototype%": "undefined" == typeof ArrayBuffer ? void 0 : ArrayBuffer.prototype, "%ArrayIteratorPrototype%": a$2 ? i$1([][Symbol.iterator]()) : void 0, "%ArrayPrototype%": Array.prototype, "%ArrayProto_entries%": Array.prototype.entries, "%ArrayProto_forEach%": Array.prototype.forEach, "%ArrayProto_keys%": Array.prototype.keys, "%ArrayProto_values%": Array.prototype.values, "%AsyncFromSyncIteratorPrototype%": void 0, "%AsyncFunction%": void 0, "%AsyncFunctionPrototype%": void 0, "%AsyncGenerator%": void 0, "%AsyncGeneratorFunction%": void 0, "%AsyncGeneratorPrototype%": void 0, "%AsyncIteratorPrototype%": void 0, "%Atomics%": "undefined" == typeof Atomics ? void 0 : Atomics, "%Boolean%": Boolean, "%BooleanPrototype%": Boolean.prototype, "%DataView%": "undefined" == typeof DataView ? void 0 : DataView, "%DataViewPrototype%": "undefined" == typeof DataView ? void 0 : DataView.prototype, "%Date%": Date, "%DatePrototype%": Date.prototype, "%decodeURI%": decodeURI, "%decodeURIComponent%": decodeURIComponent, "%encodeURI%": encodeURI, "%encodeURIComponent%": encodeURIComponent, "%Error%": Error, "%ErrorPrototype%": Error.prototype, "%eval%": eval, "%EvalError%": EvalError, "%EvalErrorPrototype%": EvalError.prototype, "%Float32Array%": "undefined" == typeof Float32Array ? void 0 : Float32Array, "%Float32ArrayPrototype%": "undefined" == typeof Float32Array ? void 0 : Float32Array.prototype, "%Float64Array%": "undefined" == typeof Float64Array ? void 0 : Float64Array, "%Float64ArrayPrototype%": "undefined" == typeof Float64Array ? void 0 : Float64Array.prototype, "%Function%": Function, "%FunctionPrototype%": Function.prototype, "%Generator%": void 0, "%GeneratorFunction%": void 0, "%GeneratorPrototype%": void 0, "%Int8Array%": "undefined" == typeof Int8Array ? void 0 : Int8Array, "%Int8ArrayPrototype%": "undefined" == typeof Int8Array ? void 0 : Int8Array.prototype, "%Int16Array%": "undefined" == typeof Int16Array ? void 0 : Int16Array, "%Int16ArrayPrototype%": "undefined" == typeof Int16Array ? void 0 : Int8Array.prototype, "%Int32Array%": "undefined" == typeof Int32Array ? void 0 : Int32Array, "%Int32ArrayPrototype%": "undefined" == typeof Int32Array ? void 0 : Int32Array.prototype, "%isFinite%": isFinite, "%isNaN%": isNaN, "%IteratorPrototype%": a$2 ? i$1(i$1([][Symbol.iterator]())) : void 0, "%JSON%": "object" == typeof JSON ? JSON : void 0, "%JSONParse%": "object" == typeof JSON ? JSON.parse : void 0, "%Map%": "undefined" == typeof Map ? void 0 : Map, "%MapIteratorPrototype%": "undefined" != typeof Map && a$2 ? i$1((new Map)[Symbol.iterator]()) : void 0, "%MapPrototype%": "undefined" == typeof Map ? void 0 : Map.prototype, "%Math%": Math, "%Number%": Number, "%NumberPrototype%": Number.prototype, "%Object%": Object, "%ObjectPrototype%": Object.prototype, "%ObjProto_toString%": Object.prototype.toString, "%ObjProto_valueOf%": Object.prototype.valueOf, "%parseFloat%": parseFloat, "%parseInt%": parseInt, "%Promise%": "undefined" == typeof Promise ? void 0 : Promise, "%PromisePrototype%": "undefined" == typeof Promise ? void 0 : Promise.prototype, "%PromiseProto_then%": "undefined" == typeof Promise ? void 0 : Promise.prototype.then, "%Promise_all%": "undefined" == typeof Promise ? void 0 : Promise.all, "%Promise_reject%": "undefined" == typeof Promise ? void 0 : Promise.reject, "%Promise_resolve%": "undefined" == typeof Promise ? void 0 : Promise.resolve, "%Proxy%": "undefined" == typeof Proxy ? void 0 : Proxy, "%RangeError%": RangeError, "%RangeErrorPrototype%": RangeError.prototype, "%ReferenceError%": ReferenceError, "%ReferenceErrorPrototype%": ReferenceError.prototype, "%Reflect%": "undefined" == typeof Reflect ? void 0 : Reflect, "%RegExp%": RegExp, "%RegExpPrototype%": RegExp.prototype, "%Set%": "undefined" == typeof Set ? void 0 : Set, "%SetIteratorPrototype%": "undefined" != typeof Set && a$2 ? i$1((new Set)[Symbol.iterator]()) : void 0, "%SetPrototype%": "undefined" == typeof Set ? void 0 : Set.prototype, "%SharedArrayBuffer%": "undefined" == typeof SharedArrayBuffer ? void 0 : SharedArrayBuffer, "%SharedArrayBufferPrototype%": "undefined" == typeof SharedArrayBuffer ? void 0 : SharedArrayBuffer.prototype, "%String%": String, "%StringIteratorPrototype%": a$2 ? i$1(""[Symbol.iterator]()) : void 0, "%StringPrototype%": String.prototype, "%Symbol%": a$2 ? Symbol : void 0, "%SymbolPrototype%": a$2 ? Symbol.prototype : void 0, "%SyntaxError%": SyntaxError, "%SyntaxErrorPrototype%": SyntaxError.prototype, "%ThrowTypeError%": y$1, "%TypedArray%": d, "%TypedArrayPrototype%": d ? d.prototype : void 0, "%TypeError%": o$3, "%TypeErrorPrototype%": o$3.prototype, "%Uint8Array%": "undefined" == typeof Uint8Array ? void 0 : Uint8Array, "%Uint8ArrayPrototype%": "undefined" == typeof Uint8Array ? void 0 : Uint8Array.prototype, "%Uint8ClampedArray%": "undefined" == typeof Uint8ClampedArray ? void 0 : Uint8ClampedArray, "%Uint8ClampedArrayPrototype%": "undefined" == typeof Uint8ClampedArray ? void 0 : Uint8ClampedArray.prototype, "%Uint16Array%": "undefined" == typeof Uint16Array ? void 0 : Uint16Array, "%Uint16ArrayPrototype%": "undefined" == typeof Uint16Array ? void 0 : Uint16Array.prototype, "%Uint32Array%": "undefined" == typeof Uint32Array ? void 0 : Uint32Array, "%Uint32ArrayPrototype%": "undefined" == typeof Uint32Array ? void 0 : Uint32Array.prototype, "%URIError%": URIError, "%URIErrorPrototype%": URIError.prototype, "%WeakMap%": "undefined" == typeof WeakMap ? void 0 : WeakMap, "%WeakMapPrototype%": "undefined" == typeof WeakMap ? void 0 : WeakMap.prototype, "%WeakSet%": "undefined" == typeof WeakSet ? void 0 : WeakSet, "%WeakSetPrototype%": "undefined" == typeof WeakSet ? void 0 : WeakSet.prototype }, u$2 = e$4.call(Function.call, String.prototype.replace), A = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g, l$3 = /\\(\\)?/g, v = function (r) { var e = []; return u$2(r, A, (function (r, o, t, n) { e[e.length] = t ? u$2(n, l$3, "$1") : o || r; })), e; }, P = function (r, e) { if (!(r in f$3))
                throw new SyntaxError("intrinsic " + r + " does not exist!"); if (void 0 === f$3[r] && !e)
                throw new o$3("intrinsic " + r + " exists, but is not available. Please file an issue!"); return f$3[r]; }, c$2 = function (r, e) { if ("string" != typeof r || 0 === r.length)
                throw new TypeError("intrinsic name must be a non-empty string"); if (arguments.length > 1 && "boolean" != typeof e)
                throw new TypeError('"allowMissing" argument must be a boolean'); for (var n = v(r), y = P("%" + (n.length > 0 ? n[0] : "") + "%", e), a = 1; a < n.length; a += 1)
                if (null != y)
                    if (t$3 && a + 1 >= n.length) {
                        var i = t$3(y, n[a]);
                        if (!e && !(n[a] in y))
                            throw new o$3("base intrinsic for " + r + " exists, but the property is not available.");
                        y = i ? i.get || i.value : y[n[a]];
                    }
                    else
                        y = y[n[a]]; return y; };
            p$1 = e$4, o$4 = c$2("%Function%"), i$2 = o$4.apply, a$3 = o$4.call;
            (t$4 = function () { return p$1.apply(a$3, arguments); }).apply = function () { return p$1.apply(i$2, arguments); };
            l$4 = t$4;
            i$3 = function (t) { return t != t; }, o$5 = (r$4 = function (t, e) { return 0 === t && 0 === e ? 1 / t == 1 / e : t === e || !(!i$3(t) || !i$3(e)); }, r$4), c$3 = (n$4 = function () { return "function" == typeof Object.is ? Object.is : o$5; }, n$4), f$4 = f$1, u$3 = f$1, s$1 = r$4, a$4 = n$4, l$5 = function () { var t = c$3(); return f$4(Object, { is: t }, { is: function () { return Object.is !== t; } }), t; }, p$2 = l$4(a$4(), Object);
            u$3(p$2, { getPolyfill: a$4, implementation: s$1, shim: l$5 });
            m = p$2;
            N = function (r) { return r != r; };
            i$4 = N, n$5 = (e$5 = function () { return Number.isNaN && Number.isNaN(NaN) && !Number.isNaN("a") ? Number.isNaN : i$4; }, f$1), t$5 = e$5, u$4 = f$1, a$5 = N, m$1 = e$5, o$6 = function () { var r = t$5(); return n$5(Number, { isNaN: r }, { isNaN: function () { return Number.isNaN !== r; } }), r; }, s$2 = m$1();
            u$4(s$2, { getPolyfill: m$1, implementation: a$5, shim: o$6 });
            f$5 = s$2;
            c$4 = {}, a$6 = !1;
            u$5 = {}, l$6 = !1;
            g$1 = void 0 !== /a/g.flags, h$1 = function (t) { var e = []; return t.forEach((function (t) { return e.push(t); })), e; }, y$2 = function (t) { var e = []; return t.forEach((function (t, n) { return e.push([n, t]); })), e; }, b$1 = Object.is ? Object.is : m, v$1 = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function () { return []; }, d$1 = Number.isNaN ? Number.isNaN : f$5;
            E = m$2(Object.prototype.hasOwnProperty), w$1 = m$2(Object.prototype.propertyIsEnumerable), S = m$2(Object.prototype.toString), j$1 = chunk_dac557ba_js_2.u.types, O = j$1.isAnyArrayBuffer, x = j$1.isArrayBufferView, q = j$1.isDate, R = j$1.isMap, A$1 = j$1.isRegExp, k = j$1.isSet, _ = j$1.isNativeError, T = j$1.isBoxedPrimitive, P$1 = j$1.isNumberObject, I = j$1.isStringObject, D = j$1.isBooleanObject, F = j$1.isBigIntObject, N$1 = j$1.isSymbolObject, L = j$1.isFloat32Array, M = j$1.isFloat64Array;
            X = { isDeepEqual: function (t, e) { return B(t, e, !1); }, isDeepStrictEqual: function (t, e) { return B(t, e, !0); } }, Z = {}, $$1 = !1;
            et = tt();
            AssertionError = et.AssertionError;
            exports_174("AssertionError", AssertionError);
            deepEqual = et.deepEqual;
            exports_174("deepEqual", deepEqual);
            deepStrictEqual = et.deepStrictEqual;
            exports_174("deepStrictEqual", deepStrictEqual);
            doesNotReject = et.doesNotReject;
            exports_174("doesNotReject", doesNotReject);
            doesNotThrow = et.doesNotThrow;
            exports_174("doesNotThrow", doesNotThrow);
            equal = et.equal;
            exports_174("equal", equal);
            fail = et.fail;
            exports_174("fail", fail);
            ifError = et.ifError;
            exports_174("ifError", ifError);
            notDeepEqual = et.notDeepEqual;
            exports_174("notDeepEqual", notDeepEqual);
            notDeepStrictEqual = et.notDeepStrictEqual;
            exports_174("notDeepStrictEqual", notDeepStrictEqual);
            notEqual = et.notEqual;
            exports_174("notEqual", notEqual);
            notStrictEqual = et.notStrictEqual;
            exports_174("notStrictEqual", notStrictEqual);
            ok = et.ok;
            exports_174("ok", ok);
            rejects = et.rejects;
            exports_174("rejects", rejects);
            strict = et.strict;
            exports_174("strict", strict);
            strictEqual = et.strictEqual;
            exports_174("strictEqual", strictEqual);
            throws = et.throws;
            exports_174("throws", throws);
            exports_174("default", et);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/query/joinclause", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/assert"], function (exports_175, context_175) {
    "use strict";
    var assert_js_1;
    var __moduleName = context_175 && context_175.id;
    function JoinClause(table, type, schema) {
        this.schema = schema;
        this.table = table;
        this.joinType = type;
        this.and = this;
        this.clauses = [];
    }
    function getClauseFromArguments(compilerType, bool, first, operator, second) {
        let data = null;
        if (typeof first === 'function') {
            data = {
                type: 'onWrapped',
                value: first,
                bool: bool,
            };
        }
        else {
            switch (arguments.length) {
                case 3: {
                    data = { type: 'onRaw', value: first, bool };
                    break;
                }
                case 4:
                    data = {
                        type: compilerType,
                        column: first,
                        operator: '=',
                        value: operator,
                        bool,
                    };
                    break;
                default:
                    data = {
                        type: compilerType,
                        column: first,
                        operator,
                        value: second,
                        bool,
                    };
            }
        }
        return data;
    }
    return {
        setters: [
            function (assert_js_1_1) {
                assert_js_1 = assert_js_1_1;
            }
        ],
        execute: function () {
            Object.assign(JoinClause.prototype, {
                grouping: 'join',
                on(first) {
                    if (typeof first === 'object' && typeof first.toSQL !== 'function') {
                        const keys = Object.keys(first);
                        let i = -1;
                        const method = this._bool() === 'or' ? 'orOn' : 'on';
                        while (++i < keys.length) {
                            this[method](keys[i], first[keys[i]]);
                        }
                        return this;
                    }
                    const data = getClauseFromArguments('onBasic', this._bool(), ...arguments);
                    if (data) {
                        this.clauses.push(data);
                    }
                    return this;
                },
                using(column) {
                    return this.clauses.push({ type: 'onUsing', column, bool: this._bool() });
                },
                orOn(first, operator, second) {
                    return this._bool('or').on.apply(this, arguments);
                },
                onVal(first) {
                    if (typeof first === 'object' && typeof first.toSQL !== 'function') {
                        const keys = Object.keys(first);
                        let i = -1;
                        const method = this._bool() === 'or' ? 'orOnVal' : 'onVal';
                        while (++i < keys.length) {
                            this[method](keys[i], first[keys[i]]);
                        }
                        return this;
                    }
                    const data = getClauseFromArguments('onVal', this._bool(), ...arguments);
                    if (data) {
                        this.clauses.push(data);
                    }
                    return this;
                },
                andOnVal() {
                    return this.onVal(...arguments);
                },
                orOnVal() {
                    return this._bool('or').onVal(...arguments);
                },
                onBetween(column, values) {
                    assert_js_1.default(Array.isArray(values), 'The second argument to onBetween must be an array.');
                    assert_js_1.default(values.length === 2, 'You must specify 2 values for the onBetween clause');
                    this.clauses.push({
                        type: 'onBetween',
                        column,
                        value: values,
                        bool: this._bool(),
                        not: this._not(),
                    });
                    return this;
                },
                onNotBetween(column, values) {
                    return this._not(true).onBetween(column, values);
                },
                orOnBetween(column, values) {
                    return this._bool('or').onBetween(column, values);
                },
                orOnNotBetween(column, values) {
                    return this._bool('or')._not(true).onBetween(column, values);
                },
                onIn(column, values) {
                    if (Array.isArray(values) && values.length === 0)
                        return this.on(1, '=', 0);
                    this.clauses.push({
                        type: 'onIn',
                        column,
                        value: values,
                        not: this._not(),
                        bool: this._bool(),
                    });
                    return this;
                },
                onNotIn(column, values) {
                    return this._not(true).onIn(column, values);
                },
                orOnIn(column, values) {
                    return this._bool('or').onIn(column, values);
                },
                orOnNotIn(column, values) {
                    return this._bool('or')._not(true).onIn(column, values);
                },
                onNull(column) {
                    this.clauses.push({
                        type: 'onNull',
                        column,
                        not: this._not(),
                        bool: this._bool(),
                    });
                    return this;
                },
                orOnNull(callback) {
                    return this._bool('or').onNull(callback);
                },
                onNotNull(callback) {
                    return this._not(true).onNull(callback);
                },
                orOnNotNull(callback) {
                    return this._not(true)._bool('or').onNull(callback);
                },
                onExists(callback) {
                    this.clauses.push({
                        type: 'onExists',
                        value: callback,
                        not: this._not(),
                        bool: this._bool(),
                    });
                    return this;
                },
                orOnExists(callback) {
                    return this._bool('or').onExists(callback);
                },
                onNotExists(callback) {
                    return this._not(true).onExists(callback);
                },
                orOnNotExists(callback) {
                    return this._not(true)._bool('or').onExists(callback);
                },
                type(type) {
                    this.joinType = type;
                    return this;
                },
                _bool(bool) {
                    if (arguments.length === 1) {
                        this._boolFlag = bool;
                        return this;
                    }
                    const ret = this._boolFlag || 'and';
                    this._boolFlag = 'and';
                    return ret;
                },
                _not(val) {
                    if (arguments.length === 1) {
                        this._notFlag = val;
                        return this;
                    }
                    const ret = this._notFlag;
                    this._notFlag = false;
                    return ret;
                },
            });
            Object.defineProperty(JoinClause.prototype, 'or', {
                get() {
                    return this._bool('or');
                },
            });
            JoinClause.prototype.andOn = JoinClause.prototype.on;
            JoinClause.prototype.andOnIn = JoinClause.prototype.onIn;
            JoinClause.prototype.andOnNotIn = JoinClause.prototype.onNotIn;
            JoinClause.prototype.andOnNull = JoinClause.prototype.onNull;
            JoinClause.prototype.andOnNotNull = JoinClause.prototype.onNotNull;
            JoinClause.prototype.andOnExists = JoinClause.prototype.onExists;
            JoinClause.prototype.andOnNotExists = JoinClause.prototype.onNotExists;
            JoinClause.prototype.andOnBetween = JoinClause.prototype.onBetween;
            JoinClause.prototype.andOnNotBetween = JoinClause.prototype.onNotBetween;
            exports_175("default", JoinClause);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/query/constants", [], function (exports_176, context_176) {
    "use strict";
    var lockMode, waitMode;
    var __moduleName = context_176 && context_176.id;
    return {
        setters: [],
        execute: function () {
            exports_176("lockMode", lockMode = {
                forShare: 'forShare',
                forUpdate: 'forUpdate',
            });
            exports_176("waitMode", waitMode = {
                skipLocked: 'skipLocked',
                noWait: 'noWait',
            });
            exports_176("default", {
                lockMode: {
                    forShare: 'forShare',
                    forUpdate: 'forUpdate',
                },
                waitMode: {
                    skipLocked: 'skipLocked',
                    noWait: 'noWait',
                },
            });
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/query/builder", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/assert", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/events", "https://raw.githubusercontent.com/denjucks/dex/master/lib/raw", "https://raw.githubusercontent.com/denjucks/dex/master/lib/helpers", "https://raw.githubusercontent.com/denjucks/dex/master/lib/query/joinclause", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/util/save-async-stack", "https://raw.githubusercontent.com/denjucks/dex/master/lib/query/constants", "https://raw.githubusercontent.com/denjucks/dex/master/lib/interface"], function (exports_177, context_177) {
    "use strict";
    var assert_js_2, inherits_js_2, events_js_2, raw_js_2, helpers_js_2, joinclause_js_1, index_js_5, assign, clone, each, isBoolean, isEmpty, isFunction, isNumber, isObject, isPlainObject, isString, last, reject, tail, toArray, save_async_stack_js_2, constants_js_2, validateWithArgs, interface_js_2;
    var __moduleName = context_177 && context_177.id;
    function Builder(client) {
        this.client = client;
        this.and = this;
        this._single = {};
        this._statements = [];
        this._method = 'select';
        if (client.config) {
            save_async_stack_js_2.default(this, 5);
            this._debug = client.config.debug;
        }
        this._joinFlag = 'inner';
        this._boolFlag = 'and';
        this._notFlag = false;
        this._asColumnFlag = false;
    }
    return {
        setters: [
            function (assert_js_2_1) {
                assert_js_2 = assert_js_2_1;
            },
            function (inherits_js_2_1) {
                inherits_js_2 = inherits_js_2_1;
            },
            function (events_js_2_1) {
                events_js_2 = events_js_2_1;
            },
            function (raw_js_2_1) {
                raw_js_2 = raw_js_2_1;
            },
            function (helpers_js_2_1) {
                helpers_js_2 = helpers_js_2_1;
            },
            function (joinclause_js_1_1) {
                joinclause_js_1 = joinclause_js_1_1;
            },
            function (index_js_5_1) {
                index_js_5 = index_js_5_1;
            },
            function (save_async_stack_js_2_1) {
                save_async_stack_js_2 = save_async_stack_js_2_1;
            },
            function (constants_js_2_1) {
                constants_js_2 = constants_js_2_1;
            },
            function (interface_js_2_1) {
                interface_js_2 = interface_js_2_1;
            }
        ],
        execute: function () {
            assign = index_js_5.default.assign;
            clone = index_js_5.default.clone;
            each = index_js_5.default.each;
            isBoolean = index_js_5.default.isBoolean;
            isEmpty = index_js_5.default.isEmpty;
            isFunction = index_js_5.default.isFunction;
            isNumber = index_js_5.default.isNumber;
            isObject = index_js_5.default.isObject;
            isPlainObject = index_js_5.default.isPlainObject;
            isString = index_js_5.default.isString;
            last = index_js_5.default.last;
            reject = index_js_5.default.reject;
            tail = index_js_5.default.tail;
            toArray = index_js_5.default.toArray;
            inherits_js_2.default(Builder, events_js_2.EventEmitter);
            validateWithArgs = function (alias, statement, method) {
                if (typeof alias !== 'string') {
                    throw new Error(`${method}() first argument must be a string`);
                }
                if (typeof statement === 'function' ||
                    statement instanceof Builder ||
                    statement instanceof raw_js_2.default) {
                    return;
                }
                throw new Error(`${method}() second argument must be a function / QueryBuilder or a raw`);
            };
            assign(Builder.prototype, {
                toString() {
                    return this.toQuery();
                },
                toSQL(method, tz) {
                    return this.client.queryCompiler(this).toSQL(method || this._method, tz);
                },
                clone() {
                    const cloned = new this.constructor(this.client);
                    cloned._method = this._method;
                    cloned._single = clone(this._single);
                    cloned._statements = clone(this._statements);
                    cloned._debug = this._debug;
                    if (this._options !== undefined) {
                        cloned._options = clone(this._options);
                    }
                    if (this._queryContext !== undefined) {
                        cloned._queryContext = clone(this._queryContext);
                    }
                    if (this._connection !== undefined) {
                        cloned._connection = this._connection;
                    }
                    return cloned;
                },
                timeout(ms, { cancel } = {}) {
                    if (isNumber(ms) && ms > 0) {
                        this._timeout = ms;
                        if (cancel) {
                            this.client.assertCanCancelQuery();
                            this._cancelOnTimeout = true;
                        }
                    }
                    return this;
                },
                with(alias, statement) {
                    validateWithArgs(alias, statement, 'with');
                    return this.withWrapped(alias, statement);
                },
                withWrapped(alias, query) {
                    this._statements.push({
                        grouping: 'with',
                        type: 'withWrapped',
                        alias: alias,
                        value: query,
                    });
                    return this;
                },
                withRecursive(alias, statement) {
                    validateWithArgs(alias, statement, 'withRecursive');
                    return this.withRecursiveWrapped(alias, statement);
                },
                withRecursiveWrapped(alias, query) {
                    this.withWrapped(alias, query);
                    this._statements[this._statements.length - 1].recursive = true;
                    return this;
                },
                columns(column) {
                    if (!column && column !== 0)
                        return this;
                    this._statements.push({
                        grouping: 'columns',
                        value: helpers_js_2.default.normalizeArr.apply(null, arguments),
                    });
                    return this;
                },
                as(column) {
                    this._single.as = column;
                    return this;
                },
                withSchema(schemaName) {
                    this._single.schema = schemaName;
                    return this;
                },
                table(tableName, options = {}) {
                    this._single.table = tableName;
                    this._single.only = options.only === true;
                    return this;
                },
                distinct() {
                    this._statements.push({
                        grouping: 'columns',
                        value: helpers_js_2.default.normalizeArr.apply(null, arguments),
                        distinct: true,
                    });
                    return this;
                },
                distinctOn() {
                    const value = helpers_js_2.default.normalizeArr.apply(null, arguments);
                    if (isEmpty(value)) {
                        throw new Error('distinctOn requires atleast on argument');
                    }
                    this._statements.push({
                        grouping: 'columns',
                        value,
                        distinctOn: true,
                    });
                    return this;
                },
                join(table, first) {
                    let join;
                    const { schema } = this._single;
                    const joinType = this._joinType();
                    if (typeof first === 'function') {
                        join = new joinclause_js_1.default(table, joinType, schema);
                        first.call(join, join);
                    }
                    else if (joinType === 'raw') {
                        join = new joinclause_js_1.default(this.client.raw(table, first), 'raw');
                    }
                    else {
                        join = new joinclause_js_1.default(table, joinType, table instanceof Builder ? undefined : schema);
                        if (arguments.length > 1) {
                            join.on.apply(join, toArray(arguments).slice(1));
                        }
                    }
                    this._statements.push(join);
                    return this;
                },
                innerJoin() {
                    return this._joinType('inner').join.apply(this, arguments);
                },
                leftJoin() {
                    return this._joinType('left').join.apply(this, arguments);
                },
                leftOuterJoin() {
                    return this._joinType('left outer').join.apply(this, arguments);
                },
                rightJoin() {
                    return this._joinType('right').join.apply(this, arguments);
                },
                rightOuterJoin() {
                    return this._joinType('right outer').join.apply(this, arguments);
                },
                outerJoin() {
                    return this._joinType('outer').join.apply(this, arguments);
                },
                fullOuterJoin() {
                    return this._joinType('full outer').join.apply(this, arguments);
                },
                crossJoin() {
                    return this._joinType('cross').join.apply(this, arguments);
                },
                joinRaw() {
                    return this._joinType('raw').join.apply(this, arguments);
                },
                where(column, operator, value) {
                    if (column === false || column === true) {
                        return this.where(1, '=', column ? 1 : 0);
                    }
                    if (typeof column === 'function') {
                        return this.whereWrapped(column);
                    }
                    if (column instanceof raw_js_2.default && arguments.length === 1)
                        return this.whereRaw(column);
                    if (isObject(column) && !(column instanceof raw_js_2.default))
                        return this._objectWhere(column);
                    if (arguments.length === 2) {
                        value = operator;
                        operator = '=';
                        if (value === null) {
                            return this.whereNull(column);
                        }
                    }
                    const checkOperator = `${operator}`.toLowerCase().trim();
                    if (arguments.length === 3) {
                        if (checkOperator === 'in' || checkOperator === 'not in') {
                            return this._not(checkOperator === 'not in').whereIn(arguments[0], arguments[2]);
                        }
                        if (checkOperator === 'between' || checkOperator === 'not between') {
                            return this._not(checkOperator === 'not between').whereBetween(arguments[0], arguments[2]);
                        }
                    }
                    if (value === null) {
                        if (checkOperator === 'is' || checkOperator === 'is not') {
                            return this._not(checkOperator === 'is not').whereNull(column);
                        }
                    }
                    this._statements.push({
                        grouping: 'where',
                        type: 'whereBasic',
                        column,
                        operator,
                        value,
                        not: this._not(),
                        bool: this._bool(),
                        asColumn: this._asColumnFlag,
                    });
                    return this;
                },
                whereColumn(column, operator, rightColumn) {
                    this._asColumnFlag = true;
                    this.where.apply(this, arguments);
                    this._asColumnFlag = false;
                    return this;
                },
                orWhere() {
                    this._bool('or');
                    const obj = arguments[0];
                    if (isObject(obj) && !isFunction(obj) && !(obj instanceof raw_js_2.default)) {
                        return this.whereWrapped(function () {
                            for (const key in obj) {
                                this.andWhere(key, obj[key]);
                            }
                        });
                    }
                    return this.where.apply(this, arguments);
                },
                orWhereColumn() {
                    this._bool('or');
                    const obj = arguments[0];
                    if (isObject(obj) && !isFunction(obj) && !(obj instanceof raw_js_2.default)) {
                        return this.whereWrapped(function () {
                            for (const key in obj) {
                                this.andWhereColumn(key, '=', obj[key]);
                            }
                        });
                    }
                    return this.whereColumn.apply(this, arguments);
                },
                whereNot() {
                    return this._not(true).where.apply(this, arguments);
                },
                whereNotColumn() {
                    return this._not(true).whereColumn.apply(this, arguments);
                },
                orWhereNot() {
                    return this._bool('or').whereNot.apply(this, arguments);
                },
                orWhereNotColumn() {
                    return this._bool('or').whereNotColumn.apply(this, arguments);
                },
                _objectWhere(obj) {
                    const boolVal = this._bool();
                    const notVal = this._not() ? 'Not' : '';
                    for (const key in obj) {
                        this[boolVal + 'Where' + notVal](key, obj[key]);
                    }
                    return this;
                },
                whereRaw(sql, bindings) {
                    const raw = sql instanceof raw_js_2.default ? sql : this.client.raw(sql, bindings);
                    this._statements.push({
                        grouping: 'where',
                        type: 'whereRaw',
                        value: raw,
                        not: this._not(),
                        bool: this._bool(),
                    });
                    return this;
                },
                orWhereRaw(sql, bindings) {
                    return this._bool('or').whereRaw(sql, bindings);
                },
                whereWrapped(callback) {
                    this._statements.push({
                        grouping: 'where',
                        type: 'whereWrapped',
                        value: callback,
                        not: this._not(),
                        bool: this._bool(),
                    });
                    return this;
                },
                whereExists(callback) {
                    this._statements.push({
                        grouping: 'where',
                        type: 'whereExists',
                        value: callback,
                        not: this._not(),
                        bool: this._bool(),
                    });
                    return this;
                },
                orWhereExists(callback) {
                    return this._bool('or').whereExists(callback);
                },
                whereNotExists(callback) {
                    return this._not(true).whereExists(callback);
                },
                orWhereNotExists(callback) {
                    return this._bool('or').whereNotExists(callback);
                },
                whereIn(column, values) {
                    if (Array.isArray(values) && isEmpty(values))
                        return this.where(this._not());
                    this._statements.push({
                        grouping: 'where',
                        type: 'whereIn',
                        column,
                        value: values,
                        not: this._not(),
                        bool: this._bool(),
                    });
                    return this;
                },
                orWhereIn(column, values) {
                    return this._bool('or').whereIn(column, values);
                },
                whereNotIn(column, values) {
                    return this._not(true).whereIn(column, values);
                },
                orWhereNotIn(column, values) {
                    return this._bool('or')._not(true).whereIn(column, values);
                },
                whereNull(column) {
                    this._statements.push({
                        grouping: 'where',
                        type: 'whereNull',
                        column,
                        not: this._not(),
                        bool: this._bool(),
                    });
                    return this;
                },
                orWhereNull(column) {
                    return this._bool('or').whereNull(column);
                },
                whereNotNull(column) {
                    return this._not(true).whereNull(column);
                },
                orWhereNotNull(column) {
                    return this._bool('or').whereNotNull(column);
                },
                whereBetween(column, values) {
                    assert_js_2.default(Array.isArray(values), 'The second argument to whereBetween must be an array.');
                    assert_js_2.default(values.length === 2, 'You must specify 2 values for the whereBetween clause');
                    this._statements.push({
                        grouping: 'where',
                        type: 'whereBetween',
                        column,
                        value: values,
                        not: this._not(),
                        bool: this._bool(),
                    });
                    return this;
                },
                whereNotBetween(column, values) {
                    return this._not(true).whereBetween(column, values);
                },
                orWhereBetween(column, values) {
                    return this._bool('or').whereBetween(column, values);
                },
                orWhereNotBetween(column, values) {
                    return this._bool('or').whereNotBetween(column, values);
                },
                groupBy(item) {
                    if (item instanceof raw_js_2.default) {
                        return this.groupByRaw.apply(this, arguments);
                    }
                    this._statements.push({
                        grouping: 'group',
                        type: 'groupByBasic',
                        value: helpers_js_2.default.normalizeArr.apply(null, arguments),
                    });
                    return this;
                },
                groupByRaw(sql, bindings) {
                    const raw = sql instanceof raw_js_2.default ? sql : this.client.raw(sql, bindings);
                    this._statements.push({
                        grouping: 'group',
                        type: 'groupByRaw',
                        value: raw,
                    });
                    return this;
                },
                orderBy(column, direction) {
                    if (Array.isArray(column)) {
                        return this._orderByArray(column);
                    }
                    this._statements.push({
                        grouping: 'order',
                        type: 'orderByBasic',
                        value: column,
                        direction,
                    });
                    return this;
                },
                _orderByArray(columnDefs) {
                    for (let i = 0; i < columnDefs.length; i++) {
                        const columnInfo = columnDefs[i];
                        if (isObject(columnInfo)) {
                            this._statements.push({
                                grouping: 'order',
                                type: 'orderByBasic',
                                value: columnInfo['column'],
                                direction: columnInfo['order'],
                            });
                        }
                        else if (isString(columnInfo)) {
                            this._statements.push({
                                grouping: 'order',
                                type: 'orderByBasic',
                                value: columnInfo,
                            });
                        }
                    }
                    return this;
                },
                orderByRaw(sql, bindings) {
                    const raw = sql instanceof raw_js_2.default ? sql : this.client.raw(sql, bindings);
                    this._statements.push({
                        grouping: 'order',
                        type: 'orderByRaw',
                        value: raw,
                    });
                    return this;
                },
                _union(clause, args) {
                    let callbacks = args[0];
                    let wrap = args[1];
                    if (args.length === 1 || (args.length === 2 && isBoolean(wrap))) {
                        if (!Array.isArray(callbacks)) {
                            callbacks = [callbacks];
                        }
                        for (let i = 0, l = callbacks.length; i < l; i++) {
                            this._statements.push({
                                grouping: 'union',
                                clause: clause,
                                value: callbacks[i],
                                wrap: wrap || false,
                            });
                        }
                    }
                    else {
                        callbacks = toArray(args).slice(0, args.length - 1);
                        wrap = args[args.length - 1];
                        if (!isBoolean(wrap)) {
                            callbacks.push(wrap);
                            wrap = false;
                        }
                        this._union(clause, [callbacks, wrap]);
                    }
                    return this;
                },
                union(...args) {
                    return this._union('union', args);
                },
                unionAll(...args) {
                    return this._union('union all', args);
                },
                intersect(callbacks, wrap) {
                    if (arguments.length === 1 || (arguments.length === 2 && isBoolean(wrap))) {
                        if (!Array.isArray(callbacks)) {
                            callbacks = [callbacks];
                        }
                        for (let i = 0, l = callbacks.length; i < l; i++) {
                            this._statements.push({
                                grouping: 'union',
                                clause: 'intersect',
                                value: callbacks[i],
                                wrap: wrap || false,
                            });
                        }
                    }
                    else {
                        callbacks = toArray(arguments).slice(0, arguments.length - 1);
                        wrap = arguments[arguments.length - 1];
                        if (!isBoolean(wrap)) {
                            callbacks.push(wrap);
                            wrap = false;
                        }
                        this.intersect(callbacks, wrap);
                    }
                    return this;
                },
                having(column, operator, value) {
                    if (column instanceof raw_js_2.default && arguments.length === 1) {
                        return this.havingRaw(column);
                    }
                    if (typeof column === 'function') {
                        return this.havingWrapped(column);
                    }
                    this._statements.push({
                        grouping: 'having',
                        type: 'havingBasic',
                        column,
                        operator,
                        value,
                        bool: this._bool(),
                        not: this._not(),
                    });
                    return this;
                },
                orHaving: function orHaving() {
                    this._bool('or');
                    const obj = arguments[0];
                    if (isObject(obj) && !isFunction(obj) && !(obj instanceof raw_js_2.default)) {
                        return this.havingWrapped(function () {
                            for (const key in obj) {
                                this.andHaving(key, obj[key]);
                            }
                        });
                    }
                    return this.having.apply(this, arguments);
                },
                havingWrapped(callback) {
                    this._statements.push({
                        grouping: 'having',
                        type: 'havingWrapped',
                        value: callback,
                        bool: this._bool(),
                        not: this._not(),
                    });
                    return this;
                },
                havingNull(column) {
                    this._statements.push({
                        grouping: 'having',
                        type: 'havingNull',
                        column,
                        not: this._not(),
                        bool: this._bool(),
                    });
                    return this;
                },
                orHavingNull(callback) {
                    return this._bool('or').havingNull(callback);
                },
                havingNotNull(callback) {
                    return this._not(true).havingNull(callback);
                },
                orHavingNotNull(callback) {
                    return this._not(true)._bool('or').havingNull(callback);
                },
                havingExists(callback) {
                    this._statements.push({
                        grouping: 'having',
                        type: 'havingExists',
                        value: callback,
                        not: this._not(),
                        bool: this._bool(),
                    });
                    return this;
                },
                orHavingExists(callback) {
                    return this._bool('or').havingExists(callback);
                },
                havingNotExists(callback) {
                    return this._not(true).havingExists(callback);
                },
                orHavingNotExists(callback) {
                    return this._not(true)._bool('or').havingExists(callback);
                },
                havingBetween(column, values) {
                    assert_js_2.default(Array.isArray(values), 'The second argument to havingBetween must be an array.');
                    assert_js_2.default(values.length === 2, 'You must specify 2 values for the havingBetween clause');
                    this._statements.push({
                        grouping: 'having',
                        type: 'havingBetween',
                        column,
                        value: values,
                        not: this._not(),
                        bool: this._bool(),
                    });
                    return this;
                },
                orHavingBetween(column, values) {
                    return this._bool('or').havingBetween(column, values);
                },
                havingNotBetween(column, values) {
                    return this._not(true).havingBetween(column, values);
                },
                orHavingNotBetween(column, values) {
                    return this._not(true)._bool('or').havingBetween(column, values);
                },
                havingIn(column, values) {
                    if (Array.isArray(values) && isEmpty(values))
                        return this.where(this._not());
                    this._statements.push({
                        grouping: 'having',
                        type: 'havingIn',
                        column,
                        value: values,
                        not: this._not(),
                        bool: this._bool(),
                    });
                    return this;
                },
                orHavingIn(column, values) {
                    return this._bool('or').havingIn(column, values);
                },
                havingNotIn(column, values) {
                    return this._not(true).havingIn(column, values);
                },
                orHavingNotIn(column, values) {
                    return this._bool('or')._not(true).havingIn(column, values);
                },
                havingRaw(sql, bindings) {
                    const raw = sql instanceof raw_js_2.default ? sql : this.client.raw(sql, bindings);
                    this._statements.push({
                        grouping: 'having',
                        type: 'havingRaw',
                        value: raw,
                        bool: this._bool(),
                        not: this._not(),
                    });
                    return this;
                },
                orHavingRaw(sql, bindings) {
                    return this._bool('or').havingRaw(sql, bindings);
                },
                offset(value) {
                    if (value == null || value instanceof raw_js_2.default || value instanceof Builder) {
                        this._single.offset = value;
                    }
                    else {
                        const val = parseInt(value, 10);
                        if (isNaN(val)) {
                            this.client.logger.warn('A valid integer must be provided to offset');
                        }
                        else {
                            this._single.offset = val;
                        }
                    }
                    return this;
                },
                limit(value) {
                    const val = parseInt(value, 10);
                    if (isNaN(val)) {
                        this.client.logger.warn('A valid integer must be provided to limit');
                    }
                    else {
                        this._single.limit = val;
                    }
                    return this;
                },
                count(column, options) {
                    return this._aggregate('count', column || '*', options);
                },
                min(column, options) {
                    return this._aggregate('min', column, options);
                },
                max(column, options) {
                    return this._aggregate('max', column, options);
                },
                sum(column, options) {
                    return this._aggregate('sum', column, options);
                },
                avg(column, options) {
                    return this._aggregate('avg', column, options);
                },
                countDistinct() {
                    let columns = helpers_js_2.default.normalizeArr.apply(null, arguments);
                    let options;
                    if (columns.length > 1 && isPlainObject(last(columns))) {
                        [options] = columns.splice(columns.length - 1, 1);
                    }
                    if (!columns.length) {
                        columns = '*';
                    }
                    else if (columns.length === 1) {
                        columns = columns[0];
                    }
                    return this._aggregate('count', columns, { ...options, distinct: true });
                },
                sumDistinct(column, options) {
                    return this._aggregate('sum', column, { ...options, distinct: true });
                },
                avgDistinct(column, options) {
                    return this._aggregate('avg', column, { ...options, distinct: true });
                },
                increment(column, amount = 1) {
                    if (isObject(column)) {
                        for (const key in column) {
                            this._counter(key, column[key]);
                        }
                        return this;
                    }
                    return this._counter(column, amount);
                },
                decrement(column, amount = 1) {
                    if (isObject(column)) {
                        for (const key in column) {
                            this._counter(key, -column[key]);
                        }
                        return this;
                    }
                    return this._counter(column, -amount);
                },
                clearCounters() {
                    this._single.counter = {};
                    return this;
                },
                first() {
                    if (!this._isSelectQuery()) {
                        throw new Error(`Cannot chain .first() on "${this._method}" query!`);
                    }
                    const args = new Array(arguments.length);
                    for (let i = 0; i < args.length; i++) {
                        args[i] = arguments[i];
                    }
                    this.select.apply(this, args);
                    this._method = 'first';
                    this.limit(1);
                    return this;
                },
                connection(_connection) {
                    this._connection = _connection;
                    return this;
                },
                pluck(column) {
                    this._method = 'pluck';
                    this._single.pluck = column;
                    this._statements.push({
                        grouping: 'columns',
                        type: 'pluck',
                        value: column,
                    });
                    return this;
                },
                clearSelect() {
                    this._clearGrouping('columns');
                    return this;
                },
                clearWhere() {
                    this._clearGrouping('where');
                    return this;
                },
                clearGroup() {
                    this._clearGrouping('group');
                    return this;
                },
                clearOrder() {
                    this._clearGrouping('order');
                    return this;
                },
                clearHaving() {
                    this._clearGrouping('having');
                    return this;
                },
                insert(values, returning) {
                    this._method = 'insert';
                    if (!isEmpty(returning))
                        this.returning(returning);
                    this._single.insert = values;
                    return this;
                },
                update(values, returning) {
                    let ret;
                    const obj = this._single.update || {};
                    this._method = 'update';
                    if (isString(values)) {
                        obj[values] = returning;
                        if (arguments.length > 2) {
                            ret = arguments[2];
                        }
                    }
                    else {
                        const keys = Object.keys(values);
                        if (this._single.update) {
                            this.client.logger.warn('Update called multiple times with objects.');
                        }
                        let i = -1;
                        while (++i < keys.length) {
                            obj[keys[i]] = values[keys[i]];
                        }
                        ret = arguments[1];
                    }
                    if (!isEmpty(ret))
                        this.returning(ret);
                    this._single.update = obj;
                    return this;
                },
                returning(returning) {
                    this._single.returning = returning;
                    return this;
                },
                delete(ret) {
                    this._method = 'del';
                    if (!isEmpty(ret))
                        this.returning(ret);
                    return this;
                },
                truncate(tableName) {
                    this._method = 'truncate';
                    if (tableName) {
                        this._single.table = tableName;
                    }
                    return this;
                },
                columnInfo(column) {
                    this._method = 'columnInfo';
                    this._single.columnInfo = column;
                    return this;
                },
                forUpdate() {
                    this._single.lock = constants_js_2.lockMode.forUpdate;
                    this._single.lockTables = helpers_js_2.default.normalizeArr.apply(null, arguments);
                    return this;
                },
                forShare() {
                    this._single.lock = constants_js_2.lockMode.forShare;
                    this._single.lockTables = helpers_js_2.default.normalizeArr.apply(null, arguments);
                    return this;
                },
                skipLocked() {
                    if (!this._isSelectQuery()) {
                        throw new Error(`Cannot chain .skipLocked() on "${this._method}" query!`);
                    }
                    if (!this._hasLockMode()) {
                        throw new Error('.skipLocked() can only be used after a call to .forShare() or .forUpdate()!');
                    }
                    if (this._single.waitMode === constants_js_2.waitMode.noWait) {
                        throw new Error('.skipLocked() cannot be used together with .noWait()!');
                    }
                    this._single.waitMode = constants_js_2.waitMode.skipLocked;
                    return this;
                },
                noWait() {
                    if (!this._isSelectQuery()) {
                        throw new Error(`Cannot chain .noWait() on "${this._method}" query!`);
                    }
                    if (!this._hasLockMode()) {
                        throw new Error('.noWait() can only be used after a call to .forShare() or .forUpdate()!');
                    }
                    if (this._single.waitMode === constants_js_2.waitMode.skipLocked) {
                        throw new Error('.noWait() cannot be used together with .skipLocked()!');
                    }
                    this._single.waitMode = constants_js_2.waitMode.noWait;
                    return this;
                },
                fromJS(obj) {
                    each(obj, (val, key) => {
                        if (typeof this[key] !== 'function') {
                            this.client.logger.warn(`Knex Error: unknown key ${key}`);
                        }
                        if (Array.isArray(val)) {
                            this[key].apply(this, val);
                        }
                        else {
                            this[key](val);
                        }
                    });
                    return this;
                },
                modify(callback) {
                    callback.apply(this, [this].concat(tail(arguments)));
                    return this;
                },
                _counter(column, amount) {
                    amount = parseFloat(amount);
                    this._method = 'update';
                    this._single.counter = this._single.counter || {};
                    this._single.counter[column] = amount;
                    return this;
                },
                _bool(val) {
                    if (arguments.length === 1) {
                        this._boolFlag = val;
                        return this;
                    }
                    const ret = this._boolFlag;
                    this._boolFlag = 'and';
                    return ret;
                },
                _not(val) {
                    if (arguments.length === 1) {
                        this._notFlag = val;
                        return this;
                    }
                    const ret = this._notFlag;
                    this._notFlag = false;
                    return ret;
                },
                _joinType(val) {
                    if (arguments.length === 1) {
                        this._joinFlag = val;
                        return this;
                    }
                    const ret = this._joinFlag || 'inner';
                    this._joinFlag = 'inner';
                    return ret;
                },
                _aggregate(method, column, options = {}) {
                    this._statements.push({
                        grouping: 'columns',
                        type: column instanceof raw_js_2.default ? 'aggregateRaw' : 'aggregate',
                        method,
                        value: column,
                        aggregateDistinct: options.distinct || false,
                        alias: options.as,
                    });
                    return this;
                },
                _clearGrouping(grouping) {
                    this._statements = reject(this._statements, { grouping });
                },
                _isSelectQuery() {
                    return ['pluck', 'first', 'select'].includes(this._method);
                },
                _hasLockMode() {
                    return [constants_js_2.lockMode.forShare, constants_js_2.lockMode.forUpdate].includes(this._single.lock);
                },
            });
            Object.defineProperty(Builder.prototype, 'or', {
                get() {
                    return this._bool('or');
                },
            });
            Object.defineProperty(Builder.prototype, 'not', {
                get() {
                    return this._not(true);
                },
            });
            Builder.prototype.select = Builder.prototype.columns;
            Builder.prototype.column = Builder.prototype.columns;
            Builder.prototype.andWhereNot = Builder.prototype.whereNot;
            Builder.prototype.andWhereNotColumn = Builder.prototype.whereNotColumn;
            Builder.prototype.andWhere = Builder.prototype.where;
            Builder.prototype.andWhereColumn = Builder.prototype.whereColumn;
            Builder.prototype.andWhereRaw = Builder.prototype.whereRaw;
            Builder.prototype.andWhereBetween = Builder.prototype.whereBetween;
            Builder.prototype.andWhereNotBetween = Builder.prototype.whereNotBetween;
            Builder.prototype.andHaving = Builder.prototype.having;
            Builder.prototype.andHavingIn = Builder.prototype.havingIn;
            Builder.prototype.andHavingNotIn = Builder.prototype.havingNotIn;
            Builder.prototype.andHavingNull = Builder.prototype.havingNull;
            Builder.prototype.andHavingNotNull = Builder.prototype.havingNotNull;
            Builder.prototype.andHavingExists = Builder.prototype.havingExists;
            Builder.prototype.andHavingNotExists = Builder.prototype.havingNotExists;
            Builder.prototype.andHavingBetween = Builder.prototype.havingBetween;
            Builder.prototype.andHavingNotBetween = Builder.prototype.havingNotBetween;
            Builder.prototype.from = Builder.prototype.table;
            Builder.prototype.into = Builder.prototype.table;
            Builder.prototype.del = Builder.prototype.delete;
            interface_js_2.default(Builder);
            helpers_js_2.default.addQueryContext(Builder);
            Builder.extend = (methodName, fn) => {
                if (Object.prototype.hasOwnProperty.call(Builder.prototype, methodName)) {
                    throw new Error(`Can't extend QueryBuilder with existing method ('${methodName}').`);
                }
                assign(Builder.prototype, { [methodName]: fn });
            };
            exports_177("default", Builder);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/formatter", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/query/builder", "https://raw.githubusercontent.com/denjucks/dex/master/lib/raw", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index"], function (exports_178, context_178) {
    "use strict";
    var builder_js_1, raw_js_3, index_js_6, transform, orderBys, operators, Formatter;
    var __moduleName = context_178 && context_178.id;
    return {
        setters: [
            function (builder_js_1_1) {
                builder_js_1 = builder_js_1_1;
            },
            function (raw_js_3_1) {
                raw_js_3 = raw_js_3_1;
            },
            function (index_js_6_1) {
                index_js_6 = index_js_6_1;
            }
        ],
        execute: function () {
            transform = index_js_6.default.transform;
            orderBys = ['asc', 'desc'];
            operators = transform([
                '=',
                '<',
                '>',
                '<=',
                '>=',
                '<>',
                '!=',
                'like',
                'not like',
                'between',
                'not between',
                'ilike',
                'not ilike',
                'exists',
                'not exist',
                'rlike',
                'not rlike',
                'regexp',
                'not regexp',
                '&',
                '|',
                '^',
                '<<',
                '>>',
                '~',
                '~*',
                '!~',
                '!~*',
                '#',
                '&&',
                '@>',
                '<@',
                '||',
                '&<',
                '&>',
                '-|-',
                '@@',
                '!!',
                ['?', '\\?'],
                ['?|', '\\?|'],
                ['?&', '\\?&'],
            ], (result, key) => {
                if (Array.isArray(key)) {
                    result[key[0]] = key[1];
                }
                else {
                    result[key] = key;
                }
            }, {});
            Formatter = class Formatter {
                constructor(client, builder) {
                    this.client = client;
                    this.builder = builder;
                    this.bindings = [];
                }
                columnize(target) {
                    const columns = Array.isArray(target) ? target : [target];
                    let str = '', i = -1;
                    while (++i < columns.length) {
                        if (i > 0)
                            str += ', ';
                        str += this.wrap(columns[i]);
                    }
                    return str;
                }
                parameterize(values, notSetValue) {
                    if (typeof values === 'function')
                        return this.parameter(values);
                    values = Array.isArray(values) ? values : [values];
                    let str = '', i = -1;
                    while (++i < values.length) {
                        if (i > 0)
                            str += ', ';
                        str += this.parameter(values[i] === undefined ? notSetValue : values[i]);
                    }
                    return str;
                }
                values(values) {
                    if (Array.isArray(values)) {
                        if (Array.isArray(values[0])) {
                            return `(${values
                                .map((value) => `(${this.parameterize(value)})`)
                                .join(', ')})`;
                        }
                        return `(${this.parameterize(values)})`;
                    }
                    if (values instanceof raw_js_3.default) {
                        return `(${this.parameter(values)})`;
                    }
                    return this.parameter(values);
                }
                parameter(value) {
                    if (typeof value === 'function') {
                        return this.outputQuery(this.compileCallback(value), true);
                    }
                    return this.unwrapRaw(value, true) || '?';
                }
                unwrapRaw(value, isParameter) {
                    let query;
                    if (value instanceof builder_js_1.default) {
                        query = this.client.queryCompiler(value).toSQL();
                        if (query.bindings) {
                            this.bindings = this.bindings.concat(query.bindings);
                        }
                        return this.outputQuery(query, isParameter);
                    }
                    if (value instanceof raw_js_3.default) {
                        value.client = this.client;
                        if (this.builder._queryContext) {
                            value.queryContext = () => {
                                return this.builder._queryContext;
                            };
                        }
                        query = value.toSQL();
                        if (query.bindings) {
                            this.bindings = this.bindings.concat(query.bindings);
                        }
                        return query.sql;
                    }
                    if (isParameter) {
                        this.bindings.push(value);
                    }
                }
                rawOrFn(value, method) {
                    if (typeof value === 'function') {
                        return this.outputQuery(this.compileCallback(value, method));
                    }
                    return this.unwrapRaw(value) || '';
                }
                wrap(value, isParameter) {
                    const raw = this.unwrapRaw(value, isParameter);
                    if (raw)
                        return raw;
                    switch (typeof value) {
                        case 'function':
                            return this.outputQuery(this.compileCallback(value), true);
                        case 'object':
                            return this.parseObject(value);
                        case 'number':
                            return value;
                        default:
                            return this.wrapString(value + '');
                    }
                }
                wrapAsIdentifier(value) {
                    const queryContext = this.builder.queryContext();
                    return this.client.wrapIdentifier((value || '').trim(), queryContext);
                }
                alias(first, second) {
                    return first + ' as ' + second;
                }
                operator(value) {
                    const raw = this.unwrapRaw(value);
                    if (raw)
                        return raw;
                    const operator = operators[(value || '').toLowerCase()];
                    if (!operator) {
                        throw new TypeError(`The operator "${value}" is not permitted`);
                    }
                    return operator;
                }
                direction(value) {
                    const raw = this.unwrapRaw(value);
                    if (raw)
                        return raw;
                    return orderBys.indexOf((value || '').toLowerCase()) !== -1 ? value : 'asc';
                }
                compileCallback(callback, method) {
                    const { client } = this;
                    const builder = client.queryBuilder();
                    callback.call(builder, builder);
                    const compiler = client.queryCompiler(builder);
                    compiler.formatter = this;
                    return compiler.toSQL(method || builder._method || 'select');
                }
                outputQuery(compiled, isParameter) {
                    let sql = compiled.sql || '';
                    if (sql) {
                        if ((compiled.method === 'select' || compiled.method === 'first') &&
                            (isParameter || compiled.as)) {
                            sql = `(${sql})`;
                            if (compiled.as)
                                return this.alias(sql, this.wrap(compiled.as));
                        }
                    }
                    return sql;
                }
                parseObject(obj) {
                    const ret = [];
                    for (const alias in obj) {
                        const queryOrIdentifier = obj[alias];
                        if (typeof queryOrIdentifier === 'function') {
                            const compiled = this.compileCallback(queryOrIdentifier);
                            compiled.as = alias;
                            ret.push(this.outputQuery(compiled, true));
                        }
                        else if (queryOrIdentifier instanceof builder_js_1.default) {
                            ret.push(this.alias(`(${this.wrap(queryOrIdentifier)})`, this.wrapAsIdentifier(alias)));
                        }
                        else {
                            ret.push(this.alias(this.wrap(queryOrIdentifier), this.wrapAsIdentifier(alias)));
                        }
                    }
                    return ret.join(', ');
                }
                wrapString(value) {
                    const asIndex = value.toLowerCase().indexOf(' as ');
                    if (asIndex !== -1) {
                        const first = value.slice(0, asIndex);
                        const second = value.slice(asIndex + 4);
                        return this.alias(this.wrap(first), this.wrapAsIdentifier(second));
                    }
                    const wrapped = [];
                    let i = -1;
                    const segments = value.split('.');
                    while (++i < segments.length) {
                        value = segments[i];
                        if (i === 0 && segments.length > 1) {
                            wrapped.push(this.wrap((value || '').trim()));
                        }
                        else {
                            wrapped.push(this.wrapAsIdentifier(value));
                        }
                    }
                    return wrapped.join('.');
                }
            };
            exports_178("default", Formatter);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/migrate/table-resolver", [], function (exports_179, context_179) {
    "use strict";
    var __moduleName = context_179 && context_179.id;
    function getTableName(tableName, schemaName) {
        return schemaName ? `${schemaName}.${tableName}` : tableName;
    }
    exports_179("getTableName", getTableName);
    function getTable(trxOrKnex, tableName, schemaName) {
        return schemaName
            ? trxOrKnex(tableName).withSchema(schemaName)
            : trxOrKnex(tableName);
    }
    exports_179("getTable", getTable);
    function getLockTableName(tableName) {
        return tableName + '_lock';
    }
    exports_179("getLockTableName", getLockTableName);
    function getLockTableNameWithSchema(tableName, schemaName) {
        return schemaName
            ? schemaName + '.' + getLockTableName(tableName)
            : getLockTableName(tableName);
    }
    exports_179("getLockTableNameWithSchema", getLockTableNameWithSchema);
    return {
        setters: [],
        execute: function () {
            exports_179("default", {
                getLockTableName,
                getLockTableNameWithSchema,
                getTable,
                getTableName,
            });
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/migrate/table-creator", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/migrate/table-resolver"], function (exports_180, context_180) {
    "use strict";
    var table_resolver_js_1;
    var __moduleName = context_180 && context_180.id;
    function ensureTable(tableName, schemaName, trxOrKnex) {
        const lockTable = table_resolver_js_1.getLockTableName(tableName);
        const lockTableWithSchema = table_resolver_js_1.getLockTableNameWithSchema(tableName, schemaName);
        return getSchemaBuilder(trxOrKnex, schemaName)
            .hasTable(tableName)
            .then((exists) => {
            return !exists && _createMigrationTable(tableName, schemaName, trxOrKnex);
        })
            .then(() => {
            return getSchemaBuilder(trxOrKnex, schemaName).hasTable(lockTable);
        })
            .then((exists) => {
            return (!exists && _createMigrationLockTable(lockTable, schemaName, trxOrKnex));
        })
            .then(() => {
            return table_resolver_js_1.getTable(trxOrKnex, lockTable, schemaName).select('*');
        })
            .then((data) => {
            return (!data.length &&
                trxOrKnex.into(lockTableWithSchema).insert({ is_locked: 0 }));
        });
    }
    exports_180("ensureTable", ensureTable);
    function _createMigrationTable(tableName, schemaName, trxOrKnex) {
        return getSchemaBuilder(trxOrKnex, schemaName).createTable(table_resolver_js_1.getTableName(tableName), function (t) {
            t.increments();
            t.string('name');
            t.integer('batch');
            t.timestamp('migration_time');
        });
    }
    function _createMigrationLockTable(tableName, schemaName, trxOrKnex) {
        return getSchemaBuilder(trxOrKnex, schemaName).createTable(tableName, function (t) {
            t.increments('index').primary();
            t.integer('is_locked');
        });
    }
    function getSchemaBuilder(trxOrKnex, schemaName) {
        return schemaName
            ? trxOrKnex.schema.withSchema(schemaName)
            : trxOrKnex.schema;
    }
    exports_180("getSchemaBuilder", getSchemaBuilder);
    return {
        setters: [
            function (table_resolver_js_1_1) {
                table_resolver_js_1 = table_resolver_js_1_1;
            }
        ],
        execute: function () {
            exports_180("default", {
                ensureTable,
                getSchemaBuilder,
            });
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/migrate/migration-list-resolver", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/migrate/table-resolver", "https://raw.githubusercontent.com/denjucks/dex/master/lib/migrate/table-creator"], function (exports_181, context_181) {
    "use strict";
    var table_resolver_js_2, table_creator_js_1;
    var __moduleName = context_181 && context_181.id;
    function listAll(migrationSource, loadExtensions) {
        return migrationSource.getMigrations(loadExtensions);
    }
    function listCompleted(tableName, schemaName, trxOrKnex) {
        return table_creator_js_1.ensureTable(tableName, schemaName, trxOrKnex)
            .then(() => trxOrKnex
            .from(table_resolver_js_2.getTableName(tableName, schemaName))
            .orderBy('id')
            .select('name'))
            .then((migrations) => migrations.map((migration) => {
            return migration.name;
        }));
    }
    function listAllAndCompleted(config, trxOrKnex) {
        return Promise.all([
            listAll(config.migrationSource, config.loadExtensions),
            listCompleted(config.tableName, config.schemaName, trxOrKnex),
        ]);
    }
    return {
        setters: [
            function (table_resolver_js_2_1) {
                table_resolver_js_2 = table_resolver_js_2_1;
            },
            function (table_creator_js_1_1) {
                table_creator_js_1 = table_creator_js_1_1;
            }
        ],
        execute: function () {
            exports_181("default", {
                listAll,
                listAllAndCompleted,
                listCompleted,
            });
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/path/interface", [], function (exports_182, context_182) {
    "use strict";
    var __moduleName = context_182 && context_182.id;
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/path/_constants", [], function (exports_183, context_183) {
    "use strict";
    var build, CHAR_UPPERCASE_A, CHAR_LOWERCASE_A, CHAR_UPPERCASE_Z, CHAR_LOWERCASE_Z, CHAR_DOT, CHAR_FORWARD_SLASH, CHAR_BACKWARD_SLASH, CHAR_VERTICAL_LINE, CHAR_COLON, CHAR_QUESTION_MARK, CHAR_UNDERSCORE, CHAR_LINE_FEED, CHAR_CARRIAGE_RETURN, CHAR_TAB, CHAR_FORM_FEED, CHAR_EXCLAMATION_MARK, CHAR_HASH, CHAR_SPACE, CHAR_NO_BREAK_SPACE, CHAR_ZERO_WIDTH_NOBREAK_SPACE, CHAR_LEFT_SQUARE_BRACKET, CHAR_RIGHT_SQUARE_BRACKET, CHAR_LEFT_ANGLE_BRACKET, CHAR_RIGHT_ANGLE_BRACKET, CHAR_LEFT_CURLY_BRACKET, CHAR_RIGHT_CURLY_BRACKET, CHAR_HYPHEN_MINUS, CHAR_PLUS, CHAR_DOUBLE_QUOTE, CHAR_SINGLE_QUOTE, CHAR_PERCENT, CHAR_SEMICOLON, CHAR_CIRCUMFLEX_ACCENT, CHAR_GRAVE_ACCENT, CHAR_AT, CHAR_AMPERSAND, CHAR_EQUAL, CHAR_0, CHAR_9, isWindows, SEP, SEP_PATTERN;
    var __moduleName = context_183 && context_183.id;
    return {
        setters: [],
        execute: function () {
            build = Deno.build;
            exports_183("CHAR_UPPERCASE_A", CHAR_UPPERCASE_A = 65);
            exports_183("CHAR_LOWERCASE_A", CHAR_LOWERCASE_A = 97);
            exports_183("CHAR_UPPERCASE_Z", CHAR_UPPERCASE_Z = 90);
            exports_183("CHAR_LOWERCASE_Z", CHAR_LOWERCASE_Z = 122);
            exports_183("CHAR_DOT", CHAR_DOT = 46);
            exports_183("CHAR_FORWARD_SLASH", CHAR_FORWARD_SLASH = 47);
            exports_183("CHAR_BACKWARD_SLASH", CHAR_BACKWARD_SLASH = 92);
            exports_183("CHAR_VERTICAL_LINE", CHAR_VERTICAL_LINE = 124);
            exports_183("CHAR_COLON", CHAR_COLON = 58);
            exports_183("CHAR_QUESTION_MARK", CHAR_QUESTION_MARK = 63);
            exports_183("CHAR_UNDERSCORE", CHAR_UNDERSCORE = 95);
            exports_183("CHAR_LINE_FEED", CHAR_LINE_FEED = 10);
            exports_183("CHAR_CARRIAGE_RETURN", CHAR_CARRIAGE_RETURN = 13);
            exports_183("CHAR_TAB", CHAR_TAB = 9);
            exports_183("CHAR_FORM_FEED", CHAR_FORM_FEED = 12);
            exports_183("CHAR_EXCLAMATION_MARK", CHAR_EXCLAMATION_MARK = 33);
            exports_183("CHAR_HASH", CHAR_HASH = 35);
            exports_183("CHAR_SPACE", CHAR_SPACE = 32);
            exports_183("CHAR_NO_BREAK_SPACE", CHAR_NO_BREAK_SPACE = 160);
            exports_183("CHAR_ZERO_WIDTH_NOBREAK_SPACE", CHAR_ZERO_WIDTH_NOBREAK_SPACE = 65279);
            exports_183("CHAR_LEFT_SQUARE_BRACKET", CHAR_LEFT_SQUARE_BRACKET = 91);
            exports_183("CHAR_RIGHT_SQUARE_BRACKET", CHAR_RIGHT_SQUARE_BRACKET = 93);
            exports_183("CHAR_LEFT_ANGLE_BRACKET", CHAR_LEFT_ANGLE_BRACKET = 60);
            exports_183("CHAR_RIGHT_ANGLE_BRACKET", CHAR_RIGHT_ANGLE_BRACKET = 62);
            exports_183("CHAR_LEFT_CURLY_BRACKET", CHAR_LEFT_CURLY_BRACKET = 123);
            exports_183("CHAR_RIGHT_CURLY_BRACKET", CHAR_RIGHT_CURLY_BRACKET = 125);
            exports_183("CHAR_HYPHEN_MINUS", CHAR_HYPHEN_MINUS = 45);
            exports_183("CHAR_PLUS", CHAR_PLUS = 43);
            exports_183("CHAR_DOUBLE_QUOTE", CHAR_DOUBLE_QUOTE = 34);
            exports_183("CHAR_SINGLE_QUOTE", CHAR_SINGLE_QUOTE = 39);
            exports_183("CHAR_PERCENT", CHAR_PERCENT = 37);
            exports_183("CHAR_SEMICOLON", CHAR_SEMICOLON = 59);
            exports_183("CHAR_CIRCUMFLEX_ACCENT", CHAR_CIRCUMFLEX_ACCENT = 94);
            exports_183("CHAR_GRAVE_ACCENT", CHAR_GRAVE_ACCENT = 96);
            exports_183("CHAR_AT", CHAR_AT = 64);
            exports_183("CHAR_AMPERSAND", CHAR_AMPERSAND = 38);
            exports_183("CHAR_EQUAL", CHAR_EQUAL = 61);
            exports_183("CHAR_0", CHAR_0 = 48);
            exports_183("CHAR_9", CHAR_9 = 57);
            isWindows = build.os == "windows";
            exports_183("SEP", SEP = isWindows ? "\\" : "/");
            exports_183("SEP_PATTERN", SEP_PATTERN = isWindows ? /[\\/]+/ : /\/+/);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/path/_util", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/path/_constants"], function (exports_184, context_184) {
    "use strict";
    var _constants_ts_7;
    var __moduleName = context_184 && context_184.id;
    function assertPath(path) {
        if (typeof path !== "string") {
            throw new TypeError(`Path must be a string. Received ${JSON.stringify(path)}`);
        }
    }
    exports_184("assertPath", assertPath);
    function isPosixPathSeparator(code) {
        return code === _constants_ts_7.CHAR_FORWARD_SLASH;
    }
    exports_184("isPosixPathSeparator", isPosixPathSeparator);
    function isPathSeparator(code) {
        return isPosixPathSeparator(code) || code === _constants_ts_7.CHAR_BACKWARD_SLASH;
    }
    exports_184("isPathSeparator", isPathSeparator);
    function isWindowsDeviceRoot(code) {
        return ((code >= _constants_ts_7.CHAR_LOWERCASE_A && code <= _constants_ts_7.CHAR_LOWERCASE_Z) ||
            (code >= _constants_ts_7.CHAR_UPPERCASE_A && code <= _constants_ts_7.CHAR_UPPERCASE_Z));
    }
    exports_184("isWindowsDeviceRoot", isWindowsDeviceRoot);
    function normalizeString(path, allowAboveRoot, separator, isPathSeparator) {
        let res = "";
        let lastSegmentLength = 0;
        let lastSlash = -1;
        let dots = 0;
        let code;
        for (let i = 0, len = path.length; i <= len; ++i) {
            if (i < len)
                code = path.charCodeAt(i);
            else if (isPathSeparator(code))
                break;
            else
                code = _constants_ts_7.CHAR_FORWARD_SLASH;
            if (isPathSeparator(code)) {
                if (lastSlash === i - 1 || dots === 1) {
                }
                else if (lastSlash !== i - 1 && dots === 2) {
                    if (res.length < 2 ||
                        lastSegmentLength !== 2 ||
                        res.charCodeAt(res.length - 1) !== _constants_ts_7.CHAR_DOT ||
                        res.charCodeAt(res.length - 2) !== _constants_ts_7.CHAR_DOT) {
                        if (res.length > 2) {
                            const lastSlashIndex = res.lastIndexOf(separator);
                            if (lastSlashIndex === -1) {
                                res = "";
                                lastSegmentLength = 0;
                            }
                            else {
                                res = res.slice(0, lastSlashIndex);
                                lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);
                            }
                            lastSlash = i;
                            dots = 0;
                            continue;
                        }
                        else if (res.length === 2 || res.length === 1) {
                            res = "";
                            lastSegmentLength = 0;
                            lastSlash = i;
                            dots = 0;
                            continue;
                        }
                    }
                    if (allowAboveRoot) {
                        if (res.length > 0)
                            res += `${separator}..`;
                        else
                            res = "..";
                        lastSegmentLength = 2;
                    }
                }
                else {
                    if (res.length > 0)
                        res += separator + path.slice(lastSlash + 1, i);
                    else
                        res = path.slice(lastSlash + 1, i);
                    lastSegmentLength = i - lastSlash - 1;
                }
                lastSlash = i;
                dots = 0;
            }
            else if (code === _constants_ts_7.CHAR_DOT && dots !== -1) {
                ++dots;
            }
            else {
                dots = -1;
            }
        }
        return res;
    }
    exports_184("normalizeString", normalizeString);
    function _format(sep, pathObject) {
        const dir = pathObject.dir || pathObject.root;
        const base = pathObject.base || (pathObject.name || "") + (pathObject.ext || "");
        if (!dir)
            return base;
        if (dir === pathObject.root)
            return dir + base;
        return dir + sep + base;
    }
    exports_184("_format", _format);
    return {
        setters: [
            function (_constants_ts_7_1) {
                _constants_ts_7 = _constants_ts_7_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/path/win32", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/path/_constants", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/path/_util", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/testing/asserts"], function (exports_185, context_185) {
    "use strict";
    var cwd, env, _constants_ts_8, _util_ts_3, asserts_ts_2, sep, delimiter;
    var __moduleName = context_185 && context_185.id;
    function resolve(...pathSegments) {
        let resolvedDevice = "";
        let resolvedTail = "";
        let resolvedAbsolute = false;
        for (let i = pathSegments.length - 1; i >= -1; i--) {
            let path;
            if (i >= 0) {
                path = pathSegments[i];
            }
            else if (!resolvedDevice) {
                path = cwd();
            }
            else {
                path = env.get(`=${resolvedDevice}`) || cwd();
                if (path === undefined ||
                    path.slice(0, 3).toLowerCase() !== `${resolvedDevice.toLowerCase()}\\`) {
                    path = `${resolvedDevice}\\`;
                }
            }
            _util_ts_3.assertPath(path);
            const len = path.length;
            if (len === 0)
                continue;
            let rootEnd = 0;
            let device = "";
            let isAbsolute = false;
            const code = path.charCodeAt(0);
            if (len > 1) {
                if (_util_ts_3.isPathSeparator(code)) {
                    isAbsolute = true;
                    if (_util_ts_3.isPathSeparator(path.charCodeAt(1))) {
                        let j = 2;
                        let last = j;
                        for (; j < len; ++j) {
                            if (_util_ts_3.isPathSeparator(path.charCodeAt(j)))
                                break;
                        }
                        if (j < len && j !== last) {
                            const firstPart = path.slice(last, j);
                            last = j;
                            for (; j < len; ++j) {
                                if (!_util_ts_3.isPathSeparator(path.charCodeAt(j)))
                                    break;
                            }
                            if (j < len && j !== last) {
                                last = j;
                                for (; j < len; ++j) {
                                    if (_util_ts_3.isPathSeparator(path.charCodeAt(j)))
                                        break;
                                }
                                if (j === len) {
                                    device = `\\\\${firstPart}\\${path.slice(last)}`;
                                    rootEnd = j;
                                }
                                else if (j !== last) {
                                    device = `\\\\${firstPart}\\${path.slice(last, j)}`;
                                    rootEnd = j;
                                }
                            }
                        }
                    }
                    else {
                        rootEnd = 1;
                    }
                }
                else if (_util_ts_3.isWindowsDeviceRoot(code)) {
                    if (path.charCodeAt(1) === _constants_ts_8.CHAR_COLON) {
                        device = path.slice(0, 2);
                        rootEnd = 2;
                        if (len > 2) {
                            if (_util_ts_3.isPathSeparator(path.charCodeAt(2))) {
                                isAbsolute = true;
                                rootEnd = 3;
                            }
                        }
                    }
                }
            }
            else if (_util_ts_3.isPathSeparator(code)) {
                rootEnd = 1;
                isAbsolute = true;
            }
            if (device.length > 0 &&
                resolvedDevice.length > 0 &&
                device.toLowerCase() !== resolvedDevice.toLowerCase()) {
                continue;
            }
            if (resolvedDevice.length === 0 && device.length > 0) {
                resolvedDevice = device;
            }
            if (!resolvedAbsolute) {
                resolvedTail = `${path.slice(rootEnd)}\\${resolvedTail}`;
                resolvedAbsolute = isAbsolute;
            }
            if (resolvedAbsolute && resolvedDevice.length > 0)
                break;
        }
        resolvedTail = _util_ts_3.normalizeString(resolvedTail, !resolvedAbsolute, "\\", _util_ts_3.isPathSeparator);
        return resolvedDevice + (resolvedAbsolute ? "\\" : "") + resolvedTail || ".";
    }
    exports_185("resolve", resolve);
    function normalize(path) {
        _util_ts_3.assertPath(path);
        const len = path.length;
        if (len === 0)
            return ".";
        let rootEnd = 0;
        let device;
        let isAbsolute = false;
        const code = path.charCodeAt(0);
        if (len > 1) {
            if (_util_ts_3.isPathSeparator(code)) {
                isAbsolute = true;
                if (_util_ts_3.isPathSeparator(path.charCodeAt(1))) {
                    let j = 2;
                    let last = j;
                    for (; j < len; ++j) {
                        if (_util_ts_3.isPathSeparator(path.charCodeAt(j)))
                            break;
                    }
                    if (j < len && j !== last) {
                        const firstPart = path.slice(last, j);
                        last = j;
                        for (; j < len; ++j) {
                            if (!_util_ts_3.isPathSeparator(path.charCodeAt(j)))
                                break;
                        }
                        if (j < len && j !== last) {
                            last = j;
                            for (; j < len; ++j) {
                                if (_util_ts_3.isPathSeparator(path.charCodeAt(j)))
                                    break;
                            }
                            if (j === len) {
                                return `\\\\${firstPart}\\${path.slice(last)}\\`;
                            }
                            else if (j !== last) {
                                device = `\\\\${firstPart}\\${path.slice(last, j)}`;
                                rootEnd = j;
                            }
                        }
                    }
                }
                else {
                    rootEnd = 1;
                }
            }
            else if (_util_ts_3.isWindowsDeviceRoot(code)) {
                if (path.charCodeAt(1) === _constants_ts_8.CHAR_COLON) {
                    device = path.slice(0, 2);
                    rootEnd = 2;
                    if (len > 2) {
                        if (_util_ts_3.isPathSeparator(path.charCodeAt(2))) {
                            isAbsolute = true;
                            rootEnd = 3;
                        }
                    }
                }
            }
        }
        else if (_util_ts_3.isPathSeparator(code)) {
            return "\\";
        }
        let tail;
        if (rootEnd < len) {
            tail = _util_ts_3.normalizeString(path.slice(rootEnd), !isAbsolute, "\\", _util_ts_3.isPathSeparator);
        }
        else {
            tail = "";
        }
        if (tail.length === 0 && !isAbsolute)
            tail = ".";
        if (tail.length > 0 && _util_ts_3.isPathSeparator(path.charCodeAt(len - 1))) {
            tail += "\\";
        }
        if (device === undefined) {
            if (isAbsolute) {
                if (tail.length > 0)
                    return `\\${tail}`;
                else
                    return "\\";
            }
            else if (tail.length > 0) {
                return tail;
            }
            else {
                return "";
            }
        }
        else if (isAbsolute) {
            if (tail.length > 0)
                return `${device}\\${tail}`;
            else
                return `${device}\\`;
        }
        else if (tail.length > 0) {
            return device + tail;
        }
        else {
            return device;
        }
    }
    exports_185("normalize", normalize);
    function isAbsolute(path) {
        _util_ts_3.assertPath(path);
        const len = path.length;
        if (len === 0)
            return false;
        const code = path.charCodeAt(0);
        if (_util_ts_3.isPathSeparator(code)) {
            return true;
        }
        else if (_util_ts_3.isWindowsDeviceRoot(code)) {
            if (len > 2 && path.charCodeAt(1) === _constants_ts_8.CHAR_COLON) {
                if (_util_ts_3.isPathSeparator(path.charCodeAt(2)))
                    return true;
            }
        }
        return false;
    }
    exports_185("isAbsolute", isAbsolute);
    function join(...paths) {
        const pathsCount = paths.length;
        if (pathsCount === 0)
            return ".";
        let joined;
        let firstPart = null;
        for (let i = 0; i < pathsCount; ++i) {
            const path = paths[i];
            _util_ts_3.assertPath(path);
            if (path.length > 0) {
                if (joined === undefined)
                    joined = firstPart = path;
                else
                    joined += `\\${path}`;
            }
        }
        if (joined === undefined)
            return ".";
        let needsReplace = true;
        let slashCount = 0;
        asserts_ts_2.assert(firstPart != null);
        if (_util_ts_3.isPathSeparator(firstPart.charCodeAt(0))) {
            ++slashCount;
            const firstLen = firstPart.length;
            if (firstLen > 1) {
                if (_util_ts_3.isPathSeparator(firstPart.charCodeAt(1))) {
                    ++slashCount;
                    if (firstLen > 2) {
                        if (_util_ts_3.isPathSeparator(firstPart.charCodeAt(2)))
                            ++slashCount;
                        else {
                            needsReplace = false;
                        }
                    }
                }
            }
        }
        if (needsReplace) {
            for (; slashCount < joined.length; ++slashCount) {
                if (!_util_ts_3.isPathSeparator(joined.charCodeAt(slashCount)))
                    break;
            }
            if (slashCount >= 2)
                joined = `\\${joined.slice(slashCount)}`;
        }
        return normalize(joined);
    }
    exports_185("join", join);
    function relative(from, to) {
        _util_ts_3.assertPath(from);
        _util_ts_3.assertPath(to);
        if (from === to)
            return "";
        const fromOrig = resolve(from);
        const toOrig = resolve(to);
        if (fromOrig === toOrig)
            return "";
        from = fromOrig.toLowerCase();
        to = toOrig.toLowerCase();
        if (from === to)
            return "";
        let fromStart = 0;
        let fromEnd = from.length;
        for (; fromStart < fromEnd; ++fromStart) {
            if (from.charCodeAt(fromStart) !== _constants_ts_8.CHAR_BACKWARD_SLASH)
                break;
        }
        for (; fromEnd - 1 > fromStart; --fromEnd) {
            if (from.charCodeAt(fromEnd - 1) !== _constants_ts_8.CHAR_BACKWARD_SLASH)
                break;
        }
        const fromLen = fromEnd - fromStart;
        let toStart = 0;
        let toEnd = to.length;
        for (; toStart < toEnd; ++toStart) {
            if (to.charCodeAt(toStart) !== _constants_ts_8.CHAR_BACKWARD_SLASH)
                break;
        }
        for (; toEnd - 1 > toStart; --toEnd) {
            if (to.charCodeAt(toEnd - 1) !== _constants_ts_8.CHAR_BACKWARD_SLASH)
                break;
        }
        const toLen = toEnd - toStart;
        const length = fromLen < toLen ? fromLen : toLen;
        let lastCommonSep = -1;
        let i = 0;
        for (; i <= length; ++i) {
            if (i === length) {
                if (toLen > length) {
                    if (to.charCodeAt(toStart + i) === _constants_ts_8.CHAR_BACKWARD_SLASH) {
                        return toOrig.slice(toStart + i + 1);
                    }
                    else if (i === 2) {
                        return toOrig.slice(toStart + i);
                    }
                }
                if (fromLen > length) {
                    if (from.charCodeAt(fromStart + i) === _constants_ts_8.CHAR_BACKWARD_SLASH) {
                        lastCommonSep = i;
                    }
                    else if (i === 2) {
                        lastCommonSep = 3;
                    }
                }
                break;
            }
            const fromCode = from.charCodeAt(fromStart + i);
            const toCode = to.charCodeAt(toStart + i);
            if (fromCode !== toCode)
                break;
            else if (fromCode === _constants_ts_8.CHAR_BACKWARD_SLASH)
                lastCommonSep = i;
        }
        if (i !== length && lastCommonSep === -1) {
            return toOrig;
        }
        let out = "";
        if (lastCommonSep === -1)
            lastCommonSep = 0;
        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {
            if (i === fromEnd || from.charCodeAt(i) === _constants_ts_8.CHAR_BACKWARD_SLASH) {
                if (out.length === 0)
                    out += "..";
                else
                    out += "\\..";
            }
        }
        if (out.length > 0) {
            return out + toOrig.slice(toStart + lastCommonSep, toEnd);
        }
        else {
            toStart += lastCommonSep;
            if (toOrig.charCodeAt(toStart) === _constants_ts_8.CHAR_BACKWARD_SLASH)
                ++toStart;
            return toOrig.slice(toStart, toEnd);
        }
    }
    exports_185("relative", relative);
    function toNamespacedPath(path) {
        if (typeof path !== "string")
            return path;
        if (path.length === 0)
            return "";
        const resolvedPath = resolve(path);
        if (resolvedPath.length >= 3) {
            if (resolvedPath.charCodeAt(0) === _constants_ts_8.CHAR_BACKWARD_SLASH) {
                if (resolvedPath.charCodeAt(1) === _constants_ts_8.CHAR_BACKWARD_SLASH) {
                    const code = resolvedPath.charCodeAt(2);
                    if (code !== _constants_ts_8.CHAR_QUESTION_MARK && code !== _constants_ts_8.CHAR_DOT) {
                        return `\\\\?\\UNC\\${resolvedPath.slice(2)}`;
                    }
                }
            }
            else if (_util_ts_3.isWindowsDeviceRoot(resolvedPath.charCodeAt(0))) {
                if (resolvedPath.charCodeAt(1) === _constants_ts_8.CHAR_COLON &&
                    resolvedPath.charCodeAt(2) === _constants_ts_8.CHAR_BACKWARD_SLASH) {
                    return `\\\\?\\${resolvedPath}`;
                }
            }
        }
        return path;
    }
    exports_185("toNamespacedPath", toNamespacedPath);
    function dirname(path) {
        _util_ts_3.assertPath(path);
        const len = path.length;
        if (len === 0)
            return ".";
        let rootEnd = -1;
        let end = -1;
        let matchedSlash = true;
        let offset = 0;
        const code = path.charCodeAt(0);
        if (len > 1) {
            if (_util_ts_3.isPathSeparator(code)) {
                rootEnd = offset = 1;
                if (_util_ts_3.isPathSeparator(path.charCodeAt(1))) {
                    let j = 2;
                    let last = j;
                    for (; j < len; ++j) {
                        if (_util_ts_3.isPathSeparator(path.charCodeAt(j)))
                            break;
                    }
                    if (j < len && j !== last) {
                        last = j;
                        for (; j < len; ++j) {
                            if (!_util_ts_3.isPathSeparator(path.charCodeAt(j)))
                                break;
                        }
                        if (j < len && j !== last) {
                            last = j;
                            for (; j < len; ++j) {
                                if (_util_ts_3.isPathSeparator(path.charCodeAt(j)))
                                    break;
                            }
                            if (j === len) {
                                return path;
                            }
                            if (j !== last) {
                                rootEnd = offset = j + 1;
                            }
                        }
                    }
                }
            }
            else if (_util_ts_3.isWindowsDeviceRoot(code)) {
                if (path.charCodeAt(1) === _constants_ts_8.CHAR_COLON) {
                    rootEnd = offset = 2;
                    if (len > 2) {
                        if (_util_ts_3.isPathSeparator(path.charCodeAt(2)))
                            rootEnd = offset = 3;
                    }
                }
            }
        }
        else if (_util_ts_3.isPathSeparator(code)) {
            return path;
        }
        for (let i = len - 1; i >= offset; --i) {
            if (_util_ts_3.isPathSeparator(path.charCodeAt(i))) {
                if (!matchedSlash) {
                    end = i;
                    break;
                }
            }
            else {
                matchedSlash = false;
            }
        }
        if (end === -1) {
            if (rootEnd === -1)
                return ".";
            else
                end = rootEnd;
        }
        return path.slice(0, end);
    }
    exports_185("dirname", dirname);
    function basename(path, ext = "") {
        if (ext !== undefined && typeof ext !== "string") {
            throw new TypeError('"ext" argument must be a string');
        }
        _util_ts_3.assertPath(path);
        let start = 0;
        let end = -1;
        let matchedSlash = true;
        let i;
        if (path.length >= 2) {
            const drive = path.charCodeAt(0);
            if (_util_ts_3.isWindowsDeviceRoot(drive)) {
                if (path.charCodeAt(1) === _constants_ts_8.CHAR_COLON)
                    start = 2;
            }
        }
        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {
            if (ext.length === path.length && ext === path)
                return "";
            let extIdx = ext.length - 1;
            let firstNonSlashEnd = -1;
            for (i = path.length - 1; i >= start; --i) {
                const code = path.charCodeAt(i);
                if (_util_ts_3.isPathSeparator(code)) {
                    if (!matchedSlash) {
                        start = i + 1;
                        break;
                    }
                }
                else {
                    if (firstNonSlashEnd === -1) {
                        matchedSlash = false;
                        firstNonSlashEnd = i + 1;
                    }
                    if (extIdx >= 0) {
                        if (code === ext.charCodeAt(extIdx)) {
                            if (--extIdx === -1) {
                                end = i;
                            }
                        }
                        else {
                            extIdx = -1;
                            end = firstNonSlashEnd;
                        }
                    }
                }
            }
            if (start === end)
                end = firstNonSlashEnd;
            else if (end === -1)
                end = path.length;
            return path.slice(start, end);
        }
        else {
            for (i = path.length - 1; i >= start; --i) {
                if (_util_ts_3.isPathSeparator(path.charCodeAt(i))) {
                    if (!matchedSlash) {
                        start = i + 1;
                        break;
                    }
                }
                else if (end === -1) {
                    matchedSlash = false;
                    end = i + 1;
                }
            }
            if (end === -1)
                return "";
            return path.slice(start, end);
        }
    }
    exports_185("basename", basename);
    function extname(path) {
        _util_ts_3.assertPath(path);
        let start = 0;
        let startDot = -1;
        let startPart = 0;
        let end = -1;
        let matchedSlash = true;
        let preDotState = 0;
        if (path.length >= 2 &&
            path.charCodeAt(1) === _constants_ts_8.CHAR_COLON &&
            _util_ts_3.isWindowsDeviceRoot(path.charCodeAt(0))) {
            start = startPart = 2;
        }
        for (let i = path.length - 1; i >= start; --i) {
            const code = path.charCodeAt(i);
            if (_util_ts_3.isPathSeparator(code)) {
                if (!matchedSlash) {
                    startPart = i + 1;
                    break;
                }
                continue;
            }
            if (end === -1) {
                matchedSlash = false;
                end = i + 1;
            }
            if (code === _constants_ts_8.CHAR_DOT) {
                if (startDot === -1)
                    startDot = i;
                else if (preDotState !== 1)
                    preDotState = 1;
            }
            else if (startDot !== -1) {
                preDotState = -1;
            }
        }
        if (startDot === -1 ||
            end === -1 ||
            preDotState === 0 ||
            (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)) {
            return "";
        }
        return path.slice(startDot, end);
    }
    exports_185("extname", extname);
    function format(pathObject) {
        if (pathObject === null || typeof pathObject !== "object") {
            throw new TypeError(`The "pathObject" argument must be of type Object. Received type ${typeof pathObject}`);
        }
        return _util_ts_3._format("\\", pathObject);
    }
    exports_185("format", format);
    function parse(path) {
        _util_ts_3.assertPath(path);
        const ret = { root: "", dir: "", base: "", ext: "", name: "" };
        const len = path.length;
        if (len === 0)
            return ret;
        let rootEnd = 0;
        let code = path.charCodeAt(0);
        if (len > 1) {
            if (_util_ts_3.isPathSeparator(code)) {
                rootEnd = 1;
                if (_util_ts_3.isPathSeparator(path.charCodeAt(1))) {
                    let j = 2;
                    let last = j;
                    for (; j < len; ++j) {
                        if (_util_ts_3.isPathSeparator(path.charCodeAt(j)))
                            break;
                    }
                    if (j < len && j !== last) {
                        last = j;
                        for (; j < len; ++j) {
                            if (!_util_ts_3.isPathSeparator(path.charCodeAt(j)))
                                break;
                        }
                        if (j < len && j !== last) {
                            last = j;
                            for (; j < len; ++j) {
                                if (_util_ts_3.isPathSeparator(path.charCodeAt(j)))
                                    break;
                            }
                            if (j === len) {
                                rootEnd = j;
                            }
                            else if (j !== last) {
                                rootEnd = j + 1;
                            }
                        }
                    }
                }
            }
            else if (_util_ts_3.isWindowsDeviceRoot(code)) {
                if (path.charCodeAt(1) === _constants_ts_8.CHAR_COLON) {
                    rootEnd = 2;
                    if (len > 2) {
                        if (_util_ts_3.isPathSeparator(path.charCodeAt(2))) {
                            if (len === 3) {
                                ret.root = ret.dir = path;
                                return ret;
                            }
                            rootEnd = 3;
                        }
                    }
                    else {
                        ret.root = ret.dir = path;
                        return ret;
                    }
                }
            }
        }
        else if (_util_ts_3.isPathSeparator(code)) {
            ret.root = ret.dir = path;
            return ret;
        }
        if (rootEnd > 0)
            ret.root = path.slice(0, rootEnd);
        let startDot = -1;
        let startPart = rootEnd;
        let end = -1;
        let matchedSlash = true;
        let i = path.length - 1;
        let preDotState = 0;
        for (; i >= rootEnd; --i) {
            code = path.charCodeAt(i);
            if (_util_ts_3.isPathSeparator(code)) {
                if (!matchedSlash) {
                    startPart = i + 1;
                    break;
                }
                continue;
            }
            if (end === -1) {
                matchedSlash = false;
                end = i + 1;
            }
            if (code === _constants_ts_8.CHAR_DOT) {
                if (startDot === -1)
                    startDot = i;
                else if (preDotState !== 1)
                    preDotState = 1;
            }
            else if (startDot !== -1) {
                preDotState = -1;
            }
        }
        if (startDot === -1 ||
            end === -1 ||
            preDotState === 0 ||
            (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)) {
            if (end !== -1) {
                ret.base = ret.name = path.slice(startPart, end);
            }
        }
        else {
            ret.name = path.slice(startPart, startDot);
            ret.base = path.slice(startPart, end);
            ret.ext = path.slice(startDot, end);
        }
        if (startPart > 0 && startPart !== rootEnd) {
            ret.dir = path.slice(0, startPart - 1);
        }
        else
            ret.dir = ret.root;
        return ret;
    }
    exports_185("parse", parse);
    function fromFileUrl(url) {
        if (typeof url === "string")
            url = new URL(url);
        return url.pathname
            .replace(/^\/*([A-Za-z]:)(\/|$)/, "$1/")
            .replace(/\//g, "\\");
    }
    exports_185("fromFileUrl", fromFileUrl);
    return {
        setters: [
            function (_constants_ts_8_1) {
                _constants_ts_8 = _constants_ts_8_1;
            },
            function (_util_ts_3_1) {
                _util_ts_3 = _util_ts_3_1;
            },
            function (asserts_ts_2_1) {
                asserts_ts_2 = asserts_ts_2_1;
            }
        ],
        execute: function () {
            cwd = Deno.cwd, env = Deno.env;
            exports_185("sep", sep = "\\");
            exports_185("delimiter", delimiter = ";");
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/path/posix", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/path/_constants", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/path/_util"], function (exports_186, context_186) {
    "use strict";
    var cwd, _constants_ts_9, _util_ts_4, sep, delimiter;
    var __moduleName = context_186 && context_186.id;
    function resolve(...pathSegments) {
        let resolvedPath = "";
        let resolvedAbsolute = false;
        for (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
            let path;
            if (i >= 0)
                path = pathSegments[i];
            else
                path = cwd();
            _util_ts_4.assertPath(path);
            if (path.length === 0) {
                continue;
            }
            resolvedPath = `${path}/${resolvedPath}`;
            resolvedAbsolute = path.charCodeAt(0) === _constants_ts_9.CHAR_FORWARD_SLASH;
        }
        resolvedPath = _util_ts_4.normalizeString(resolvedPath, !resolvedAbsolute, "/", _util_ts_4.isPosixPathSeparator);
        if (resolvedAbsolute) {
            if (resolvedPath.length > 0)
                return `/${resolvedPath}`;
            else
                return "/";
        }
        else if (resolvedPath.length > 0)
            return resolvedPath;
        else
            return ".";
    }
    exports_186("resolve", resolve);
    function normalize(path) {
        _util_ts_4.assertPath(path);
        if (path.length === 0)
            return ".";
        const isAbsolute = path.charCodeAt(0) === _constants_ts_9.CHAR_FORWARD_SLASH;
        const trailingSeparator = path.charCodeAt(path.length - 1) === _constants_ts_9.CHAR_FORWARD_SLASH;
        path = _util_ts_4.normalizeString(path, !isAbsolute, "/", _util_ts_4.isPosixPathSeparator);
        if (path.length === 0 && !isAbsolute)
            path = ".";
        if (path.length > 0 && trailingSeparator)
            path += "/";
        if (isAbsolute)
            return `/${path}`;
        return path;
    }
    exports_186("normalize", normalize);
    function isAbsolute(path) {
        _util_ts_4.assertPath(path);
        return path.length > 0 && path.charCodeAt(0) === _constants_ts_9.CHAR_FORWARD_SLASH;
    }
    exports_186("isAbsolute", isAbsolute);
    function join(...paths) {
        if (paths.length === 0)
            return ".";
        let joined;
        for (let i = 0, len = paths.length; i < len; ++i) {
            const path = paths[i];
            _util_ts_4.assertPath(path);
            if (path.length > 0) {
                if (!joined)
                    joined = path;
                else
                    joined += `/${path}`;
            }
        }
        if (!joined)
            return ".";
        return normalize(joined);
    }
    exports_186("join", join);
    function relative(from, to) {
        _util_ts_4.assertPath(from);
        _util_ts_4.assertPath(to);
        if (from === to)
            return "";
        from = resolve(from);
        to = resolve(to);
        if (from === to)
            return "";
        let fromStart = 1;
        const fromEnd = from.length;
        for (; fromStart < fromEnd; ++fromStart) {
            if (from.charCodeAt(fromStart) !== _constants_ts_9.CHAR_FORWARD_SLASH)
                break;
        }
        const fromLen = fromEnd - fromStart;
        let toStart = 1;
        const toEnd = to.length;
        for (; toStart < toEnd; ++toStart) {
            if (to.charCodeAt(toStart) !== _constants_ts_9.CHAR_FORWARD_SLASH)
                break;
        }
        const toLen = toEnd - toStart;
        const length = fromLen < toLen ? fromLen : toLen;
        let lastCommonSep = -1;
        let i = 0;
        for (; i <= length; ++i) {
            if (i === length) {
                if (toLen > length) {
                    if (to.charCodeAt(toStart + i) === _constants_ts_9.CHAR_FORWARD_SLASH) {
                        return to.slice(toStart + i + 1);
                    }
                    else if (i === 0) {
                        return to.slice(toStart + i);
                    }
                }
                else if (fromLen > length) {
                    if (from.charCodeAt(fromStart + i) === _constants_ts_9.CHAR_FORWARD_SLASH) {
                        lastCommonSep = i;
                    }
                    else if (i === 0) {
                        lastCommonSep = 0;
                    }
                }
                break;
            }
            const fromCode = from.charCodeAt(fromStart + i);
            const toCode = to.charCodeAt(toStart + i);
            if (fromCode !== toCode)
                break;
            else if (fromCode === _constants_ts_9.CHAR_FORWARD_SLASH)
                lastCommonSep = i;
        }
        let out = "";
        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {
            if (i === fromEnd || from.charCodeAt(i) === _constants_ts_9.CHAR_FORWARD_SLASH) {
                if (out.length === 0)
                    out += "..";
                else
                    out += "/..";
            }
        }
        if (out.length > 0)
            return out + to.slice(toStart + lastCommonSep);
        else {
            toStart += lastCommonSep;
            if (to.charCodeAt(toStart) === _constants_ts_9.CHAR_FORWARD_SLASH)
                ++toStart;
            return to.slice(toStart);
        }
    }
    exports_186("relative", relative);
    function toNamespacedPath(path) {
        return path;
    }
    exports_186("toNamespacedPath", toNamespacedPath);
    function dirname(path) {
        _util_ts_4.assertPath(path);
        if (path.length === 0)
            return ".";
        const hasRoot = path.charCodeAt(0) === _constants_ts_9.CHAR_FORWARD_SLASH;
        let end = -1;
        let matchedSlash = true;
        for (let i = path.length - 1; i >= 1; --i) {
            if (path.charCodeAt(i) === _constants_ts_9.CHAR_FORWARD_SLASH) {
                if (!matchedSlash) {
                    end = i;
                    break;
                }
            }
            else {
                matchedSlash = false;
            }
        }
        if (end === -1)
            return hasRoot ? "/" : ".";
        if (hasRoot && end === 1)
            return "//";
        return path.slice(0, end);
    }
    exports_186("dirname", dirname);
    function basename(path, ext = "") {
        if (ext !== undefined && typeof ext !== "string") {
            throw new TypeError('"ext" argument must be a string');
        }
        _util_ts_4.assertPath(path);
        let start = 0;
        let end = -1;
        let matchedSlash = true;
        let i;
        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {
            if (ext.length === path.length && ext === path)
                return "";
            let extIdx = ext.length - 1;
            let firstNonSlashEnd = -1;
            for (i = path.length - 1; i >= 0; --i) {
                const code = path.charCodeAt(i);
                if (code === _constants_ts_9.CHAR_FORWARD_SLASH) {
                    if (!matchedSlash) {
                        start = i + 1;
                        break;
                    }
                }
                else {
                    if (firstNonSlashEnd === -1) {
                        matchedSlash = false;
                        firstNonSlashEnd = i + 1;
                    }
                    if (extIdx >= 0) {
                        if (code === ext.charCodeAt(extIdx)) {
                            if (--extIdx === -1) {
                                end = i;
                            }
                        }
                        else {
                            extIdx = -1;
                            end = firstNonSlashEnd;
                        }
                    }
                }
            }
            if (start === end)
                end = firstNonSlashEnd;
            else if (end === -1)
                end = path.length;
            return path.slice(start, end);
        }
        else {
            for (i = path.length - 1; i >= 0; --i) {
                if (path.charCodeAt(i) === _constants_ts_9.CHAR_FORWARD_SLASH) {
                    if (!matchedSlash) {
                        start = i + 1;
                        break;
                    }
                }
                else if (end === -1) {
                    matchedSlash = false;
                    end = i + 1;
                }
            }
            if (end === -1)
                return "";
            return path.slice(start, end);
        }
    }
    exports_186("basename", basename);
    function extname(path) {
        _util_ts_4.assertPath(path);
        let startDot = -1;
        let startPart = 0;
        let end = -1;
        let matchedSlash = true;
        let preDotState = 0;
        for (let i = path.length - 1; i >= 0; --i) {
            const code = path.charCodeAt(i);
            if (code === _constants_ts_9.CHAR_FORWARD_SLASH) {
                if (!matchedSlash) {
                    startPart = i + 1;
                    break;
                }
                continue;
            }
            if (end === -1) {
                matchedSlash = false;
                end = i + 1;
            }
            if (code === _constants_ts_9.CHAR_DOT) {
                if (startDot === -1)
                    startDot = i;
                else if (preDotState !== 1)
                    preDotState = 1;
            }
            else if (startDot !== -1) {
                preDotState = -1;
            }
        }
        if (startDot === -1 ||
            end === -1 ||
            preDotState === 0 ||
            (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)) {
            return "";
        }
        return path.slice(startDot, end);
    }
    exports_186("extname", extname);
    function format(pathObject) {
        if (pathObject === null || typeof pathObject !== "object") {
            throw new TypeError(`The "pathObject" argument must be of type Object. Received type ${typeof pathObject}`);
        }
        return _util_ts_4._format("/", pathObject);
    }
    exports_186("format", format);
    function parse(path) {
        _util_ts_4.assertPath(path);
        const ret = { root: "", dir: "", base: "", ext: "", name: "" };
        if (path.length === 0)
            return ret;
        const isAbsolute = path.charCodeAt(0) === _constants_ts_9.CHAR_FORWARD_SLASH;
        let start;
        if (isAbsolute) {
            ret.root = "/";
            start = 1;
        }
        else {
            start = 0;
        }
        let startDot = -1;
        let startPart = 0;
        let end = -1;
        let matchedSlash = true;
        let i = path.length - 1;
        let preDotState = 0;
        for (; i >= start; --i) {
            const code = path.charCodeAt(i);
            if (code === _constants_ts_9.CHAR_FORWARD_SLASH) {
                if (!matchedSlash) {
                    startPart = i + 1;
                    break;
                }
                continue;
            }
            if (end === -1) {
                matchedSlash = false;
                end = i + 1;
            }
            if (code === _constants_ts_9.CHAR_DOT) {
                if (startDot === -1)
                    startDot = i;
                else if (preDotState !== 1)
                    preDotState = 1;
            }
            else if (startDot !== -1) {
                preDotState = -1;
            }
        }
        if (startDot === -1 ||
            end === -1 ||
            preDotState === 0 ||
            (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)) {
            if (end !== -1) {
                if (startPart === 0 && isAbsolute) {
                    ret.base = ret.name = path.slice(1, end);
                }
                else {
                    ret.base = ret.name = path.slice(startPart, end);
                }
            }
        }
        else {
            if (startPart === 0 && isAbsolute) {
                ret.name = path.slice(1, startDot);
                ret.base = path.slice(1, end);
            }
            else {
                ret.name = path.slice(startPart, startDot);
                ret.base = path.slice(startPart, end);
            }
            ret.ext = path.slice(startDot, end);
        }
        if (startPart > 0)
            ret.dir = path.slice(0, startPart - 1);
        else if (isAbsolute)
            ret.dir = "/";
        return ret;
    }
    exports_186("parse", parse);
    function fromFileUrl(url) {
        if (typeof url === "string")
            url = new URL(url);
        return url.pathname;
    }
    exports_186("fromFileUrl", fromFileUrl);
    return {
        setters: [
            function (_constants_ts_9_1) {
                _constants_ts_9 = _constants_ts_9_1;
            },
            function (_util_ts_4_1) {
                _util_ts_4 = _util_ts_4_1;
            }
        ],
        execute: function () {
            cwd = Deno.cwd;
            exports_186("sep", sep = "/");
            exports_186("delimiter", delimiter = ":");
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/path/separator", [], function (exports_187, context_187) {
    "use strict";
    var isWindows, SEP, SEP_PATTERN;
    var __moduleName = context_187 && context_187.id;
    return {
        setters: [],
        execute: function () {
            isWindows = Deno.build.os == "windows";
            exports_187("SEP", SEP = isWindows ? "\\" : "/");
            exports_187("SEP_PATTERN", SEP_PATTERN = isWindows ? /[\\/]+/ : /\/+/);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/path/common", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/path/separator"], function (exports_188, context_188) {
    "use strict";
    var separator_ts_4;
    var __moduleName = context_188 && context_188.id;
    function common(paths, sep = separator_ts_4.SEP) {
        const [first = "", ...remaining] = paths;
        if (first === "" || remaining.length === 0) {
            return first.substring(0, first.lastIndexOf(sep) + 1);
        }
        const parts = first.split(sep);
        let endOfPrefix = parts.length;
        for (const path of remaining) {
            const compare = path.split(sep);
            for (let i = 0; i < endOfPrefix; i++) {
                if (compare[i] !== parts[i]) {
                    endOfPrefix = i;
                }
            }
            if (endOfPrefix === 0) {
                return "";
            }
        }
        const prefix = parts.slice(0, endOfPrefix).join(sep);
        return prefix.endsWith(sep) ? prefix : `${prefix}${sep}`;
    }
    exports_188("common", common);
    return {
        setters: [
            function (separator_ts_4_1) {
                separator_ts_4 = separator_ts_4_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/path/_globrex", [], function (exports_189, context_189) {
    "use strict";
    var isWin, SEP, SEP_ESC, SEP_RAW, GLOBSTAR, WILDCARD, GLOBSTAR_SEGMENT, WILDCARD_SEGMENT;
    var __moduleName = context_189 && context_189.id;
    function globrex(glob, { extended = false, globstar = false, strict = false, filepath = false, flags = "", } = {}) {
        const sepPattern = new RegExp(`^${SEP}${strict ? "" : "+"}$`);
        let regex = "";
        let segment = "";
        let pathRegexStr = "";
        const pathSegments = [];
        let inGroup = false;
        let inRange = false;
        const ext = [];
        function add(str, options = { split: false, last: false, only: "" }) {
            const { split, last, only } = options;
            if (only !== "path")
                regex += str;
            if (filepath && only !== "regex") {
                pathRegexStr += str.match(sepPattern) ? SEP : str;
                if (split) {
                    if (last)
                        segment += str;
                    if (segment !== "") {
                        if (!flags.includes("g"))
                            segment = `^${segment}$`;
                        pathSegments.push(new RegExp(segment, flags));
                    }
                    segment = "";
                }
                else {
                    segment += str;
                }
            }
        }
        let c, n;
        for (let i = 0; i < glob.length; i++) {
            c = glob[i];
            n = glob[i + 1];
            if (["\\", "$", "^", ".", "="].includes(c)) {
                add(`\\${c}`);
                continue;
            }
            if (c.match(sepPattern)) {
                add(SEP, { split: true });
                if (n != null && n.match(sepPattern) && !strict)
                    regex += "?";
                continue;
            }
            if (c === "(") {
                if (ext.length) {
                    add(`${c}?:`);
                    continue;
                }
                add(`\\${c}`);
                continue;
            }
            if (c === ")") {
                if (ext.length) {
                    add(c);
                    const type = ext.pop();
                    if (type === "@") {
                        add("{1}");
                    }
                    else if (type === "!") {
                        add(WILDCARD);
                    }
                    else {
                        add(type);
                    }
                    continue;
                }
                add(`\\${c}`);
                continue;
            }
            if (c === "|") {
                if (ext.length) {
                    add(c);
                    continue;
                }
                add(`\\${c}`);
                continue;
            }
            if (c === "+") {
                if (n === "(" && extended) {
                    ext.push(c);
                    continue;
                }
                add(`\\${c}`);
                continue;
            }
            if (c === "@" && extended) {
                if (n === "(") {
                    ext.push(c);
                    continue;
                }
            }
            if (c === "!") {
                if (extended) {
                    if (inRange) {
                        add("^");
                        continue;
                    }
                    if (n === "(") {
                        ext.push(c);
                        add("(?!");
                        i++;
                        continue;
                    }
                    add(`\\${c}`);
                    continue;
                }
                add(`\\${c}`);
                continue;
            }
            if (c === "?") {
                if (extended) {
                    if (n === "(") {
                        ext.push(c);
                    }
                    else {
                        add(".");
                    }
                    continue;
                }
                add(`\\${c}`);
                continue;
            }
            if (c === "[") {
                if (inRange && n === ":") {
                    i++;
                    let value = "";
                    while (glob[++i] !== ":")
                        value += glob[i];
                    if (value === "alnum")
                        add("(?:\\w|\\d)");
                    else if (value === "space")
                        add("\\s");
                    else if (value === "digit")
                        add("\\d");
                    i++;
                    continue;
                }
                if (extended) {
                    inRange = true;
                    add(c);
                    continue;
                }
                add(`\\${c}`);
                continue;
            }
            if (c === "]") {
                if (extended) {
                    inRange = false;
                    add(c);
                    continue;
                }
                add(`\\${c}`);
                continue;
            }
            if (c === "{") {
                if (extended) {
                    inGroup = true;
                    add("(?:");
                    continue;
                }
                add(`\\${c}`);
                continue;
            }
            if (c === "}") {
                if (extended) {
                    inGroup = false;
                    add(")");
                    continue;
                }
                add(`\\${c}`);
                continue;
            }
            if (c === ",") {
                if (inGroup) {
                    add("|");
                    continue;
                }
                add(`\\${c}`);
                continue;
            }
            if (c === "*") {
                if (n === "(" && extended) {
                    ext.push(c);
                    continue;
                }
                const prevChar = glob[i - 1];
                let starCount = 1;
                while (glob[i + 1] === "*") {
                    starCount++;
                    i++;
                }
                const nextChar = glob[i + 1];
                if (!globstar) {
                    add(".*");
                }
                else {
                    const isGlobstar = starCount > 1 &&
                        [SEP_RAW, "/", undefined].includes(prevChar) &&
                        [SEP_RAW, "/", undefined].includes(nextChar);
                    if (isGlobstar) {
                        add(GLOBSTAR, { only: "regex" });
                        add(GLOBSTAR_SEGMENT, { only: "path", last: true, split: true });
                        i++;
                    }
                    else {
                        add(WILDCARD, { only: "regex" });
                        add(WILDCARD_SEGMENT, { only: "path" });
                    }
                }
                continue;
            }
            add(c);
        }
        if (!flags.includes("g")) {
            regex = `^${regex}$`;
            segment = `^${segment}$`;
            if (filepath)
                pathRegexStr = `^${pathRegexStr}$`;
        }
        const result = { regex: new RegExp(regex, flags) };
        if (filepath) {
            pathSegments.push(new RegExp(segment, flags));
            result.path = {
                regex: new RegExp(pathRegexStr, flags),
                segments: pathSegments,
                globstar: new RegExp(!flags.includes("g") ? `^${GLOBSTAR_SEGMENT}$` : GLOBSTAR_SEGMENT, flags),
            };
        }
        return result;
    }
    exports_189("globrex", globrex);
    return {
        setters: [],
        execute: function () {
            isWin = Deno.build.os === "windows";
            SEP = isWin ? `(?:\\\\|\\/)` : `\\/`;
            SEP_ESC = isWin ? `\\\\` : `/`;
            SEP_RAW = isWin ? `\\` : `/`;
            GLOBSTAR = `(?:(?:[^${SEP_ESC}/]*(?:${SEP_ESC}|\/|$))*)`;
            WILDCARD = `(?:[^${SEP_ESC}/]*)`;
            GLOBSTAR_SEGMENT = `((?:[^${SEP_ESC}/]*(?:${SEP_ESC}|\/|$))*)`;
            WILDCARD_SEGMENT = `(?:[^${SEP_ESC}/]*)`;
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/path/glob", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/path/separator", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/path/_globrex", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/path/mod", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/testing/asserts"], function (exports_190, context_190) {
    "use strict";
    var separator_ts_5, _globrex_ts_2, mod_ts_34, asserts_ts_3;
    var __moduleName = context_190 && context_190.id;
    function globToRegExp(glob, { extended = false, globstar = true } = {}) {
        const result = _globrex_ts_2.globrex(glob, {
            extended,
            globstar,
            strict: false,
            filepath: true,
        });
        asserts_ts_3.assert(result.path != null);
        return result.path.regex;
    }
    exports_190("globToRegExp", globToRegExp);
    function isGlob(str) {
        const chars = { "{": "}", "(": ")", "[": "]" };
        const regex = /\\(.)|(^!|\*|[\].+)]\?|\[[^\\\]]+\]|\{[^\\}]+\}|\(\?[:!=][^\\)]+\)|\([^|]+\|[^\\)]+\))/;
        if (str === "") {
            return false;
        }
        let match;
        while ((match = regex.exec(str))) {
            if (match[2])
                return true;
            let idx = match.index + match[0].length;
            const open = match[1];
            const close = open ? chars[open] : null;
            if (open && close) {
                const n = str.indexOf(close, idx);
                if (n !== -1) {
                    idx = n + 1;
                }
            }
            str = str.slice(idx);
        }
        return false;
    }
    exports_190("isGlob", isGlob);
    function normalizeGlob(glob, { globstar = false } = {}) {
        if (!!glob.match(/\0/g)) {
            throw new Error(`Glob contains invalid characters: "${glob}"`);
        }
        if (!globstar) {
            return mod_ts_34.normalize(glob);
        }
        const s = separator_ts_5.SEP_PATTERN.source;
        const badParentPattern = new RegExp(`(?<=(${s}|^)\\*\\*${s})\\.\\.(?=${s}|$)`, "g");
        return mod_ts_34.normalize(glob.replace(badParentPattern, "\0")).replace(/\0/g, "..");
    }
    exports_190("normalizeGlob", normalizeGlob);
    function joinGlobs(globs, { extended = false, globstar = false } = {}) {
        if (!globstar || globs.length == 0) {
            return mod_ts_34.join(...globs);
        }
        if (globs.length === 0)
            return ".";
        let joined;
        for (const glob of globs) {
            const path = glob;
            if (path.length > 0) {
                if (!joined)
                    joined = path;
                else
                    joined += `${separator_ts_5.SEP}${path}`;
            }
        }
        if (!joined)
            return ".";
        return normalizeGlob(joined, { extended, globstar });
    }
    exports_190("joinGlobs", joinGlobs);
    return {
        setters: [
            function (separator_ts_5_1) {
                separator_ts_5 = separator_ts_5_1;
            },
            function (_globrex_ts_2_1) {
                _globrex_ts_2 = _globrex_ts_2_1;
            },
            function (mod_ts_34_1) {
                mod_ts_34 = mod_ts_34_1;
            },
            function (asserts_ts_3_1) {
                asserts_ts_3 = asserts_ts_3_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/path/mod", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/path/win32", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/path/posix", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/path/common", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/path/separator", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/path/interface", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/path/glob"], function (exports_191, context_191) {
    "use strict";
    var _win32, _posix, isWindows, path, win32, posix, basename, delimiter, dirname, extname, format, fromFileUrl, isAbsolute, join, normalize, parse, relative, resolve, sep, toNamespacedPath;
    var __moduleName = context_191 && context_191.id;
    var exportedNames_3 = {
        "win32": true,
        "posix": true,
        "basename": true,
        "delimiter": true,
        "dirname": true,
        "extname": true,
        "format": true,
        "fromFileUrl": true,
        "isAbsolute": true,
        "join": true,
        "normalize": true,
        "parse": true,
        "relative": true,
        "resolve": true,
        "sep": true,
        "toNamespacedPath": true,
        "SEP": true,
        "SEP_PATTERN": true
    };
    function exportStar_10(m) {
        var exports = {};
        for (var n in m) {
            if (n !== "default" && !exportedNames_3.hasOwnProperty(n)) exports[n] = m[n];
        }
        exports_191(exports);
    }
    return {
        setters: [
            function (_win32_2) {
                _win32 = _win32_2;
            },
            function (_posix_2) {
                _posix = _posix_2;
            },
            function (common_ts_2_1) {
                exportStar_10(common_ts_2_1);
            },
            function (separator_ts_6_1) {
                exports_191({
                    "SEP": separator_ts_6_1["SEP"],
                    "SEP_PATTERN": separator_ts_6_1["SEP_PATTERN"]
                });
            },
            function (interface_ts_1_1) {
                exportStar_10(interface_ts_1_1);
            },
            function (glob_ts_2_1) {
                exportStar_10(glob_ts_2_1);
            }
        ],
        execute: function () {
            isWindows = Deno.build.os == "windows";
            path = isWindows ? _win32 : _posix;
            exports_191("win32", win32 = _win32);
            exports_191("posix", posix = _posix);
            exports_191("basename", basename = path.basename), exports_191("delimiter", delimiter = path.delimiter), exports_191("dirname", dirname = path.dirname), exports_191("extname", extname = path.extname), exports_191("format", format = path.format), exports_191("fromFileUrl", fromFileUrl = path.fromFileUrl), exports_191("isAbsolute", isAbsolute = path.isAbsolute), exports_191("join", join = path.join), exports_191("normalize", normalize = path.normalize), exports_191("parse", parse = path.parse), exports_191("relative", relative = path.relative), exports_191("resolve", resolve = path.resolve), exports_191("sep", sep = path.sep), exports_191("toNamespacedPath", toNamespacedPath = path.toNamespacedPath);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/util/template", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index"], function (exports_192, context_192) {
    "use strict";
    var index_js_7, template, readFile, writeFile, jsSourceTemplate, jsFileTemplate, writeJsFileUsingTemplate;
    var __moduleName = context_192 && context_192.id;
    return {
        setters: [
            function (index_js_7_1) {
                index_js_7 = index_js_7_1;
            }
        ],
        execute: function () {
            template = index_js_7.default.template;
            readFile = Deno.readFile;
            writeFile = Deno.writeFile;
            exports_192("jsSourceTemplate", jsSourceTemplate = (content, options) => template(content, {
                interpolate: /<%=([\s\S]+?)%>/g,
                ...options,
            }));
            exports_192("jsFileTemplate", jsFileTemplate = async (filePath, options) => {
                const contentBuffer = await readFile(filePath);
                return jsSourceTemplate(contentBuffer.toString(), options);
            });
            exports_192("writeJsFileUsingTemplate", writeJsFileUsingTemplate = async (targetFilePath, sourceFilePath, options, variables) => writeFile(targetFilePath, (await jsFileTemplate(sourceFilePath, options))(variables)));
            exports_192("default", {
                jsSourceTemplate,
                jsFileTemplate,
                writeJsFileUsingTemplate,
            });
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/util/fs", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/path/mod"], function (exports_193, context_193) {
    "use strict";
    var path, stat, readFile, writeFile, readdir;
    var __moduleName = context_193 && context_193.id;
    function crossPlatformPathConversion(filePath) {
        if (Deno.build.os === "win") {
            filePath = filePath.split("/").join("\\");
            filePath = filePath.substr(1, filePath.length - 1);
        }
        return filePath;
    }
    function mkdirp(dir) {
        const __dirname = crossPlatformPathConversion(new URL(".", context_193.meta.url).pathname);
        let newDir = path.join(__dirname, startDir);
        return Deno.mkdir(dir, { recursive: true }).then(() => newDir);
    }
    function createTemp() {
        return Deno.makeTempDir();
    }
    function ensureDirectoryExists(dir) {
        return stat(dir).catch(() => mkdirp(dir));
    }
    exports_193("ensureDirectoryExists", ensureDirectoryExists);
    return {
        setters: [
            function (path_1) {
                path = path_1;
            }
        ],
        execute: function () {
            exports_193("stat", stat = Deno.stat);
            exports_193("readFile", readFile = Deno.readFile);
            exports_193("writeFile", writeFile = Deno.writeFile);
            exports_193("readdir", readdir = Deno.readdir);
            exports_193("default", {
                stat,
                readdir,
                readFile,
                writeFile,
                createTemp,
                ensureDirectoryExists,
            });
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/migrate/sources/fs-migrations", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/path/mod", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/util/fs"], function (exports_194, context_194) {
    "use strict";
    var path, index_js_8, sortBy, fs_js_1, DEFAULT_LOAD_EXTENSIONS, FsMigrations;
    var __moduleName = context_194 && context_194.id;
    function filterMigrations(migrationSource, migrations, loadExtensions) {
        return migrations.filter((migration) => {
            const migrationName = migrationSource.getMigrationName(migration);
            const extension = path.extname(migrationName);
            return loadExtensions.includes(extension);
        });
    }
    return {
        setters: [
            function (path_2) {
                path = path_2;
            },
            function (index_js_8_1) {
                index_js_8 = index_js_8_1;
            },
            function (fs_js_1_1) {
                fs_js_1 = fs_js_1_1;
            }
        ],
        execute: function () {
            sortBy = index_js_8.default.sortBy;
            exports_194("DEFAULT_LOAD_EXTENSIONS", DEFAULT_LOAD_EXTENSIONS = Object.freeze([
                '.co',
                '.coffee',
                '.eg',
                '.iced',
                '.js',
                '.litcoffee',
                '.ls',
                '.ts',
            ]));
            FsMigrations = class FsMigrations {
                constructor(migrationDirectories, sortDirsSeparately, loadExtensions) {
                    this.sortDirsSeparately = sortDirsSeparately;
                    if (!Array.isArray(migrationDirectories)) {
                        migrationDirectories = [migrationDirectories];
                    }
                    this.migrationsPaths = migrationDirectories;
                    this.loadExtensions = loadExtensions || DEFAULT_LOAD_EXTENSIONS;
                }
                getMigrations(loadExtensions) {
                    const readMigrationsPromises = this.migrationsPaths.map((configDir) => {
                        const absoluteDir = path.resolve(process.cwd(), configDir);
                        return fs_js_1.readdir(absoluteDir).then((files) => ({
                            files,
                            configDir,
                            absoluteDir,
                        }));
                    });
                    return Promise.all(readMigrationsPromises).then((allMigrations) => {
                        const migrations = allMigrations.reduce((acc, migrationDirectory) => {
                            if (this.sortDirsSeparately) {
                                migrationDirectory.files = migrationDirectory.files.sort();
                            }
                            migrationDirectory.files.forEach((file) => acc.push({ file, directory: migrationDirectory.configDir }));
                            return acc;
                        }, []);
                        if (this.sortDirsSeparately) {
                            return filterMigrations(this, migrations, loadExtensions || this.loadExtensions);
                        }
                        return filterMigrations(this, sortBy(migrations, 'file'), loadExtensions || this.loadExtensions);
                    });
                }
                getMigrationName(migration) {
                    return migration.file;
                }
                getMigration(migration) {
                    const absoluteDir = path.resolve(process.cwd(), migration.directory);
                    return require(path.join(absoluteDir, migration.file));
                }
            };
            exports_194("FsMigrations", FsMigrations);
            exports_194("default", {
                DEFAULT_LOAD_EXTENSIONS,
                FsMigrations,
            });
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/migrate/configuration-merger", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/migrate/sources/fs-migrations"], function (exports_195, context_195) {
    "use strict";
    var fs_migrations_js_1, CONFIG_DEFAULT;
    var __moduleName = context_195 && context_195.id;
    function getMergedConfig(config, currentConfig) {
        const mergedConfig = Object.assign({}, CONFIG_DEFAULT, currentConfig || {}, config);
        if (config &&
            (config.directory ||
                config.sortDirsSeparately !== undefined ||
                config.loadExtensions)) {
            mergedConfig.migrationSource = null;
        }
        if (!mergedConfig.migrationSource) {
            mergedConfig.migrationSource = new fs_migrations_js_1.FsMigrations(mergedConfig.directory, mergedConfig.sortDirsSeparately, mergedConfig.loadExtensions);
        }
        return mergedConfig;
    }
    exports_195("getMergedConfig", getMergedConfig);
    return {
        setters: [
            function (fs_migrations_js_1_1) {
                fs_migrations_js_1 = fs_migrations_js_1_1;
            }
        ],
        execute: function () {
            CONFIG_DEFAULT = Object.freeze({
                extension: 'js',
                loadExtensions: fs_migrations_js_1.DEFAULT_LOAD_EXTENSIONS,
                tableName: 'knex_migrations',
                schemaName: null,
                directory: './migrations',
                disableTransactions: false,
                disableMigrationsListValidation: false,
                sortDirsSeparately: false,
            });
            exports_195("default", {
                getMergedConfig,
            });
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/migrate/MigrationGenerator", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/path/mod", "https://raw.githubusercontent.com/denjucks/dex/master/lib/util/template", "https://raw.githubusercontent.com/denjucks/dex/master/lib/migrate/configuration-merger", "https://raw.githubusercontent.com/denjucks/dex/master/lib/util/fs"], function (exports_196, context_196) {
    "use strict";
    var path, template_js_1, configuration_merger_js_1, fs_js_2, MigrationGenerator;
    var __moduleName = context_196 && context_196.id;
    function padDate(segment) {
        segment = segment.toString();
        return segment[1] ? segment : `0${segment}`;
    }
    function yyyymmddhhmmss() {
        const d = new Date();
        return (d.getFullYear().toString() +
            padDate(d.getMonth() + 1) +
            padDate(d.getDate()) +
            padDate(d.getHours()) +
            padDate(d.getMinutes()) +
            padDate(d.getSeconds()));
    }
    return {
        setters: [
            function (path_3) {
                path = path_3;
            },
            function (template_js_1_1) {
                template_js_1 = template_js_1_1;
            },
            function (configuration_merger_js_1_1) {
                configuration_merger_js_1 = configuration_merger_js_1_1;
            },
            function (fs_js_2_1) {
                fs_js_2 = fs_js_2_1;
            }
        ],
        execute: function () {
            MigrationGenerator = class MigrationGenerator {
                constructor(migrationConfig) {
                    this.config = configuration_merger_js_1.getMergedConfig(migrationConfig);
                }
                async make(name, config) {
                    this.config = configuration_merger_js_1.getMergedConfig(config, this.config);
                    if (!name) {
                        return Promise.reject(new Error('A name must be specified for the generated migration'));
                    }
                    await this._ensureFolder();
                    const createdMigrationFilePath = await this._writeNewMigration(name);
                    return createdMigrationFilePath;
                }
                _ensureFolder() {
                    const dirs = this._absoluteConfigDirs();
                    const promises = dirs.map(fs_js_2.ensureDirectoryExists);
                    return Promise.all(promises);
                }
                _getStubPath() {
                    return (this.config.stub ||
                        path.join(__dirname, 'stub', this.config.extension + '.stub'));
                }
                _getNewMigrationName(name) {
                    if (name[0] === '-')
                        name = name.slice(1);
                    return yyyymmddhhmmss() + '_' + name + '.' + this.config.extension;
                }
                _getNewMigrationPath(name) {
                    const fileName = this._getNewMigrationName(name);
                    const dirs = this._absoluteConfigDirs();
                    const dir = dirs.slice(-1)[0];
                    return path.join(dir, fileName);
                }
                async _writeNewMigration(name) {
                    const migrationPath = this._getNewMigrationPath(name);
                    await template_js_1.writeJsFileUsingTemplate(migrationPath, this._getStubPath(), { variable: 'd' }, this.config.variables || {});
                    return migrationPath;
                }
                _absoluteConfigDirs() {
                    const directories = Array.isArray(this.config.directory)
                        ? this.config.directory
                        : [this.config.directory];
                    return directories.map((directory) => {
                        if (!directory) {
                            console.warn('Failed to resolve config file, knex cannot determine where to generate migrations');
                        }
                        return path.resolve(process.cwd(), directory);
                    });
                }
            };
            exports_196("default", MigrationGenerator);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/migrate/Migrator", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/migrate/table-resolver", "https://raw.githubusercontent.com/denjucks/dex/master/lib/migrate/table-creator", "https://raw.githubusercontent.com/denjucks/dex/master/lib/migrate/migration-list-resolver", "https://raw.githubusercontent.com/denjucks/dex/master/lib/migrate/MigrationGenerator", "https://raw.githubusercontent.com/denjucks/dex/master/lib/migrate/configuration-merger"], function (exports_197, context_197) {
    "use strict";
    var index_js_9, differenceWith, get, isBoolean, isEmpty, isFunction, max, inherits_js_3, table_resolver_js_3, table_creator_js_2, migration_list_resolver_js_1, MigrationGenerator_js_1, configuration_merger_js_2, Migrator;
    var __moduleName = context_197 && context_197.id;
    function LockError(msg) {
        this.name = 'MigrationLocked';
        this.message = msg;
    }
    function validateMigrationList(migrationSource, migrations) {
        const all = migrations[0];
        const completed = migrations[1];
        const diff = getMissingMigrations(migrationSource, completed, all);
        if (!isEmpty(diff)) {
            throw new Error(`The migration directory is corrupt, the following files are missing: ${diff.join(', ')}`);
        }
    }
    function getMissingMigrations(migrationSource, completed, all) {
        return differenceWith(completed, all, (completedMigration, allMigration) => {
            return (completedMigration === migrationSource.getMigrationName(allMigration));
        });
    }
    function getNewMigrations(migrationSource, all, completed) {
        return differenceWith(all, completed, (allMigration, completedMigration) => {
            return (completedMigration === migrationSource.getMigrationName(allMigration));
        });
    }
    function checkPromise(logger, migrationPromise, name, commitFn) {
        if (!migrationPromise || typeof migrationPromise.then !== 'function') {
            logger.warn(`migration ${name} did not return a promise`);
            if (commitFn) {
                commitFn();
            }
        }
        return migrationPromise;
    }
    return {
        setters: [
            function (index_js_9_1) {
                index_js_9 = index_js_9_1;
            },
            function (inherits_js_3_1) {
                inherits_js_3 = inherits_js_3_1;
            },
            function (table_resolver_js_3_1) {
                table_resolver_js_3 = table_resolver_js_3_1;
            },
            function (table_creator_js_2_1) {
                table_creator_js_2 = table_creator_js_2_1;
            },
            function (migration_list_resolver_js_1_1) {
                migration_list_resolver_js_1 = migration_list_resolver_js_1_1;
            },
            function (MigrationGenerator_js_1_1) {
                MigrationGenerator_js_1 = MigrationGenerator_js_1_1;
            },
            function (configuration_merger_js_2_1) {
                configuration_merger_js_2 = configuration_merger_js_2_1;
            }
        ],
        execute: function () {
            differenceWith = index_js_9.default.differenceWith;
            get = index_js_9.default.get;
            isBoolean = index_js_9.default.isBoolean;
            isEmpty = index_js_9.default.isEmpty;
            isFunction = index_js_9.default.isFunction;
            max = index_js_9.default.max;
            inherits_js_3.default(LockError, Error);
            Migrator = class Migrator {
                constructor(knex) {
                    if (isFunction(knex)) {
                        if (!knex.isTransaction) {
                            this.knex = knex.withUserParams({
                                ...knex.userParams,
                            });
                        }
                        else {
                            this.knex = knex;
                        }
                    }
                    else {
                        this.knex = Object.assign({}, knex);
                        this.knex.userParams = this.knex.userParams || {};
                    }
                    this.config = configuration_merger_js_2.getMergedConfig(this.knex.client.config.migrations);
                    this.generator = new MigrationGenerator_js_1.default(this.knex.client.config.migrations);
                    this._activeMigration = {
                        fileName: null,
                    };
                }
                latest(config) {
                    this._disableProcessing();
                    this.config = configuration_merger_js_2.getMergedConfig(config, this.config);
                    return migration_list_resolver_js_1.default
                        .listAllAndCompleted(this.config, this.knex)
                        .then((value) => {
                        if (!this.config.disableMigrationsListValidation) {
                            validateMigrationList(this.config.migrationSource, value);
                        }
                        return value;
                    })
                        .then(([all, completed]) => {
                        const migrations = getNewMigrations(this.config.migrationSource, all, completed);
                        const transactionForAll = !this.config.disableTransactions &&
                            !migrations.some((migration) => {
                                const migrationContents = this.config.migrationSource.getMigration(migration);
                                return !this._useTransaction(migrationContents);
                            });
                        if (transactionForAll) {
                            return this.knex.transaction((trx) => {
                                return this._runBatch(migrations, 'up', trx);
                            });
                        }
                        else {
                            return this._runBatch(migrations, 'up');
                        }
                    });
                }
                up(config) {
                    this._disableProcessing();
                    this.config = configuration_merger_js_2.getMergedConfig(config, this.config);
                    return migration_list_resolver_js_1.default
                        .listAllAndCompleted(this.config, this.knex)
                        .then((value) => {
                        if (!this.config.disableMigrationsListValidation) {
                            validateMigrationList(this.config.migrationSource, value);
                        }
                        return value;
                    })
                        .then(([all, completed]) => {
                        const newMigrations = getNewMigrations(this.config.migrationSource, all, completed);
                        let migrationToRun;
                        const name = this.config.name;
                        if (name) {
                            if (!completed.includes(name)) {
                                migrationToRun = newMigrations.find((migration) => {
                                    return (this.config.migrationSource.getMigrationName(migration) === name);
                                });
                                if (!migrationToRun) {
                                    throw new Error(`Migration "${name}" not found.`);
                                }
                            }
                        }
                        else {
                            migrationToRun = newMigrations[0];
                        }
                        const migrationsToRun = [];
                        if (migrationToRun) {
                            migrationsToRun.push(migrationToRun);
                        }
                        const transactionForAll = !this.config.disableTransactions &&
                            (!migrationToRun ||
                                this._useTransaction(this.config.migrationSource.getMigration(migrationToRun)));
                        if (transactionForAll) {
                            return this.knex.transaction((trx) => {
                                return this._runBatch(migrationsToRun, 'up', trx);
                            });
                        }
                        else {
                            return this._runBatch(migrationsToRun, 'up');
                        }
                    });
                }
                rollback(config, all = false) {
                    this._disableProcessing();
                    return new Promise((resolve, reject) => {
                        try {
                            this.config = configuration_merger_js_2.getMergedConfig(config, this.config);
                        }
                        catch (e) {
                            reject(e);
                        }
                        migration_list_resolver_js_1.default
                            .listAllAndCompleted(this.config, this.knex)
                            .then((value) => {
                            if (!this.config.disableMigrationsListValidation) {
                                validateMigrationList(this.config.migrationSource, value);
                            }
                            return value;
                        })
                            .then((val) => {
                            const [allMigrations, completedMigrations] = val;
                            return all
                                ? allMigrations
                                    .filter((migration) => {
                                    return completedMigrations.includes(migration.file);
                                })
                                    .reverse()
                                : this._getLastBatch(val);
                        })
                            .then((migrations) => {
                            return this._runBatch(migrations, 'down');
                        })
                            .then(resolve, reject);
                    });
                }
                down(config) {
                    this._disableProcessing();
                    this.config = configuration_merger_js_2.getMergedConfig(config, this.config);
                    return migration_list_resolver_js_1.default
                        .listAllAndCompleted(this.config, this.knex)
                        .then((value) => {
                        if (!this.config.disableMigrationsListValidation) {
                            validateMigrationList(this.config.migrationSource, value);
                        }
                        return value;
                    })
                        .then(([all, completed]) => {
                        const completedMigrations = all.filter((migration) => {
                            return completed.includes(this.config.migrationSource.getMigrationName(migration));
                        });
                        let migrationToRun;
                        const name = this.config.name;
                        if (name) {
                            migrationToRun = completedMigrations.find((migration) => {
                                return (this.config.migrationSource.getMigrationName(migration) === name);
                            });
                            if (!migrationToRun) {
                                throw new Error(`Migration "${name}" was not run.`);
                            }
                        }
                        else {
                            migrationToRun = completedMigrations[completedMigrations.length - 1];
                        }
                        const migrationsToRun = [];
                        if (migrationToRun) {
                            migrationsToRun.push(migrationToRun);
                        }
                        return this._runBatch(migrationsToRun, 'down');
                    });
                }
                status(config) {
                    this._disableProcessing();
                    this.config = configuration_merger_js_2.getMergedConfig(config, this.config);
                    return Promise.all([
                        table_resolver_js_3.getTable(this.knex, this.config.tableName, this.config.schemaName).select('*'),
                        migration_list_resolver_js_1.default.listAll(this.config.migrationSource),
                    ]).then(([db, code]) => db.length - code.length);
                }
                currentVersion(config) {
                    this._disableProcessing();
                    this.config = configuration_merger_js_2.getMergedConfig(config, this.config);
                    return migration_list_resolver_js_1.default
                        .listCompleted(this.config.tableName, this.config.schemaName, this.knex)
                        .then((completed) => {
                        const val = max(completed.map((value) => value.split('_')[0]));
                        return val === undefined ? 'none' : val;
                    });
                }
                async list(config) {
                    this._disableProcessing();
                    this.config = configuration_merger_js_2.getMergedConfig(config, this.config);
                    const [all, completed] = await migration_list_resolver_js_1.default.listAllAndCompleted(this.config, this.knex);
                    if (!this.config.disableMigrationsListValidation) {
                        validateMigrationList(this.config.migrationSource, [all, completed]);
                    }
                    const newMigrations = getNewMigrations(this.config.migrationSource, all, completed);
                    return [completed, newMigrations];
                }
                forceFreeMigrationsLock(config) {
                    this.config = configuration_merger_js_2.getMergedConfig(config, this.config);
                    const lockTable = table_resolver_js_3.getLockTableName(this.config.tableName);
                    return table_creator_js_2.getSchemaBuilder(this.knex, this.config.schemaName)
                        .hasTable(lockTable)
                        .then((exist) => exist && this._freeLock());
                }
                make(name, config) {
                    this.config = configuration_merger_js_2.getMergedConfig(config, this.config);
                    return this.generator.make(name, this.config);
                }
                _disableProcessing() {
                    if (this.knex.disableProcessing) {
                        this.knex.disableProcessing();
                    }
                }
                _lockMigrations(trx) {
                    const tableName = table_resolver_js_3.getLockTableName(this.config.tableName);
                    return table_resolver_js_3.getTable(this.knex, tableName, this.config.schemaName)
                        .transacting(trx)
                        .where('is_locked', '=', 0)
                        .update({ is_locked: 1 })
                        .then((rowCount) => {
                        if (rowCount != 1) {
                            throw new Error('Migration table is already locked');
                        }
                    });
                }
                _getLock(trx) {
                    const transact = trx ? (fn) => fn(trx) : (fn) => this.knex.transaction(fn);
                    return transact((trx) => {
                        return this._lockMigrations(trx);
                    }).catch((err) => {
                        throw new LockError(err.message);
                    });
                }
                _freeLock(trx = this.knex) {
                    const tableName = table_resolver_js_3.getLockTableName(this.config.tableName);
                    return table_resolver_js_3.getTable(trx, tableName, this.config.schemaName).update({
                        is_locked: 0,
                    });
                }
                _runBatch(migrations, direction, trx) {
                    return (this._getLock(trx)
                        .then(() => trx
                        ? migration_list_resolver_js_1.default.listCompleted(this.config.tableName, this.config.schemaName, trx)
                        : [])
                        .then((completed) => (migrations = getNewMigrations(this.config.migrationSource, migrations, completed)))
                        .then(() => Promise.all(migrations.map(this._validateMigrationStructure.bind(this))))
                        .then(() => this._latestBatchNumber(trx))
                        .then((batchNo) => {
                        if (direction === 'up')
                            batchNo++;
                        return batchNo;
                    })
                        .then((batchNo) => {
                        return this._waterfallBatch(batchNo, migrations, direction, trx);
                    })
                        .then(async (res) => {
                        await this._freeLock(trx);
                        return res;
                    })
                        .catch(async (error) => {
                        let cleanupReady = Promise.resolve();
                        if (error instanceof LockError) {
                            this.knex.client.logger.warn(`Can't take lock to run migrations: ${error.message}`);
                            this.knex.client.logger.warn('If you are sure migrations are not running you can release the ' +
                                'lock manually by deleting all the rows = require(migrations lock ' +
                                'table: ' +
                                table_resolver_js_3.getLockTableNameWithSchema(this.config.tableName, this.config.schemaName));
                        }
                        else {
                            if (this._activeMigration.fileName) {
                                this.knex.client.logger.warn(`migration file "${this._activeMigration.fileName}" failed`);
                            }
                            this.knex.client.logger.warn(`migration failed with error: ${error.message}`);
                            cleanupReady = this._freeLock(trx);
                        }
                        try {
                            await cleanupReady;
                        }
                        catch (e) { }
                        throw error;
                    }));
                }
                _validateMigrationStructure(migration) {
                    const migrationName = this.config.migrationSource.getMigrationName(migration);
                    const migrationContent = this.config.migrationSource.getMigration(migration);
                    if (typeof migrationContent.up !== 'function' ||
                        typeof migrationContent.down !== 'function') {
                        throw new Error(`Invalid migration: ${migrationName} must have both an up and down function`);
                    }
                    return migration;
                }
                _getLastBatch([allMigrations]) {
                    const { tableName, schemaName } = this.config;
                    return table_resolver_js_3.getTable(this.knex, tableName, schemaName)
                        .where('batch', function (qb) {
                        qb.max('batch').from(table_resolver_js_3.getTableName(tableName, schemaName));
                    })
                        .orderBy('id', 'desc')
                        .then((migrations) => Promise.all(migrations.map((migration) => {
                        return allMigrations.find((entry) => {
                            return (this.config.migrationSource.getMigrationName(entry) ===
                                migration.name);
                        });
                    })));
                }
                _latestBatchNumber(trx = this.knex) {
                    return trx
                        .from(table_resolver_js_3.getTableName(this.config.tableName, this.config.schemaName))
                        .max('batch as max_batch')
                        .then((obj) => obj[0].max_batch || 0);
                }
                _useTransaction(migrationContent, allTransactionsDisabled) {
                    const singleTransactionValue = get(migrationContent, 'config.transaction');
                    return isBoolean(singleTransactionValue)
                        ? singleTransactionValue
                        : !allTransactionsDisabled;
                }
                _waterfallBatch(batchNo, migrations, direction, trx) {
                    const trxOrKnex = trx || this.knex;
                    const { tableName, schemaName, disableTransactions } = this.config;
                    let current = Promise.resolve();
                    const log = [];
                    migrations.forEach((migration) => {
                        const name = this.config.migrationSource.getMigrationName(migration);
                        this._activeMigration.fileName = name;
                        const migrationContent = this.config.migrationSource.getMigration(migration);
                        current = current
                            .then(() => {
                            this._activeMigration.fileName = name;
                            if (!trx &&
                                this._useTransaction(migrationContent, disableTransactions)) {
                                this.knex.enableProcessing();
                                return this._transaction(this.knex, migrationContent, direction, name);
                            }
                            trxOrKnex.enableProcessing();
                            return checkPromise(this.knex.client.logger, migrationContent[direction](trxOrKnex), name);
                        })
                            .then(() => {
                            trxOrKnex.disableProcessing();
                            this.knex.disableProcessing();
                            log.push(name);
                            if (direction === 'up') {
                                return trxOrKnex.into(table_resolver_js_3.getTableName(tableName, schemaName)).insert({
                                    name,
                                    batch: batchNo,
                                    migration_time: new Date(),
                                });
                            }
                            if (direction === 'down') {
                                return trxOrKnex
                                    .from(table_resolver_js_3.getTableName(tableName, schemaName))
                                    .where({ name })
                                    .del();
                            }
                        });
                    });
                    return current.then(() => [batchNo, log]);
                }
                _transaction(knex, migrationContent, direction, name) {
                    return knex.transaction((trx) => {
                        return checkPromise(knex.client.logger, migrationContent[direction](trx), name, () => {
                            trx.commit();
                        });
                    });
                }
            };
            exports_197("Migrator", Migrator);
            exports_197("default", {
                Migrator,
            });
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/seed/Seeder", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/path/mod", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/util/fs", "https://raw.githubusercontent.com/denjucks/dex/master/lib/util/template"], function (exports_198, context_198) {
    "use strict";
    var path, index_js_10, extend, includes, fs_js_3, template_js_2, Seeder;
    var __moduleName = context_198 && context_198.id;
    return {
        setters: [
            function (path_4) {
                path = path_4;
            },
            function (index_js_10_1) {
                index_js_10 = index_js_10_1;
            },
            function (fs_js_3_1) {
                fs_js_3 = fs_js_3_1;
            },
            function (template_js_2_1) {
                template_js_2 = template_js_2_1;
            }
        ],
        execute: function () {
            extend = index_js_10.default.extend;
            includes = index_js_10.default.includes;
            Seeder = class Seeder {
                constructor(knex) {
                    this.knex = knex;
                    this.config = this.setConfig(knex.client.config.seeds);
                }
                async run(config) {
                    this.config = this.setConfig(config);
                    const all = await this._listAll();
                    const files = config && config.specific
                        ? all.filter((file) => file === config.specific)
                        : all;
                    return this._runSeeds(files);
                }
                async make(name, config) {
                    this.config = this.setConfig(config);
                    if (!name)
                        throw new Error('A name must be specified for the generated seed');
                    await this._ensureFolder(config);
                    const seedPath = await this._writeNewSeed(name);
                    return seedPath;
                }
                async _listAll(config) {
                    this.config = this.setConfig(config);
                    const loadExtensions = this.config.loadExtensions;
                    return fs_js_3.readdir(this._absoluteConfigDir()).then((seeds) => seeds
                        .filter((value) => {
                        const extension = path.extname(value);
                        return includes(loadExtensions, extension);
                    })
                        .sort());
                }
                async _ensureFolder() {
                    const dir = this._absoluteConfigDir();
                    await fs_js_3.ensureDirectoryExists(dir);
                }
                _runSeeds(seeds) {
                    seeds.forEach((seed) => this._validateSeedStructure(seed));
                    return this._waterfallBatch(seeds);
                }
                _validateSeedStructure(name) {
                    const seed = require(path.join(this._absoluteConfigDir(), name));
                    if (typeof seed.seed !== 'function') {
                        throw new Error(`Invalid seed file: ${name} must have a seed function`);
                    }
                    return name;
                }
                _getStubPath() {
                    return (this.config.stub ||
                        path.join(__dirname, 'stub', this.config.extension + '.stub'));
                }
                _getNewStubFileName(name) {
                    if (name[0] === '-')
                        name = name.slice(1);
                    return name + '.' + this.config.extension;
                }
                _getNewStubFilePath(name) {
                    return path.join(this._absoluteConfigDir(), this._getNewStubFileName(name));
                }
                async _writeNewSeed(name) {
                    const seedPath = this._getNewStubFilePath(name);
                    await template_js_2.writeJsFileUsingTemplate(seedPath, this._getStubPath(), { variable: 'd' }, this.config.variables || {});
                    return seedPath;
                }
                async _waterfallBatch(seeds) {
                    const { knex } = this;
                    const seedDirectory = this._absoluteConfigDir();
                    const log = [];
                    for (const seedName of seeds) {
                        const seedPath = path.join(seedDirectory, seedName);
                        const seed = require(seedPath);
                        try {
                            await seed.seed(knex);
                            log.push(seedPath);
                        }
                        catch (originalError) {
                            const error = new Error(`Error while executing "${seedPath}" seed: ${originalError.message}`);
                            error.original = originalError;
                            error.stack =
                                error.stack.split('\n').slice(0, 2).join('\n') +
                                    '\n' +
                                    originalError.stack;
                            throw error;
                        }
                    }
                    return [log];
                }
                _absoluteConfigDir() {
                    return path.resolve(process.cwd(), this.config.directory);
                }
                setConfig(config) {
                    return extend({
                        extension: 'js',
                        directory: './seeds',
                        loadExtensions: [
                            '.co',
                            '.coffee',
                            '.eg',
                            '.iced',
                            '.js',
                            '.litcoffee',
                            '.ls',
                            '.ts',
                        ],
                    }, this.config || {}, config);
                }
            };
            exports_198("default", Seeder);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/functionhelper", [], function (exports_199, context_199) {
    "use strict";
    var __moduleName = context_199 && context_199.id;
    function FunctionHelper(client) {
        this.client = client;
    }
    return {
        setters: [],
        execute: function () {
            FunctionHelper.prototype.now = function (precision) {
                if (typeof precision === 'number') {
                    return this.client.raw(`CURRENT_TIMESTAMP(${precision})`);
                }
                return this.client.raw('CURRENT_TIMESTAMP');
            };
            exports_199("default", FunctionHelper);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/query/methods", [], function (exports_200, context_200) {
    "use strict";
    var __moduleName = context_200 && context_200.id;
    return {
        setters: [],
        execute: function () {
            exports_200("default", [
                'with',
                'withRecursive',
                'select',
                'as',
                'columns',
                'column',
                'from',
                'fromJS',
                'into',
                'withSchema',
                'table',
                'distinct',
                'join',
                'joinRaw',
                'innerJoin',
                'leftJoin',
                'leftOuterJoin',
                'rightJoin',
                'rightOuterJoin',
                'outerJoin',
                'fullOuterJoin',
                'crossJoin',
                'where',
                'andWhere',
                'orWhere',
                'whereNot',
                'orWhereNot',
                'whereRaw',
                'whereWrapped',
                'havingWrapped',
                'orWhereRaw',
                'whereExists',
                'orWhereExists',
                'whereNotExists',
                'orWhereNotExists',
                'whereIn',
                'orWhereIn',
                'whereNotIn',
                'orWhereNotIn',
                'whereNull',
                'orWhereNull',
                'whereNotNull',
                'orWhereNotNull',
                'whereBetween',
                'whereNotBetween',
                'andWhereBetween',
                'andWhereNotBetween',
                'orWhereBetween',
                'orWhereNotBetween',
                'groupBy',
                'groupByRaw',
                'orderBy',
                'orderByRaw',
                'union',
                'unionAll',
                'intersect',
                'having',
                'havingRaw',
                'orHaving',
                'orHavingRaw',
                'offset',
                'limit',
                'count',
                'countDistinct',
                'min',
                'max',
                'sum',
                'sumDistinct',
                'avg',
                'avgDistinct',
                'increment',
                'decrement',
                'first',
                'debug',
                'pluck',
                'clearSelect',
                'clearWhere',
                'clearGroup',
                'clearOrder',
                'clearHaving',
                'insert',
                'update',
                'returning',
                'del',
                'delete',
                'truncate',
                'transacting',
                'connection',
            ]);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/util/delay", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/util"], function (exports_201, context_201) {
    "use strict";
    var util_js_4;
    var __moduleName = context_201 && context_201.id;
    return {
        setters: [
            function (util_js_4_1) {
                util_js_4 = util_js_4_1;
            }
        ],
        execute: function () {
            exports_201("default", util_js_4.promisify(setTimeout));
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/util/batchInsert", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/util/delay"], function (exports_202, context_202) {
    "use strict";
    var index_js_11, chunk, flatten, isNumber, delay_js_1;
    var __moduleName = context_202 && context_202.id;
    function batchInsert(client, tableName, batch, chunkSize = 1000) {
        let returning = void 0;
        let transaction = null;
        const runInTransaction = (cb) => {
            if (transaction) {
                return cb(transaction);
            }
            return client.transaction(cb);
        };
        return Object.assign(Promise.resolve().then(async () => {
            if (!isNumber(chunkSize) || chunkSize < 1) {
                throw new TypeError(`Invalid chunkSize: ${chunkSize}`);
            }
            if (!Array.isArray(batch)) {
                throw new TypeError(`Invalid batch: Expected array, got ${typeof batch}`);
            }
            const chunks = chunk(batch, chunkSize);
            await delay_js_1.default(1);
            return runInTransaction(async (tr) => {
                const chunksResults = [];
                for (const items of chunks) {
                    chunksResults.push(await tr(tableName).insert(items, returning));
                }
                return flatten(chunksResults);
            });
        }), {
            returning(columns) {
                returning = columns;
                return this;
            },
            transacting(tr) {
                transaction = tr;
                return this;
            },
        });
    }
    exports_202("default", batchInsert);
    return {
        setters: [
            function (index_js_11_1) {
                index_js_11 = index_js_11_1;
            },
            function (delay_js_1_1) {
                delay_js_1 = delay_js_1_1;
            }
        ],
        execute: function () {
            chunk = index_js_11.default.chunk;
            flatten = index_js_11.default.flatten;
            isNumber = index_js_11.default.isNumber;
            ;
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/util/make-knex", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/events", "https://raw.githubusercontent.com/denjucks/dex/master/lib/migrate/Migrator", "https://raw.githubusercontent.com/denjucks/dex/master/lib/seed/Seeder", "https://raw.githubusercontent.com/denjucks/dex/master/lib/functionhelper", "https://raw.githubusercontent.com/denjucks/dex/master/lib/query/methods", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/util/batchInsert"], function (exports_203, context_203) {
    "use strict";
    var events_js_3, Migrator_js_1, Seeder_js_1, functionhelper_js_1, methods_js_1, index_js_12, merge, batchInsert_js_1, KNEX_PROPERTY_DEFINITIONS, CONTEXT_METHODS;
    var __moduleName = context_203 && context_203.id;
    function makeKnex(client) {
        function knex(tableName, options) {
            return createQueryBuilder(knex.context, tableName, options);
        }
        redefineProperties(knex, client);
        return knex;
    }
    function initContext(knexFn) {
        const knexContext = knexFn.context || {};
        Object.assign(knexContext, {
            queryBuilder() {
                return this.client.queryBuilder();
            },
            raw() {
                return this.client.raw.apply(this.client, arguments);
            },
            batchInsert(table, batch, chunkSize = 1000) {
                return batchInsert_js_1.default(this, table, batch, chunkSize);
            },
            transaction(container, _config) {
                const config = Object.assign({}, _config);
                config.userParams = this.userParams || {};
                if (config.doNotRejectOnRollback === undefined) {
                    config.doNotRejectOnRollback = !container;
                }
                return this._transaction(container, config);
            },
            _transaction(container, config, outerTx = null) {
                if (container) {
                    const trx = this.client.transaction(container, config, outerTx);
                    return trx;
                }
                else {
                    return new Promise((resolve, reject) => {
                        const trx = this.client.transaction(resolve, config, outerTx);
                        trx.catch(reject);
                    });
                }
            },
            transactionProvider(config) {
                let trx;
                return () => {
                    if (!trx) {
                        trx = this.transaction(undefined, config);
                    }
                    return trx;
                };
            },
            initialize(config) {
                return this.client.initializePool(config);
            },
            destroy(callback) {
                return this.client.destroy(callback);
            },
            ref(ref) {
                return this.client.ref(ref);
            },
            disableProcessing() {
                if (this.userParams.isProcessingDisabled) {
                    return;
                }
                this.userParams.wrapIdentifier = this.client.config.wrapIdentifier;
                this.userParams.postProcessResponse = this.client.config.postProcessResponse;
                this.client.config.wrapIdentifier = null;
                this.client.config.postProcessResponse = null;
                this.userParams.isProcessingDisabled = true;
            },
            enableProcessing() {
                if (!this.userParams.isProcessingDisabled) {
                    return;
                }
                this.client.config.wrapIdentifier = this.userParams.wrapIdentifier;
                this.client.config.postProcessResponse = this.userParams.postProcessResponse;
                this.userParams.isProcessingDisabled = false;
            },
            withUserParams(params) {
                const knexClone = shallowCloneFunction(knexFn);
                if (this.client) {
                    knexClone.client = Object.create(this.client.constructor.prototype);
                    merge(knexClone.client, this.client);
                    knexClone.client.config = Object.assign({}, this.client.config);
                }
                redefineProperties(knexClone, knexClone.client);
                _copyEventListeners('query', knexFn, knexClone);
                _copyEventListeners('query-error', knexFn, knexClone);
                _copyEventListeners('query-response', knexFn, knexClone);
                _copyEventListeners('start', knexFn, knexClone);
                knexClone.userParams = params;
                return knexClone;
            },
        });
        if (!knexFn.context) {
            knexFn.context = knexContext;
        }
    }
    function _copyEventListeners(eventName, sourceKnex, targetKnex) {
        const listeners = sourceKnex.listeners(eventName);
        listeners.forEach((listener) => {
            targetKnex.on(eventName, listener);
        });
    }
    function redefineProperties(knex, client) {
        methods_js_1.default.forEach(function (method) {
            knex[method] = function () {
                const builder = this.queryBuilder();
                return builder[method].apply(builder, arguments);
            };
        });
        Object.defineProperties(knex, KNEX_PROPERTY_DEFINITIONS);
        initContext(knex);
        knex.client = client;
        knex.client.makeKnex = makeKnex;
        knex.userParams = {};
        const ee = new events_js_3.EventEmitter();
        for (const key in ee) {
            knex[key] = ee[key];
        }
        if (knex._internalListeners) {
            knex._internalListeners.forEach(({ eventName, listener }) => {
                knex.client.removeListener(eventName, listener);
            });
        }
        knex._internalListeners = [];
        _addInternalListener(knex, 'start', (obj) => {
            knex.emit('start', obj);
        });
        _addInternalListener(knex, 'query', (obj) => {
            knex.emit('query', obj);
        });
        _addInternalListener(knex, 'query-error', (err, obj) => {
            knex.emit('query-error', err, obj);
        });
        _addInternalListener(knex, 'query-response', (response, obj, builder) => {
            knex.emit('query-response', response, obj, builder);
        });
    }
    function _addInternalListener(knex, eventName, listener) {
        knex.client.on(eventName, listener);
        knex._internalListeners.push({
            eventName,
            listener,
        });
    }
    function createQueryBuilder(knexContext, tableName, options) {
        const qb = knexContext.queryBuilder();
        if (!tableName)
            knexContext.client.logger.warn('calling knex without a tableName is deprecated. Use knex.queryBuilder() instead.');
        return tableName ? qb.table(tableName, options) : qb;
    }
    function shallowCloneFunction(originalFunction) {
        const fnContext = Object.create(Object.getPrototypeOf(originalFunction), Object.getOwnPropertyDescriptors(originalFunction));
        const knexContext = {};
        const knexFnWrapper = (tableName, options) => {
            return createQueryBuilder(knexContext, tableName, options);
        };
        const clonedFunction = knexFnWrapper.bind(fnContext);
        Object.assign(clonedFunction, originalFunction);
        clonedFunction.context = knexContext;
        return clonedFunction;
    }
    return {
        setters: [
            function (events_js_3_1) {
                events_js_3 = events_js_3_1;
            },
            function (Migrator_js_1_1) {
                Migrator_js_1 = Migrator_js_1_1;
            },
            function (Seeder_js_1_1) {
                Seeder_js_1 = Seeder_js_1_1;
            },
            function (functionhelper_js_1_1) {
                functionhelper_js_1 = functionhelper_js_1_1;
            },
            function (methods_js_1_1) {
                methods_js_1 = methods_js_1_1;
            },
            function (index_js_12_1) {
                index_js_12 = index_js_12_1;
            },
            function (batchInsert_js_1_1) {
                batchInsert_js_1 = batchInsert_js_1_1;
            }
        ],
        execute: function () {
            merge = index_js_12.default.merge;
            KNEX_PROPERTY_DEFINITIONS = {
                client: {
                    get() {
                        return this.context.client;
                    },
                    set(client) {
                        this.context.client = client;
                    },
                    configurable: true,
                },
                userParams: {
                    get() {
                        return this.context.userParams;
                    },
                    set(userParams) {
                        this.context.userParams = userParams;
                    },
                    configurable: true,
                },
                schema: {
                    get() {
                        return this.client.schemaBuilder();
                    },
                    configurable: true,
                },
                migrate: {
                    get() {
                        return new Migrator_js_1.Migrator(this);
                    },
                    configurable: true,
                },
                seed: {
                    get() {
                        return new Seeder_js_1.default(this);
                    },
                    configurable: true,
                },
                fn: {
                    get() {
                        return new functionhelper_js_1.default(this.client);
                    },
                    configurable: true,
                },
            };
            CONTEXT_METHODS = [
                'raw',
                'batchInsert',
                'transaction',
                'transactionProvider',
                'initialize',
                'destroy',
                'ref',
                'withUserParams',
                'queryBuilder',
                'disableProcessing',
                'enableProcessing',
            ];
            for (const m of CONTEXT_METHODS) {
                KNEX_PROPERTY_DEFINITIONS[m] = {
                    value: function (...args) {
                        return this.context[m](...args);
                    },
                    configurable: true,
                };
            }
            exports_203("default", makeKnex);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/transaction", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/events", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/debug@4.1.1/src/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/util/make-knex", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/util", "https://raw.githubusercontent.com/denjucks/dex/master/lib/util/timeout", "https://raw.githubusercontent.com/denjucks/dex/master/lib/util/finally-mixin", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index"], function (exports_204, context_204) {
    "use strict";
    var events_js_4, index_js_13, make_knex_js_1, util_js_5, timeout_js_3, finally_mixin_js_2, debug, index_js_14, uniqueId, Transaction;
    var __moduleName = context_204 && context_204.id;
    function DEFAULT_CONFIG() {
        return {
            userParams: {},
            doNotRejectOnRollback: true,
        };
    }
    function makeTransactor(trx, connection, trxClient) {
        const transactor = make_knex_js_1.default(trxClient);
        transactor.context.withUserParams = () => {
            throw new Error('Cannot set user params on a transaction - it can only inherit params from main knex instance');
        };
        transactor.isTransaction = true;
        transactor.userParams = trx.userParams || {};
        transactor.context.transaction = function (container, options) {
            if (!options) {
                options = { doNotRejectOnRollback: true };
            }
            else if (options.doNotRejectOnRollback === undefined) {
                options.doNotRejectOnRollback = true;
            }
            return this._transaction(container, options, trx);
        };
        transactor.savepoint = function (container, options) {
            return transactor.transaction(container, options);
        };
        if (trx.client.transacting) {
            transactor.commit = (value) => trx.release(connection, value);
            transactor.rollback = (error) => trx.rollbackTo(connection, error);
        }
        else {
            transactor.commit = (value) => trx.commit(connection, value);
            transactor.rollback = (error) => trx.rollback(connection, error);
        }
        transactor.isCompleted = () => trx.isCompleted();
        return transactor;
    }
    function makeTxClient(trx, client, connection) {
        const trxClient = Object.create(client.constructor.prototype);
        trxClient.version = client.version;
        trxClient.config = client.config;
        trxClient.driver = client.driver;
        trxClient.connectionSettings = client.connectionSettings;
        trxClient.transacting = true;
        trxClient.valueForUndefined = client.valueForUndefined;
        trxClient.logger = client.logger;
        trxClient.on('query', function (arg) {
            trx.emit('query', arg);
            client.emit('query', arg);
        });
        trxClient.on('query-error', function (err, obj) {
            trx.emit('query-error', err, obj);
            client.emit('query-error', err, obj);
        });
        trxClient.on('query-response', function (response, obj, builder) {
            trx.emit('query-response', response, obj, builder);
            client.emit('query-response', response, obj, builder);
        });
        const _query = trxClient.query;
        trxClient.query = function (conn, obj) {
            const completed = trx.isCompleted();
            return new Promise(function (resolve, reject) {
                try {
                    if (conn !== connection)
                        throw new Error('Invalid connection for transaction query.');
                    if (completed)
                        completedError(trx, obj);
                    resolve(_query.call(trxClient, conn, obj));
                }
                catch (e) {
                    reject(e);
                }
            });
        };
        const _stream = trxClient.stream;
        trxClient.stream = function (conn, obj, stream, options) {
            const completed = trx.isCompleted();
            return new Promise(function (resolve, reject) {
                try {
                    if (conn !== connection)
                        throw new Error('Invalid connection for transaction query.');
                    if (completed)
                        completedError(trx, obj);
                    resolve(_stream.call(trxClient, conn, obj, stream, options));
                }
                catch (e) {
                    reject(e);
                }
            });
        };
        trxClient.acquireConnection = function () {
            return Promise.resolve(connection);
        };
        trxClient.releaseConnection = function () {
            return Promise.resolve();
        };
        return trxClient;
    }
    function completedError(trx, obj) {
        const sql = typeof obj === 'string' ? obj : obj && obj.sql;
        debug('%s: Transaction completed: %s', trx.txid, sql);
        throw new Error('Transaction query already complete, run with DEBUG=knex:tx for more info');
    }
    return {
        setters: [
            function (events_js_4_1) {
                events_js_4 = events_js_4_1;
            },
            function (index_js_13_1) {
                index_js_13 = index_js_13_1;
            },
            function (make_knex_js_1_1) {
                make_knex_js_1 = make_knex_js_1_1;
            },
            function (util_js_5_1) {
                util_js_5 = util_js_5_1;
            },
            function (timeout_js_3_1) {
                timeout_js_3 = timeout_js_3_1;
            },
            function (finally_mixin_js_2_1) {
                finally_mixin_js_2 = finally_mixin_js_2_1;
            },
            function (index_js_14_1) {
                index_js_14 = index_js_14_1;
            }
        ],
        execute: function () {
            debug = index_js_13.default('knex:tx');
            uniqueId = index_js_14.default.uniqueId;
            Transaction = class Transaction extends events_js_4.EventEmitter {
                constructor(client, container, config = DEFAULT_CONFIG(), outerTx = null) {
                    super();
                    this.userParams = config.userParams;
                    this.doNotRejectOnRollback = config.doNotRejectOnRollback;
                    const txid = (this.txid = uniqueId('trx'));
                    this.client = client;
                    this.logger = client.logger;
                    this.outerTx = outerTx;
                    this.trxClient = undefined;
                    this._completed = false;
                    this._debug = client.config && client.config.debug;
                    debug('%s: Starting %s transaction', txid, outerTx ? 'nested' : 'top level');
                    this._lastChild = Promise.resolve();
                    const _previousSibling = outerTx ? outerTx._lastChild : Promise.resolve();
                    const basePromise = _previousSibling.then(() => this._evaluateContainer(config, container));
                    this._promise = basePromise.then((x) => x);
                    if (outerTx) {
                        outerTx._lastChild = basePromise.catch(() => { });
                    }
                }
                isCompleted() {
                    return (this._completed || (this.outerTx && this.outerTx.isCompleted()) || false);
                }
                begin(conn) {
                    return this.query(conn, 'BEGIN;');
                }
                savepoint(conn) {
                    return this.query(conn, `SAVEPOINT ${this.txid};`);
                }
                commit(conn, value) {
                    return this.query(conn, 'COMMIT;', 1, value);
                }
                release(conn, value) {
                    return this.query(conn, `RELEASE SAVEPOINT ${this.txid};`, 1, value);
                }
                rollback(conn, error) {
                    return timeout_js_3.timeout(this.query(conn, 'ROLLBACK', 2, error), 5000).catch((err) => {
                        if (!(err instanceof timeout_js_3.KnexTimeoutError)) {
                            return Promise.reject(err);
                        }
                        this._rejecter(error);
                    });
                }
                rollbackTo(conn, error) {
                    return timeout_js_3.timeout(this.query(conn, `ROLLBACK TO SAVEPOINT ${this.txid}`, 2, error), 5000).catch((err) => {
                        if (!(err instanceof timeout_js_3.KnexTimeoutError)) {
                            return Promise.reject(err);
                        }
                        this._rejecter(error);
                    });
                }
                query(conn, sql, status, value) {
                    const q = this.trxClient
                        .query(conn, sql)
                        .catch((err) => {
                        status = 2;
                        value = err;
                        this._completed = true;
                        debug('%s error running transaction query', this.txid);
                    })
                        .then((res) => {
                        if (status === 1) {
                            this._resolver(value);
                        }
                        if (status === 2) {
                            if (value === undefined) {
                                if (this.doNotRejectOnRollback && /^ROLLBACK\b/i.test(sql)) {
                                    this._resolver();
                                    return;
                                }
                                value = new Error(`Transaction rejected with non-error: ${value}`);
                            }
                            this._rejecter(value);
                        }
                        return res;
                    });
                    if (status === 1 || status === 2) {
                        this._completed = true;
                    }
                    return q;
                }
                debug(enabled) {
                    this._debug = arguments.length ? enabled : true;
                    return this;
                }
                async _evaluateContainer(config, container) {
                    return this.acquireConnection(config, (connection) => {
                        const trxClient = (this.trxClient = makeTxClient(this, this.client, connection));
                        const init = this.client.transacting
                            ? this.savepoint(connection)
                            : this.begin(connection);
                        const executionPromise = new Promise((resolver, rejecter) => {
                            this._resolver = resolver;
                            this._rejecter = rejecter;
                        });
                        init
                            .then(() => {
                            return makeTransactor(this, connection, trxClient);
                        })
                            .then((transactor) => {
                            transactor.executionPromise = executionPromise;
                            let result;
                            try {
                                result = container(transactor);
                            }
                            catch (err) {
                                result = Promise.reject(err);
                            }
                            if (result && result.then && typeof result.then === 'function') {
                                result
                                    .then((val) => {
                                    return transactor.commit(val);
                                })
                                    .catch((err) => {
                                    return transactor.rollback(err);
                                });
                            }
                            return null;
                        })
                            .catch((e) => {
                            return this._rejecter(e);
                        });
                        return executionPromise;
                    });
                }
                async acquireConnection(config, cb) {
                    const configConnection = config && config.connection;
                    const connection = configConnection || (await this.client.acquireConnection());
                    try {
                        connection.__knexTxId = this.txid;
                        return await cb(connection);
                    }
                    finally {
                        if (!configConnection) {
                            debug('%s: releasing connection', this.txid);
                            this.client.releaseConnection(connection);
                        }
                        else {
                            debug('%s: not releasing external connection', this.txid);
                        }
                    }
                }
                then(onResolve, onReject) {
                    return this._promise.then(onResolve, onReject);
                }
                catch(onReject) {
                    return this._promise.catch(onReject);
                }
                asCallback(cb) {
                    util_js_5.callbackify(() => this._promise)(cb);
                    return this._promise;
                }
            };
            finally_mixin_js_2.default(Transaction.prototype);
            exports_204("default", Transaction);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/query/compiler", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/helpers", "https://raw.githubusercontent.com/denjucks/dex/master/lib/raw", "https://raw.githubusercontent.com/denjucks/dex/master/lib/query/builder", "https://raw.githubusercontent.com/denjucks/dex/master/lib/query/joinclause", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/debug@4.1.1/src/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/uuid/mod"], function (exports_205, context_205) {
    "use strict";
    var helpers_js_3, raw_js_4, builder_js_2, joinclause_js_2, index_js_15, index_js_16, assign, bind, compact, groupBy, has, isEmpty, isString, isUndefined, map, omitBy, reduce, uuidlib, uuid, debugBindings, components, QueryCompiler;
    var __moduleName = context_205 && context_205.id;
    return {
        setters: [
            function (helpers_js_3_1) {
                helpers_js_3 = helpers_js_3_1;
            },
            function (raw_js_4_1) {
                raw_js_4 = raw_js_4_1;
            },
            function (builder_js_2_1) {
                builder_js_2 = builder_js_2_1;
            },
            function (joinclause_js_2_1) {
                joinclause_js_2 = joinclause_js_2_1;
            },
            function (index_js_15_1) {
                index_js_15 = index_js_15_1;
            },
            function (index_js_16_1) {
                index_js_16 = index_js_16_1;
            },
            function (uuidlib_2) {
                uuidlib = uuidlib_2;
            }
        ],
        execute: function () {
            assign = index_js_16.default.assign;
            bind = index_js_16.default.bind;
            compact = index_js_16.default.compact;
            groupBy = index_js_16.default.groupBy;
            has = index_js_16.default.has;
            isEmpty = index_js_16.default.isEmpty;
            isString = index_js_16.default.isString;
            isUndefined = index_js_16.default.isUndefined;
            map = index_js_16.default.map;
            omitBy = index_js_16.default.omitBy;
            reduce = index_js_16.default.reduce;
            uuid = {
                v1: uuidlib.v1.generate
            };
            debugBindings = index_js_15.default('knex:bindings');
            components = [
                'columns',
                'join',
                'where',
                'union',
                'group',
                'having',
                'order',
                'limit',
                'offset',
                'lock',
                'waitMode',
            ];
            QueryCompiler = class QueryCompiler {
                constructor(client, builder) {
                    this.client = client;
                    this.method = builder._method || 'select';
                    this.options = builder._options;
                    this.single = builder._single;
                    this.timeout = builder._timeout || false;
                    this.cancelOnTimeout = builder._cancelOnTimeout || false;
                    this.grouped = groupBy(builder._statements, 'grouping');
                    this.formatter = client.formatter(builder);
                    this._emptyInsertValue = 'default values';
                    this.first = this.select;
                }
                toSQL(method, tz) {
                    this._undefinedInWhereClause = false;
                    this.undefinedBindingsInfo = [];
                    method = method || this.method;
                    const val = this[method]() || '';
                    const query = {
                        method,
                        options: reduce(this.options, assign, {}),
                        timeout: this.timeout,
                        cancelOnTimeout: this.cancelOnTimeout,
                        bindings: this.formatter.bindings || [],
                        __knexQueryUid: uuid.v1(),
                    };
                    Object.defineProperties(query, {
                        toNative: {
                            value: () => {
                                return {
                                    sql: this.client.positionBindings(query.sql),
                                    bindings: this.client.prepBindings(query.bindings),
                                };
                            },
                            enumerable: false,
                        },
                    });
                    if (isString(val)) {
                        query.sql = val;
                    }
                    else {
                        assign(query, val);
                    }
                    if (method === 'select' || method === 'first') {
                        if (this.single.as) {
                            query.as = this.single.as;
                        }
                    }
                    if (this._undefinedInWhereClause) {
                        debugBindings(query.bindings);
                        throw new Error(`Undefined binding(s) detected when compiling ` +
                            `${method.toUpperCase()}. Undefined column(s): [${this.undefinedBindingsInfo.join(', ')}] query: ${query.sql}`);
                    }
                    return query;
                }
                select() {
                    let sql = this.with();
                    const statements = components.map((component) => this[component](this));
                    sql += compact(statements).join(' ');
                    return sql;
                }
                pluck() {
                    let toPluck = this.single.pluck;
                    if (toPluck.indexOf('.') !== -1) {
                        toPluck = toPluck.split('.').slice(-1)[0];
                    }
                    return {
                        sql: this.select(),
                        pluck: toPluck,
                    };
                }
                insert() {
                    const insertValues = this.single.insert || [];
                    let sql = this.with() + `insert into ${this.tableName} `;
                    if (Array.isArray(insertValues)) {
                        if (insertValues.length === 0) {
                            return '';
                        }
                    }
                    else if (typeof insertValues === 'object' && isEmpty(insertValues)) {
                        return sql + this._emptyInsertValue;
                    }
                    const insertData = this._prepInsert(insertValues);
                    if (typeof insertData === 'string') {
                        sql += insertData;
                    }
                    else {
                        if (insertData.columns.length) {
                            sql += `(${this.formatter.columnize(insertData.columns)}`;
                            sql += ') values (';
                            let i = -1;
                            while (++i < insertData.values.length) {
                                if (i !== 0)
                                    sql += '), (';
                                sql += this.formatter.parameterize(insertData.values[i], this.client.valueForUndefined);
                            }
                            sql += ')';
                        }
                        else if (insertValues.length === 1 && insertValues[0]) {
                            sql += this._emptyInsertValue;
                        }
                        else {
                            sql = '';
                        }
                    }
                    return sql;
                }
                update() {
                    const withSQL = this.with();
                    const { tableName } = this;
                    const updateData = this._prepUpdate(this.single.update);
                    const wheres = this.where();
                    return (withSQL +
                        `update ${this.single.only ? 'only ' : ''}${tableName}` +
                        ' set ' +
                        updateData.join(', ') +
                        (wheres ? ` ${wheres}` : ''));
                }
                columns() {
                    let distinctClause = '';
                    if (this.onlyUnions())
                        return '';
                    const columns = this.grouped.columns || [];
                    let i = -1, sql = [];
                    if (columns) {
                        while (++i < columns.length) {
                            const stmt = columns[i];
                            if (stmt.distinct)
                                distinctClause = 'distinct ';
                            if (stmt.distinctOn) {
                                distinctClause = this.distinctOn(stmt.value);
                                continue;
                            }
                            if (stmt.type === 'aggregate') {
                                sql.push(...this.aggregate(stmt));
                            }
                            else if (stmt.type === 'aggregateRaw') {
                                sql.push(this.aggregateRaw(stmt));
                            }
                            else if (stmt.value && stmt.value.length > 0) {
                                sql.push(this.formatter.columnize(stmt.value));
                            }
                        }
                    }
                    if (sql.length === 0)
                        sql = ['*'];
                    return (`select ${distinctClause}` +
                        sql.join(', ') +
                        (this.tableName
                            ? ` from ${this.single.only ? 'only ' : ''}${this.tableName}`
                            : ''));
                }
                _aggregate(stmt, { aliasSeparator = ' as ', distinctParentheses } = {}) {
                    const value = stmt.value;
                    const method = stmt.method;
                    const distinct = stmt.aggregateDistinct ? 'distinct ' : '';
                    const wrap = (identifier) => this.formatter.wrap(identifier);
                    const addAlias = (value, alias) => {
                        if (alias) {
                            return value + aliasSeparator + wrap(alias);
                        }
                        return value;
                    };
                    const aggregateArray = (value, alias) => {
                        let columns = value.map(wrap).join(', ');
                        if (distinct) {
                            const openParen = distinctParentheses ? '(' : ' ';
                            const closeParen = distinctParentheses ? ')' : '';
                            columns = distinct.trim() + openParen + columns + closeParen;
                        }
                        const aggregated = `${method}(${columns})`;
                        return addAlias(aggregated, alias);
                    };
                    const aggregateString = (value, alias) => {
                        const aggregated = `${method}(${distinct + wrap(value)})`;
                        return addAlias(aggregated, alias);
                    };
                    if (Array.isArray(value)) {
                        return [aggregateArray(value)];
                    }
                    if (typeof value === 'object') {
                        if (stmt.alias) {
                            throw new Error('When using an object explicit alias can not be used');
                        }
                        return Object.entries(value).map(([alias, column]) => {
                            if (Array.isArray(column)) {
                                return aggregateArray(column, alias);
                            }
                            return aggregateString(column, alias);
                        });
                    }
                    const splitOn = value.toLowerCase().indexOf(' as ');
                    let column = value;
                    let { alias } = stmt;
                    if (splitOn !== -1) {
                        column = value.slice(0, splitOn);
                        if (alias) {
                            throw new Error(`Found multiple aliases for same column: ${column}`);
                        }
                        alias = value.slice(splitOn + 4);
                    }
                    return [aggregateString(column, alias)];
                }
                aggregate(stmt) {
                    return this._aggregate(stmt);
                }
                aggregateRaw(stmt) {
                    const distinct = stmt.aggregateDistinct ? 'distinct ' : '';
                    return `${stmt.method}(${distinct + this.formatter.unwrapRaw(stmt.value)})`;
                }
                join() {
                    let sql = '';
                    let i = -1;
                    const joins = this.grouped.join;
                    if (!joins)
                        return '';
                    while (++i < joins.length) {
                        const join = joins[i];
                        const table = join.schema ? `${join.schema}.${join.table}` : join.table;
                        if (i > 0)
                            sql += ' ';
                        if (join.joinType === 'raw') {
                            sql += this.formatter.unwrapRaw(join.table);
                        }
                        else {
                            sql += join.joinType + ' join ' + this.formatter.wrap(table);
                            let ii = -1;
                            while (++ii < join.clauses.length) {
                                const clause = join.clauses[ii];
                                if (ii > 0) {
                                    sql += ` ${clause.bool} `;
                                }
                                else {
                                    sql += ` ${clause.type === 'onUsing' ? 'using' : 'on'} `;
                                }
                                const val = this[clause.type].call(this, clause);
                                if (val) {
                                    sql += val;
                                }
                            }
                        }
                    }
                    return sql;
                }
                onBetween(statement) {
                    return (this.formatter.wrap(statement.column) +
                        ' ' +
                        this._not(statement, 'between') +
                        ' ' +
                        map(statement.value, bind(this.formatter.parameter, this.formatter)).join(' and '));
                }
                onNull(statement) {
                    return (this.formatter.wrap(statement.column) +
                        ' is ' +
                        this._not(statement, 'null'));
                }
                onExists(statement) {
                    return (this._not(statement, 'exists') +
                        ' (' +
                        this.formatter.rawOrFn(statement.value) +
                        ')');
                }
                onIn(statement) {
                    if (Array.isArray(statement.column))
                        return this.multiOnIn(statement);
                    return (this.formatter.wrap(statement.column) +
                        ' ' +
                        this._not(statement, 'in ') +
                        this.wrap(this.formatter.parameterize(statement.value)));
                }
                multiOnIn(statement) {
                    let i = -1, sql = `(${this.formatter.columnize(statement.column)}) `;
                    sql += this._not(statement, 'in ') + '((';
                    while (++i < statement.value.length) {
                        if (i !== 0)
                            sql += '),(';
                        sql += this.formatter.parameterize(statement.value[i]);
                    }
                    return sql + '))';
                }
                where() {
                    const wheres = this.grouped.where;
                    if (!wheres)
                        return;
                    const sql = [];
                    let i = -1;
                    while (++i < wheres.length) {
                        const stmt = wheres[i];
                        if (Object.prototype.hasOwnProperty.call(stmt, 'value') &&
                            helpers_js_3.default.containsUndefined(stmt.value)) {
                            this.undefinedBindingsInfo.push(stmt.column);
                            this._undefinedInWhereClause = true;
                        }
                        const val = this[stmt.type](stmt);
                        if (val) {
                            if (sql.length === 0) {
                                sql[0] = 'where';
                            }
                            else {
                                sql.push(stmt.bool);
                            }
                            sql.push(val);
                        }
                    }
                    return sql.length > 1 ? sql.join(' ') : '';
                }
                group() {
                    return this._groupsOrders('group');
                }
                order() {
                    return this._groupsOrders('order');
                }
                having() {
                    const havings = this.grouped.having;
                    if (!havings)
                        return '';
                    const sql = ['having'];
                    for (let i = 0, l = havings.length; i < l; i++) {
                        const s = havings[i];
                        const val = this[s.type](s);
                        if (val) {
                            if (sql.length === 0) {
                                sql[0] = 'where';
                            }
                            if (sql.length > 1 || (sql.length === 1 && sql[0] !== 'having')) {
                                sql.push(s.bool);
                            }
                            sql.push(val);
                        }
                    }
                    return sql.length > 1 ? sql.join(' ') : '';
                }
                havingRaw(statement) {
                    return this._not(statement, '') + this.formatter.unwrapRaw(statement.value);
                }
                havingWrapped(statement) {
                    const val = this.formatter.rawOrFn(statement.value, 'where');
                    return (val && this._not(statement, '') + '(' + val.slice(6) + ')') || '';
                }
                havingBasic(statement) {
                    return (this._not(statement, '') +
                        this.formatter.wrap(statement.column) +
                        ' ' +
                        this.formatter.operator(statement.operator) +
                        ' ' +
                        this.formatter.parameter(statement.value));
                }
                havingNull(statement) {
                    return (this.formatter.wrap(statement.column) +
                        ' is ' +
                        this._not(statement, 'null'));
                }
                havingExists(statement) {
                    return (this._not(statement, 'exists') +
                        ' (' +
                        this.formatter.rawOrFn(statement.value) +
                        ')');
                }
                havingBetween(statement) {
                    return (this.formatter.wrap(statement.column) +
                        ' ' +
                        this._not(statement, 'between') +
                        ' ' +
                        map(statement.value, bind(this.formatter.parameter, this.formatter)).join(' and '));
                }
                havingIn(statement) {
                    if (Array.isArray(statement.column))
                        return this.multiHavingIn(statement);
                    return (this.formatter.wrap(statement.column) +
                        ' ' +
                        this._not(statement, 'in ') +
                        this.wrap(this.formatter.parameterize(statement.value)));
                }
                multiHavingIn(statement) {
                    let i = -1, sql = `(${this.formatter.columnize(statement.column)}) `;
                    sql += this._not(statement, 'in ') + '((';
                    while (++i < statement.value.length) {
                        if (i !== 0)
                            sql += '),(';
                        sql += this.formatter.parameterize(statement.value[i]);
                    }
                    return sql + '))';
                }
                union() {
                    const onlyUnions = this.onlyUnions();
                    const unions = this.grouped.union;
                    if (!unions)
                        return '';
                    let sql = '';
                    for (let i = 0, l = unions.length; i < l; i++) {
                        const union = unions[i];
                        if (i > 0)
                            sql += ' ';
                        if (i > 0 || !onlyUnions)
                            sql += union.clause + ' ';
                        const statement = this.formatter.rawOrFn(union.value);
                        if (statement) {
                            if (union.wrap)
                                sql += '(';
                            sql += statement;
                            if (union.wrap)
                                sql += ')';
                        }
                    }
                    return sql;
                }
                onlyUnions() {
                    return !this.grouped.columns && this.grouped.union && !this.tableName;
                }
                limit() {
                    const noLimit = !this.single.limit && this.single.limit !== 0;
                    if (noLimit)
                        return '';
                    return `limit ${this.formatter.parameter(this.single.limit)}`;
                }
                offset() {
                    if (!this.single.offset)
                        return '';
                    return `offset ${this.formatter.parameter(this.single.offset)}`;
                }
                del() {
                    const { tableName } = this;
                    const withSQL = this.with();
                    const wheres = this.where();
                    return (withSQL +
                        `delete from ${this.single.only ? 'only ' : ''}${tableName}` +
                        (wheres ? ` ${wheres}` : ''));
                }
                truncate() {
                    return `truncate ${this.tableName}`;
                }
                lock() {
                    if (this.single.lock) {
                        return this[this.single.lock]();
                    }
                }
                waitMode() {
                    if (this.single.waitMode) {
                        return this[this.single.waitMode]();
                    }
                }
                skipLocked() {
                    throw new Error('.skipLocked() is currently only supported on MySQL 8.0+ and PostgreSQL 9.5+');
                }
                noWait() {
                    throw new Error('.noWait() is currently only supported on MySQL 8.0+, MariaDB 10.3.0+ and PostgreSQL 9.5+');
                }
                distinctOn(value) {
                    throw new Error('.distinctOn() is currently only supported on PostgreSQL');
                }
                onWrapped(clause) {
                    const self = this;
                    const wrapJoin = new joinclause_js_2.default();
                    clause.value.call(wrapJoin, wrapJoin);
                    let sql = '';
                    wrapJoin.clauses.forEach(function (wrapClause, ii) {
                        if (ii > 0) {
                            sql += ` ${wrapClause.bool} `;
                        }
                        const val = self[wrapClause.type](wrapClause);
                        if (val) {
                            sql += val;
                        }
                    });
                    if (sql.length) {
                        return `(${sql})`;
                    }
                    return '';
                }
                onBasic(clause) {
                    return (this.formatter.wrap(clause.column) +
                        ' ' +
                        this.formatter.operator(clause.operator) +
                        ' ' +
                        this.formatter.wrap(clause.value));
                }
                onVal(clause) {
                    return (this.formatter.wrap(clause.column) +
                        ' ' +
                        this.formatter.operator(clause.operator) +
                        ' ' +
                        this.formatter.parameter(clause.value));
                }
                onRaw(clause) {
                    return this.formatter.unwrapRaw(clause.value);
                }
                onUsing(clause) {
                    return '(' + this.formatter.columnize(clause.column) + ')';
                }
                whereIn(statement) {
                    let columns = null;
                    if (Array.isArray(statement.column)) {
                        columns = `(${this.formatter.columnize(statement.column)})`;
                    }
                    else {
                        columns = this.formatter.wrap(statement.column);
                    }
                    const values = this.formatter.values(statement.value);
                    return `${columns} ${this._not(statement, 'in ')}${values}`;
                }
                whereNull(statement) {
                    return (this.formatter.wrap(statement.column) +
                        ' is ' +
                        this._not(statement, 'null'));
                }
                whereBasic(statement) {
                    return (this._not(statement, '') +
                        this.formatter.wrap(statement.column) +
                        ' ' +
                        this.formatter.operator(statement.operator) +
                        ' ' +
                        (statement.asColumn
                            ? this.formatter.wrap(statement.value)
                            : this.formatter.parameter(statement.value)));
                }
                whereExists(statement) {
                    return (this._not(statement, 'exists') +
                        ' (' +
                        this.formatter.rawOrFn(statement.value) +
                        ')');
                }
                whereWrapped(statement) {
                    const val = this.formatter.rawOrFn(statement.value, 'where');
                    return (val && this._not(statement, '') + '(' + val.slice(6) + ')') || '';
                }
                whereBetween(statement) {
                    return (this.formatter.wrap(statement.column) +
                        ' ' +
                        this._not(statement, 'between') +
                        ' ' +
                        map(statement.value, bind(this.formatter.parameter, this.formatter)).join(' and '));
                }
                whereRaw(statement) {
                    return this._not(statement, '') + this.formatter.unwrapRaw(statement.value);
                }
                wrap(str) {
                    if (str.charAt(0) !== '(')
                        return `(${str})`;
                    return str;
                }
                with() {
                    if (!this.grouped.with || !this.grouped.with.length) {
                        return '';
                    }
                    const withs = this.grouped.with;
                    if (!withs)
                        return;
                    const sql = [];
                    let i = -1;
                    let isRecursive = false;
                    while (++i < withs.length) {
                        const stmt = withs[i];
                        if (stmt.recursive) {
                            isRecursive = true;
                        }
                        const val = this[stmt.type](stmt);
                        sql.push(val);
                    }
                    return `with ${isRecursive ? 'recursive ' : ''}${sql.join(', ')} `;
                }
                withWrapped(statement) {
                    const val = this.formatter.rawOrFn(statement.value);
                    return ((val &&
                        this.formatter.columnize(statement.alias) + ' as (' + val + ')') ||
                        '');
                }
                _not(statement, str) {
                    if (statement.not)
                        return `not ${str}`;
                    return str;
                }
                _prepInsert(data) {
                    const isRaw = this.formatter.rawOrFn(data);
                    if (isRaw)
                        return isRaw;
                    let columns = [];
                    const values = [];
                    if (!Array.isArray(data))
                        data = data ? [data] : [];
                    let i = -1;
                    while (++i < data.length) {
                        if (data[i] == null)
                            break;
                        if (i === 0)
                            columns = Object.keys(data[i]).sort();
                        const row = new Array(columns.length);
                        const keys = Object.keys(data[i]);
                        let j = -1;
                        while (++j < keys.length) {
                            const key = keys[j];
                            let idx = columns.indexOf(key);
                            if (idx === -1) {
                                columns = columns.concat(key).sort();
                                idx = columns.indexOf(key);
                                let k = -1;
                                while (++k < values.length) {
                                    values[k].splice(idx, 0, undefined);
                                }
                                row.splice(idx, 0, undefined);
                            }
                            row[idx] = data[i][key];
                        }
                        values.push(row);
                    }
                    return {
                        columns,
                        values,
                    };
                }
                _prepUpdate(data = {}) {
                    const { counter = {} } = this.single;
                    for (const column of Object.keys(counter)) {
                        if (has(data, column)) {
                            this.client.logger.warn(`increment/decrement called for a column that has already been specified in main .update() call. Ignoring increment/decrement and using value from .update() call.`);
                            continue;
                        }
                        let value = counter[column];
                        const symbol = value < 0 ? '-' : '+';
                        if (symbol === '-') {
                            value = -value;
                        }
                        data[column] = this.client.raw(`?? ${symbol} ?`, [column, value]);
                    }
                    data = omitBy(data, isUndefined);
                    const vals = [];
                    const columns = Object.keys(data);
                    let i = -1;
                    while (++i < columns.length) {
                        vals.push(this.formatter.wrap(columns[i]) +
                            ' = ' +
                            this.formatter.parameter(data[columns[i]]));
                    }
                    if (isEmpty(vals)) {
                        throw new Error([
                            'Empty .update() call detected!',
                            'Update data does not contain any values to update.',
                            'This will result in a faulty query.',
                            this.single.table ? `Table: ${this.single.table}.` : '',
                            this.single.update
                                ? `Columns: ${Object.keys(this.single.update)}.`
                                : '',
                        ].join(' '));
                    }
                    return vals;
                }
                _formatGroupsItemValue(value) {
                    const { formatter } = this;
                    if (value instanceof raw_js_4.default) {
                        return formatter.unwrapRaw(value);
                    }
                    else if (value instanceof builder_js_2.default) {
                        return '(' + formatter.columnize(value) + ')';
                    }
                    else {
                        return formatter.columnize(value);
                    }
                }
                _groupsOrders(type) {
                    const items = this.grouped[type];
                    if (!items)
                        return '';
                    const { formatter } = this;
                    const sql = items.map((item) => {
                        const column = this._formatGroupsItemValue(item.value);
                        const direction = type === 'order' && item.type !== 'orderByRaw'
                            ? ` ${formatter.direction(item.direction)}`
                            : '';
                        return column + direction;
                    });
                    return sql.length ? type + ' by ' + sql.join(', ') : '';
                }
                get tableName() {
                    if (!this._tableName) {
                        let tableName = this.single.table;
                        const schemaName = this.single.schema;
                        if (tableName && schemaName)
                            tableName = `${schemaName}.${tableName}`;
                        this._tableName = tableName
                            ?
                                this.formatter.wrap(tableName, tableName instanceof builder_js_2.default)
                            : '';
                    }
                    return this._tableName;
                }
            };
            exports_205("default", QueryCompiler);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/schema/builder", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/events", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/helpers", "https://raw.githubusercontent.com/denjucks/dex/master/lib/util/save-async-stack", "https://raw.githubusercontent.com/denjucks/dex/master/lib/interface"], function (exports_206, context_206) {
    "use strict";
    var inherits_js_4, events_js_5, index_js_17, toArray, helpers_js_4, save_async_stack_js_3, interface_js_3;
    var __moduleName = context_206 && context_206.id;
    function SchemaBuilder(client) {
        this.client = client;
        this._sequence = [];
        if (client.config) {
            this._debug = client.config.debug;
            save_async_stack_js_3.default(this, 4);
        }
    }
    return {
        setters: [
            function (inherits_js_4_1) {
                inherits_js_4 = inherits_js_4_1;
            },
            function (events_js_5_1) {
                events_js_5 = events_js_5_1;
            },
            function (index_js_17_1) {
                index_js_17 = index_js_17_1;
            },
            function (helpers_js_4_1) {
                helpers_js_4 = helpers_js_4_1;
            },
            function (save_async_stack_js_3_1) {
                save_async_stack_js_3 = save_async_stack_js_3_1;
            },
            function (interface_js_3_1) {
                interface_js_3 = interface_js_3_1;
            }
        ],
        execute: function () {
            toArray = index_js_17.default.toArray;
            inherits_js_4.default(SchemaBuilder, events_js_5.EventEmitter);
            [
                'createTable',
                'createTableIfNotExists',
                'createSchema',
                'createSchemaIfNotExists',
                'dropSchema',
                'dropSchemaIfExists',
                'createExtension',
                'createExtensionIfNotExists',
                'dropExtension',
                'dropExtensionIfExists',
                'table',
                'alterTable',
                'hasTable',
                'hasColumn',
                'dropTable',
                'renameTable',
                'dropTableIfExists',
                'raw',
            ].forEach(function (method) {
                SchemaBuilder.prototype[method] = function () {
                    if (method === 'createTableIfNotExists') {
                        this.client.logger.warn([
                            'Use async .hasTable to check if table exists and then use plain .createTable. Since ',
                            '.createTableIfNotExists actually just generates plain "CREATE TABLE IF NOT EXIST..." ',
                            'query it will not work correctly if there are any alter table queries generated for ',
                            'columns afterwards. To not break old migrations this function is left untouched for now',
                            ', but it should not be used when writing new code and it is removed from documentation.',
                        ].join(''));
                    }
                    if (method === 'table')
                        method = 'alterTable';
                    this._sequence.push({
                        method,
                        args: toArray(arguments),
                    });
                    return this;
                };
            });
            interface_js_3.default(SchemaBuilder);
            helpers_js_4.addQueryContext(SchemaBuilder);
            SchemaBuilder.prototype.withSchema = function (schemaName) {
                this._schema = schemaName;
                return this;
            };
            SchemaBuilder.prototype.toString = function () {
                return this.toQuery();
            };
            SchemaBuilder.prototype.toSQL = function () {
                return this.client.schemaCompiler(this).toSQL();
            };
            exports_206("default", SchemaBuilder);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/schema/helpers", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index"], function (exports_207, context_207) {
    "use strict";
    var index_js_18, isString, tail;
    var __moduleName = context_207 && context_207.id;
    function pushQuery(query) {
        if (!query)
            return;
        if (isString(query)) {
            query = { sql: query };
        }
        if (!query.bindings) {
            query.bindings = this.formatter.bindings;
        }
        this.sequence.push(query);
        this.formatter = this.client.formatter(this._commonBuilder);
    }
    exports_207("pushQuery", pushQuery);
    function pushAdditional(fn) {
        const child = new this.constructor(this.client, this.tableCompiler, this.columnBuilder);
        fn.call(child, tail(arguments));
        this.sequence.additional = (this.sequence.additional || []).concat(child.sequence);
    }
    exports_207("pushAdditional", pushAdditional);
    function unshiftQuery(query) {
        if (!query)
            return;
        if (isString(query)) {
            query = { sql: query };
        }
        if (!query.bindings) {
            query.bindings = this.formatter.bindings;
        }
        this.sequence.unshift(query);
        this.formatter = this.client.formatter(this._commonBuilder);
    }
    exports_207("unshiftQuery", unshiftQuery);
    return {
        setters: [
            function (index_js_18_1) {
                index_js_18 = index_js_18_1;
            }
        ],
        execute: function () {
            isString = index_js_18.default.isString;
            tail = index_js_18.default.tail;
            exports_207("default", {
                pushAdditional,
                pushQuery,
                unshiftQuery,
            });
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/schema/compiler", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/schema/helpers"], function (exports_208, context_208) {
    "use strict";
    var helpers_js_5;
    var __moduleName = context_208 && context_208.id;
    function SchemaCompiler(client, builder) {
        this.builder = builder;
        this._commonBuilder = this.builder;
        this.client = client;
        this.schema = builder._schema;
        this.formatter = client.formatter(builder);
        this.sequence = [];
    }
    function throwOnlyPGError(operationName) {
        throw new Error(`${operationName} is not supported for this dialect (only PostgreSQL supports it currently).`);
    }
    function buildTable(type) {
        return function (tableName, fn) {
            const builder = this.client.tableBuilder(type, tableName, fn);
            const queryContext = this.builder.queryContext();
            if (queryContext !== undefined && builder.queryContext() === undefined) {
                builder.queryContext(queryContext);
            }
            builder.setSchema(this.schema);
            const sql = builder.toSQL();
            for (let i = 0, l = sql.length; i < l; i++) {
                this.sequence.push(sql[i]);
            }
        };
    }
    function prefixedTableName(prefix, table) {
        return prefix ? `${prefix}.${table}` : table;
    }
    return {
        setters: [
            function (helpers_js_5_1) {
                helpers_js_5 = helpers_js_5_1;
            }
        ],
        execute: function () {
            Object.assign(SchemaCompiler.prototype, {
                pushQuery: helpers_js_5.pushQuery,
                pushAdditional: helpers_js_5.pushAdditional,
                unshiftQuery: helpers_js_5.unshiftQuery,
                createTable: buildTable('create'),
                createTableIfNotExists: buildTable('createIfNot'),
                createSchema: () => {
                    throwOnlyPGError('createSchema');
                },
                createSchemaIfNotExists: () => {
                    throwOnlyPGError('createSchemaIfNotExists');
                },
                dropSchema: () => {
                    throwOnlyPGError('dropSchema');
                },
                dropSchemaIfExists: () => {
                    throwOnlyPGError('dropSchemaIfExists');
                },
                alterTable: buildTable('alter'),
                dropTablePrefix: 'drop table ',
                dropTable(tableName) {
                    this.pushQuery(this.dropTablePrefix +
                        this.formatter.wrap(prefixedTableName(this.schema, tableName)));
                },
                dropTableIfExists(tableName) {
                    this.pushQuery(this.dropTablePrefix +
                        'if exists ' +
                        this.formatter.wrap(prefixedTableName(this.schema, tableName)));
                },
                raw(sql, bindings) {
                    this.sequence.push(this.client.raw(sql, bindings).toSQL());
                },
                toSQL() {
                    const sequence = this.builder._sequence;
                    for (let i = 0, l = sequence.length; i < l; i++) {
                        const query = sequence[i];
                        this[query.method].apply(this, query.args);
                    }
                    return this.sequence;
                },
            });
            exports_208("default", SchemaCompiler);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/schema/tablebuilder", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/helpers"], function (exports_209, context_209) {
    "use strict";
    var index_js_19, each, extend, isFunction, isString, toArray, helpers_js_6, specialMethods, columnTypes, AlterMethods;
    var __moduleName = context_209 && context_209.id;
    function TableBuilder(client, method, tableName, fn) {
        this.client = client;
        this._fn = fn;
        this._method = method;
        this._schemaName = undefined;
        this._tableName = tableName;
        this._statements = [];
        this._single = {};
        if (!isFunction(this._fn)) {
            throw new TypeError('A callback function must be supplied to calls against `.createTable` ' +
                'and `.table`');
        }
    }
    return {
        setters: [
            function (index_js_19_1) {
                index_js_19 = index_js_19_1;
            },
            function (helpers_js_6_1) {
                helpers_js_6 = helpers_js_6_1;
            }
        ],
        execute: function () {
            each = index_js_19.default.each;
            extend = index_js_19.default.extend;
            isFunction = index_js_19.default.isFunction;
            isString = index_js_19.default.isString;
            toArray = index_js_19.default.toArray;
            TableBuilder.prototype.setSchema = function (schemaName) {
                this._schemaName = schemaName;
            };
            TableBuilder.prototype.toSQL = function () {
                if (this._method === 'alter') {
                    extend(this, AlterMethods);
                }
                this._fn.call(this, this);
                return this.client.tableCompiler(this).toSQL();
            };
            each([
                'index',
                'primary',
                'unique',
                'dropPrimary',
                'dropUnique',
                'dropIndex',
                'dropForeign',
            ], function (method) {
                TableBuilder.prototype[method] = function () {
                    this._statements.push({
                        grouping: 'alterTable',
                        method,
                        args: toArray(arguments),
                    });
                    return this;
                };
            });
            specialMethods = {
                mysql: ['engine', 'charset', 'collate'],
                postgresql: ['inherits'],
            };
            each(specialMethods, function (methods, dialect) {
                methods.forEach(function (method) {
                    TableBuilder.prototype[method] = function (value) {
                        if (this.client.dialect !== dialect) {
                            throw new Error(`Knex only supports ${method} statement with ${dialect}.`);
                        }
                        if (this._method === 'alter') {
                            throw new Error(`Knex does not support altering the ${method} outside of create ` +
                                `table, please use knex.raw statement.`);
                        }
                        this._single[method] = value;
                    };
                });
            });
            helpers_js_6.default.addQueryContext(TableBuilder);
            columnTypes = [
                'tinyint',
                'smallint',
                'mediumint',
                'int',
                'bigint',
                'decimal',
                'float',
                'double',
                'real',
                'bit',
                'boolean',
                'serial',
                'date',
                'datetime',
                'timestamp',
                'time',
                'year',
                'char',
                'varchar',
                'tinytext',
                'tinyText',
                'text',
                'mediumtext',
                'mediumText',
                'longtext',
                'longText',
                'binary',
                'varbinary',
                'tinyblob',
                'tinyBlob',
                'mediumblob',
                'mediumBlob',
                'blob',
                'longblob',
                'longBlob',
                'enum',
                'set',
                'bool',
                'dateTime',
                'increments',
                'bigincrements',
                'bigIncrements',
                'integer',
                'biginteger',
                'bigInteger',
                'string',
                'json',
                'jsonb',
                'uuid',
                'enu',
                'specificType',
            ];
            each(columnTypes, function (type) {
                TableBuilder.prototype[type] = function () {
                    const args = toArray(arguments);
                    const builder = this.client.columnBuilder(this, type, args);
                    this._statements.push({
                        grouping: 'columns',
                        builder,
                    });
                    return builder;
                };
            });
            TableBuilder.prototype.timestamps = function timestamps() {
                const method = arguments[0] === true ? 'timestamp' : 'datetime';
                const createdAt = this[method]('created_at');
                const updatedAt = this[method]('updated_at');
                if (arguments[1] === true) {
                    const now = this.client.raw('CURRENT_TIMESTAMP');
                    createdAt.notNullable().defaultTo(now);
                    updatedAt.notNullable().defaultTo(now);
                }
                return;
            };
            TableBuilder.prototype.comment = function (value) {
                if (typeof value !== 'string') {
                    throw new TypeError('Table comment must be string');
                }
                this._single.comment = value;
            };
            TableBuilder.prototype.foreign = function (column, keyName) {
                const foreignData = { column: column, keyName: keyName };
                this._statements.push({
                    grouping: 'alterTable',
                    method: 'foreign',
                    args: [foreignData],
                });
                let returnObj = {
                    references(tableColumn) {
                        let pieces;
                        if (isString(tableColumn)) {
                            pieces = tableColumn.split('.');
                        }
                        if (!pieces || pieces.length === 1) {
                            foreignData.references = pieces ? pieces[0] : tableColumn;
                            return {
                                on(tableName) {
                                    if (typeof tableName !== 'string') {
                                        throw new TypeError(`Expected tableName to be a string, got: ${typeof tableName}`);
                                    }
                                    foreignData.inTable = tableName;
                                    return returnObj;
                                },
                                inTable() {
                                    return this.on.apply(this, arguments);
                                },
                            };
                        }
                        foreignData.inTable = pieces[0];
                        foreignData.references = pieces[1];
                        return returnObj;
                    },
                    withKeyName(keyName) {
                        foreignData.keyName = keyName;
                        return returnObj;
                    },
                    onUpdate(statement) {
                        foreignData.onUpdate = statement;
                        return returnObj;
                    },
                    onDelete(statement) {
                        foreignData.onDelete = statement;
                        return returnObj;
                    },
                    _columnBuilder(builder) {
                        extend(builder, returnObj);
                        returnObj = builder;
                        return builder;
                    },
                };
                return returnObj;
            };
            AlterMethods = {
                renameColumn(from, to) {
                    this._statements.push({
                        grouping: 'alterTable',
                        method: 'renameColumn',
                        args: [from, to],
                    });
                    return this;
                },
                dropTimestamps() {
                    return this.dropColumns(['created_at', 'updated_at']);
                },
            };
            AlterMethods.dropColumn = AlterMethods.dropColumns = function () {
                this._statements.push({
                    grouping: 'alterTable',
                    method: 'dropColumn',
                    args: toArray(arguments),
                });
                return this;
            };
            exports_209("default", TableBuilder);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/schema/tablecompiler", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/schema/helpers", "https://raw.githubusercontent.com/denjucks/dex/master/lib/helpers", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index"], function (exports_210, context_210) {
    "use strict";
    var helpers_js_7, helpers_js_8, index_js_20, groupBy, indexOf, isEmpty, tail;
    var __moduleName = context_210 && context_210.id;
    function TableCompiler(client, tableBuilder) {
        this.client = client;
        this.tableBuilder = tableBuilder;
        this._commonBuilder = this.tableBuilder;
        this.method = tableBuilder._method;
        this.schemaNameRaw = tableBuilder._schemaName;
        this.tableNameRaw = tableBuilder._tableName;
        this.single = tableBuilder._single;
        this.grouped = groupBy(tableBuilder._statements, 'grouping');
        this.formatter = client.formatter(tableBuilder);
        this.sequence = [];
        this._formatting = client.config && client.config.formatting;
    }
    return {
        setters: [
            function (helpers_js_7_1) {
                helpers_js_7 = helpers_js_7_1;
            },
            function (helpers_js_8_1) {
                helpers_js_8 = helpers_js_8_1;
            },
            function (index_js_20_1) {
                index_js_20 = index_js_20_1;
            }
        ],
        execute: function () {
            groupBy = index_js_20.default.groupBy;
            indexOf = index_js_20.default.indexOf;
            isEmpty = index_js_20.default.isEmpty;
            tail = index_js_20.default.tail;
            TableCompiler.prototype.pushQuery = helpers_js_7.pushQuery;
            TableCompiler.prototype.pushAdditional = helpers_js_7.pushAdditional;
            TableCompiler.prototype.unshiftQuery = helpers_js_7.unshiftQuery;
            TableCompiler.prototype.toSQL = function () {
                this[this.method]();
                return this.sequence;
            };
            TableCompiler.prototype.lowerCase = true;
            TableCompiler.prototype.createAlterTableMethods = null;
            TableCompiler.prototype.create = function (ifNot) {
                const columnBuilders = this.getColumns();
                const columns = columnBuilders.map((col) => col.toSQL());
                const columnTypes = this.getColumnTypes(columns);
                if (this.createAlterTableMethods) {
                    this.alterTableForCreate(columnTypes);
                }
                this.createQuery(columnTypes, ifNot);
                this.columnQueries(columns);
                delete this.single.comment;
                this.alterTable();
            };
            TableCompiler.prototype.createIfNot = function () {
                this.create(true);
            };
            TableCompiler.prototype.alter = function () {
                const addColBuilders = this.getColumns();
                const addColumns = addColBuilders.map((col) => col.toSQL());
                const alterColBuilders = this.getColumns('alter');
                const alterColumns = alterColBuilders.map((col) => col.toSQL());
                const addColumnTypes = this.getColumnTypes(addColumns);
                const alterColumnTypes = this.getColumnTypes(alterColumns);
                this.addColumns(addColumnTypes);
                this.alterColumns(alterColumnTypes, alterColBuilders);
                this.columnQueries(addColumns);
                this.columnQueries(alterColumns);
                this.alterTable();
            };
            TableCompiler.prototype.foreign = function (foreignData) {
                if (foreignData.inTable && foreignData.references) {
                    const keyName = foreignData.keyName
                        ? this.formatter.wrap(foreignData.keyName)
                        : this._indexCommand('foreign', this.tableNameRaw, foreignData.column);
                    const column = this.formatter.columnize(foreignData.column);
                    const references = this.formatter.columnize(foreignData.references);
                    const inTable = this.formatter.wrap(foreignData.inTable);
                    const onUpdate = foreignData.onUpdate
                        ? (this.lowerCase ? ' on update ' : ' ON UPDATE ') + foreignData.onUpdate
                        : '';
                    const onDelete = foreignData.onDelete
                        ? (this.lowerCase ? ' on delete ' : ' ON DELETE ') + foreignData.onDelete
                        : '';
                    if (this.lowerCase) {
                        this.pushQuery((!this.forCreate ? `alter table ${this.tableName()} add ` : '') +
                            'constraint ' +
                            keyName +
                            ' ' +
                            'foreign key (' +
                            column +
                            ') references ' +
                            inTable +
                            ' (' +
                            references +
                            ')' +
                            onUpdate +
                            onDelete);
                    }
                    else {
                        this.pushQuery((!this.forCreate ? `ALTER TABLE ${this.tableName()} ADD ` : '') +
                            'CONSTRAINT ' +
                            keyName +
                            ' ' +
                            'FOREIGN KEY (' +
                            column +
                            ') REFERENCES ' +
                            inTable +
                            ' (' +
                            references +
                            ')' +
                            onUpdate +
                            onDelete);
                    }
                }
            };
            TableCompiler.prototype.getColumnTypes = (columns) => columns.reduce(function (memo, columnSQL) {
                const column = columnSQL[0];
                memo.sql.push(column.sql);
                memo.bindings.concat(column.bindings);
                return memo;
            }, { sql: [], bindings: [] });
            TableCompiler.prototype.columnQueries = function (columns) {
                const queries = columns.reduce(function (memo, columnSQL) {
                    const column = tail(columnSQL);
                    if (!isEmpty(column))
                        return memo.concat(column);
                    return memo;
                }, []);
                for (const q of queries) {
                    this.pushQuery(q);
                }
            };
            TableCompiler.prototype.addColumnsPrefix = 'add column ';
            TableCompiler.prototype.addColumns = function (columns, prefix) {
                prefix = prefix || this.addColumnsPrefix;
                if (columns.sql.length > 0) {
                    const columnSql = columns.sql.map((column) => {
                        return prefix + column;
                    });
                    this.pushQuery({
                        sql: (this.lowerCase ? 'alter table ' : 'ALTER TABLE ') +
                            this.tableName() +
                            ' ' +
                            columnSql.join(', '),
                        bindings: columns.bindings,
                    });
                }
            };
            TableCompiler.prototype.alterColumnsPrefix = 'alter column ';
            TableCompiler.prototype.alterColumns = function (columns, colBuilders) {
                if (columns.sql.length > 0) {
                    this.addColumns(columns, this.alterColumnsPrefix, colBuilders);
                }
            };
            TableCompiler.prototype.getColumns = function (method) {
                const columns = this.grouped.columns || [];
                method = method || 'add';
                const queryContext = this.tableBuilder.queryContext();
                return columns
                    .filter((column) => column.builder._method === method)
                    .map((column) => {
                    if (queryContext !== undefined &&
                        column.builder.queryContext() === undefined) {
                        column.builder.queryContext(queryContext);
                    }
                    return this.client.columnCompiler(this, column.builder);
                });
            };
            TableCompiler.prototype.tableName = function () {
                const name = this.schemaNameRaw
                    ? `${this.schemaNameRaw}.${this.tableNameRaw}`
                    : this.tableNameRaw;
                return this.formatter.wrap(name);
            };
            TableCompiler.prototype.alterTable = function () {
                const alterTable = this.grouped.alterTable || [];
                for (let i = 0, l = alterTable.length; i < l; i++) {
                    const statement = alterTable[i];
                    if (this[statement.method]) {
                        this[statement.method].apply(this, statement.args);
                    }
                    else {
                        this.client.logger.error(`Debug: ${statement.method} does not exist`);
                    }
                }
                for (const item in this.single) {
                    if (typeof this[item] === 'function')
                        this[item](this.single[item]);
                }
            };
            TableCompiler.prototype.alterTableForCreate = function (columnTypes) {
                this.forCreate = true;
                const savedSequence = this.sequence;
                const alterTable = this.grouped.alterTable || [];
                this.grouped.alterTable = [];
                for (let i = 0, l = alterTable.length; i < l; i++) {
                    const statement = alterTable[i];
                    if (indexOf(this.createAlterTableMethods, statement.method) < 0) {
                        this.grouped.alterTable.push(statement);
                        continue;
                    }
                    if (this[statement.method]) {
                        this.sequence = [];
                        this[statement.method].apply(this, statement.args);
                        columnTypes.sql.push(this.sequence[0].sql);
                    }
                    else {
                        this.client.logger.error(`Debug: ${statement.method} does not exist`);
                    }
                }
                this.sequence = savedSequence;
                this.forCreate = false;
            };
            TableCompiler.prototype.dropIndex = function (value) {
                this.pushQuery(`drop index${value}`);
            };
            TableCompiler.prototype.dropUnique = TableCompiler.prototype.dropForeign = function () {
                throw new Error('Method implemented in the dialect driver');
            };
            TableCompiler.prototype.dropColumnPrefix = 'drop column ';
            TableCompiler.prototype.dropColumn = function () {
                const columns = helpers_js_8.default.normalizeArr.apply(null, arguments);
                const drops = (Array.isArray(columns) ? columns : [columns]).map((column) => {
                    return this.dropColumnPrefix + this.formatter.wrap(column);
                });
                this.pushQuery((this.lowerCase ? 'alter table ' : 'ALTER TABLE ') +
                    this.tableName() +
                    ' ' +
                    drops.join(', '));
            };
            TableCompiler.prototype._indexCommand = function (type, tableName, columns) {
                if (!Array.isArray(columns))
                    columns = columns ? [columns] : [];
                const table = tableName.replace(/\.|-/g, '_');
                const indexName = (table +
                    '_' +
                    columns.join('_') +
                    '_' +
                    type).toLowerCase();
                return this.formatter.wrap(indexName);
            };
            exports_210("default", TableCompiler);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/schema/columnbuilder", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/helpers"], function (exports_211, context_211) {
    "use strict";
    var index_js_21, extend, toArray, helpers_js_9, modifiers, aliasMethod, AlterMethods, columnAlias;
    var __moduleName = context_211 && context_211.id;
    function ColumnBuilder(client, tableBuilder, type, args) {
        this.client = client;
        this._method = 'add';
        this._single = {};
        this._modifiers = {};
        this._statements = [];
        this._type = columnAlias[type] || type;
        this._args = args;
        this._tableBuilder = tableBuilder;
        if (tableBuilder._method === 'alter') {
            extend(this, AlterMethods);
        }
    }
    return {
        setters: [
            function (index_js_21_1) {
                index_js_21 = index_js_21_1;
            },
            function (helpers_js_9_1) {
                helpers_js_9 = helpers_js_9_1;
            }
        ],
        execute: function () {
            extend = index_js_21.default.extend;
            toArray = index_js_21.default.toArray;
            modifiers = [
                'default',
                'defaultsTo',
                'defaultTo',
                'unsigned',
                'nullable',
                'first',
                'after',
                'comment',
                'collate',
            ];
            aliasMethod = {
                default: 'defaultTo',
                defaultsTo: 'defaultTo',
            };
            modifiers.forEach(function (method) {
                const key = aliasMethod[method] || method;
                ColumnBuilder.prototype[method] = function () {
                    this._modifiers[key] = toArray(arguments);
                    return this;
                };
            });
            helpers_js_9.addQueryContext(ColumnBuilder);
            ColumnBuilder.prototype.notNull = ColumnBuilder.prototype.notNullable = function notNullable() {
                return this.nullable(false);
            };
            ['index', 'primary', 'unique'].forEach(function (method) {
                ColumnBuilder.prototype[method] = function () {
                    if (this._type.toLowerCase().indexOf('increments') === -1) {
                        this._tableBuilder[method].apply(this._tableBuilder, [this._args[0]].concat(toArray(arguments)));
                    }
                    return this;
                };
            });
            ColumnBuilder.prototype.references = function (value) {
                return this._tableBuilder.foreign
                    .call(this._tableBuilder, this._args[0], undefined, this)
                    ._columnBuilder(this)
                    .references(value);
            };
            AlterMethods = {};
            AlterMethods.drop = function () {
                this._single.drop = true;
                return this;
            };
            AlterMethods.alterType = function (type) {
                this._statements.push({
                    grouping: 'alterType',
                    value: type,
                });
                return this;
            };
            AlterMethods.alter = function () {
                this._method = 'alter';
                return this;
            };
            columnAlias = {
                float: 'floating',
                enum: 'enu',
                boolean: 'bool',
                string: 'varchar',
                bigint: 'bigInteger',
            };
            exports_211("default", ColumnBuilder);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/schema/columncompiler", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/raw", "https://raw.githubusercontent.com/denjucks/dex/master/lib/schema/helpers", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index"], function (exports_212, context_212) {
    "use strict";
    var raw_js_5, helpers_js_10, index_js_22, groupBy, first, has, isObject, tail;
    var __moduleName = context_212 && context_212.id;
    function ColumnCompiler(client, tableCompiler, columnBuilder) {
        this.client = client;
        this.tableCompiler = tableCompiler;
        this.columnBuilder = columnBuilder;
        this._commonBuilder = this.columnBuilder;
        this.args = columnBuilder._args;
        this.type = columnBuilder._type.toLowerCase();
        this.grouped = groupBy(columnBuilder._statements, 'grouping');
        this.modified = columnBuilder._modifiers;
        this.isIncrements = this.type.indexOf('increments') !== -1;
        this.formatter = client.formatter(columnBuilder);
        this.sequence = [];
        this.modifiers = [];
    }
    return {
        setters: [
            function (raw_js_5_1) {
                raw_js_5 = raw_js_5_1;
            },
            function (helpers_js_10_1) {
                helpers_js_10 = helpers_js_10_1;
            },
            function (index_js_22_1) {
                index_js_22 = index_js_22_1;
            }
        ],
        execute: function () {
            groupBy = index_js_22.default.groupBy;
            first = index_js_22.default.first;
            has = index_js_22.default.has;
            isObject = index_js_22.default.isObject;
            tail = index_js_22.default.tail;
            ColumnCompiler.prototype.pushQuery = helpers_js_10.default.pushQuery;
            ColumnCompiler.prototype.pushAdditional = helpers_js_10.default.pushAdditional;
            ColumnCompiler.prototype.unshiftQuery = helpers_js_10.default.unshiftQuery;
            ColumnCompiler.prototype._defaultMap = {
                columnName: function () {
                    if (!this.isIncrements) {
                        throw new Error(`You did not specify a column name for the ${this.type} column.`);
                    }
                    return 'id';
                },
            };
            ColumnCompiler.prototype.defaults = function (label) {
                if (Object.prototype.hasOwnProperty.call(this._defaultMap, label)) {
                    return this._defaultMap[label].bind(this)();
                }
                else {
                    throw new Error(`There is no default for the specified identifier ${label}`);
                }
            };
            ColumnCompiler.prototype.toSQL = function () {
                this.pushQuery(this.compileColumn());
                if (this.sequence.additional) {
                    this.sequence = this.sequence.concat(this.sequence.additional);
                }
                return this.sequence;
            };
            ColumnCompiler.prototype.compileColumn = function () {
                return (this.formatter.wrap(this.getColumnName()) +
                    ' ' +
                    this.getColumnType() +
                    this.getModifiers());
            };
            ColumnCompiler.prototype.getColumnName = function () {
                const value = first(this.args);
                return value || this.defaults('columnName');
            };
            ColumnCompiler.prototype.getColumnType = function () {
                const type = this[this.type];
                return typeof type === 'function' ? type.apply(this, tail(this.args)) : type;
            };
            ColumnCompiler.prototype.getModifiers = function () {
                const modifiers = [];
                for (let i = 0, l = this.modifiers.length; i < l; i++) {
                    const modifier = this.modifiers[i];
                    if (!this.isIncrements || (this.isIncrements && modifier === 'comment')) {
                        if (has(this.modified, modifier)) {
                            const val = this[modifier].apply(this, this.modified[modifier]);
                            if (val)
                                modifiers.push(val);
                        }
                    }
                }
                return modifiers.length > 0 ? ` ${modifiers.join(' ')}` : '';
            };
            ColumnCompiler.prototype.increments =
                'integer not null primary key autoincrement';
            ColumnCompiler.prototype.bigincrements =
                'integer not null primary key autoincrement';
            ColumnCompiler.prototype.integer = ColumnCompiler.prototype.smallint = ColumnCompiler.prototype.mediumint =
                'integer';
            ColumnCompiler.prototype.biginteger = 'bigint';
            ColumnCompiler.prototype.varchar = function (length) {
                return `varchar(${this._num(length, 255)})`;
            };
            ColumnCompiler.prototype.text = 'text';
            ColumnCompiler.prototype.tinyint = 'tinyint';
            ColumnCompiler.prototype.floating = function (precision, scale) {
                return `float(${this._num(precision, 8)}, ${this._num(scale, 2)})`;
            };
            ColumnCompiler.prototype.decimal = function (precision, scale) {
                if (precision === null) {
                    throw new Error('Specifying no precision on decimal columns is not supported for that SQL dialect.');
                }
                return `decimal(${this._num(precision, 8)}, ${this._num(scale, 2)})`;
            };
            ColumnCompiler.prototype.binary = 'blob';
            ColumnCompiler.prototype.bool = 'boolean';
            ColumnCompiler.prototype.date = 'date';
            ColumnCompiler.prototype.datetime = 'datetime';
            ColumnCompiler.prototype.time = 'time';
            ColumnCompiler.prototype.timestamp = 'timestamp';
            ColumnCompiler.prototype.enu = 'varchar';
            ColumnCompiler.prototype.bit = ColumnCompiler.prototype.json = 'text';
            ColumnCompiler.prototype.uuid = 'char(36)';
            ColumnCompiler.prototype.specifictype = (type) => type;
            ColumnCompiler.prototype.nullable = (nullable) => nullable === false ? 'not null' : 'null';
            ColumnCompiler.prototype.notNullable = function () {
                return this.nullable(false);
            };
            ColumnCompiler.prototype.defaultTo = function (value) {
                if (value === void 0) {
                    return '';
                }
                else if (value === null) {
                    value = 'null';
                }
                else if (value instanceof raw_js_5.default) {
                    value = value.toQuery();
                }
                else if (this.type === 'bool') {
                    if (value === 'false')
                        value = 0;
                    value = `'${value ? 1 : 0}'`;
                }
                else if ((this.type === 'json' || this.type === 'jsonb') &&
                    isObject(value)) {
                    value = `'${JSON.stringify(value)}'`;
                }
                else {
                    value = `'${value}'`;
                }
                return `default ${value}`;
            };
            ColumnCompiler.prototype._num = function (val, fallback) {
                if (val === undefined || val === null)
                    return fallback;
                const number = parseInt(val, 10);
                return isNaN(number) ? fallback : number;
            };
            exports_212("default", ColumnCompiler);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/tarn@3.0.0/dist/TimeoutError.dew", [], function (exports_213, context_213) {
    "use strict";
    var exports, _dewExec;
    var __moduleName = context_213 && context_213.id;
    function dew() {
        if (_dewExec)
            return exports;
        _dewExec = true;
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        class TimeoutError extends Error {
        }
        exports.TimeoutError = TimeoutError;
        return exports;
    }
    exports_213("dew", dew);
    return {
        setters: [],
        execute: function () {
            exports = {}, _dewExec = false;
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/tarn@3.0.0/dist/PromiseInspection.dew", [], function (exports_214, context_214) {
    "use strict";
    var exports, _dewExec;
    var __moduleName = context_214 && context_214.id;
    function dew() {
        if (_dewExec)
            return exports;
        _dewExec = true;
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        class PromiseInspection {
            constructor(args) {
                this._value = args.value;
                this._error = args.error;
            }
            value() {
                return this._value;
            }
            reason() {
                return this._error;
            }
            isRejected() {
                return !!this._error;
            }
            isFulfilled() {
                return !!this._value;
            }
        }
        exports.PromiseInspection = PromiseInspection;
        return exports;
    }
    exports_214("dew", dew);
    return {
        setters: [],
        execute: function () {
            exports = {}, _dewExec = false;
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/tarn@3.0.0/dist/utils.dew", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/tarn@3.0.0/dist/PromiseInspection.dew"], function (exports_215, context_215) {
    "use strict";
    var PromiseInspection_dew_js_1, exports, _dewExec;
    var __moduleName = context_215 && context_215.id;
    function dew() {
        if (_dewExec)
            return exports;
        _dewExec = true;
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        const PromiseInspection_1 = PromiseInspection_dew_js_1.dew();
        function defer() {
            let resolve = null;
            let reject = null;
            const promise = new Promise((resolver, rejecter) => {
                resolve = resolver;
                reject = rejecter;
            });
            return {
                promise,
                resolve,
                reject
            };
        }
        exports.defer = defer;
        function now() {
            return Date.now();
        }
        exports.now = now;
        function duration(t1, t2) {
            return Math.abs(t2 - t1);
        }
        exports.duration = duration;
        function checkOptionalTime(time) {
            if (typeof time === 'undefined') {
                return true;
            }
            return checkRequiredTime(time);
        }
        exports.checkOptionalTime = checkOptionalTime;
        function checkRequiredTime(time) {
            return typeof time === 'number' && time === Math.round(time) && time > 0;
        }
        exports.checkRequiredTime = checkRequiredTime;
        function delay(millis) {
            return new Promise(resolve => setTimeout(resolve, millis));
        }
        exports.delay = delay;
        function reflect(promise) {
            return promise.then(value => {
                return new PromiseInspection_1.PromiseInspection({
                    value
                });
            }).catch(error => {
                return new PromiseInspection_1.PromiseInspection({
                    error
                });
            });
        }
        exports.reflect = reflect;
        function tryPromise(cb) {
            try {
                const result = cb();
                return Promise.resolve(result);
            }
            catch (err) {
                return Promise.reject(err);
            }
        }
        exports.tryPromise = tryPromise;
        return exports;
    }
    exports_215("dew", dew);
    return {
        setters: [
            function (PromiseInspection_dew_js_1_1) {
                PromiseInspection_dew_js_1 = PromiseInspection_dew_js_1_1;
            }
        ],
        execute: function () {
            exports = {}, _dewExec = false;
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/tarn@3.0.0/dist/PendingOperation.dew", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/tarn@3.0.0/dist/TimeoutError.dew", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/tarn@3.0.0/dist/utils.dew"], function (exports_216, context_216) {
    "use strict";
    var TimeoutError_dew_js_1, utils_dew_js_1, exports, _dewExec;
    var __moduleName = context_216 && context_216.id;
    function dew() {
        if (_dewExec)
            return exports;
        _dewExec = true;
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        const TimeoutError_1 = TimeoutError_dew_js_1.dew();
        const utils_1 = utils_dew_js_1.dew();
        class PendingOperation {
            constructor(timeoutMillis) {
                this.timeoutMillis = timeoutMillis;
                this.deferred = utils_1.defer();
                this.possibleTimeoutCause = null;
                this.isRejected = false;
                this.promise = timeout(this.deferred.promise, timeoutMillis).catch(err => {
                    if (err instanceof TimeoutError_1.TimeoutError) {
                        if (this.possibleTimeoutCause) {
                            err = new TimeoutError_1.TimeoutError(this.possibleTimeoutCause.message);
                        }
                        else {
                            err = new TimeoutError_1.TimeoutError('operation timed out for an unknown reason');
                        }
                    }
                    this.isRejected = true;
                    return Promise.reject(err);
                });
            }
            abort() {
                this.reject(new Error('aborted'));
            }
            reject(err) {
                this.deferred.reject(err);
            }
            resolve(value) {
                this.deferred.resolve(value);
            }
        }
        exports.PendingOperation = PendingOperation;
        function timeout(promise, time) {
            return new Promise((resolve, reject) => {
                const timeoutHandle = setTimeout(() => reject(new TimeoutError_1.TimeoutError()), time);
                promise.then(result => {
                    clearTimeout(timeoutHandle);
                    resolve(result);
                }).catch(err => {
                    clearTimeout(timeoutHandle);
                    reject(err);
                });
            });
        }
        return exports;
    }
    exports_216("dew", dew);
    return {
        setters: [
            function (TimeoutError_dew_js_1_1) {
                TimeoutError_dew_js_1 = TimeoutError_dew_js_1_1;
            },
            function (utils_dew_js_1_1) {
                utils_dew_js_1 = utils_dew_js_1_1;
            }
        ],
        execute: function () {
            exports = {}, _dewExec = false;
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/tarn@3.0.0/dist/Resource.dew", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/tarn@3.0.0/dist/utils.dew"], function (exports_217, context_217) {
    "use strict";
    var utils_dew_js_2, exports, _dewExec;
    var __moduleName = context_217 && context_217.id;
    function dew() {
        if (_dewExec)
            return exports;
        _dewExec = true;
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        const utils_1 = utils_dew_js_2.dew();
        class Resource {
            constructor(resource) {
                this.resource = resource;
                this.resource = resource;
                this.timestamp = utils_1.now();
                this.deferred = utils_1.defer();
            }
            get promise() {
                return this.deferred.promise;
            }
            resolve() {
                this.deferred.resolve(undefined);
                return new Resource(this.resource);
            }
        }
        exports.Resource = Resource;
        return exports;
    }
    exports_217("dew", dew);
    return {
        setters: [
            function (utils_dew_js_2_1) {
                utils_dew_js_2 = utils_dew_js_2_1;
            }
        ],
        execute: function () {
            exports = {}, _dewExec = false;
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/timers", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/chunk-0c2d1322"], function (exports_218, context_218) {
    "use strict";
    var chunk_0c2d1322_js_4, t, n, a, t$1, i, o, l, _unrefActive, active, clearImmediate, clearInterval$1, clearTimeout$1, enroll, setImmediate, setInterval$1, setTimeout$1, unenroll;
    var __moduleName = context_218 && context_218.id;
    function n$1(e, i) { (this || t$1)._id = e, (this || t$1)._clearFn = i; }
    return {
        setters: [
            function (chunk_0c2d1322_js_4_1) {
                chunk_0c2d1322_js_4 = chunk_0c2d1322_js_4_1;
            }
        ],
        execute: function () {
            t = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self ? self : global, n = {}, a = chunk_0c2d1322_js_4.h;
            !function (e, t) { if (!e.setImmediate) {
                var n, s, o, i, c, r = 1, f = {}, l = !1, d = e.document, u = Object.getPrototypeOf && Object.getPrototypeOf(e);
                u = u && u.setTimeout ? u : e, "[object process]" === {}.toString.call(e.process) ? n = function (e) { a.nextTick((function () { m(e); })); } : !function () { if (e.postMessage && !e.importScripts) {
                    var t = !0, n = e.onmessage;
                    return e.onmessage = function () { t = !1; }, e.postMessage("", "*"), e.onmessage = n, t;
                } }() ? e.MessageChannel ? ((o = new MessageChannel).port1.onmessage = function (e) { m(e.data); }, n = function (e) { o.port2.postMessage(e); }) : d && "onreadystatechange" in d.createElement("script") ? (s = d.documentElement, n = function (e) { var t = d.createElement("script"); t.onreadystatechange = function () { m(e), t.onreadystatechange = null, s.removeChild(t), t = null; }, s.appendChild(t); }) : n = function (e) { setTimeout(m, 0, e); } : (i = "setImmediate$" + Math.random() + "$", c = function (t) { t.source === e && "string" == typeof t.data && 0 === t.data.indexOf(i) && m(+t.data.slice(i.length)); }, e.addEventListener ? e.addEventListener("message", c, !1) : e.attachEvent("onmessage", c), n = function (t) { e.postMessage(i + t, "*"); }), u.setImmediate = function (e) { "function" != typeof e && (e = new Function("" + e)); for (var t = new Array(arguments.length - 1), a = 0; a < t.length; a++)
                    t[a] = arguments[a + 1]; var s = { callback: e, args: t }; return f[r] = s, n(r), r++; }, u.clearImmediate = g;
            } function g(e) { delete f[e]; } function m(e) { if (l)
                setTimeout(m, 0, e);
            else {
                var t = f[e];
                if (t) {
                    l = !0;
                    try {
                        !function (e) { var t = e.callback, n = e.args; switch (n.length) {
                            case 0:
                                t();
                                break;
                            case 1:
                                t(n[0]);
                                break;
                            case 2:
                                t(n[0], n[1]);
                                break;
                            case 3:
                                t(n[0], n[1], n[2]);
                                break;
                            default: t.apply(void 0, n);
                        } }(t);
                    }
                    finally {
                        g(e), l = !1;
                    }
                }
            } } }("undefined" == typeof self ? void 0 === t ? n : t : self);
            t$1 = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self ? self : global, i = {}, o = void 0 !== t$1 && t$1 || "undefined" != typeof self && self || window, l = Function.prototype.apply;
            i.setTimeout = function () { return new n$1(l.call(setTimeout, o, arguments), clearTimeout); }, i.setInterval = function () { return new n$1(l.call(setInterval, o, arguments), clearInterval); }, i.clearTimeout = i.clearInterval = function (e) { e && e.close(); }, n$1.prototype.unref = n$1.prototype.ref = function () { }, n$1.prototype.close = function () { (this || t$1)._clearFn.call(o, (this || t$1)._id); }, i.enroll = function (e, t) { clearTimeout(e._idleTimeoutId), e._idleTimeout = t; }, i.unenroll = function (e) { clearTimeout(e._idleTimeoutId), e._idleTimeout = -1; }, i._unrefActive = i.active = function (e) { clearTimeout(e._idleTimeoutId); var t = e._idleTimeout; t >= 0 && (e._idleTimeoutId = setTimeout((function () { e._onTimeout && e._onTimeout(); }), t)); }, i.setImmediate = "undefined" != typeof self && self.setImmediate || void 0 !== t$1 && t$1.setImmediate || i && i.setImmediate, i.clearImmediate = "undefined" != typeof self && self.clearImmediate || void 0 !== t$1 && t$1.clearImmediate || i && i.clearImmediate;
            _unrefActive = i._unrefActive;
            exports_218("_unrefActive", _unrefActive);
            active = i.active;
            exports_218("active", active);
            clearImmediate = i.clearImmediate;
            exports_218("clearImmediate", clearImmediate);
            clearInterval$1 = i.clearInterval;
            exports_218("clearInterval", clearInterval$1);
            clearTimeout$1 = i.clearTimeout;
            exports_218("clearTimeout", clearTimeout$1);
            enroll = i.enroll;
            exports_218("enroll", enroll);
            setImmediate = i.setImmediate;
            exports_218("setImmediate", setImmediate);
            setInterval$1 = i.setInterval;
            exports_218("setInterval", setInterval$1);
            setTimeout$1 = i.setTimeout;
            exports_218("setTimeout", setTimeout$1);
            unenroll = i.unenroll;
            exports_218("unenroll", unenroll);
            exports_218("default", i);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/tarn@3.0.0/dist/Pool.dew", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/tarn@3.0.0/dist/PendingOperation.dew", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/tarn@3.0.0/dist/Resource.dew", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/tarn@3.0.0/dist/utils.dew", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/events", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/timers"], function (exports_219, context_219) {
    "use strict";
    var PendingOperation_dew_js_1, Resource_dew_js_1, utils_dew_js_3, events_js_6, timers_js_1, exports, _dewExec;
    var __moduleName = context_219 && context_219.id;
    function dew() {
        if (_dewExec)
            return exports;
        _dewExec = true;
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        const PendingOperation_1 = PendingOperation_dew_js_1.dew();
        const Resource_1 = Resource_dew_js_1.dew();
        const utils_1 = utils_dew_js_3.dew();
        const events_1 = events_js_6.default;
        const timers_1 = timers_js_1.default;
        class Pool {
            constructor(opt) {
                this.destroyed = false;
                this.emitter = new events_1.EventEmitter();
                opt = opt || {};
                if (!opt.create) {
                    throw new Error('Tarn: opt.create function most be provided');
                }
                if (!opt.destroy) {
                    throw new Error('Tarn: opt.destroy function most be provided');
                }
                if (typeof opt.min !== 'number' || opt.min < 0 || opt.min !== Math.round(opt.min)) {
                    throw new Error('Tarn: opt.min must be an integer >= 0');
                }
                if (typeof opt.max !== 'number' || opt.max <= 0 || opt.max !== Math.round(opt.max)) {
                    throw new Error('Tarn: opt.max must be an integer > 0');
                }
                if (opt.min > opt.max) {
                    throw new Error('Tarn: opt.max is smaller than opt.min');
                }
                if (!utils_1.checkOptionalTime(opt.acquireTimeoutMillis)) {
                    throw new Error('Tarn: invalid opt.acquireTimeoutMillis ' + JSON.stringify(opt.acquireTimeoutMillis));
                }
                if (!utils_1.checkOptionalTime(opt.createTimeoutMillis)) {
                    throw new Error('Tarn: invalid opt.createTimeoutMillis ' + JSON.stringify(opt.createTimeoutMillis));
                }
                if (!utils_1.checkOptionalTime(opt.destroyTimeoutMillis)) {
                    throw new Error('Tarn: invalid opt.destroyTimeoutMillis ' + JSON.stringify(opt.destroyTimeoutMillis));
                }
                if (!utils_1.checkOptionalTime(opt.idleTimeoutMillis)) {
                    throw new Error('Tarn: invalid opt.idleTimeoutMillis ' + JSON.stringify(opt.idleTimeoutMillis));
                }
                if (!utils_1.checkOptionalTime(opt.reapIntervalMillis)) {
                    throw new Error('Tarn: invalid opt.reapIntervalMillis ' + JSON.stringify(opt.reapIntervalMillis));
                }
                if (!utils_1.checkOptionalTime(opt.createRetryIntervalMillis)) {
                    throw new Error('Tarn: invalid opt.createRetryIntervalMillis ' + JSON.stringify(opt.createRetryIntervalMillis));
                }
                const allowedKeys = {
                    create: true,
                    validate: true,
                    destroy: true,
                    log: true,
                    min: true,
                    max: true,
                    acquireTimeoutMillis: true,
                    createTimeoutMillis: true,
                    destroyTimeoutMillis: true,
                    idleTimeoutMillis: true,
                    reapIntervalMillis: true,
                    createRetryIntervalMillis: true,
                    propagateCreateError: true
                };
                for (const key of Object.keys(opt)) {
                    if (!allowedKeys[key]) {
                        throw new Error(`Tarn: unsupported option opt.${key}`);
                    }
                }
                this.creator = opt.create;
                this.destroyer = opt.destroy;
                this.validate = typeof opt.validate === 'function' ? opt.validate : () => true;
                this.log = opt.log || (() => { });
                this.acquireTimeoutMillis = opt.acquireTimeoutMillis || 30000;
                this.createTimeoutMillis = opt.createTimeoutMillis || 30000;
                this.destroyTimeoutMillis = opt.destroyTimeoutMillis || 5000;
                this.idleTimeoutMillis = opt.idleTimeoutMillis || 30000;
                this.reapIntervalMillis = opt.reapIntervalMillis || 1000;
                this.createRetryIntervalMillis = opt.createRetryIntervalMillis || 200;
                this.propagateCreateError = !!opt.propagateCreateError;
                this.min = opt.min;
                this.max = opt.max;
                this.used = [];
                this.free = [];
                this.pendingCreates = [];
                this.pendingAcquires = [];
                this.pendingDestroys = [];
                this.pendingValidations = [];
                this.destroyed = false;
                this.interval = null;
                this.eventId = 1;
            }
            numUsed() {
                return this.used.length;
            }
            numFree() {
                return this.free.length;
            }
            numPendingAcquires() {
                return this.pendingAcquires.length;
            }
            numPendingValidations() {
                return this.pendingValidations.length;
            }
            numPendingCreates() {
                return this.pendingCreates.length;
            }
            acquire() {
                const eventId = this.eventId++;
                this._executeEventHandlers('acquireRequest', eventId);
                const pendingAcquire = new PendingOperation_1.PendingOperation(this.acquireTimeoutMillis);
                this.pendingAcquires.push(pendingAcquire);
                pendingAcquire.promise = pendingAcquire.promise.then(resource => {
                    this._executeEventHandlers('acquireSuccess', eventId, resource);
                    return resource;
                }).catch(err => {
                    this._executeEventHandlers('acquireFail', eventId, err);
                    remove(this.pendingAcquires, pendingAcquire);
                    return Promise.reject(err);
                });
                this._tryAcquireOrCreate();
                return pendingAcquire;
            }
            release(resource) {
                this._executeEventHandlers('release', resource);
                for (let i = 0, l = this.used.length; i < l; ++i) {
                    const used = this.used[i];
                    if (used.resource === resource) {
                        this.used.splice(i, 1);
                        this.free.push(used.resolve());
                        this._tryAcquireOrCreate();
                        return true;
                    }
                }
                return false;
            }
            isEmpty() {
                return [this.numFree(), this.numUsed(), this.numPendingAcquires(), this.numPendingValidations(), this.numPendingCreates()].reduce((total, value) => total + value) === 0;
            }
            check() {
                const timestamp = utils_1.now();
                const newFree = [];
                const minKeep = this.min - this.used.length;
                const maxDestroy = this.free.length - minKeep;
                let numDestroyed = 0;
                this.free.forEach(free => {
                    if (utils_1.duration(timestamp, free.timestamp) >= this.idleTimeoutMillis && numDestroyed < maxDestroy) {
                        numDestroyed++;
                        this._destroy(free.resource);
                    }
                    else {
                        newFree.push(free);
                    }
                });
                this.free = newFree;
                if (this.isEmpty()) {
                    this._stopReaping();
                }
            }
            destroy() {
                const eventId = this.eventId++;
                this._executeEventHandlers('poolDestroyRequest', eventId);
                this._stopReaping();
                this.destroyed = true;
                return utils_1.reflect(Promise.all(this.pendingCreates.map(create => utils_1.reflect(create.promise))).then(() => {
                    return new Promise((resolve, reject) => {
                        const interval = setInterval(() => {
                            if (this.numPendingValidations() === 0) {
                                timers_1.clearInterval(interval);
                                resolve();
                            }
                        }, 100);
                    });
                }).then(() => {
                    return Promise.all(this.used.map(used => utils_1.reflect(used.promise)));
                }).then(() => {
                    return Promise.all(this.pendingAcquires.map(acquire => {
                        acquire.abort();
                        return utils_1.reflect(acquire.promise);
                    }));
                }).then(() => {
                    return Promise.all(this.free.map(free => utils_1.reflect(this._destroy(free.resource))));
                }).then(() => {
                    return Promise.all(this.pendingDestroys.map(pd => pd.promise));
                }).then(() => {
                    this.free = [];
                    this.pendingAcquires = [];
                })).then(res => {
                    this._executeEventHandlers('poolDestroySuccess', eventId);
                    this.emitter.removeAllListeners();
                    return res;
                });
            }
            on(event, listener) {
                this.emitter.on(event, listener);
            }
            removeListener(event, listener) {
                this.emitter.removeListener(event, listener);
            }
            removeAllListeners(event) {
                this.emitter.removeAllListeners(event);
            }
            _tryAcquireOrCreate() {
                if (this.destroyed) {
                    return;
                }
                if (this._hasFreeResources()) {
                    this._doAcquire();
                }
                else if (this._shouldCreateMoreResources()) {
                    this._doCreate();
                }
            }
            _hasFreeResources() {
                return this.free.length > 0;
            }
            _doAcquire() {
                while (this._canAcquire()) {
                    const pendingAcquire = this.pendingAcquires.shift();
                    const free = this.free.pop();
                    if (free === undefined || pendingAcquire === undefined) {
                        const errMessage = 'this.free was empty while trying to acquire resource';
                        this.log(`Tarn: ${errMessage}`, 'warn');
                        throw new Error(`Internal error, should never happen. ${errMessage}`);
                    }
                    this.pendingValidations.push(pendingAcquire);
                    this.used.push(free);
                    const abortAbleValidation = new PendingOperation_1.PendingOperation(this.acquireTimeoutMillis);
                    pendingAcquire.promise.catch(err => {
                        abortAbleValidation.abort();
                    });
                    abortAbleValidation.promise.catch(err => {
                        this.log('Tarn: resource validator threw an exception ' + err.stack, 'warn');
                        return false;
                    }).then(validationSuccess => {
                        try {
                            if (validationSuccess) {
                                this._startReaping();
                                pendingAcquire.resolve(free.resource);
                            }
                            else {
                                remove(this.used, free);
                                this._destroy(free.resource);
                                if (!pendingAcquire.isRejected) {
                                    this.pendingAcquires.unshift(pendingAcquire);
                                }
                                setTimeout(() => {
                                    this._tryAcquireOrCreate();
                                }, 0);
                            }
                        }
                        finally {
                            remove(this.pendingValidations, pendingAcquire);
                        }
                    });
                    this._validateResource(free.resource).then(validationSuccess => {
                        abortAbleValidation.resolve(validationSuccess);
                    }).catch(err => {
                        abortAbleValidation.reject(err);
                    });
                }
            }
            _canAcquire() {
                return this.free.length > 0 && this.pendingAcquires.length > 0;
            }
            _validateResource(resource) {
                try {
                    return Promise.resolve(this.validate(resource));
                }
                catch (err) {
                    return Promise.reject(err);
                }
            }
            _shouldCreateMoreResources() {
                return this.used.length + this.pendingCreates.length < this.max && this.pendingCreates.length < this.pendingAcquires.length;
            }
            _doCreate() {
                const pendingAcquiresBeforeCreate = this.pendingAcquires.slice();
                const pendingCreate = this._create();
                pendingCreate.promise.then(() => {
                    this._tryAcquireOrCreate();
                    return null;
                }).catch(err => {
                    if (this.propagateCreateError && this.pendingAcquires.length !== 0) {
                        this.pendingAcquires[0].reject(err);
                    }
                    pendingAcquiresBeforeCreate.forEach(pendingAcquire => {
                        pendingAcquire.possibleTimeoutCause = err;
                    });
                    utils_1.delay(this.createRetryIntervalMillis).then(() => this._tryAcquireOrCreate());
                });
            }
            _create() {
                const eventId = this.eventId++;
                this._executeEventHandlers('createRequest', eventId);
                const pendingCreate = new PendingOperation_1.PendingOperation(this.createTimeoutMillis);
                pendingCreate.promise = pendingCreate.promise.catch(err => {
                    remove(this.pendingCreates, pendingCreate);
                    throw err;
                });
                this.pendingCreates.push(pendingCreate);
                callbackOrPromise(this.creator).then(resource => {
                    if (pendingCreate.isRejected) {
                        this.destroyer(resource);
                        return null;
                    }
                    remove(this.pendingCreates, pendingCreate);
                    this.free.push(new Resource_1.Resource(resource));
                    pendingCreate.resolve(resource);
                    this._executeEventHandlers('createSuccess', eventId, resource);
                    return null;
                }).catch(err => {
                    if (pendingCreate.isRejected) {
                        return null;
                    }
                    remove(this.pendingCreates, pendingCreate);
                    pendingCreate.reject(err);
                    this._executeEventHandlers('createFail', eventId, err);
                    return null;
                });
                return pendingCreate;
            }
            _destroy(resource) {
                const eventId = this.eventId++;
                this._executeEventHandlers('destroyRequest', eventId, resource);
                const pendingDestroy = new PendingOperation_1.PendingOperation(this.destroyTimeoutMillis);
                const retVal = Promise.resolve().then(() => this.destroyer(resource));
                retVal.then(() => {
                    pendingDestroy.resolve(resource);
                }).catch(err => {
                    pendingDestroy.reject(err);
                });
                this.pendingDestroys.push(pendingDestroy);
                return pendingDestroy.promise.then(res => {
                    this._executeEventHandlers('destroySuccess', eventId, resource);
                    return res;
                }).catch(err => this._logDestroyerError(eventId, resource, err)).then(res => {
                    const index = this.pendingDestroys.findIndex(pd => pd === pendingDestroy);
                    this.pendingDestroys.splice(index, 1);
                    return res;
                });
            }
            _logDestroyerError(eventId, resource, err) {
                this._executeEventHandlers('destroyFail', eventId, resource, err);
                this.log('Tarn: resource destroyer threw an exception ' + err.stack, 'warn');
            }
            _startReaping() {
                if (!this.interval) {
                    this._executeEventHandlers('startReaping');
                    this.interval = setInterval(() => this.check(), this.reapIntervalMillis);
                }
            }
            _stopReaping() {
                if (this.interval !== null) {
                    this._executeEventHandlers('stopReaping');
                    timers_1.clearInterval(this.interval);
                }
                this.interval = null;
            }
            _executeEventHandlers(eventName, ...args) {
                const listeners = this.emitter.listeners(eventName);
                listeners.forEach(listener => {
                    try {
                        listener(...args);
                    }
                    catch (err) {
                        this.log(`Tarn: event handler "${eventName}" threw an exception ${err.stack}`, 'warn');
                    }
                });
            }
        }
        exports.Pool = Pool;
        function remove(arr, item) {
            const idx = arr.indexOf(item);
            if (idx === -1) {
                return false;
            }
            else {
                arr.splice(idx, 1);
                return true;
            }
        }
        function callbackOrPromise(func) {
            return new Promise((resolve, reject) => {
                const callback = (err, resource) => {
                    if (err) {
                        reject(err);
                    }
                    else {
                        resolve(resource);
                    }
                };
                utils_1.tryPromise(() => func(callback)).then(res => {
                    if (res) {
                        resolve(res);
                    }
                }).catch(err => {
                    reject(err);
                });
            });
        }
        return exports;
    }
    exports_219("dew", dew);
    return {
        setters: [
            function (PendingOperation_dew_js_1_1) {
                PendingOperation_dew_js_1 = PendingOperation_dew_js_1_1;
            },
            function (Resource_dew_js_1_1) {
                Resource_dew_js_1 = Resource_dew_js_1_1;
            },
            function (utils_dew_js_3_1) {
                utils_dew_js_3 = utils_dew_js_3_1;
            },
            function (events_js_6_1) {
                events_js_6 = events_js_6_1;
            },
            function (timers_js_1_1) {
                timers_js_1 = timers_js_1_1;
            }
        ],
        execute: function () {
            ;
            ;
            exports = {}, _dewExec = false;
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/tarn@3.0.0/dist/tarn.dew", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/tarn@3.0.0/dist/Pool.dew", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/tarn@3.0.0/dist/TimeoutError.dew"], function (exports_220, context_220) {
    "use strict";
    var Pool_dew_js_1, TimeoutError_dew_js_2, exports, _dewExec;
    var __moduleName = context_220 && context_220.id;
    function dew() {
        if (_dewExec)
            return exports;
        _dewExec = true;
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        const Pool_1 = Pool_dew_js_1.dew();
        exports.Pool = Pool_1.Pool;
        const TimeoutError_1 = TimeoutError_dew_js_2.dew();
        exports.TimeoutError = TimeoutError_1.TimeoutError;
        exports = {
            Pool: Pool_1.Pool,
            TimeoutError: TimeoutError_1.TimeoutError
        };
        return exports;
    }
    exports_220("dew", dew);
    return {
        setters: [
            function (Pool_dew_js_1_1) {
                Pool_dew_js_1 = Pool_dew_js_1_1;
            },
            function (TimeoutError_dew_js_2_1) {
                TimeoutError_dew_js_2 = TimeoutError_dew_js_2_1;
            }
        ],
        execute: function () {
            exports = {}, _dewExec = false;
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/tarn@3.0.0/dist/tarn", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/tarn@3.0.0/dist/tarn.dew"], function (exports_221, context_221) {
    "use strict";
    var tarn_dew_js_1;
    var __moduleName = context_221 && context_221.id;
    return {
        setters: [
            function (tarn_dew_js_1_1) {
                tarn_dew_js_1 = tarn_dew_js_1_1;
            }
        ],
        execute: function () {
            exports_221("default", tarn_dew_js_1.dew());
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/query/string", [], function (exports_222, context_222) {
    "use strict";
    var charsRegex, charsMap;
    var __moduleName = context_222 && context_222.id;
    function wrapEscape(escapeFn) {
        return function finalEscape(val, ctx = {}) {
            return escapeFn(val, finalEscape, ctx);
        };
    }
    function makeEscape(config = {}) {
        const finalEscapeDate = config.escapeDate || dateToString;
        const finalEscapeArray = config.escapeArray || arrayToList;
        const finalEscapeBuffer = config.escapeBuffer || bufferToString;
        const finalEscapeString = config.escapeString || escapeString;
        const finalEscapeObject = config.escapeObject || escapeObject;
        const finalWrap = config.wrap || wrapEscape;
        function escapeFn(val, finalEscape, ctx) {
            if (val === undefined || val === null) {
                return 'NULL';
            }
            switch (typeof val) {
                case 'boolean':
                    return val ? 'true' : 'false';
                case 'number':
                    return val + '';
                case 'object':
                    if (val instanceof Date) {
                        val = finalEscapeDate(val, finalEscape, ctx);
                    }
                    else if (Array.isArray(val)) {
                        return finalEscapeArray(val, finalEscape, ctx);
                    }
                    else if (Buffer.isBuffer(val)) {
                        return finalEscapeBuffer(val, finalEscape, ctx);
                    }
                    else {
                        return finalEscapeObject(val, finalEscape, ctx);
                    }
            }
            return finalEscapeString(val, finalEscape, ctx);
        }
        return finalWrap ? finalWrap(escapeFn) : escapeFn;
    }
    exports_222("makeEscape", makeEscape);
    function escapeObject(val, finalEscape, ctx) {
        if (val && typeof val.toSQL === 'function') {
            return val.toSQL(ctx);
        }
        else {
            return JSON.stringify(val);
        }
    }
    exports_222("escapeObject", escapeObject);
    function arrayToList(array, finalEscape, ctx) {
        let sql = '';
        for (let i = 0; i < array.length; i++) {
            const val = array[i];
            if (Array.isArray(val)) {
                sql +=
                    (i === 0 ? '' : ', ') + '(' + arrayToList(val, finalEscape, ctx) + ')';
            }
            else {
                sql += (i === 0 ? '' : ', ') + finalEscape(val, ctx);
            }
        }
        return sql;
    }
    exports_222("arrayToList", arrayToList);
    function bufferToString(buffer) {
        return 'X' + escapeString(buffer.toString('hex'));
    }
    exports_222("bufferToString", bufferToString);
    function escapeString(val, finalEscape, ctx) {
        let chunkIndex = (charsRegex.lastIndex = 0);
        let escapedVal = '';
        let match;
        while ((match = charsRegex.exec(val))) {
            escapedVal += val.slice(chunkIndex, match.index) + charsMap[match[0]];
            chunkIndex = charsRegex.lastIndex;
        }
        if (chunkIndex === 0) {
            return "'" + val + "'";
        }
        if (chunkIndex < val.length) {
            return "'" + escapedVal + val.slice(chunkIndex) + "'";
        }
        return "'" + escapedVal + "'";
    }
    exports_222("escapeString", escapeString);
    function dateToString(date, finalEscape, ctx = {}) {
        const timeZone = ctx.timeZone || 'local';
        const dt = new Date(date);
        let year;
        let month;
        let day;
        let hour;
        let minute;
        let second;
        let millisecond;
        if (timeZone === 'local') {
            year = dt.getFullYear();
            month = dt.getMonth() + 1;
            day = dt.getDate();
            hour = dt.getHours();
            minute = dt.getMinutes();
            second = dt.getSeconds();
            millisecond = dt.getMilliseconds();
        }
        else {
            const tz = convertTimezone(timeZone);
            if (tz !== false && tz !== 0) {
                dt.setTime(dt.getTime() + tz * 60000);
            }
            year = dt.getUTCFullYear();
            month = dt.getUTCMonth() + 1;
            day = dt.getUTCDate();
            hour = dt.getUTCHours();
            minute = dt.getUTCMinutes();
            second = dt.getUTCSeconds();
            millisecond = dt.getUTCMilliseconds();
        }
        return (zeroPad(year, 4) +
            '-' +
            zeroPad(month, 2) +
            '-' +
            zeroPad(day, 2) +
            ' ' +
            zeroPad(hour, 2) +
            ':' +
            zeroPad(minute, 2) +
            ':' +
            zeroPad(second, 2) +
            '.' +
            zeroPad(millisecond, 3));
    }
    exports_222("dateToString", dateToString);
    function zeroPad(number, length) {
        number = number.toString();
        while (number.length < length) {
            number = '0' + number;
        }
        return number;
    }
    function convertTimezone(tz) {
        if (tz === 'Z') {
            return 0;
        }
        const m = tz.match(/([+\-\s])(\d\d):?(\d\d)?/);
        if (m) {
            return ((m[1] == '-' ? -1 : 1) *
                (parseInt(m[2], 10) + (m[3] ? parseInt(m[3], 10) : 0) / 60) *
                60);
        }
        return false;
    }
    return {
        setters: [],
        execute: function () {
            exports_222("charsRegex", charsRegex = /[\0\b\t\n\r\x1a"'\\]/g);
            exports_222("charsMap", charsMap = {
                '\0': '\\0',
                '\b': '\\b',
                '\t': '\\t',
                '\n': '\\n',
                '\r': '\\r',
                '\x1a': '\\Z',
                '"': '\\"',
                "'": "\\'",
                '\\': '\\\\',
            });
            exports_222("default", {
                arrayToList,
                bufferToString,
                dateToString,
                escapeString,
                charsRegex,
                charsMap,
                escapeObject,
                makeEscape,
            });
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/colors/colors", [], function (exports_223, context_223) {
    "use strict";
    var noColor, enabled;
    var __moduleName = context_223 && context_223.id;
    function setColorEnabled(value) {
        if (noColor) {
            return;
        }
        enabled = value;
    }
    exports_223("setColorEnabled", setColorEnabled);
    function getColorEnabled() {
        return enabled;
    }
    exports_223("getColorEnabled", getColorEnabled);
    function code(open, close) {
        return {
            open: `\x1b[${open.join(";")}m`,
            close: `\x1b[${close}m`,
            regexp: new RegExp(`\\x1b\\[${close}m`, "g"),
        };
    }
    function run(str, code) {
        return enabled
            ? `${code.open}${str.replace(code.regexp, code.open)}${code.close}`
            : str;
    }
    function reset(str) {
        return run(str, code([0], 0));
    }
    exports_223("reset", reset);
    function bold(str) {
        return run(str, code([1], 22));
    }
    exports_223("bold", bold);
    function dim(str) {
        return run(str, code([2], 22));
    }
    exports_223("dim", dim);
    function italic(str) {
        return run(str, code([3], 23));
    }
    exports_223("italic", italic);
    function underline(str) {
        return run(str, code([4], 24));
    }
    exports_223("underline", underline);
    function inverse(str) {
        return run(str, code([7], 27));
    }
    exports_223("inverse", inverse);
    function hidden(str) {
        return run(str, code([8], 28));
    }
    exports_223("hidden", hidden);
    function strikethrough(str) {
        return run(str, code([9], 29));
    }
    exports_223("strikethrough", strikethrough);
    function black(str) {
        return run(str, code([30], 39));
    }
    exports_223("black", black);
    function red(str) {
        return run(str, code([31], 39));
    }
    exports_223("red", red);
    function green(str) {
        return run(str, code([32], 39));
    }
    exports_223("green", green);
    function yellow(str) {
        return run(str, code([33], 39));
    }
    exports_223("yellow", yellow);
    function blue(str) {
        return run(str, code([34], 39));
    }
    exports_223("blue", blue);
    function magenta(str) {
        return run(str, code([35], 39));
    }
    exports_223("magenta", magenta);
    function cyan(str) {
        return run(str, code([36], 39));
    }
    exports_223("cyan", cyan);
    function white(str) {
        return run(str, code([37], 39));
    }
    exports_223("white", white);
    function gray(str) {
        return run(str, code([90], 39));
    }
    exports_223("gray", gray);
    function bgBlack(str) {
        return run(str, code([40], 49));
    }
    exports_223("bgBlack", bgBlack);
    function bgRed(str) {
        return run(str, code([41], 49));
    }
    exports_223("bgRed", bgRed);
    function bgGreen(str) {
        return run(str, code([42], 49));
    }
    exports_223("bgGreen", bgGreen);
    function bgYellow(str) {
        return run(str, code([43], 49));
    }
    exports_223("bgYellow", bgYellow);
    function bgBlue(str) {
        return run(str, code([44], 49));
    }
    exports_223("bgBlue", bgBlue);
    function bgMagenta(str) {
        return run(str, code([45], 49));
    }
    exports_223("bgMagenta", bgMagenta);
    function bgCyan(str) {
        return run(str, code([46], 49));
    }
    exports_223("bgCyan", bgCyan);
    function bgWhite(str) {
        return run(str, code([47], 49));
    }
    exports_223("bgWhite", bgWhite);
    function clampAndTruncate(n, max = 255, min = 0) {
        return Math.trunc(Math.max(Math.min(n, max), min));
    }
    function rgb8(str, color) {
        return run(str, code([38, 5, clampAndTruncate(color)], 39));
    }
    exports_223("rgb8", rgb8);
    function bgRgb8(str, color) {
        return run(str, code([48, 5, clampAndTruncate(color)], 49));
    }
    exports_223("bgRgb8", bgRgb8);
    function rgb24(str, color) {
        return run(str, code([
            38,
            2,
            clampAndTruncate(color.r),
            clampAndTruncate(color.g),
            clampAndTruncate(color.b),
        ], 39));
    }
    exports_223("rgb24", rgb24);
    function bgRgb24(str, color) {
        return run(str, code([
            48,
            2,
            clampAndTruncate(color.r),
            clampAndTruncate(color.g),
            clampAndTruncate(color.b),
        ], 49));
    }
    exports_223("bgRgb24", bgRgb24);
    return {
        setters: [],
        execute: function () {
            noColor = Deno.noColor;
            enabled = !noColor;
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/logger", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/colors/colors", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/util", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index"], function (exports_224, context_224) {
    "use strict";
    var colors, util_js_6, index_js_23, isFunction, isString, Logger;
    var __moduleName = context_224 && context_224.id;
    function resolveIsEnabledColors(enableColorsParam) {
        if (enableColorsParam != null) {
            return enableColorsParam;
        }
        return false;
    }
    return {
        setters: [
            function (colors_1) {
                colors = colors_1;
            },
            function (util_js_6_1) {
                util_js_6 = util_js_6_1;
            },
            function (index_js_23_1) {
                index_js_23 = index_js_23_1;
            }
        ],
        execute: function () {
            isFunction = index_js_23.default.isFunction;
            isString = index_js_23.default.isString;
            Logger = class Logger {
                constructor(config) {
                    const { log: { debug, warn, error, deprecate, inspectionDepth, enableColors, } = {}, } = config;
                    this._inspectionDepth = inspectionDepth || 5;
                    this._enableColors = resolveIsEnabledColors(enableColors);
                    this._debug = debug;
                    this._warn = warn;
                    this._error = error;
                    this._deprecate = deprecate;
                }
                _log(message, userFn, colorFn) {
                    if (userFn != null && !isFunction(userFn)) {
                        throw new TypeError('Extensions to knex logger must be functions!');
                    }
                    if (isFunction(userFn)) {
                        userFn(message);
                        return;
                    }
                    if (!isString(message)) {
                        message = util_js_6.inspect(message, {
                            depth: this._inspectionDepth,
                            colors: this._enableColors,
                        });
                    }
                    console.log(colorFn ? colorFn(message) : message);
                }
                debug(message) {
                    this._log(message, this._debug);
                }
                warn(message) {
                    this._log(message, this._warn, colors.yellow);
                }
                error(message) {
                    this._log(message, this._error, colors.red);
                }
                deprecate(method, alternative) {
                    const message = `${method} is deprecated, please use ${alternative}`;
                    this._log(message, this._deprecate, colors.yellow);
                }
            };
            exports_224("default", Logger);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/client", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/raw", "https://raw.githubusercontent.com/denjucks/dex/master/lib/ref", "https://raw.githubusercontent.com/denjucks/dex/master/lib/runner", "https://raw.githubusercontent.com/denjucks/dex/master/lib/formatter", "https://raw.githubusercontent.com/denjucks/dex/master/lib/transaction", "https://raw.githubusercontent.com/denjucks/dex/master/lib/query/builder", "https://raw.githubusercontent.com/denjucks/dex/master/lib/query/compiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/schema/builder", "https://raw.githubusercontent.com/denjucks/dex/master/lib/schema/compiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/schema/tablebuilder", "https://raw.githubusercontent.com/denjucks/dex/master/lib/schema/tablecompiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/schema/columnbuilder", "https://raw.githubusercontent.com/denjucks/dex/master/lib/schema/columncompiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/tarn@3.0.0/dist/tarn", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/events", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/util", "https://raw.githubusercontent.com/denjucks/dex/master/lib/query/string", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/logger", "https://raw.githubusercontent.com/denjucks/dex/master/lib/util/timeout", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/debug@4.1.1/src/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/constants"], function (exports_225, context_225) {
    "use strict";
    var raw_js_6, ref_js_1, runner_js_1, formatter_js_1, transaction_js_1, builder_js_3, compiler_js_1, builder_js_4, compiler_js_2, tablebuilder_js_1, tablecompiler_js_1, columnbuilder_js_1, columncompiler_js_1, tarn_js_1, Pool, TimeoutError, inherits_js_5, events_js_7, util_js_7, string_js_1, index_js_24, cloneDeep, defaults, uniqueId, logger_js_1, timeout_js_4, index_js_25, debug, _debugQuery, debugBindings, debugQuery, constants_js_3;
    var __moduleName = context_225 && context_225.id;
    function Client(config = {}) {
        this.config = config;
        this.logger = new logger_js_1.default(config);
        if (this.dialect && !this.config.client) {
            this.logger.warn(`Using 'this.dialect' to identify the client is deprecated and support for it will be removed in the future. Please use configuration option 'client' instead.`);
        }
        const dbClient = this.config.client || this.dialect;
        if (!dbClient) {
            throw new Error(`knex: Required configuration option 'client' is missing.`);
        }
        if (config.version) {
            this.version = config.version;
        }
        if (config.connection && config.connection instanceof Function) {
            this.connectionConfigProvider = config.connection;
            this.connectionConfigExpirationChecker = () => true;
        }
        else {
            this.connectionSettings = cloneDeep(config.connection || {});
            this.connectionConfigExpirationChecker = null;
        }
        if (this.driverName && config.connection) {
            this.initializeDriver();
            if (!config.pool || (config.pool && config.pool.max !== 0)) {
                this.initializePool(config);
            }
        }
        this.valueForUndefined = this.raw('DEFAULT');
        if (config.useNullAsDefault) {
            this.valueForUndefined = null;
        }
    }
    return {
        setters: [
            function (raw_js_6_1) {
                raw_js_6 = raw_js_6_1;
            },
            function (ref_js_1_1) {
                ref_js_1 = ref_js_1_1;
            },
            function (runner_js_1_1) {
                runner_js_1 = runner_js_1_1;
            },
            function (formatter_js_1_1) {
                formatter_js_1 = formatter_js_1_1;
            },
            function (transaction_js_1_1) {
                transaction_js_1 = transaction_js_1_1;
            },
            function (builder_js_3_1) {
                builder_js_3 = builder_js_3_1;
            },
            function (compiler_js_1_1) {
                compiler_js_1 = compiler_js_1_1;
            },
            function (builder_js_4_1) {
                builder_js_4 = builder_js_4_1;
            },
            function (compiler_js_2_1) {
                compiler_js_2 = compiler_js_2_1;
            },
            function (tablebuilder_js_1_1) {
                tablebuilder_js_1 = tablebuilder_js_1_1;
            },
            function (tablecompiler_js_1_1) {
                tablecompiler_js_1 = tablecompiler_js_1_1;
            },
            function (columnbuilder_js_1_1) {
                columnbuilder_js_1 = columnbuilder_js_1_1;
            },
            function (columncompiler_js_1_1) {
                columncompiler_js_1 = columncompiler_js_1_1;
            },
            function (tarn_js_1_1) {
                tarn_js_1 = tarn_js_1_1;
            },
            function (inherits_js_5_1) {
                inherits_js_5 = inherits_js_5_1;
            },
            function (events_js_7_1) {
                events_js_7 = events_js_7_1;
            },
            function (util_js_7_1) {
                util_js_7 = util_js_7_1;
            },
            function (string_js_1_1) {
                string_js_1 = string_js_1_1;
            },
            function (index_js_24_1) {
                index_js_24 = index_js_24_1;
            },
            function (logger_js_1_1) {
                logger_js_1 = logger_js_1_1;
            },
            function (timeout_js_4_1) {
                timeout_js_4 = timeout_js_4_1;
            },
            function (index_js_25_1) {
                index_js_25 = index_js_25_1;
            },
            function (constants_js_3_1) {
                constants_js_3 = constants_js_3_1;
            }
        ],
        execute: function () {
            Pool = tarn_js_1.default.Pool;
            TimeoutError = tarn_js_1.default.TimeoutError;
            cloneDeep = index_js_24.default.cloneDeep;
            defaults = index_js_24.default.defaults;
            uniqueId = index_js_24.default.uniqueId;
            debug = index_js_25.default('knex:client');
            _debugQuery = index_js_25.default('knex:query');
            debugBindings = index_js_25.default('knex:bindings');
            debugQuery = (sql, txId) => _debugQuery(sql.replace(/%/g, '%%'), txId);
            inherits_js_5.default(Client, events_js_7.EventEmitter);
            Object.assign(Client.prototype, {
                formatter(builder) {
                    return new formatter_js_1.default(this, builder);
                },
                queryBuilder() {
                    return new builder_js_3.default(this);
                },
                queryCompiler(builder) {
                    return new compiler_js_1.default(this, builder);
                },
                schemaBuilder() {
                    return new builder_js_4.default(this);
                },
                schemaCompiler(builder) {
                    return new compiler_js_2.default(this, builder);
                },
                tableBuilder(type, tableName, fn) {
                    return new tablebuilder_js_1.default(this, type, tableName, fn);
                },
                tableCompiler(tableBuilder) {
                    return new tablecompiler_js_1.default(this, tableBuilder);
                },
                columnBuilder(tableBuilder, type, args) {
                    return new columnbuilder_js_1.default(this, tableBuilder, type, args);
                },
                columnCompiler(tableBuilder, columnBuilder) {
                    return new columncompiler_js_1.default(this, tableBuilder, columnBuilder);
                },
                runner(builder) {
                    return new runner_js_1.default(this, builder);
                },
                transaction(container, config, outerTx) {
                    return new transaction_js_1.default(this, container, config, outerTx);
                },
                raw() {
                    return new raw_js_6.default(this).set(...arguments);
                },
                ref() {
                    return new ref_js_1.default(this, ...arguments);
                },
                _formatQuery(sql, bindings, timeZone) {
                    bindings = bindings == null ? [] : [].concat(bindings);
                    let index = 0;
                    return sql.replace(/\\?\?/g, (match) => {
                        if (match === '\\?') {
                            return '?';
                        }
                        if (index === bindings.length) {
                            return match;
                        }
                        const value = bindings[index++];
                        return this._escapeBinding(value, { timeZone });
                    });
                },
                _escapeBinding: string_js_1.makeEscape({
                    escapeString(str) {
                        return `'${str.replace(/'/g, "''")}'`;
                    },
                }),
                query(connection, obj) {
                    if (typeof obj === 'string')
                        obj = { sql: obj };
                    obj.bindings = this.prepBindings(obj.bindings);
                    const { __knexUid, __knexTxId } = connection;
                    this.emit('query', Object.assign({ __knexUid, __knexTxId }, obj));
                    debugQuery(obj.sql, __knexTxId);
                    debugBindings(obj.bindings, __knexTxId);
                    obj.sql = this.positionBindings(obj.sql);
                    return this._query(connection, obj).catch((err) => {
                        err.message =
                            this._formatQuery(obj.sql, obj.bindings) + ' - ' + err.message;
                        this.emit('query-error', err, Object.assign({ __knexUid, __knexTxId }, obj));
                        throw err;
                    });
                },
                stream(connection, obj, stream, options) {
                    if (typeof obj === 'string')
                        obj = { sql: obj };
                    obj.bindings = this.prepBindings(obj.bindings);
                    const { __knexUid, __knexTxId } = connection;
                    this.emit('query', Object.assign({ __knexUid, __knexTxId }, obj));
                    debugQuery(obj.sql, __knexTxId);
                    debugBindings(obj.bindings, __knexTxId);
                    obj.sql = this.positionBindings(obj.sql);
                    return this._stream(connection, obj, stream, options);
                },
                prepBindings(bindings) {
                    return bindings;
                },
                positionBindings(sql) {
                    return sql;
                },
                postProcessResponse(resp, queryContext) {
                    if (this.config.postProcessResponse) {
                        return this.config.postProcessResponse(resp, queryContext);
                    }
                    return resp;
                },
                wrapIdentifier(value, queryContext) {
                    return this.customWrapIdentifier(value, this.wrapIdentifierImpl, queryContext);
                },
                customWrapIdentifier(value, origImpl, queryContext) {
                    if (this.config.wrapIdentifier) {
                        return this.config.wrapIdentifier(value, origImpl, queryContext);
                    }
                    return origImpl(value);
                },
                wrapIdentifierImpl(value) {
                    return value !== '*' ? `"${value.replace(/"/g, '""')}"` : '*';
                },
                initializeDriver() {
                    try {
                        this.driver = this._driver();
                    }
                    catch (e) {
                        const message = `Knex: run\n$ npm install ${this.driverName} --save`;
                        this.logger.error(`${message}\n${e.message}\n${e.stack}`);
                        throw new Error(`${message}\n${e.message}`);
                    }
                },
                poolDefaults() {
                    return { min: 2, max: 10, propagateCreateError: true };
                },
                getPoolSettings(poolConfig) {
                    poolConfig = defaults({}, poolConfig, this.poolDefaults());
                    constants_js_3.POOL_CONFIG_OPTIONS.forEach((option) => {
                        if (option in poolConfig) {
                            this.logger.warn([
                                `Pool config option "${option}" is no longer supported.`,
                                `See https://github.com/Vincit/tarn.js for possible pool config options.`,
                            ].join(' '));
                        }
                    });
                    const timeouts = [
                        this.config.acquireConnectionTimeout || 60000,
                        poolConfig.acquireTimeoutMillis,
                    ].filter((timeout) => timeout !== undefined);
                    poolConfig.acquireTimeoutMillis = Math.min(...timeouts);
                    const updatePoolConnectionSettingsFromProvider = async () => {
                        if (!this.connectionConfigProvider) {
                            return;
                        }
                        if (!this.connectionConfigExpirationChecker ||
                            !this.connectionConfigExpirationChecker()) {
                            return;
                        }
                        const providerResult = await this.connectionConfigProvider();
                        if (providerResult.expirationChecker) {
                            this.connectionConfigExpirationChecker =
                                providerResult.expirationChecker;
                            delete providerResult.expirationChecker;
                        }
                        else {
                            this.connectionConfigExpirationChecker = null;
                        }
                        this.connectionSettings = providerResult;
                    };
                    return Object.assign(poolConfig, {
                        create: async () => {
                            await updatePoolConnectionSettingsFromProvider();
                            const connection = await this.acquireRawConnection();
                            connection.__knexUid = uniqueId('__knexUid');
                            if (poolConfig.afterCreate) {
                                await util_js_7.promisify(poolConfig.afterCreate)(connection);
                            }
                            return connection;
                        },
                        destroy: (connection) => {
                            if (connection !== void 0) {
                                return this.destroyRawConnection(connection);
                            }
                        },
                        validate: (connection) => {
                            if (connection.__knex__disposed) {
                                this.logger.warn(`Connection Error: ${connection.__knex__disposed}`);
                                return false;
                            }
                            return this.validateConnection(connection);
                        },
                    });
                },
                initializePool(config = this.config) {
                    if (this.pool) {
                        this.logger.warn('The pool has already been initialized');
                        return;
                    }
                    const tarnPoolConfig = {
                        ...this.getPoolSettings(config.pool),
                    };
                    if (tarnPoolConfig.afterCreate) {
                        delete tarnPoolConfig.afterCreate;
                    }
                    this.pool = new Pool(tarnPoolConfig);
                },
                validateConnection(connection) {
                    return true;
                },
                async acquireConnection() {
                    if (!this.pool) {
                        throw new Error('Unable to acquire a connection');
                    }
                    try {
                        const connection = await this.pool.acquire().promise;
                        debug('acquired connection from pool: %s', connection.__knexUid);
                        return connection;
                    }
                    catch (error) {
                        let convertedError = error;
                        if (error instanceof TimeoutError) {
                            convertedError = new timeout_js_4.KnexTimeoutError('Knex: Timeout acquiring a connection. The pool is probably full. ' +
                                'Are you missing a .transacting(trx) call?');
                        }
                        throw convertedError;
                    }
                },
                releaseConnection(connection) {
                    debug('releasing connection to pool: %s', connection.__knexUid);
                    const didRelease = this.pool.release(connection);
                    if (!didRelease) {
                        debug('pool refused connection: %s', connection.__knexUid);
                    }
                    return Promise.resolve();
                },
                destroy(callback) {
                    const maybeDestroy = this.pool && this.pool.destroy();
                    return Promise.resolve(maybeDestroy)
                        .then(() => {
                        this.pool = void 0;
                        if (typeof callback === 'function') {
                            callback();
                        }
                    })
                        .catch((err) => {
                        if (typeof callback === 'function') {
                            callback(err);
                        }
                        return Promise.reject(err);
                    });
                },
                database() {
                    return this.connectionSettings.database;
                },
                toString() {
                    return '[object KnexClient]';
                },
                canCancelQuery: false,
                assertCanCancelQuery() {
                    if (!this.canCancelQuery) {
                        throw new Error('Query cancelling not supported for this dialect');
                    }
                },
                cancelQuery() {
                    throw new Error('Query cancelling not supported for this dialect');
                },
            });
            exports_225("default", Client);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/punycode", [], function (exports_226, context_226) {
    "use strict";
    var t, o, n, e, r, c, s, u, a, d, h, p, decode, encode, toASCII, toUnicode, ucs2, version;
    var __moduleName = context_226 && context_226.id;
    function i(t) { throw new RangeError(r[t]); }
    function f(t, o) { const n = t.split("@"); let r = ""; n.length > 1 && (r = n[0] + "@", t = n[1]); const c = function (t, o) { const n = []; let e = t.length; for (; e--;)
        n[e] = o(t[e]); return n; }((t = t.replace(e, ".")).split("."), o).join("."); return r + c; }
    function l(t) { const o = []; let n = 0; const e = t.length; for (; n < e;) {
        const r = t.charCodeAt(n++);
        if (r >= 55296 && r <= 56319 && n < e) {
            const e = t.charCodeAt(n++);
            56320 == (64512 & e) ? o.push(((1023 & r) << 10) + (1023 & e) + 65536) : (o.push(r), n--);
        }
        else
            o.push(r);
    } return o; }
    return {
        setters: [],
        execute: function () {
            t = 2147483647, o = /^xn--/, n = /[^\0-\x7E]/, e = /[\x2E\u3002\uFF0E\uFF61]/g, r = { overflow: "Overflow: input needs wider integers to process", "not-basic": "Illegal input >= 0x80 (not a basic code point)", "invalid-input": "Invalid input" }, c = Math.floor, s = String.fromCharCode;
            u = function (t, o) { return t + 22 + 75 * (t < 26) - ((0 != o) << 5); }, a = function (t, o, n) { let e = 0; for (t = n ? c(t / 700) : t >> 1, t += c(t / o); t > 455; e += 36)
                t = c(t / 35); return c(e + 36 * t / (t + 38)); }, d = function (o) { const n = [], e = o.length; let r = 0, s = 128, f = 72, l = o.lastIndexOf("-"); l < 0 && (l = 0); for (let t = 0; t < l; ++t)
                o.charCodeAt(t) >= 128 && i("not-basic"), n.push(o.charCodeAt(t)); for (let d = l > 0 ? l + 1 : 0; d < e;) {
                let l = r;
                for (let n = 1, s = 36;; s += 36) {
                    d >= e && i("invalid-input");
                    const l = (u = o.charCodeAt(d++)) - 48 < 10 ? u - 22 : u - 65 < 26 ? u - 65 : u - 97 < 26 ? u - 97 : 36;
                    (l >= 36 || l > c((t - r) / n)) && i("overflow"), r += l * n;
                    const a = s <= f ? 1 : s >= f + 26 ? 26 : s - f;
                    if (l < a)
                        break;
                    const h = 36 - a;
                    n > c(t / h) && i("overflow"), n *= h;
                }
                const h = n.length + 1;
                f = a(r - l, h, 0 == l), c(r / h) > t - s && i("overflow"), s += c(r / h), r %= h, n.splice(r++, 0, s);
            } var u; return String.fromCodePoint(...n); }, h = function (o) { const n = []; let e = (o = l(o)).length, r = 128, f = 0, d = 72; for (const t of o)
                t < 128 && n.push(s(t)); let h = n.length, p = h; for (h && n.push("-"); p < e;) {
                let e = t;
                for (const t of o)
                    t >= r && t < e && (e = t);
                const l = p + 1;
                e - r > c((t - f) / l) && i("overflow"), f += (e - r) * l, r = e;
                for (const e of o)
                    if (e < r && ++f > t && i("overflow"), e == r) {
                        let t = f;
                        for (let o = 36;; o += 36) {
                            const e = o <= d ? 1 : o >= d + 26 ? 26 : o - d;
                            if (t < e)
                                break;
                            const r = t - e, i = 36 - e;
                            n.push(s(u(e + r % i, 0))), t = c(r / i);
                        }
                        n.push(s(u(t, 0))), d = a(f, l, p == h), f = 0, ++p;
                    }
                ++f, ++r;
            } return n.join(""); };
            p = { version: "2.1.0", ucs2: { decode: l, encode: t => String.fromCodePoint(...t) }, decode: d, encode: h, toASCII: function (t) { return f(t, (function (t) { return n.test(t) ? "xn--" + h(t) : t; })); }, toUnicode: function (t) { return f(t, (function (t) { return o.test(t) ? d(t.slice(4).toLowerCase()) : t; })); } };
            decode = p.decode;
            exports_226("decode", decode);
            encode = p.encode;
            exports_226("encode", encode);
            toASCII = p.toASCII;
            exports_226("toASCII", toASCII);
            toUnicode = p.toUnicode;
            exports_226("toUnicode", toUnicode);
            ucs2 = p.ucs2;
            exports_226("ucs2", ucs2);
            version = p.version;
            exports_226("version", version);
            exports_226("default", p);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/querystring", [], function (exports_227, context_227) {
    "use strict";
    var n, r, t, o, decode, encode, parse, stringify;
    var __moduleName = context_227 && context_227.id;
    function e(e, n) { return Object.prototype.hasOwnProperty.call(e, n); }
    return {
        setters: [],
        execute: function () {
            n = function (n, r, t, o) { r = r || "&", t = t || "="; var a = {}; if ("string" != typeof n || 0 === n.length)
                return a; var u = /\+/g; n = n.split(r); var c = 1e3; o && "number" == typeof o.maxKeys && (c = o.maxKeys); var i = n.length; c > 0 && i > c && (i = c); for (var s = 0; s < i; ++s) {
                var p, f, d, y, m = n[s].replace(u, "%20"), l = m.indexOf(t);
                l >= 0 ? (p = m.substr(0, l), f = m.substr(l + 1)) : (p = m, f = ""), d = decodeURIComponent(p), y = decodeURIComponent(f), e(a, d) ? Array.isArray(a[d]) ? a[d].push(y) : a[d] = [a[d], y] : a[d] = y;
            } return a; }, r = function (e) { switch (typeof e) {
                case "string": return e;
                case "boolean": return e ? "true" : "false";
                case "number": return isFinite(e) ? e : "";
                default: return "";
            } }, t = function (e, n, t, o) { return n = n || "&", t = t || "=", null === e && (e = void 0), "object" == typeof e ? Object.keys(e).map((function (o) { var a = encodeURIComponent(r(o)) + t; return Array.isArray(e[o]) ? e[o].map((function (e) { return a + encodeURIComponent(r(e)); })).join(n) : a + encodeURIComponent(r(e[o])); })).join(n) : o ? encodeURIComponent(r(o)) + t + encodeURIComponent(r(e)) : ""; }, o = {};
            o.decode = o.parse = n, o.encode = o.stringify = t;
            decode = o.decode;
            exports_227("decode", decode);
            encode = o.encode;
            exports_227("encode", encode);
            parse = o.parse;
            exports_227("parse", parse);
            stringify = o.stringify;
            exports_227("stringify", stringify);
            exports_227("default", o);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/url", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/punycode", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/querystring"], function (exports_228, context_228) {
    "use strict";
    var punycode_js_1, querystring_js_1, h, e, a, o, n, i, l, p, c, u, f, m, v, g, y, b, Url, format, resolve, resolveObject, URL;
    var __moduleName = context_228 && context_228.id;
    function r() { this.protocol = null, this.slashes = null, this.auth = null, this.host = null, this.port = null, this.hostname = null, this.hash = null, this.search = null, this.query = null, this.pathname = null, this.path = null, this.href = null; }
    function O(t, s, h) { if (t && a.isObject(t) && t instanceof r)
        return t; var e = new r; return e.parse(t, s, h), e; }
    return {
        setters: [
            function (punycode_js_1_1) {
                punycode_js_1 = punycode_js_1_1;
            },
            function (querystring_js_1_1) {
                querystring_js_1 = querystring_js_1_1;
            }
        ],
        execute: function () {
            h = {}, e = punycode_js_1.default, a = { isString: function (t) { return "string" == typeof t; }, isObject: function (t) { return "object" == typeof t && null !== t; }, isNull: function (t) { return null === t; }, isNullOrUndefined: function (t) { return null == t; } };
            h.parse = O, h.resolve = function (t, s) { return O(t, !1, !0).resolve(s); }, h.resolveObject = function (t, s) { return t ? O(t, !1, !0).resolveObject(s) : s; }, h.format = function (t) { a.isString(t) && (t = O(t)); return t instanceof r ? t.format() : r.prototype.format.call(t); }, h.Url = r;
            o = /^([a-z0-9.+-]+:)/i, n = /:[0-9]*$/, i = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/, l = ["{", "}", "|", "\\", "^", "`"].concat(["<", ">", '"', "`", " ", "\r", "\n", "\t"]), p = ["'"].concat(l), c = ["%", "/", "?", ";", "#"].concat(p), u = ["/", "?", "#"], f = /^[+a-z0-9A-Z_-]{0,63}$/, m = /^([+a-z0-9A-Z_-]{0,63})(.*)$/, v = { javascript: !0, "javascript:": !0 }, g = { javascript: !0, "javascript:": !0 }, y = { http: !0, https: !0, ftp: !0, gopher: !0, file: !0, "http:": !0, "https:": !0, "ftp:": !0, "gopher:": !0, "file:": !0 }, b = querystring_js_1.default;
            r.prototype.parse = function (t, s, h) { if (!a.isString(t))
                throw new TypeError("Parameter 'url' must be a string, not " + typeof t); var r = t.indexOf("?"), n = -1 !== r && r < t.indexOf("#") ? "?" : "#", l = t.split(n); l[0] = l[0].replace(/\\/g, "/"); var O = t = l.join(n); if (O = O.trim(), !h && 1 === t.split("#").length) {
                var d = i.exec(O);
                if (d)
                    return this.path = O, this.href = O, this.pathname = d[1], d[2] ? (this.search = d[2], this.query = s ? b.parse(this.search.substr(1)) : this.search.substr(1)) : s && (this.search = "", this.query = {}), this;
            } var j = o.exec(O); if (j) {
                var q = (j = j[0]).toLowerCase();
                this.protocol = q, O = O.substr(j.length);
            } if (h || j || O.match(/^\/\/[^@\/]+@[^@\/]+/)) {
                var x = "//" === O.substr(0, 2);
                !x || j && g[j] || (O = O.substr(2), this.slashes = !0);
            } if (!g[j] && (x || j && !y[j])) {
                for (var A, C, I = -1, w = 0; w < u.length; w++) {
                    -1 !== (N = O.indexOf(u[w])) && (-1 === I || N < I) && (I = N);
                }
                -1 !== (C = -1 === I ? O.lastIndexOf("@") : O.lastIndexOf("@", I)) && (A = O.slice(0, C), O = O.slice(C + 1), this.auth = decodeURIComponent(A)), I = -1;
                for (w = 0; w < c.length; w++) {
                    var N;
                    -1 !== (N = O.indexOf(c[w])) && (-1 === I || N < I) && (I = N);
                }
                -1 === I && (I = O.length), this.host = O.slice(0, I), O = O.slice(I), this.parseHost(), this.hostname = this.hostname || "";
                var U = "[" === this.hostname[0] && "]" === this.hostname[this.hostname.length - 1];
                if (!U)
                    for (var k = this.hostname.split(/\./), S = (w = 0, k.length); w < S; w++) {
                        var R = k[w];
                        if (R && !R.match(f)) {
                            for (var $ = "", z = 0, H = R.length; z < H; z++)
                                R.charCodeAt(z) > 127 ? $ += "x" : $ += R[z];
                            if (!$.match(f)) {
                                var L = k.slice(0, w), Z = k.slice(w + 1), _ = R.match(m);
                                _ && (L.push(_[1]), Z.unshift(_[2])), Z.length && (O = "/" + Z.join(".") + O), this.hostname = L.join(".");
                                break;
                            }
                        }
                    }
                this.hostname.length > 255 ? this.hostname = "" : this.hostname = this.hostname.toLowerCase(), U || (this.hostname = e.toASCII(this.hostname));
                var E = this.port ? ":" + this.port : "", P = this.hostname || "";
                this.host = P + E, this.href += this.host, U && (this.hostname = this.hostname.substr(1, this.hostname.length - 2), "/" !== O[0] && (O = "/" + O));
            } if (!v[q])
                for (w = 0, S = p.length; w < S; w++) {
                    var T = p[w];
                    if (-1 !== O.indexOf(T)) {
                        var B = encodeURIComponent(T);
                        B === T && (B = escape(T)), O = O.split(T).join(B);
                    }
                } var D = O.indexOf("#"); -1 !== D && (this.hash = O.substr(D), O = O.slice(0, D)); var F = O.indexOf("?"); if (-1 !== F ? (this.search = O.substr(F), this.query = O.substr(F + 1), s && (this.query = b.parse(this.query)), O = O.slice(0, F)) : s && (this.search = "", this.query = {}), O && (this.pathname = O), y[q] && this.hostname && !this.pathname && (this.pathname = "/"), this.pathname || this.search) {
                E = this.pathname || "";
                var G = this.search || "";
                this.path = E + G;
            } return this.href = this.format(), this; }, r.prototype.format = function () { var t = this.auth || ""; t && (t = (t = encodeURIComponent(t)).replace(/%3A/i, ":"), t += "@"); var s = this.protocol || "", h = this.pathname || "", e = this.hash || "", r = !1, o = ""; this.host ? r = t + this.host : this.hostname && (r = t + (-1 === this.hostname.indexOf(":") ? this.hostname : "[" + this.hostname + "]"), this.port && (r += ":" + this.port)), this.query && a.isObject(this.query) && Object.keys(this.query).length && (o = b.stringify(this.query)); var n = this.search || o && "?" + o || ""; return s && ":" !== s.substr(-1) && (s += ":"), this.slashes || (!s || y[s]) && !1 !== r ? (r = "//" + (r || ""), h && "/" !== h.charAt(0) && (h = "/" + h)) : r || (r = ""), e && "#" !== e.charAt(0) && (e = "#" + e), n && "?" !== n.charAt(0) && (n = "?" + n), s + r + (h = h.replace(/[?#]/g, (function (t) { return encodeURIComponent(t); }))) + (n = n.replace("#", "%23")) + e; }, r.prototype.resolve = function (t) { return this.resolveObject(O(t, !1, !0)).format(); }, r.prototype.resolveObject = function (t) { if (a.isString(t)) {
                var s = new r;
                s.parse(t, !1, !0), t = s;
            } for (var h = new r, e = Object.keys(this), o = 0; o < e.length; o++) {
                var n = e[o];
                h[n] = this[n];
            } if (h.hash = t.hash, "" === t.href)
                return h.href = h.format(), h; if (t.slashes && !t.protocol) {
                for (var i = Object.keys(t), l = 0; l < i.length; l++) {
                    var p = i[l];
                    "protocol" !== p && (h[p] = t[p]);
                }
                return y[h.protocol] && h.hostname && !h.pathname && (h.path = h.pathname = "/"), h.href = h.format(), h;
            } if (t.protocol && t.protocol !== h.protocol) {
                if (!y[t.protocol]) {
                    for (var c = Object.keys(t), u = 0; u < c.length; u++) {
                        var f = c[u];
                        h[f] = t[f];
                    }
                    return h.href = h.format(), h;
                }
                if (h.protocol = t.protocol, t.host || g[t.protocol])
                    h.pathname = t.pathname;
                else {
                    for (var m = (t.pathname || "").split("/"); m.length && !(t.host = m.shift());)
                        ;
                    t.host || (t.host = ""), t.hostname || (t.hostname = ""), "" !== m[0] && m.unshift(""), m.length < 2 && m.unshift(""), h.pathname = m.join("/");
                }
                if (h.search = t.search, h.query = t.query, h.host = t.host || "", h.auth = t.auth, h.hostname = t.hostname || t.host, h.port = t.port, h.pathname || h.search) {
                    var v = h.pathname || "", b = h.search || "";
                    h.path = v + b;
                }
                return h.slashes = h.slashes || t.slashes, h.href = h.format(), h;
            } var O = h.pathname && "/" === h.pathname.charAt(0), d = t.host || t.pathname && "/" === t.pathname.charAt(0), j = d || O || h.host && t.pathname, q = j, x = h.pathname && h.pathname.split("/") || [], A = (m = t.pathname && t.pathname.split("/") || [], h.protocol && !y[h.protocol]); if (A && (h.hostname = "", h.port = null, h.host && ("" === x[0] ? x[0] = h.host : x.unshift(h.host)), h.host = "", t.protocol && (t.hostname = null, t.port = null, t.host && ("" === m[0] ? m[0] = t.host : m.unshift(t.host)), t.host = null), j = j && ("" === m[0] || "" === x[0])), d)
                h.host = t.host || "" === t.host ? t.host : h.host, h.hostname = t.hostname || "" === t.hostname ? t.hostname : h.hostname, h.search = t.search, h.query = t.query, x = m;
            else if (m.length)
                x || (x = []), x.pop(), x = x.concat(m), h.search = t.search, h.query = t.query;
            else if (!a.isNullOrUndefined(t.search)) {
                if (A)
                    h.hostname = h.host = x.shift(), (U = !!(h.host && h.host.indexOf("@") > 0) && h.host.split("@")) && (h.auth = U.shift(), h.host = h.hostname = U.shift());
                return h.search = t.search, h.query = t.query, a.isNull(h.pathname) && a.isNull(h.search) || (h.path = (h.pathname ? h.pathname : "") + (h.search ? h.search : "")), h.href = h.format(), h;
            } if (!x.length)
                return h.pathname = null, h.search ? h.path = "/" + h.search : h.path = null, h.href = h.format(), h; for (var C = x.slice(-1)[0], I = (h.host || t.host || x.length > 1) && ("." === C || ".." === C) || "" === C, w = 0, N = x.length; N >= 0; N--)
                "." === (C = x[N]) ? x.splice(N, 1) : ".." === C ? (x.splice(N, 1), w++) : w && (x.splice(N, 1), w--); if (!j && !q)
                for (; w--; w)
                    x.unshift(".."); !j || "" === x[0] || x[0] && "/" === x[0].charAt(0) || x.unshift(""), I && "/" !== x.join("/").substr(-1) && x.push(""); var U, k = "" === x[0] || x[0] && "/" === x[0].charAt(0); A && (h.hostname = h.host = k ? "" : x.length ? x.shift() : "", (U = !!(h.host && h.host.indexOf("@") > 0) && h.host.split("@")) && (h.auth = U.shift(), h.host = h.hostname = U.shift())); return (j = j || h.host && x.length) && !k && x.unshift(""), x.length ? h.pathname = x.join("/") : (h.pathname = null, h.path = null), a.isNull(h.pathname) && a.isNull(h.search) || (h.path = (h.pathname ? h.pathname : "") + (h.search ? h.search : "")), h.auth = t.auth || h.auth, h.slashes = h.slashes || t.slashes, h.href = h.format(), h; }, r.prototype.parseHost = function () { var t = this.host, s = n.exec(t); s && (":" !== (s = s[0]) && (this.port = s.substr(1)), t = t.substr(0, t.length - s.length)), t && (this.hostname = t); };
            Url = h.Url;
            exports_228("Url", Url);
            format = h.format;
            exports_228("format", format);
            resolve = h.resolve;
            exports_228("resolve", resolve);
            resolveObject = h.resolveObject;
            exports_228("resolveObject", resolveObject);
            URL = void 0 !== URL ? URL : null;
            exports_228("URL", URL);
            exports_228("default", h);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/pg-connection-string@2.2.0/index.dew", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/process"], function (exports_229, context_229) {
    "use strict";
    var process_js_4, exports, _dewExec;
    var __moduleName = context_229 && context_229.id;
    function dew() {
        if (_dewExec)
            return exports;
        _dewExec = true;
        var url = process_js_4.default;
        function parse(str) {
            if (str.charAt(0) === '/') {
                var config = str.split(' ');
                return {
                    host: config[0],
                    database: config[1]
                };
            }
            var result = url.parse(/ |%[^a-f0-9]|%[a-f0-9][^a-f0-9]/i.test(str) ? encodeURI(str).replace(/\%25(\d\d)/g, "%$1") : str, true);
            var config = result.query;
            for (var k in config) {
                if (Array.isArray(config[k])) {
                    config[k] = config[k][config[k].length - 1];
                }
            }
            var auth = (result.auth || ':').split(':');
            config.user = auth[0];
            config.password = auth.splice(1).join(':');
            config.port = result.port;
            if (result.protocol == 'socket:') {
                config.host = decodeURI(result.pathname);
                config.database = result.query.db;
                config.client_encoding = result.query.encoding;
                return config;
            }
            if (!config.host) {
                config.host = result.hostname;
            }
            var pathname = result.pathname;
            if (!config.host && pathname && /^%2f/i.test(pathname)) {
                var pathnameSplit = pathname.split('/');
                config.host = decodeURIComponent(pathnameSplit[0]);
                pathname = pathnameSplit.splice(1).join('/');
            }
            if (pathname && pathname.charAt(0) === '/') {
                pathname = pathname.slice(1) || null;
            }
            config.database = pathname && decodeURI(pathname);
            if (config.ssl === 'true' || config.ssl === '1') {
                config.ssl = true;
            }
            if (config.ssl === '0') {
                config.ssl = false;
            }
            if (config.sslcert || config.sslkey || config.sslrootcert) {
                config.ssl = {};
            }
            if (config.sslcert) {
                config.ssl.cert = new TextDecoder.decode(Deno.readFileSync(config.sslcert));
            }
            if (config.sslkey) {
                config.ssl.key = new TextDecoder.decode(Deno.readFileSync(config.sslkey));
            }
            if (config.sslrootcert) {
                config.ssl.ca = new TextDecoder.decode(Deno.readFileSync(config.sslrootcert));
            }
            return config;
        }
        exports = parse;
        parse.parse = parse;
        return exports;
    }
    exports_229("dew", dew);
    return {
        setters: [
            function (process_js_4_1) {
                process_js_4 = process_js_4_1;
            }
        ],
        execute: function () {
            exports = {}, _dewExec = false;
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/pg-connection-string@2.2.0/index", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/pg-connection-string@2.2.0/index.dew"], function (exports_230, context_230) {
    "use strict";
    var index_dew_js_4;
    var __moduleName = context_230 && context_230.id;
    return {
        setters: [
            function (index_dew_js_4_1) {
                index_dew_js_4 = index_dew_js_4_1;
            }
        ],
        execute: function () {
            exports_230("default", index_dew_js_4.dew());
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/util/parse-connection", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/url", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/pg-connection-string@2.2.0/index"], function (exports_231, context_231) {
    "use strict";
    var url_js_1, index_js_26, parsePG, isWindows;
    var __moduleName = context_231 && context_231.id;
    function parseConnectionString(str) {
        const parsed = url_js_1.default.parse(str, true);
        let { protocol } = parsed;
        const isDriveLetter = isWindows && protocol && protocol.length === 2;
        if (protocol === null || isDriveLetter) {
            return {
                client: 'sqlite3',
                connection: {
                    filename: str,
                },
            };
        }
        if (protocol.slice(-1) === ':') {
            protocol = protocol.slice(0, -1);
        }
        const isPG = ['postgresql', 'postgres'].includes(protocol);
        return {
            client: protocol,
            connection: isPG ? parsePG(str) : connectionObject(parsed),
        };
    }
    exports_231("default", parseConnectionString);
    function connectionObject(parsed) {
        const connection = {};
        let db = parsed.pathname;
        if (db[0] === '/') {
            db = db.slice(1);
        }
        connection.database = db;
        if (parsed.hostname) {
            if (parsed.protocol.indexOf('mssql') === 0) {
                connection.server = parsed.hostname;
            }
            else {
                connection.host = parsed.hostname;
            }
        }
        if (parsed.port) {
            connection.port = parsed.port;
        }
        if (parsed.auth) {
            const idx = parsed.auth.indexOf(':');
            if (idx !== -1) {
                connection.user = parsed.auth.slice(0, idx);
                if (idx < parsed.auth.length - 1) {
                    connection.password = parsed.auth.slice(idx + 1);
                }
            }
            else {
                connection.user = parsed.auth;
            }
        }
        if (parsed.query) {
            for (const key in parsed.query) {
                connection[key] = parsed.query[key];
            }
        }
        return connection;
    }
    return {
        setters: [
            function (url_js_1_1) {
                url_js_1 = url_js_1_1;
            },
            function (index_js_26_1) {
                index_js_26 = index_js_26_1;
            }
        ],
        execute: function () {
            parsePG = index_js_26.default;
            isWindows = Deno.build.os === 'win';
            ;
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/util/fake-client", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/formatter"], function (exports_232, context_232) {
    "use strict";
    var formatter_js_2, fakeClient;
    var __moduleName = context_232 && context_232.id;
    return {
        setters: [
            function (formatter_js_2_1) {
                formatter_js_2 = formatter_js_2_1;
            }
        ],
        execute: function () {
            fakeClient = {
                formatter(builder) {
                    return new formatter_js_2.default(fakeClient, builder);
                },
            };
            exports_232("default", fakeClient);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/mssql/transaction", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/transaction", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/debug@4.1.1/src/index"], function (exports_233, context_233) {
    "use strict";
    var transaction_js_2, index_js_27, debug, Transaction_MSSQL;
    var __moduleName = context_233 && context_233.id;
    return {
        setters: [
            function (transaction_js_2_1) {
                transaction_js_2 = transaction_js_2_1;
            },
            function (index_js_27_1) {
                index_js_27 = index_js_27_1;
            }
        ],
        execute: function () {
            debug = index_js_27.default('knex:tx');
            Transaction_MSSQL = class Transaction_MSSQL extends transaction_js_2.default {
                begin(conn) {
                    debug('%s: begin', this.txid);
                    return conn.tx_.begin().then(this._resolver, this._rejecter);
                }
                async savepoint(conn) {
                    debug('%s: savepoint at', this.txid);
                    return this.query(conn, `SAVE TRANSACTION ${this.txid}`);
                }
                commit(conn, value) {
                    this._completed = true;
                    debug('%s: commit', this.txid);
                    return conn.tx_.commit().then(() => this._resolver(value), this._rejecter);
                }
                release(conn, value) {
                    return this._resolver(value);
                }
                rollback(conn, error) {
                    this._completed = true;
                    debug('%s: rolling back', this.txid);
                    return conn.tx_.rollback().then(() => {
                        let err = error;
                        if (error === undefined) {
                            if (this.doNotRejectOnRollback) {
                                this._resolver();
                                return;
                            }
                            err = new Error(`Transaction rejected with non-error: ${error}`);
                        }
                        this._rejecter(err);
                    }, (err) => {
                        if (error)
                            err.originalError = error;
                        return this._rejecter(err);
                    });
                }
                async rollbackTo(conn, error) {
                    debug('%s: rolling backTo', this.txid);
                    await this.query(conn, `ROLLBACK TRANSACTION ${this.txid}`, 2, error);
                    this._rejecter(error);
                }
                async acquireConnection(config, cb) {
                    const configConnection = config && config.connection;
                    const conn = (this.outerTx && this.outerTx.conn) ||
                        configConnection ||
                        (await this.client.acquireConnection());
                    try {
                        conn.__knexTxId = this.txid;
                        if (!this.outerTx) {
                            this.conn = conn;
                            conn.tx_ = conn.transaction();
                        }
                        return await cb(conn);
                    }
                    finally {
                        if (!this.outerTx) {
                            if (conn.tx_) {
                                if (!this._completed) {
                                    debug('%s: unreleased transaction', this.txid);
                                    conn.tx_.rollback();
                                }
                                conn.tx_ = null;
                            }
                            this.conn = null;
                            if (!configConnection) {
                                debug('%s: releasing connection', this.txid);
                                this.client.releaseConnection(conn);
                            }
                            else {
                                debug('%s: not releasing external connection', this.txid);
                            }
                        }
                    }
                }
            };
            exports_233("default", Transaction_MSSQL);
            ;
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/mssql/query/compiler", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/query/compiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index"], function (exports_234, context_234) {
    "use strict";
    var compiler_js_3, index_js_28, compact, identity, isEmpty, components, QueryCompiler_MSSQL;
    var __moduleName = context_234 && context_234.id;
    return {
        setters: [
            function (compiler_js_3_1) {
                compiler_js_3 = compiler_js_3_1;
            },
            function (index_js_28_1) {
                index_js_28 = index_js_28_1;
            }
        ],
        execute: function () {
            compact = index_js_28.default.compact;
            identity = index_js_28.default.identity;
            isEmpty = index_js_28.default.isEmpty;
            components = [
                'columns',
                'join',
                'lock',
                'where',
                'union',
                'group',
                'having',
                'order',
                'limit',
                'offset',
            ];
            QueryCompiler_MSSQL = class QueryCompiler_MSSQL extends compiler_js_3.default {
                constructor(client, builder) {
                    super(client, builder);
                    this._emptyInsertValue = 'default values';
                }
                select() {
                    const sql = this.with();
                    const statements = components.map((component) => this[component](this));
                    return sql + compact(statements).join(' ');
                }
                insert() {
                    const insertValues = this.single.insert || [];
                    let sql = this.with() + `insert into ${this.tableName} `;
                    const { returning } = this.single;
                    const returningSql = returning
                        ? this._returning('insert', returning) + ' '
                        : '';
                    if (Array.isArray(insertValues)) {
                        if (insertValues.length === 0) {
                            return '';
                        }
                    }
                    else if (typeof insertValues === 'object' && isEmpty(insertValues)) {
                        return {
                            sql: sql + returningSql + this._emptyInsertValue,
                            returning,
                        };
                    }
                    const insertData = this._prepInsert(insertValues);
                    if (typeof insertData === 'string') {
                        sql += insertData;
                    }
                    else {
                        if (insertData.columns.length) {
                            sql += `(${this.formatter.columnize(insertData.columns)}`;
                            sql += `) ${returningSql}values (`;
                            let i = -1;
                            while (++i < insertData.values.length) {
                                if (i !== 0)
                                    sql += '), (';
                                sql += this.formatter.parameterize(insertData.values[i], this.client.valueForUndefined);
                            }
                            sql += ')';
                        }
                        else if (insertValues.length === 1 && insertValues[0]) {
                            sql += returningSql + this._emptyInsertValue;
                        }
                        else {
                            sql = '';
                        }
                    }
                    return {
                        sql,
                        returning,
                    };
                }
                update() {
                    const top = this.top();
                    const withSQL = this.with();
                    const updates = this._prepUpdate(this.single.update);
                    const join = this.join();
                    const where = this.where();
                    const order = this.order();
                    const { returning } = this.single;
                    return {
                        sql: withSQL +
                            `update ${top ? top + ' ' : ''}${this.tableName}` +
                            ' set ' +
                            updates.join(', ') +
                            (returning ? ` ${this._returning('update', returning)}` : '') +
                            (join ? ` from ${this.tableName} ${join}` : '') +
                            (where ? ` ${where}` : '') +
                            (order ? ` ${order}` : '') +
                            (!returning ? this._returning('rowcount', '@@rowcount') : ''),
                        returning: returning || '@@rowcount',
                    };
                }
                del() {
                    const withSQL = this.with();
                    const { tableName } = this;
                    const wheres = this.where();
                    const { returning } = this.single;
                    return {
                        sql: withSQL +
                            `delete from ${tableName}` +
                            (returning ? ` ${this._returning('del', returning)}` : '') +
                            (wheres ? ` ${wheres}` : '') +
                            (!returning ? this._returning('rowcount', '@@rowcount') : ''),
                        returning: returning || '@@rowcount',
                    };
                }
                columns() {
                    let distinctClause = '';
                    if (this.onlyUnions())
                        return '';
                    const top = this.top();
                    const columns = this.grouped.columns || [];
                    let i = -1, sql = [];
                    if (columns) {
                        while (++i < columns.length) {
                            const stmt = columns[i];
                            if (stmt.distinct)
                                distinctClause = 'distinct ';
                            if (stmt.distinctOn) {
                                distinctClause = this.distinctOn(stmt.value);
                                continue;
                            }
                            if (stmt.type === 'aggregate') {
                                sql.push(...this.aggregate(stmt));
                            }
                            else if (stmt.type === 'aggregateRaw') {
                                sql.push(this.aggregateRaw(stmt));
                            }
                            else if (stmt.value && stmt.value.length > 0) {
                                sql.push(this.formatter.columnize(stmt.value));
                            }
                        }
                    }
                    if (sql.length === 0)
                        sql = ['*'];
                    return (`select ${distinctClause}` +
                        (top ? top + ' ' : '') +
                        sql.join(', ') +
                        (this.tableName ? ` from ${this.tableName}` : ''));
                }
                _returning(method, value) {
                    switch (method) {
                        case 'update':
                        case 'insert':
                            return value
                                ? `output ${this.formatter.columnizeWithPrefix('inserted.', value)}`
                                : '';
                        case 'del':
                            return value
                                ? `output ${this.formatter.columnizeWithPrefix('deleted.', value)}`
                                : '';
                        case 'rowcount':
                            return value ? ';select @@rowcount' : '';
                    }
                }
                truncate() {
                    return `truncate table ${this.tableName}`;
                }
                forUpdate() {
                    return 'with (UPDLOCK)';
                }
                forShare() {
                    return 'with (HOLDLOCK)';
                }
                columnInfo() {
                    const column = this.single.columnInfo;
                    let schema = this.single.schema;
                    const table = this.client.customWrapIdentifier(this.single.table, identity);
                    if (schema) {
                        schema = this.client.customWrapIdentifier(schema, identity);
                    }
                    let sql = `select * from information_schema.columns where table_name = ? and table_catalog = ?`;
                    const bindings = [table, this.client.database()];
                    if (schema) {
                        sql += ' and table_schema = ?';
                        bindings.push(schema);
                    }
                    else {
                        sql += ` and table_schema = 'dbo'`;
                    }
                    return {
                        sql,
                        bindings: bindings,
                        output(resp) {
                            const out = resp.reduce(function (columns, val) {
                                columns[val.COLUMN_NAME] = {
                                    defaultValue: val.COLUMN_DEFAULT,
                                    type: val.DATA_TYPE,
                                    maxLength: val.CHARACTER_MAXIMUM_LENGTH,
                                    nullable: val.IS_NULLABLE === 'YES',
                                };
                                return columns;
                            }, {});
                            return (column && out[column]) || out;
                        },
                    };
                }
                top() {
                    const noLimit = !this.single.limit && this.single.limit !== 0;
                    const noOffset = !this.single.offset;
                    if (noLimit || !noOffset)
                        return '';
                    return `top (${this.formatter.parameter(this.single.limit)})`;
                }
                limit() {
                    return '';
                }
                offset() {
                    const noLimit = !this.single.limit && this.single.limit !== 0;
                    const noOffset = !this.single.offset;
                    if (noOffset)
                        return '';
                    let offset = `offset ${noOffset ? '0' : this.formatter.parameter(this.single.offset)} rows`;
                    if (!noLimit) {
                        offset += ` fetch next ${this.formatter.parameter(this.single.limit)} rows only`;
                    }
                    return offset;
                }
            };
            exports_234("default", QueryCompiler_MSSQL);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/mssql/schema/compiler", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/schema/compiler"], function (exports_235, context_235) {
    "use strict";
    var inherits_js_6, compiler_js_4;
    var __moduleName = context_235 && context_235.id;
    function SchemaCompiler_MSSQL(client, builder) {
        compiler_js_4.default.call(this, client, builder);
    }
    function prefixedTableName(prefix, table) {
        return prefix ? `${prefix}.${table}` : table;
    }
    return {
        setters: [
            function (inherits_js_6_1) {
                inherits_js_6 = inherits_js_6_1;
            },
            function (compiler_js_4_1) {
                compiler_js_4 = compiler_js_4_1;
            }
        ],
        execute: function () {
            inherits_js_6.default(SchemaCompiler_MSSQL, compiler_js_4.default);
            Object.assign(SchemaCompiler_MSSQL.prototype, {
                dropTablePrefix: 'DROP TABLE ',
                dropTableIfExists(tableName) {
                    const name = this.formatter.wrap(prefixedTableName(this.schema, tableName));
                    this.pushQuery(`if object_id('${name}', 'U') is not null DROP TABLE ${name}`);
                },
                renameTable(tableName, to) {
                    this.pushQuery(`exec sp_rename ${this.formatter.parameter(prefixedTableName(this.schema, tableName))}, ${this.formatter.parameter(to)}`);
                },
                hasTable(tableName) {
                    const formattedTable = this.formatter.parameter(this.formatter.wrap(prefixedTableName(this.schema, tableName)));
                    const sql = `select object_id from sys.tables ` +
                        `where object_id = object_id(${formattedTable})`;
                    this.pushQuery({ sql, output: (resp) => resp.length > 0 });
                },
                hasColumn(tableName, column) {
                    const formattedColumn = this.formatter.parameter(column);
                    const formattedTable = this.formatter.parameter(this.formatter.wrap(prefixedTableName(this.schema, tableName)));
                    const sql = `select object_id from sys.columns ` +
                        `where name = ${formattedColumn} ` +
                        `and object_id = object_id(${formattedTable})`;
                    this.pushQuery({ sql, output: (resp) => resp.length > 0 });
                },
            });
            exports_235("default", SchemaCompiler_MSSQL);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/mssql/schema/tablecompiler", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/schema/tablecompiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/helpers"], function (exports_236, context_236) {
    "use strict";
    var inherits_js_7, tablecompiler_js_2, helpers_js_11;
    var __moduleName = context_236 && context_236.id;
    function TableCompiler_MSSQL() {
        tablecompiler_js_2.default.apply(this, arguments);
    }
    return {
        setters: [
            function (inherits_js_7_1) {
                inherits_js_7 = inherits_js_7_1;
            },
            function (tablecompiler_js_2_1) {
                tablecompiler_js_2 = tablecompiler_js_2_1;
            },
            function (helpers_js_11_1) {
                helpers_js_11 = helpers_js_11_1;
            }
        ],
        execute: function () {
            inherits_js_7.default(TableCompiler_MSSQL, tablecompiler_js_2.default);
            Object.assign(TableCompiler_MSSQL.prototype, {
                createAlterTableMethods: ['foreign', 'primary'],
                createQuery(columns, ifNot) {
                    const createStatement = ifNot
                        ? `if object_id('${this.tableName()}', 'U') is null CREATE TABLE `
                        : 'CREATE TABLE ';
                    const sql = createStatement +
                        this.tableName() +
                        (this._formatting ? ' (\n    ' : ' (') +
                        columns.sql.join(this._formatting ? ',\n    ' : ', ') +
                        ')';
                    if (this.single.comment) {
                        const { comment } = this.single;
                        if (comment.length > 60)
                            this.client.logger.warn('The max length for a table comment is 60 characters');
                    }
                    this.pushQuery(sql);
                },
                lowerCase: false,
                addColumnsPrefix: 'ADD ',
                dropColumnPrefix: 'DROP COLUMN ',
                alterColumnPrefix: 'ALTER COLUMN ',
                addColumns(columns, prefix) {
                    prefix = prefix || this.addColumnsPrefix;
                    if (columns.sql.length > 0) {
                        this.pushQuery({
                            sql: (this.lowerCase ? 'alter table ' : 'ALTER TABLE ') +
                                this.tableName() +
                                ' ' +
                                prefix +
                                columns.sql.join(', '),
                            bindings: columns.bindings,
                        });
                    }
                },
                dropColumn() {
                    const _this2 = this;
                    const columns = helpers_js_11.default.normalizeArr.apply(null, arguments);
                    const drops = (Array.isArray(columns) ? columns : [columns]).map((column) => _this2.formatter.wrap(column));
                    this.pushQuery((this.lowerCase ? 'alter table ' : 'ALTER TABLE ') +
                        this.tableName() +
                        ' ' +
                        this.dropColumnPrefix +
                        drops.join(', '));
                },
                comment() { },
                changeType() { },
                renameColumn(from, to) {
                    this.pushQuery(`exec sp_rename ${this.formatter.parameter(this.tableName() + '.' + from)}, ${this.formatter.parameter(to)}, 'COLUMN'`);
                },
                dropFKRefs(runner, refs) {
                    const formatter = this.client.formatter(this.tableBuilder);
                    return Promise.all(refs.map(function (ref) {
                        const constraintName = formatter.wrap(ref.CONSTRAINT_NAME);
                        const tableName = formatter.wrap(ref.TABLE_NAME);
                        return runner.query({
                            sql: `ALTER TABLE ${tableName} DROP CONSTRAINT ${constraintName}`,
                        });
                    }));
                },
                createFKRefs(runner, refs) {
                    const formatter = this.client.formatter(this.tableBuilder);
                    return Promise.all(refs.map(function (ref) {
                        const tableName = formatter.wrap(ref.TABLE_NAME);
                        const keyName = formatter.wrap(ref.CONSTRAINT_NAME);
                        const column = formatter.columnize(ref.COLUMN_NAME);
                        const references = formatter.columnize(ref.REFERENCED_COLUMN_NAME);
                        const inTable = formatter.wrap(ref.REFERENCED_TABLE_NAME);
                        const onUpdate = ` ON UPDATE ${ref.UPDATE_RULE}`;
                        const onDelete = ` ON DELETE ${ref.DELETE_RULE}`;
                        return runner.query({
                            sql: `ALTER TABLE ${tableName} ADD CONSTRAINT ${keyName}` +
                                ' FOREIGN KEY (' +
                                column +
                                ') REFERENCES ' +
                                inTable +
                                ' (' +
                                references +
                                ')' +
                                onUpdate +
                                onDelete,
                        });
                    }));
                },
                index(columns, indexName) {
                    indexName = indexName
                        ? this.formatter.wrap(indexName)
                        : this._indexCommand('index', this.tableNameRaw, columns);
                    this.pushQuery(`CREATE INDEX ${indexName} ON ${this.tableName()} (${this.formatter.columnize(columns)})`);
                },
                primary(columns, constraintName) {
                    constraintName = constraintName
                        ? this.formatter.wrap(constraintName)
                        : this.formatter.wrap(`${this.tableNameRaw}_pkey`);
                    if (!this.forCreate) {
                        this.pushQuery(`ALTER TABLE ${this.tableName()} ADD CONSTRAINT ${constraintName} PRIMARY KEY (${this.formatter.columnize(columns)})`);
                    }
                    else {
                        this.pushQuery(`CONSTRAINT ${constraintName} PRIMARY KEY (${this.formatter.columnize(columns)})`);
                    }
                },
                unique(columns, indexName) {
                    indexName = indexName
                        ? this.formatter.wrap(indexName)
                        : this._indexCommand('unique', this.tableNameRaw, columns);
                    if (!Array.isArray(columns)) {
                        columns = [columns];
                    }
                    const whereAllTheColumnsAreNotNull = columns
                        .map((column) => this.formatter.columnize(column) + ' IS NOT NULL')
                        .join(' AND ');
                    this.pushQuery(`CREATE UNIQUE INDEX ${indexName} ON ${this.tableName()} (${this.formatter.columnize(columns)}) WHERE ${whereAllTheColumnsAreNotNull}`);
                },
                dropIndex(columns, indexName) {
                    indexName = indexName
                        ? this.formatter.wrap(indexName)
                        : this._indexCommand('index', this.tableNameRaw, columns);
                    this.pushQuery(`DROP INDEX ${indexName} ON ${this.tableName()}`);
                },
                dropForeign(columns, indexName) {
                    indexName = indexName
                        ? this.formatter.wrap(indexName)
                        : this._indexCommand('foreign', this.tableNameRaw, columns);
                    this.pushQuery(`ALTER TABLE ${this.tableName()} DROP CONSTRAINT ${indexName}`);
                },
                dropPrimary(constraintName) {
                    constraintName = constraintName
                        ? this.formatter.wrap(constraintName)
                        : this.formatter.wrap(`${this.tableNameRaw}_pkey`);
                    this.pushQuery(`ALTER TABLE ${this.tableName()} DROP CONSTRAINT ${constraintName}`);
                },
                dropUnique(column, indexName) {
                    indexName = indexName
                        ? this.formatter.wrap(indexName)
                        : this._indexCommand('unique', this.tableNameRaw, column);
                    this.pushQuery(`DROP INDEX ${indexName} ON ${this.tableName()}`);
                },
            });
            exports_236("default", TableCompiler_MSSQL);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/mssql/schema/columncompiler", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/schema/columncompiler"], function (exports_237, context_237) {
    "use strict";
    var inherits_js_8, columncompiler_js_2;
    var __moduleName = context_237 && context_237.id;
    function ColumnCompiler_MSSQL() {
        columncompiler_js_2.default.apply(this, arguments);
        this.modifiers = ['nullable', 'defaultTo', 'first', 'after', 'comment'];
    }
    return {
        setters: [
            function (inherits_js_8_1) {
                inherits_js_8 = inherits_js_8_1;
            },
            function (columncompiler_js_2_1) {
                columncompiler_js_2 = columncompiler_js_2_1;
            }
        ],
        execute: function () {
            inherits_js_8.default(ColumnCompiler_MSSQL, columncompiler_js_2.default);
            Object.assign(ColumnCompiler_MSSQL.prototype, {
                increments: 'int identity(1,1) not null primary key',
                bigincrements: 'bigint identity(1,1) not null primary key',
                bigint: 'bigint',
                double(precision, scale) {
                    return 'float';
                },
                floating(precision, scale) {
                    return `float`;
                },
                integer() {
                    return 'int';
                },
                mediumint: 'int',
                smallint: 'smallint',
                tinyint() {
                    return 'tinyint';
                },
                varchar(length) {
                    return `nvarchar(${this._num(length, 255)})`;
                },
                text: 'nvarchar(max)',
                mediumtext: 'nvarchar(max)',
                longtext: 'nvarchar(max)',
                enu: 'nvarchar(100)',
                uuid: 'uniqueidentifier',
                datetime: 'datetime2',
                timestamp({ useTz = false } = {}) {
                    return useTz ? 'datetimeoffset' : 'datetime2';
                },
                bit(length) {
                    if (length > 1) {
                        this.client.logger.warn('Bit field is exactly 1 bit length for MSSQL');
                    }
                    return 'bit';
                },
                binary(length) {
                    return length ? `varbinary(${this._num(length)})` : 'varbinary(max)';
                },
                bool: 'bit',
                first() {
                    this.client.logger.warn('Column first modifier not available for MSSQL');
                    return '';
                },
                after(column) {
                    this.client.logger.warn('Column after modifier not available for MSSQL');
                    return '';
                },
                comment(comment) {
                    if (comment && comment.length > 255) {
                        this.client.logger.warn('Your comment is longer than the max comment length for MSSQL');
                    }
                    return '';
                },
            });
            exports_237("default", ColumnCompiler_MSSQL);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/mssql/index", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/client", "https://raw.githubusercontent.com/denjucks/dex/master/lib/formatter", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/mssql/transaction", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/mssql/query/compiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/mssql/schema/compiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/mssql/schema/tablecompiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/mssql/schema/columncompiler"], function (exports_238, context_238) {
    "use strict";
    var index_js_29, flatten, map, values, inherits_js_9, client_js_1, formatter_js_3, transaction_js_3, compiler_js_5, compiler_js_6, tablecompiler_js_3, columncompiler_js_3, SQL_INT4, SQL_BIGINT_SAFE, MSSQL_Formatter;
    var __moduleName = context_238 && context_238.id;
    function Client_MSSQL(config = {}) {
        if (config && config.connection && config.connection.host) {
            config.connection.server = config.connection.host;
        }
        this.mssqlPoolSettings = {
            min: 1,
            max: 1,
            idleTimeoutMillis: Number.MAX_SAFE_INTEGER,
            evictionRunIntervalMillis: 0,
        };
        client_js_1.default.call(this, config);
    }
    return {
        setters: [
            function (index_js_29_1) {
                index_js_29 = index_js_29_1;
            },
            function (inherits_js_9_1) {
                inherits_js_9 = inherits_js_9_1;
            },
            function (client_js_1_1) {
                client_js_1 = client_js_1_1;
            },
            function (formatter_js_3_1) {
                formatter_js_3 = formatter_js_3_1;
            },
            function (transaction_js_3_1) {
                transaction_js_3 = transaction_js_3_1;
            },
            function (compiler_js_5_1) {
                compiler_js_5 = compiler_js_5_1;
            },
            function (compiler_js_6_1) {
                compiler_js_6 = compiler_js_6_1;
            },
            function (tablecompiler_js_3_1) {
                tablecompiler_js_3 = tablecompiler_js_3_1;
            },
            function (columncompiler_js_3_1) {
                columncompiler_js_3 = columncompiler_js_3_1;
            }
        ],
        execute: function () {
            flatten = index_js_29.default.flatten;
            map = index_js_29.default.map;
            values = index_js_29.default.values;
            SQL_INT4 = { MIN: -2147483648, MAX: 2147483647 };
            SQL_BIGINT_SAFE = { MIN: -9007199254740991, MAX: 9007199254740991 };
            inherits_js_9.default(Client_MSSQL, client_js_1.default);
            Object.assign(Client_MSSQL.prototype, {
                dialect: 'mssql',
                driverName: 'mssql',
                _driver() {
                    const tds = require('tedious');
                    const mssqlTedious = require('mssql');
                    const base = require('mssql/lib/base');
                    const mssqlVersion = require('mssql/package.json').version;
                    if (mssqlVersion === '4.1.0') {
                        mssqlTedious.ConnectionPool.prototype.release = release;
                        mssqlTedious.ConnectionPool.prototype._poolCreate = _poolCreate;
                    }
                    else {
                        const [major] = mssqlVersion.split('.');
                        if (major < 5) {
                            throw new Error('This knex version only supports mssql driver versions 4.1.0 and 5.0.0+');
                        }
                    }
                    function release(connection) {
                        if (this.pool) {
                            this.pool.release(connection);
                        }
                    }
                    function _poolCreate() {
                        return new base.Promise((resolve, reject) => {
                            const cfg = {
                                userName: this.config.user,
                                password: this.config.password,
                                server: this.config.server,
                                options: Object.assign({}, this.config.options),
                                domain: this.config.domain,
                            };
                            cfg.options.database = this.config.database;
                            cfg.options.port = this.config.port;
                            cfg.options.connectTimeout =
                                this.config.connectionTimeout || this.config.timeout || 15000;
                            cfg.options.requestTimeout =
                                this.config.requestTimeout != null
                                    ? this.config.requestTimeout
                                    : 15000;
                            cfg.options.tdsVersion = cfg.options.tdsVersion || '7_4';
                            cfg.options.rowCollectionOnDone = false;
                            cfg.options.rowCollectionOnRequestCompletion = false;
                            cfg.options.useColumnNames = false;
                            cfg.options.appName = cfg.options.appName || 'node-mssql';
                            if (cfg.options.instanceName)
                                delete cfg.options.port;
                            if (isNaN(cfg.options.requestTimeout))
                                cfg.options.requestTimeout = 15000;
                            if (cfg.options.requestTimeout === Infinity)
                                cfg.options.requestTimeout = 0;
                            if (cfg.options.requestTimeout < 0)
                                cfg.options.requestTimeout = 0;
                            if (this.config.debug) {
                                cfg.options.debug = {
                                    packet: true,
                                    token: true,
                                    data: true,
                                    payload: true,
                                };
                            }
                            const tedious = new tds.Connection(cfg);
                            let alreadyResolved = false;
                            function safeResolve(err) {
                                if (!alreadyResolved) {
                                    alreadyResolved = true;
                                    resolve(err);
                                }
                            }
                            function safeReject(err) {
                                if (!alreadyResolved) {
                                    alreadyResolved = true;
                                    reject(err);
                                }
                            }
                            tedious.once('end', (evt) => {
                                safeReject(new base.ConnectionError('Connection ended unexpectedly during connecting'));
                            });
                            tedious.once('connect', (err) => {
                                if (err) {
                                    err = new base.ConnectionError(err);
                                    return safeReject(err);
                                }
                                safeResolve(tedious);
                            });
                            tedious.on('error', (err) => {
                                if (err.code === 'ESOCKET') {
                                    tedious.hasError = true;
                                    return;
                                }
                                this.emit('error', err);
                            });
                            if (this.config.debug) {
                                tedious.on('debug', this.emit.bind(this, 'debug', tedious));
                            }
                        });
                    }
                    return mssqlTedious;
                },
                formatter() {
                    return new MSSQL_Formatter(this, ...arguments);
                },
                transaction() {
                    return new transaction_js_3.default(this, ...arguments);
                },
                queryCompiler() {
                    return new compiler_js_5.default(this, ...arguments);
                },
                schemaCompiler() {
                    return new compiler_js_6.default(this, ...arguments);
                },
                tableCompiler() {
                    return new tablecompiler_js_3.default(this, ...arguments);
                },
                columnCompiler() {
                    return new columncompiler_js_3.default(this, ...arguments);
                },
                wrapIdentifierImpl(value) {
                    if (value === '*') {
                        return '*';
                    }
                    return `[${value.replace(/[[\]']+/g, '')}]`;
                },
                acquireRawConnection() {
                    return new Promise((resolver, rejecter) => {
                        const settings = Object.assign({}, this.connectionSettings);
                        settings.pool = this.mssqlPoolSettings;
                        const connection = new this.driver.ConnectionPool(settings);
                        connection.connect((err) => {
                            if (err) {
                                return rejecter(err);
                            }
                            connection.on('error', (err) => {
                                connection.__knex__disposed = err;
                            });
                            resolver(connection);
                        });
                    });
                },
                validateConnection(connection) {
                    if (connection.connected === true) {
                        return true;
                    }
                    return false;
                },
                destroyRawConnection(connection) {
                    return connection.close().catch((err) => {
                    });
                },
                positionBindings(sql) {
                    let questionCount = -1;
                    return sql.replace(/\?/g, function () {
                        questionCount += 1;
                        return `@p${questionCount}`;
                    });
                },
                _stream(connection, obj, stream) {
                    if (!obj || typeof obj === 'string')
                        obj = { sql: obj };
                    return new Promise((resolver, rejecter) => {
                        stream.on('error', (err) => {
                            rejecter(err);
                        });
                        stream.on('end', resolver);
                        const { sql } = obj;
                        if (!sql)
                            return resolver();
                        const req = (connection.tx_ || connection).request();
                        req.multiple = true;
                        req.stream = true;
                        if (obj.bindings) {
                            for (let i = 0; i < obj.bindings.length; i++) {
                                this._setReqInput(req, i, obj.bindings[i]);
                            }
                        }
                        req.pipe(stream);
                        req.query(sql);
                    });
                },
                _query(connection, obj) {
                    const client = this;
                    if (!obj || typeof obj === 'string')
                        obj = { sql: obj };
                    return new Promise((resolver, rejecter) => {
                        const { sql } = obj;
                        if (!sql)
                            return resolver();
                        const req = (connection.tx_ || connection).request();
                        req.multiple = true;
                        if (obj.bindings) {
                            for (let i = 0; i < obj.bindings.length; i++) {
                                client._setReqInput(req, i, obj.bindings[i]);
                            }
                        }
                        req.query(sql, (err, recordset) => {
                            if (err) {
                                return rejecter(err);
                            }
                            obj.response = recordset.recordsets[0];
                            resolver(obj);
                        });
                    });
                },
                _setReqInput(req, i, binding) {
                    if (typeof binding == 'number') {
                        if (binding % 1 !== 0) {
                            req.input(`p${i}`, this.driver.Decimal(38, 10), binding);
                        }
                        else if (binding < SQL_INT4.MIN || binding > SQL_INT4.MAX) {
                            if (binding < SQL_BIGINT_SAFE.MIN || binding > SQL_BIGINT_SAFE.MAX) {
                                throw new Error(`Bigint must be safe integer or must be passed as string, saw ${binding}`);
                            }
                            req.input(`p${i}`, this.driver.BigInt, binding);
                        }
                        else {
                            req.input(`p${i}`, this.driver.Int, binding);
                        }
                    }
                    else {
                        req.input(`p${i}`, binding);
                    }
                },
                processResponse(obj, runner) {
                    if (obj == null)
                        return;
                    const { response, method } = obj;
                    if (obj.output)
                        return obj.output.call(runner, response);
                    switch (method) {
                        case 'select':
                        case 'pluck':
                        case 'first':
                            if (method === 'pluck')
                                return map(response, obj.pluck);
                            return method === 'first' ? response[0] : response;
                        case 'insert':
                        case 'del':
                        case 'update':
                        case 'counter':
                            if (obj.returning) {
                                if (obj.returning === '@@rowcount') {
                                    return response[0][''];
                                }
                                if ((Array.isArray(obj.returning) && obj.returning.length > 1) ||
                                    obj.returning[0] === '*') {
                                    return response;
                                }
                                return flatten(map(response, values));
                            }
                            return response;
                        default:
                            return response;
                    }
                },
            });
            MSSQL_Formatter = class MSSQL_Formatter extends formatter_js_3.default {
                columnizeWithPrefix(prefix, target) {
                    const columns = typeof target === 'string' ? [target] : target;
                    let str = '', i = -1;
                    while (++i < columns.length) {
                        if (i > 0)
                            str += ', ';
                        str += prefix + this.wrap(columns[i]);
                    }
                    return str;
                }
            };
            exports_238("default", Client_MSSQL);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/mysql/transaction", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/transaction", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/debug@4.1.1/src/index"], function (exports_239, context_239) {
    "use strict";
    var transaction_js_4, index_js_30, debug, Transaction_MySQL;
    var __moduleName = context_239 && context_239.id;
    return {
        setters: [
            function (transaction_js_4_1) {
                transaction_js_4 = transaction_js_4_1;
            },
            function (index_js_30_1) {
                index_js_30 = index_js_30_1;
            }
        ],
        execute: function () {
            debug = index_js_30.default('knex:tx');
            Transaction_MySQL = class Transaction_MySQL extends transaction_js_4.default {
            };
            Object.assign(Transaction_MySQL.prototype, {
                query(conn, sql, status, value) {
                    const t = this;
                    const q = this.trxClient
                        .query(conn, sql)
                        .catch((err) => {
                        if (err.errno === 1305) {
                            this.trxClient.logger.warn('Transaction was implicitly committed, do not mix transactions and ' +
                                'DDL with MySQL (#805)');
                            return;
                        }
                        status = 2;
                        value = err;
                        t._completed = true;
                        debug('%s error running transaction query', t.txid);
                    })
                        .then(function (res) {
                        if (status === 1)
                            t._resolver(value);
                        if (status === 2) {
                            if (value === undefined) {
                                if (t.doNotRejectOnRollback && /^ROLLBACK\b/i.test(sql)) {
                                    t._resolver();
                                    return;
                                }
                                value = new Error(`Transaction rejected with non-error: ${value}`);
                            }
                            t._rejecter(value);
                        }
                        return res;
                    });
                    if (status === 1 || status === 2) {
                        t._completed = true;
                    }
                    return q;
                },
            });
            exports_239("default", Transaction_MySQL);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/mysql/query/compiler", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/query/compiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index"], function (exports_240, context_240) {
    "use strict";
    var compiler_js_7, index_js_31, identity, QueryCompiler_MySQL;
    var __moduleName = context_240 && context_240.id;
    return {
        setters: [
            function (compiler_js_7_1) {
                compiler_js_7 = compiler_js_7_1;
            },
            function (index_js_31_1) {
                index_js_31 = index_js_31_1;
            }
        ],
        execute: function () {
            identity = index_js_31.default.identity;
            QueryCompiler_MySQL = class QueryCompiler_MySQL extends compiler_js_7.default {
                constructor(client, builder) {
                    super(client, builder);
                    const { returning } = this.single;
                    if (returning) {
                        this.client.logger.warn('.returning() is not supported by mysql and will not have any effect.');
                    }
                    this._emptyInsertValue = '() values ()';
                }
                update() {
                    const join = this.join();
                    const updates = this._prepUpdate(this.single.update);
                    const where = this.where();
                    const order = this.order();
                    const limit = this.limit();
                    return (`update ${this.tableName}` +
                        (join ? ` ${join}` : '') +
                        ' set ' +
                        updates.join(', ') +
                        (where ? ` ${where}` : '') +
                        (order ? ` ${order}` : '') +
                        (limit ? ` ${limit}` : ''));
                }
                forUpdate() {
                    return 'for update';
                }
                forShare() {
                    return 'lock in share mode';
                }
                skipLocked() {
                    return 'skip locked';
                }
                noWait() {
                    return 'nowait';
                }
                columnInfo() {
                    const column = this.single.columnInfo;
                    const table = this.client.customWrapIdentifier(this.single.table, identity);
                    return {
                        sql: 'select * from information_schema.columns where table_name = ? and table_schema = ?',
                        bindings: [table, this.client.database()],
                        output(resp) {
                            const out = resp.reduce(function (columns, val) {
                                columns[val.COLUMN_NAME] = {
                                    defaultValue: val.COLUMN_DEFAULT,
                                    type: val.DATA_TYPE,
                                    maxLength: val.CHARACTER_MAXIMUM_LENGTH,
                                    nullable: val.IS_NULLABLE === 'YES',
                                };
                                return columns;
                            }, {});
                            return (column && out[column]) || out;
                        },
                    };
                }
                limit() {
                    const noLimit = !this.single.limit && this.single.limit !== 0;
                    if (noLimit && !this.single.offset)
                        return '';
                    const limit = this.single.offset && noLimit
                        ? '18446744073709551615'
                        : this.formatter.parameter(this.single.limit);
                    return `limit ${limit}`;
                }
            };
            exports_240("default", QueryCompiler_MySQL);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/mysql/schema/compiler", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/schema/compiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index"], function (exports_241, context_241) {
    "use strict";
    var inherits_js_10, compiler_js_8, index_js_32, some;
    var __moduleName = context_241 && context_241.id;
    function SchemaCompiler_MySQL(client, builder) {
        compiler_js_8.default.call(this, client, builder);
    }
    return {
        setters: [
            function (inherits_js_10_1) {
                inherits_js_10 = inherits_js_10_1;
            },
            function (compiler_js_8_1) {
                compiler_js_8 = compiler_js_8_1;
            },
            function (index_js_32_1) {
                index_js_32 = index_js_32_1;
            }
        ],
        execute: function () {
            some = index_js_32.default.some;
            inherits_js_10.default(SchemaCompiler_MySQL, compiler_js_8.default);
            Object.assign(SchemaCompiler_MySQL.prototype, {
                renameTable(tableName, to) {
                    this.pushQuery(`rename table ${this.formatter.wrap(tableName)} to ${this.formatter.wrap(to)}`);
                },
                hasTable(tableName) {
                    let sql = 'select * from information_schema.tables where table_name = ?';
                    const bindings = [tableName];
                    if (this.schema) {
                        sql += ' and table_schema = ?';
                        bindings.push(this.schema);
                    }
                    else {
                        sql += ' and table_schema = database()';
                    }
                    this.pushQuery({
                        sql,
                        bindings,
                        output: function output(resp) {
                            return resp.length > 0;
                        },
                    });
                },
                hasColumn(tableName, column) {
                    this.pushQuery({
                        sql: `show columns from ${this.formatter.wrap(tableName)}`,
                        output(resp) {
                            return some(resp, (row) => {
                                return (this.client.wrapIdentifier(row.Field) ===
                                    this.client.wrapIdentifier(column));
                            });
                        },
                    });
                },
            });
            exports_241("default", SchemaCompiler_MySQL);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/mysql/schema/tablecompiler", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/schema/tablecompiler"], function (exports_242, context_242) {
    "use strict";
    var inherits_js_11, tablecompiler_js_4;
    var __moduleName = context_242 && context_242.id;
    function TableCompiler_MySQL() {
        tablecompiler_js_4.default.apply(this, arguments);
    }
    return {
        setters: [
            function (inherits_js_11_1) {
                inherits_js_11 = inherits_js_11_1;
            },
            function (tablecompiler_js_4_1) {
                tablecompiler_js_4 = tablecompiler_js_4_1;
            }
        ],
        execute: function () {
            inherits_js_11.default(TableCompiler_MySQL, tablecompiler_js_4.default);
            Object.assign(TableCompiler_MySQL.prototype, {
                createQuery(columns, ifNot) {
                    const createStatement = ifNot
                        ? 'create table if not exists '
                        : 'create table ';
                    const { client } = this;
                    let conn = {};
                    let sql = createStatement + this.tableName() + ' (' + columns.sql.join(', ') + ')';
                    if (client.connectionSettings) {
                        conn = client.connectionSettings;
                    }
                    const charset = this.single.charset || conn.charset || '';
                    const collation = this.single.collate || conn.collate || '';
                    const engine = this.single.engine || '';
                    if (charset)
                        sql += ` default character set ${charset}`;
                    if (collation)
                        sql += ` collate ${collation}`;
                    if (engine)
                        sql += ` engine = ${engine}`;
                    if (this.single.comment) {
                        const comment = this.single.comment || '';
                        if (comment.length > 60)
                            this.client.logger.warn('The max length for a table comment is 60 characters');
                        sql += ` comment = '${comment}'`;
                    }
                    this.pushQuery(sql);
                },
                addColumnsPrefix: 'add ',
                alterColumnsPrefix: 'modify ',
                dropColumnPrefix: 'drop ',
                comment(comment) {
                    this.pushQuery(`alter table ${this.tableName()} comment = '${comment}'`);
                },
                changeType() {
                },
                renameColumn(from, to) {
                    const compiler = this;
                    const table = this.tableName();
                    const wrapped = this.formatter.wrap(from) + ' ' + this.formatter.wrap(to);
                    this.pushQuery({
                        sql: `show fields from ${table} where field = ` +
                            this.formatter.parameter(from),
                        output(resp) {
                            const column = resp[0];
                            const runner = this;
                            return compiler.getFKRefs(runner).then(([refs]) => new Promise((resolve, reject) => {
                                try {
                                    if (!refs.length) {
                                        resolve();
                                    }
                                    resolve(compiler.dropFKRefs(runner, refs));
                                }
                                catch (e) {
                                    reject(e);
                                }
                            })
                                .then(function () {
                                let sql = `alter table ${table} change ${wrapped} ${column.Type}`;
                                if (String(column.Null).toUpperCase() !== 'YES') {
                                    sql += ` NOT NULL`;
                                }
                                else {
                                    sql += ` NULL`;
                                }
                                if (column.Default !== void 0 && column.Default !== null) {
                                    sql += ` DEFAULT '${column.Default}'`;
                                }
                                return runner.query({
                                    sql,
                                });
                            })
                                .then(function () {
                                if (!refs.length) {
                                    return;
                                }
                                return compiler.createFKRefs(runner, refs.map(function (ref) {
                                    if (ref.REFERENCED_COLUMN_NAME === from) {
                                        ref.REFERENCED_COLUMN_NAME = to;
                                    }
                                    if (ref.COLUMN_NAME === from) {
                                        ref.COLUMN_NAME = to;
                                    }
                                    return ref;
                                }));
                            }));
                        },
                    });
                },
                getFKRefs(runner) {
                    const formatter = this.client.formatter(this.tableBuilder);
                    const sql = 'SELECT KCU.CONSTRAINT_NAME, KCU.TABLE_NAME, KCU.COLUMN_NAME, ' +
                        '       KCU.REFERENCED_TABLE_NAME, KCU.REFERENCED_COLUMN_NAME, ' +
                        '       RC.UPDATE_RULE, RC.DELETE_RULE ' +
                        'FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS KCU ' +
                        'JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS RC ' +
                        '       USING(CONSTRAINT_NAME)' +
                        'WHERE KCU.REFERENCED_TABLE_NAME = ' +
                        formatter.parameter(this.tableNameRaw) +
                        ' ' +
                        '  AND KCU.CONSTRAINT_SCHEMA = ' +
                        formatter.parameter(this.client.database()) +
                        ' ' +
                        '  AND RC.CONSTRAINT_SCHEMA = ' +
                        formatter.parameter(this.client.database());
                    return runner.query({
                        sql,
                        bindings: formatter.bindings,
                    });
                },
                dropFKRefs(runner, refs) {
                    const formatter = this.client.formatter(this.tableBuilder);
                    return Promise.all(refs.map(function (ref) {
                        const constraintName = formatter.wrap(ref.CONSTRAINT_NAME);
                        const tableName = formatter.wrap(ref.TABLE_NAME);
                        return runner.query({
                            sql: `alter table ${tableName} drop foreign key ${constraintName}`,
                        });
                    }));
                },
                createFKRefs(runner, refs) {
                    const formatter = this.client.formatter(this.tableBuilder);
                    return Promise.all(refs.map(function (ref) {
                        const tableName = formatter.wrap(ref.TABLE_NAME);
                        const keyName = formatter.wrap(ref.CONSTRAINT_NAME);
                        const column = formatter.columnize(ref.COLUMN_NAME);
                        const references = formatter.columnize(ref.REFERENCED_COLUMN_NAME);
                        const inTable = formatter.wrap(ref.REFERENCED_TABLE_NAME);
                        const onUpdate = ` ON UPDATE ${ref.UPDATE_RULE}`;
                        const onDelete = ` ON DELETE ${ref.DELETE_RULE}`;
                        return runner.query({
                            sql: `alter table ${tableName} add constraint ${keyName} ` +
                                'foreign key (' +
                                column +
                                ') references ' +
                                inTable +
                                ' (' +
                                references +
                                ')' +
                                onUpdate +
                                onDelete,
                        });
                    }));
                },
                index(columns, indexName, indexType) {
                    indexName = indexName
                        ? this.formatter.wrap(indexName)
                        : this._indexCommand('index', this.tableNameRaw, columns);
                    this.pushQuery(`alter table ${this.tableName()} add${indexType ? ` ${indexType}` : ''} index ${indexName}(${this.formatter.columnize(columns)})`);
                },
                primary(columns, constraintName) {
                    constraintName = constraintName
                        ? this.formatter.wrap(constraintName)
                        : this.formatter.wrap(`${this.tableNameRaw}_pkey`);
                    this.pushQuery(`alter table ${this.tableName()} add primary key ${constraintName}(${this.formatter.columnize(columns)})`);
                },
                unique(columns, indexName) {
                    indexName = indexName
                        ? this.formatter.wrap(indexName)
                        : this._indexCommand('unique', this.tableNameRaw, columns);
                    this.pushQuery(`alter table ${this.tableName()} add unique ${indexName}(${this.formatter.columnize(columns)})`);
                },
                dropIndex(columns, indexName) {
                    indexName = indexName
                        ? this.formatter.wrap(indexName)
                        : this._indexCommand('index', this.tableNameRaw, columns);
                    this.pushQuery(`alter table ${this.tableName()} drop index ${indexName}`);
                },
                dropForeign(columns, indexName) {
                    indexName = indexName
                        ? this.formatter.wrap(indexName)
                        : this._indexCommand('foreign', this.tableNameRaw, columns);
                    this.pushQuery(`alter table ${this.tableName()} drop foreign key ${indexName}`);
                },
                dropPrimary() {
                    this.pushQuery(`alter table ${this.tableName()} drop primary key`);
                },
                dropUnique(column, indexName) {
                    indexName = indexName
                        ? this.formatter.wrap(indexName)
                        : this._indexCommand('unique', this.tableNameRaw, column);
                    this.pushQuery(`alter table ${this.tableName()} drop index ${indexName}`);
                },
            });
            exports_242("default", TableCompiler_MySQL);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/mysql/schema/columncompiler", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/schema/columncompiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index"], function (exports_243, context_243) {
    "use strict";
    var inherits_js_12, columncompiler_js_4, index_js_33, isObject;
    var __moduleName = context_243 && context_243.id;
    function ColumnCompiler_MySQL() {
        columncompiler_js_4.default.apply(this, arguments);
        this.modifiers = [
            'unsigned',
            'nullable',
            'defaultTo',
            'comment',
            'collate',
            'first',
            'after',
        ];
    }
    return {
        setters: [
            function (inherits_js_12_1) {
                inherits_js_12 = inherits_js_12_1;
            },
            function (columncompiler_js_4_1) {
                columncompiler_js_4 = columncompiler_js_4_1;
            },
            function (index_js_33_1) {
                index_js_33 = index_js_33_1;
            }
        ],
        execute: function () {
            isObject = index_js_33.default.isObject;
            inherits_js_12.default(ColumnCompiler_MySQL, columncompiler_js_4.default);
            Object.assign(ColumnCompiler_MySQL.prototype, {
                increments: 'int unsigned not null auto_increment primary key',
                bigincrements: 'bigint unsigned not null auto_increment primary key',
                bigint: 'bigint',
                double(precision, scale) {
                    if (!precision)
                        return 'double';
                    return `double(${this._num(precision, 8)}, ${this._num(scale, 2)})`;
                },
                integer(length) {
                    length = length ? `(${this._num(length, 11)})` : '';
                    return `int${length}`;
                },
                mediumint: 'mediumint',
                smallint: 'smallint',
                tinyint(length) {
                    length = length ? `(${this._num(length, 1)})` : '';
                    return `tinyint${length}`;
                },
                text(column) {
                    switch (column) {
                        case 'medium':
                        case 'mediumtext':
                            return 'mediumtext';
                        case 'long':
                        case 'longtext':
                            return 'longtext';
                        default:
                            return 'text';
                    }
                },
                mediumtext() {
                    return this.text('medium');
                },
                longtext() {
                    return this.text('long');
                },
                enu(allowed) {
                    return `enum('${allowed.join("', '")}')`;
                },
                datetime(precision) {
                    if (isObject(precision)) {
                        ({ precision } = precision);
                    }
                    return typeof precision === 'number'
                        ? `datetime(${precision})`
                        : 'datetime';
                },
                timestamp(precision) {
                    if (isObject(precision)) {
                        ({ precision } = precision);
                    }
                    return typeof precision === 'number'
                        ? `timestamp(${precision})`
                        : 'timestamp';
                },
                time(precision) {
                    if (isObject(precision)) {
                        ({ precision } = precision);
                    }
                    return typeof precision === 'number' ? `time(${precision})` : 'time';
                },
                bit(length) {
                    return length ? `bit(${this._num(length)})` : 'bit';
                },
                binary(length) {
                    return length ? `varbinary(${this._num(length)})` : 'blob';
                },
                json() {
                    return 'json';
                },
                jsonb() {
                    return 'json';
                },
                defaultTo(value) {
                    if (value === null || value === undefined) {
                        return;
                    }
                    if ((this.type === 'json' || this.type === 'jsonb') && isObject(value)) {
                        return `default ('${JSON.stringify(value)}')`;
                    }
                    const defaultVal = ColumnCompiler_MySQL.super_.prototype.defaultTo.apply(this, arguments);
                    if (this.type !== 'blob' && this.type.indexOf('text') === -1) {
                        return defaultVal;
                    }
                    return '';
                },
                unsigned() {
                    return 'unsigned';
                },
                comment(comment) {
                    if (comment && comment.length > 255) {
                        this.client.logger.warn('Your comment is longer than the max comment length for MySQL');
                    }
                    return comment && `comment '${comment}'`;
                },
                first() {
                    return 'first';
                },
                after(column) {
                    return `after ${this.formatter.wrap(column)}`;
                },
                collate(collation) {
                    return collation && `collate '${collation}'`;
                },
            });
            exports_243("default", ColumnCompiler_MySQL);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/mysql/index", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/util", "https://raw.githubusercontent.com/denjucks/dex/master/lib/client", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/mysql/transaction", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/mysql/query/compiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/mysql/schema/compiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/mysql/schema/tablecompiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/mysql/schema/columncompiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/query/string"], function (exports_244, context_244) {
    "use strict";
    var inherits_js_13, index_js_34, defer, map, util_js_8, client_js_2, transaction_js_5, compiler_js_9, compiler_js_10, tablecompiler_js_5, columncompiler_js_5, string_js_2;
    var __moduleName = context_244 && context_244.id;
    function Client_MySQL(config) {
        client_js_2.default.call(this, config);
    }
    return {
        setters: [
            function (inherits_js_13_1) {
                inherits_js_13 = inherits_js_13_1;
            },
            function (index_js_34_1) {
                index_js_34 = index_js_34_1;
            },
            function (util_js_8_1) {
                util_js_8 = util_js_8_1;
            },
            function (client_js_2_1) {
                client_js_2 = client_js_2_1;
            },
            function (transaction_js_5_1) {
                transaction_js_5 = transaction_js_5_1;
            },
            function (compiler_js_9_1) {
                compiler_js_9 = compiler_js_9_1;
            },
            function (compiler_js_10_1) {
                compiler_js_10 = compiler_js_10_1;
            },
            function (tablecompiler_js_5_1) {
                tablecompiler_js_5 = tablecompiler_js_5_1;
            },
            function (columncompiler_js_5_1) {
                columncompiler_js_5 = columncompiler_js_5_1;
            },
            function (string_js_2_1) {
                string_js_2 = string_js_2_1;
            }
        ],
        execute: function () {
            defer = index_js_34.default.defer;
            map = index_js_34.default.map;
            inherits_js_13.default(Client_MySQL, client_js_2.default);
            Object.assign(Client_MySQL.prototype, {
                dialect: 'mysql',
                driverName: 'mysql',
                _driver() {
                    return require('mysql');
                },
                queryCompiler() {
                    return new compiler_js_9.default(this, ...arguments);
                },
                schemaCompiler() {
                    return new compiler_js_10.default(this, ...arguments);
                },
                tableCompiler() {
                    return new tablecompiler_js_5.default(this, ...arguments);
                },
                columnCompiler() {
                    return new columncompiler_js_5.default(this, ...arguments);
                },
                transaction() {
                    return new transaction_js_5.default(this, ...arguments);
                },
                _escapeBinding: string_js_2.makeEscape(),
                wrapIdentifierImpl(value) {
                    return value !== '*' ? `\`${value.replace(/`/g, '``')}\`` : '*';
                },
                acquireRawConnection() {
                    return new Promise((resolver, rejecter) => {
                        const connection = this.driver.createConnection(this.connectionSettings);
                        connection.on('error', (err) => {
                            connection.__knex__disposed = err;
                        });
                        connection.connect((err) => {
                            if (err) {
                                connection.removeAllListeners();
                                return rejecter(err);
                            }
                            resolver(connection);
                        });
                    });
                },
                async destroyRawConnection(connection) {
                    try {
                        const end = util_js_8.promisify((cb) => connection.end(cb));
                        return await end();
                    }
                    catch (err) {
                        connection.__knex__disposed = err;
                    }
                    finally {
                        defer(() => connection.removeAllListeners());
                    }
                },
                validateConnection(connection) {
                    if (connection.state === 'connected' ||
                        connection.state === 'authenticated') {
                        return true;
                    }
                    return false;
                },
                _stream(connection, obj, stream, options) {
                    options = options || {};
                    const queryOptions = Object.assign({ sql: obj.sql }, obj.options);
                    return new Promise((resolver, rejecter) => {
                        stream.on('error', rejecter);
                        stream.on('end', resolver);
                        const queryStream = connection
                            .query(queryOptions, obj.bindings)
                            .stream(options);
                        queryStream.on('error', (err) => {
                            rejecter(err);
                            stream.emit('error', err);
                        });
                        queryStream.pipe(stream);
                    });
                },
                _query(connection, obj) {
                    if (!obj || typeof obj === 'string')
                        obj = { sql: obj };
                    return new Promise(function (resolver, rejecter) {
                        if (!obj.sql) {
                            resolver();
                            return;
                        }
                        const queryOptions = Object.assign({ sql: obj.sql }, obj.options);
                        connection.query(queryOptions, obj.bindings, function (err, rows, fields) {
                            if (err)
                                return rejecter(err);
                            obj.response = [rows, fields];
                            resolver(obj);
                        });
                    });
                },
                processResponse(obj, runner) {
                    if (obj == null)
                        return;
                    const { response } = obj;
                    const { method } = obj;
                    const rows = response[0];
                    const fields = response[1];
                    if (obj.output)
                        return obj.output.call(runner, rows, fields);
                    switch (method) {
                        case 'select':
                        case 'pluck':
                        case 'first': {
                            if (method === 'pluck') {
                                return map(rows, obj.pluck);
                            }
                            return method === 'first' ? rows[0] : rows;
                        }
                        case 'insert':
                            return [rows.insertId];
                        case 'del':
                        case 'update':
                        case 'counter':
                            return rows.affectedRows;
                        default:
                            return response;
                    }
                },
                canCancelQuery: true,
                async cancelQuery(connectionToKill) {
                    const conn = await this.acquireConnection();
                    try {
                        return await this.query(conn, {
                            method: 'raw',
                            sql: 'KILL QUERY ?',
                            bindings: [connectionToKill.threadId],
                            options: {},
                        });
                    }
                    finally {
                        await this.releaseConnection(conn);
                    }
                },
            });
            exports_244("default", Client_MySQL);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/mysql2/transaction", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/transaction", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/debug@4.1.1/src/index"], function (exports_245, context_245) {
    "use strict";
    var transaction_js_6, index_js_35, debug, Transaction_MySQL2;
    var __moduleName = context_245 && context_245.id;
    return {
        setters: [
            function (transaction_js_6_1) {
                transaction_js_6 = transaction_js_6_1;
            },
            function (index_js_35_1) {
                index_js_35 = index_js_35_1;
            }
        ],
        execute: function () {
            debug = index_js_35.default('knex:tx');
            Transaction_MySQL2 = class Transaction_MySQL2 extends transaction_js_6.default {
            };
            Object.assign(Transaction_MySQL2.prototype, {
                query(conn, sql, status, value) {
                    const t = this;
                    const q = this.trxClient
                        .query(conn, sql)
                        .catch((err) => {
                        if (err.code === 'ER_SP_DOES_NOT_EXIST') {
                            this.trxClient.logger.warn('Transaction was implicitly committed, do not mix transactions and ' +
                                'DDL with MySQL (#805)');
                            return;
                        }
                        status = 2;
                        value = err;
                        t._completed = true;
                        debug('%s error running transaction query', t.txid);
                    })
                        .then(function (res) {
                        if (status === 1)
                            t._resolver(value);
                        if (status === 2) {
                            if (value === undefined) {
                                if (t.doNotRejectOnRollback && /^ROLLBACK\b/i.test(sql)) {
                                    t._resolver();
                                    return;
                                }
                                value = new Error(`Transaction rejected with non-error: ${value}`);
                            }
                            t._rejecter(value);
                            return res;
                        }
                    });
                    if (status === 1 || status === 2) {
                        t._completed = true;
                    }
                    return q;
                },
            });
            exports_245("default", Transaction_MySQL2);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/mysql2/index", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/mysql/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/mysql2/transaction"], function (exports_246, context_246) {
    "use strict";
    var inherits_js_14, index_js_36, transaction_js_7;
    var __moduleName = context_246 && context_246.id;
    function Client_MySQL2(config) {
        index_js_36.default.call(this, config);
    }
    return {
        setters: [
            function (inherits_js_14_1) {
                inherits_js_14 = inherits_js_14_1;
            },
            function (index_js_36_1) {
                index_js_36 = index_js_36_1;
            },
            function (transaction_js_7_1) {
                transaction_js_7 = transaction_js_7_1;
            }
        ],
        execute: function () {
            inherits_js_14.default(Client_MySQL2, index_js_36.default);
            Object.assign(Client_MySQL2.prototype, {
                driverName: 'mysql2',
                transaction() {
                    return new transaction_js_7.default(this, ...arguments);
                },
                _driver() {
                    return require('mysql2');
                },
                validateConnection(connection) {
                    if (connection._fatalError) {
                        return false;
                    }
                    return true;
                },
            });
            exports_246("default", Client_MySQL2);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracle/utils", [], function (exports_247, context_247) {
    "use strict";
    var __moduleName = context_247 && context_247.id;
    function generateCombinedName(logger, postfix, name, subNames) {
        const crypto = require('crypto');
        const limit = 30;
        if (!Array.isArray(subNames))
            subNames = subNames ? [subNames] : [];
        const table = name.replace(/\.|-/g, '_');
        const subNamesPart = subNames.join('_');
        let result = `${table}_${subNamesPart.length ? subNamesPart + '_' : ''}${postfix}`.toLowerCase();
        if (result.length > limit) {
            logger.warn(`Automatically generated name "${result}" exceeds ${limit} character ` +
                `limit for Oracle. Using base64 encoded sha1 of that name instead.`);
            result = crypto
                .createHash('sha1')
                .update(result)
                .digest('base64')
                .replace('=', '');
        }
        return result;
    }
    exports_247("generateCombinedName", generateCombinedName);
    function wrapSqlWithCatch(sql, errorNumberToCatch) {
        return (`begin execute immediate '${sql.replace(/'/g, "''")}'; ` +
            `exception when others then if sqlcode != ${errorNumberToCatch} then raise; ` +
            `end if; ` +
            `end;`);
    }
    exports_247("wrapSqlWithCatch", wrapSqlWithCatch);
    function ReturningHelper(columnName) {
        this.columnName = columnName;
    }
    exports_247("ReturningHelper", ReturningHelper);
    function isConnectionError(err) {
        return [
            'ORA-03114',
            'ORA-03113',
            'ORA-03135',
            'ORA-12514',
            'ORA-00022',
            'ORA-00028',
            'ORA-00031',
            'ORA-00045',
            'ORA-00378',
            'ORA-00602',
            'ORA-00603',
            'ORA-00609',
            'ORA-01012',
            'ORA-01041',
            'ORA-01043',
            'ORA-01089',
            'ORA-01092',
            'ORA-02396',
            'ORA-03122',
            'ORA-12153',
            'ORA-12537',
            'ORA-12547',
            'ORA-12570',
            'ORA-12583',
            'ORA-27146',
            'ORA-28511',
            'ORA-56600',
            'NJS-040',
            'NJS-024',
            'NJS-003',
        ].some(function (prefix) {
            return err.message.indexOf(prefix) === 0;
        });
    }
    exports_247("isConnectionError", isConnectionError);
    return {
        setters: [],
        execute: function () {
            ReturningHelper.prototype.toString = function () {
                return `[object ReturningHelper:${this.columnName}]`;
            };
            exports_247("default", {
                generateCombinedName,
                isConnectionError,
                wrapSqlWithCatch,
                ReturningHelper,
            });
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracle/query/compiler", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/query/compiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracle/utils"], function (exports_248, context_248) {
    "use strict";
    var index_js_37, compact, identity, isEmpty, isPlainObject, isString, reduce, compiler_js_11, utils_js_1, components, QueryCompiler_Oracle;
    var __moduleName = context_248 && context_248.id;
    return {
        setters: [
            function (index_js_37_1) {
                index_js_37 = index_js_37_1;
            },
            function (compiler_js_11_1) {
                compiler_js_11 = compiler_js_11_1;
            },
            function (utils_js_1_1) {
                utils_js_1 = utils_js_1_1;
            }
        ],
        execute: function () {
            compact = index_js_37.default.compact;
            identity = index_js_37.default.identity;
            isEmpty = index_js_37.default.isEmpty;
            isPlainObject = index_js_37.default.isPlainObject;
            isString = index_js_37.default.isString;
            reduce = index_js_37.default.reduce;
            components = [
                'columns',
                'join',
                'where',
                'union',
                'group',
                'having',
                'order',
                'lock',
            ];
            QueryCompiler_Oracle = class QueryCompiler_Oracle extends compiler_js_11.default {
                constructor(client, builder) {
                    super(client, builder);
                    this.first = this.select;
                }
                insert() {
                    let insertValues = this.single.insert || [];
                    let { returning } = this.single;
                    if (!Array.isArray(insertValues) && isPlainObject(this.single.insert)) {
                        insertValues = [this.single.insert];
                    }
                    if (returning && !Array.isArray(returning)) {
                        returning = [returning];
                    }
                    if (Array.isArray(insertValues) &&
                        insertValues.length === 1 &&
                        isEmpty(insertValues[0])) {
                        return this._addReturningToSqlAndConvert(`insert into ${this.tableName} (${this.formatter.wrap(this.single.returning)}) values (default)`, returning, this.tableName);
                    }
                    if (isEmpty(this.single.insert) &&
                        typeof this.single.insert !== 'function') {
                        return '';
                    }
                    const insertData = this._prepInsert(insertValues);
                    const sql = {};
                    if (isString(insertData)) {
                        return this._addReturningToSqlAndConvert(`insert into ${this.tableName} ${insertData}`, returning);
                    }
                    if (insertData.values.length === 1) {
                        return this._addReturningToSqlAndConvert(`insert into ${this.tableName} (${this.formatter.columnize(insertData.columns)}) values (${this.formatter.parameterize(insertData.values[0])})`, returning, this.tableName);
                    }
                    const insertDefaultsOnly = insertData.columns.length === 0;
                    sql.sql =
                        'begin ' +
                            insertData.values
                                .map((value) => {
                                let returningHelper;
                                const parameterizedValues = !insertDefaultsOnly
                                    ? this.formatter.parameterize(value, this.client.valueForUndefined)
                                    : '';
                                const returningValues = Array.isArray(returning)
                                    ? returning
                                    : [returning];
                                let subSql = `insert into ${this.tableName} `;
                                if (returning) {
                                    returningHelper = new utils_js_1.ReturningHelper(returningValues.join(':'));
                                    sql.outParams = (sql.outParams || []).concat(returningHelper);
                                }
                                if (insertDefaultsOnly) {
                                    subSql += `(${this.formatter.wrap(this.single.returning)}) values (default)`;
                                }
                                else {
                                    subSql += `(${this.formatter.columnize(insertData.columns)}) values (${parameterizedValues})`;
                                }
                                subSql += returning
                                    ? ` returning ROWID into ${this.formatter.parameter(returningHelper)}`
                                    : '';
                                subSql = this.formatter.client.positionBindings(subSql);
                                const parameterizedValuesWithoutDefault = parameterizedValues
                                    .replace('DEFAULT, ', '')
                                    .replace(', DEFAULT', '');
                                return (`execute immediate '${subSql.replace(/'/g, "''")}` +
                                    (parameterizedValuesWithoutDefault || returning ? "' using " : '') +
                                    parameterizedValuesWithoutDefault +
                                    (parameterizedValuesWithoutDefault && returning ? ', ' : '') +
                                    (returning ? 'out ?' : '') +
                                    ';');
                            })
                                .join(' ') +
                            'end;';
                    if (returning) {
                        sql.returning = returning;
                        sql.returningSql =
                            `select ${this.formatter.columnize(returning)}` +
                                ' from ' +
                                this.tableName +
                                ' where ROWID in (' +
                                sql.outParams.map((v, i) => `:${i + 1}`).join(', ') +
                                ')' +
                                ' order by case ROWID ' +
                                sql.outParams
                                    .map((v, i) => `when CHARTOROWID(:${i + 1}) then ${i}`)
                                    .join(' ') +
                                ' end';
                    }
                    return sql;
                }
                update() {
                    const updates = this._prepUpdate(this.single.update);
                    const where = this.where();
                    let { returning } = this.single;
                    const sql = `update ${this.tableName}` +
                        ' set ' +
                        updates.join(', ') +
                        (where ? ` ${where}` : '');
                    if (!returning) {
                        return sql;
                    }
                    if (!Array.isArray(returning)) {
                        returning = [returning];
                    }
                    return this._addReturningToSqlAndConvert(sql, returning, this.tableName);
                }
                truncate() {
                    return `truncate table ${this.tableName}`;
                }
                forUpdate() {
                    return 'for update';
                }
                forShare() {
                    this.client.logger.warn('lock for share is not supported by oracle dialect');
                    return '';
                }
                columnInfo() {
                    const column = this.single.columnInfo;
                    const table = this.client.customWrapIdentifier(this.single.table, identity);
                    const sql = `select * from xmltable( '/ROWSET/ROW'
      passing dbms_xmlgen.getXMLType('
      select char_col_decl_length, column_name, data_type, data_default, nullable
      from user_tab_columns where table_name = ''${table}'' ')
      columns
      CHAR_COL_DECL_LENGTH number, COLUMN_NAME varchar2(200), DATA_TYPE varchar2(106),
      DATA_DEFAULT clob, NULLABLE varchar2(1))`;
                    return {
                        sql: sql,
                        output(resp) {
                            const out = reduce(resp, function (columns, val) {
                                columns[val.COLUMN_NAME] = {
                                    type: val.DATA_TYPE,
                                    defaultValue: val.DATA_DEFAULT,
                                    maxLength: val.CHAR_COL_DECL_LENGTH,
                                    nullable: val.NULLABLE === 'Y',
                                };
                                return columns;
                            }, {});
                            return (column && out[column]) || out;
                        },
                    };
                }
                select() {
                    let query = this.with();
                    const statements = components.map((component) => {
                        return this[component]();
                    });
                    query += compact(statements).join(' ');
                    return this._surroundQueryWithLimitAndOffset(query);
                }
                aggregate(stmt) {
                    return this._aggregate(stmt, { aliasSeparator: ' ' });
                }
                _addReturningToSqlAndConvert(sql, returning, tableName) {
                    const res = {
                        sql,
                    };
                    if (!returning) {
                        return res;
                    }
                    const returningValues = Array.isArray(returning) ? returning : [returning];
                    const returningHelper = new utils_js_1.ReturningHelper(returningValues.join(':'));
                    res.sql =
                        sql +
                            ' returning ROWID into ' +
                            this.formatter.parameter(returningHelper);
                    res.returningSql = `select ${this.formatter.columnize(returning)} from ${tableName} where ROWID = :1`;
                    res.outParams = [returningHelper];
                    res.returning = returning;
                    return res;
                }
                _surroundQueryWithLimitAndOffset(query) {
                    let { limit } = this.single;
                    const { offset } = this.single;
                    const hasLimit = limit || limit === 0 || limit === '0';
                    limit = +limit;
                    if (!hasLimit && !offset)
                        return query;
                    query = query || '';
                    if (hasLimit && !offset) {
                        return `select * from (${query}) where rownum <= ${this.formatter.parameter(limit)}`;
                    }
                    const endRow = +offset + (hasLimit ? limit : 10000000000000);
                    return ('select * from ' +
                        '(select row_.*, ROWNUM rownum_ from (' +
                        query +
                        ') row_ ' +
                        'where rownum <= ' +
                        this.formatter.parameter(endRow) +
                        ') ' +
                        'where rownum_ > ' +
                        this.formatter.parameter(offset));
                }
            };
            exports_248("default", QueryCompiler_Oracle);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracledb/utils", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracle/utils"], function (exports_249, context_249) {
    "use strict";
    var utils_js_2;
    var __moduleName = context_249 && context_249.id;
    function BlobHelper(columnName, value) {
        this.columnName = columnName;
        this.value = value;
        this.returning = false;
    }
    exports_249("BlobHelper", BlobHelper);
    return {
        setters: [
            function (utils_js_2_1) {
                utils_js_2 = utils_js_2_1;
            }
        ],
        execute: function () {
            BlobHelper.prototype.toString = function () {
                return '[object BlobHelper:' + this.columnName + ']';
            };
            utils_js_2.default.BlobHelper = BlobHelper;
            exports_249("default", utils_js_2.default);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracledb/query/compiler", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracle/query/compiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracledb/utils"], function (exports_250, context_250) {
    "use strict";
    var index_js_38, clone, each, isEmpty, isPlainObject, isString, compiler_js_12, utils_js_3, ReturningHelper, BlobHelper, Oracledb_Compiler;
    var __moduleName = context_250 && context_250.id;
    return {
        setters: [
            function (index_js_38_1) {
                index_js_38 = index_js_38_1;
            },
            function (compiler_js_12_1) {
                compiler_js_12 = compiler_js_12_1;
            },
            function (utils_js_3_1) {
                utils_js_3 = utils_js_3_1;
            }
        ],
        execute: function () {
            clone = index_js_38.default.clone;
            each = index_js_38.default.each;
            isEmpty = index_js_38.default.isEmpty;
            isPlainObject = index_js_38.default.isPlainObject;
            isString = index_js_38.default.isString;
            ReturningHelper = utils_js_3.default.ReturningHelper;
            BlobHelper = utils_js_3.default.BlobHelper;
            Oracledb_Compiler = class Oracledb_Compiler extends compiler_js_12.default {
                constructor(client, builder) {
                    super(client, builder);
                }
                insert() {
                    const self = this;
                    const outBindPrep = this._prepOutbindings(this.single.insert, this.single.returning);
                    const outBinding = outBindPrep.outBinding;
                    const returning = outBindPrep.returning;
                    const insertValues = outBindPrep.values;
                    if (Array.isArray(insertValues) &&
                        insertValues.length === 1 &&
                        isEmpty(insertValues[0])) {
                        return this._addReturningToSqlAndConvert('insert into ' +
                            this.tableName +
                            ' (' +
                            this.formatter.wrap(this.single.returning) +
                            ') values (default)', outBinding[0], this.tableName, returning);
                    }
                    if (isEmpty(this.single.insert) &&
                        typeof this.single.insert !== 'function') {
                        return '';
                    }
                    const insertData = this._prepInsert(insertValues);
                    const sql = {};
                    if (isString(insertData)) {
                        return this._addReturningToSqlAndConvert('insert into ' + this.tableName + ' ' + insertData, outBinding[0], this.tableName, returning);
                    }
                    if (insertData.values.length === 1) {
                        return this._addReturningToSqlAndConvert('insert into ' +
                            this.tableName +
                            ' (' +
                            this.formatter.columnize(insertData.columns) +
                            ') values (' +
                            this.formatter.parameterize(insertData.values[0]) +
                            ')', outBinding[0], this.tableName, returning);
                    }
                    const insertDefaultsOnly = insertData.columns.length === 0;
                    sql.returning = returning;
                    sql.sql =
                        'begin ' +
                            insertData.values
                                .map(function (value, index) {
                                const parameterizedValues = !insertDefaultsOnly
                                    ? self.formatter.parameterize(value, self.client.valueForUndefined)
                                    : '';
                                let subSql = 'insert into ' + self.tableName;
                                if (insertDefaultsOnly) {
                                    subSql +=
                                        ' (' +
                                            self.formatter.wrap(self.single.returning) +
                                            ') values (default)';
                                }
                                else {
                                    subSql +=
                                        ' (' +
                                            self.formatter.columnize(insertData.columns) +
                                            ') values (' +
                                            parameterizedValues +
                                            ')';
                                }
                                let returningClause = '';
                                let intoClause = '';
                                let usingClause = '';
                                let outClause = '';
                                each(value, function (val) {
                                    if (!(val instanceof BlobHelper)) {
                                        usingClause += ' ?,';
                                    }
                                });
                                usingClause = usingClause.slice(0, -1);
                                outBinding[index].forEach(function (ret) {
                                    const columnName = ret.columnName || ret;
                                    returningClause += self.formatter.wrap(columnName) + ',';
                                    intoClause += ' ?,';
                                    outClause += ' out ?,';
                                    if (ret instanceof BlobHelper) {
                                        return self.formatter.bindings.push(ret);
                                    }
                                    self.formatter.bindings.push(new ReturningHelper(columnName));
                                });
                                returningClause = returningClause.slice(0, -1);
                                intoClause = intoClause.slice(0, -1);
                                outClause = outClause.slice(0, -1);
                                if (returningClause && intoClause) {
                                    subSql += ' returning ' + returningClause + ' into' + intoClause;
                                }
                                subSql = self.formatter.client.positionBindings(subSql);
                                const parameterizedValuesWithoutDefaultAndBlob = parameterizedValues
                                    .replace('DEFAULT, ', '')
                                    .replace(', DEFAULT', '')
                                    .replace('EMPTY_BLOB(), ', '')
                                    .replace(', EMPTY_BLOB()', '');
                                return ("execute immediate '" +
                                    subSql.replace(/'/g, "''") +
                                    (parameterizedValuesWithoutDefaultAndBlob || value
                                        ? "' using "
                                        : '') +
                                    parameterizedValuesWithoutDefaultAndBlob +
                                    (parameterizedValuesWithoutDefaultAndBlob && outClause ? ',' : '') +
                                    outClause +
                                    ';');
                            })
                                .join(' ') +
                            'end;';
                    sql.outBinding = outBinding;
                    if (returning[0] === '*') {
                        sql.returningSql = function () {
                            return ('select * from ' +
                                self.tableName +
                                ' where ROWID in (' +
                                this.outBinding
                                    .map(function (v, i) {
                                    return ':' + (i + 1);
                                })
                                    .join(', ') +
                                ')' +
                                ' order by case ROWID ' +
                                this.outBinding
                                    .map(function (v, i) {
                                    return 'when CHARTOROWID(:' + (i + 1) + ') then ' + i;
                                })
                                    .join(' ') +
                                ' end');
                        };
                    }
                    return sql;
                }
                _addReturningToSqlAndConvert(sql, outBinding, tableName, returning) {
                    const self = this;
                    const res = {
                        sql: sql,
                    };
                    if (!outBinding) {
                        return res;
                    }
                    const returningValues = Array.isArray(outBinding)
                        ? outBinding
                        : [outBinding];
                    let returningClause = '';
                    let intoClause = '';
                    returningValues.forEach(function (ret) {
                        const columnName = ret.columnName || ret;
                        returningClause += self.formatter.wrap(columnName) + ',';
                        intoClause += '?,';
                        if (ret instanceof BlobHelper) {
                            return self.formatter.bindings.push(ret);
                        }
                        self.formatter.bindings.push(new ReturningHelper(columnName));
                    });
                    res.sql = sql;
                    returningClause = returningClause.slice(0, -1);
                    intoClause = intoClause.slice(0, -1);
                    if (returningClause && intoClause) {
                        res.sql += ' returning ' + returningClause + ' into ' + intoClause;
                    }
                    res.outBinding = [outBinding];
                    if (returning[0] === '*') {
                        res.returningSql = function () {
                            return 'select * from ' + self.tableName + ' where ROWID = :1';
                        };
                    }
                    res.returning = returning;
                    return res;
                }
                _prepOutbindings(paramValues, paramReturning) {
                    const result = {};
                    let params = paramValues || [];
                    let returning = paramReturning || [];
                    if (!Array.isArray(params) && isPlainObject(paramValues)) {
                        params = [params];
                    }
                    if (returning && !Array.isArray(returning)) {
                        returning = [returning];
                    }
                    const outBinding = [];
                    each(params, function (values, index) {
                        if (returning[0] === '*') {
                            outBinding[index] = ['ROWID'];
                        }
                        else {
                            outBinding[index] = clone(returning);
                        }
                        each(values, function (value, key) {
                            if (value instanceof Buffer) {
                                values[key] = new BlobHelper(key, value);
                                const blobIndex = outBinding[index].indexOf(key);
                                if (blobIndex >= 0) {
                                    outBinding[index].splice(blobIndex, 1);
                                    values[key].returning = true;
                                }
                                outBinding[index].push(values[key]);
                            }
                            if (value === undefined) {
                                delete params[index][key];
                            }
                        });
                    });
                    result.returning = returning;
                    result.outBinding = outBinding;
                    result.values = params;
                    return result;
                }
                update() {
                    const self = this;
                    const sql = {};
                    const outBindPrep = this._prepOutbindings(this.single.update || this.single.counter, this.single.returning);
                    const outBinding = outBindPrep.outBinding;
                    const returning = outBindPrep.returning;
                    const updates = this._prepUpdate(this.single.update);
                    const where = this.where();
                    let returningClause = '';
                    let intoClause = '';
                    if (isEmpty(updates) && typeof this.single.update !== 'function') {
                        return '';
                    }
                    outBinding.forEach(function (out) {
                        out.forEach(function (ret) {
                            const columnName = ret.columnName || ret;
                            returningClause += self.formatter.wrap(columnName) + ',';
                            intoClause += ' ?,';
                            if (ret instanceof BlobHelper) {
                                return self.formatter.bindings.push(ret);
                            }
                            self.formatter.bindings.push(new ReturningHelper(columnName));
                        });
                    });
                    returningClause = returningClause.slice(0, -1);
                    intoClause = intoClause.slice(0, -1);
                    sql.outBinding = outBinding;
                    sql.returning = returning;
                    sql.sql =
                        'update ' +
                            this.tableName +
                            ' set ' +
                            updates.join(', ') +
                            (where ? ' ' + where : '');
                    if (outBinding.length && !isEmpty(outBinding[0])) {
                        sql.sql += ' returning ' + returningClause + ' into' + intoClause;
                    }
                    if (returning[0] === '*') {
                        sql.returningSql = function () {
                            let sql = 'select * from ' + self.tableName;
                            const modifiedRowsCount = this.rowsAffected.length || this.rowsAffected;
                            let returningSqlIn = ' where ROWID in (';
                            let returningSqlOrderBy = ') order by case ROWID ';
                            for (let i = 0; i < modifiedRowsCount; i++) {
                                if (this.returning[0] === '*') {
                                    returningSqlIn += ':' + (i + 1) + ', ';
                                    returningSqlOrderBy +=
                                        'when CHARTOROWID(:' + (i + 1) + ') then ' + i + ' ';
                                }
                            }
                            if (this.returning[0] === '*') {
                                this.returning = this.returning.slice(0, -1);
                                returningSqlIn = returningSqlIn.slice(0, -2);
                                returningSqlOrderBy = returningSqlOrderBy.slice(0, -1);
                            }
                            return (sql += returningSqlIn + returningSqlOrderBy + ' end');
                        };
                    }
                    return sql;
                }
            };
            exports_250("default", Oracledb_Compiler);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracle/schema/trigger", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracle/utils"], function (exports_251, context_251) {
    "use strict";
    var utils_js_4, trigger;
    var __moduleName = context_251 && context_251.id;
    return {
        setters: [
            function (utils_js_4_1) {
                utils_js_4 = utils_js_4_1;
            }
        ],
        execute: function () {
            trigger = {
                renameColumnTrigger: function (logger, tableName, columnName, to) {
                    const triggerName = utils_js_4.default.generateCombinedName(logger, 'autoinc_trg', tableName);
                    const sequenceName = utils_js_4.default.generateCombinedName(logger, 'seq', tableName);
                    return (`DECLARE ` +
                        `PK_NAME VARCHAR(200); ` +
                        `IS_AUTOINC NUMBER := 0; ` +
                        `BEGIN` +
                        `  EXECUTE IMMEDIATE ('ALTER TABLE "${tableName}" RENAME COLUMN "${columnName}" TO "${to}"');` +
                        `  SELECT COUNT(*) INTO IS_AUTOINC from "USER_TRIGGERS" where trigger_name = '${triggerName}';` +
                        `  IF (IS_AUTOINC > 0) THEN` +
                        `    SELECT cols.column_name INTO PK_NAME` +
                        `    FROM all_constraints cons, all_cons_columns cols` +
                        `    WHERE cons.constraint_type = 'P'` +
                        `    AND cons.constraint_name = cols.constraint_name` +
                        `    AND cons.owner = cols.owner` +
                        `    AND cols.table_name = '${tableName}';` +
                        `    IF ('${to}' = PK_NAME) THEN` +
                        `      EXECUTE IMMEDIATE ('DROP TRIGGER "${triggerName}"');` +
                        `      EXECUTE IMMEDIATE ('create or replace trigger "${triggerName}"` +
                        `      BEFORE INSERT on "${tableName}" for each row` +
                        `        declare` +
                        `        checking number := 1;` +
                        `        begin` +
                        `          if (:new."${to}" is null) then` +
                        `            while checking >= 1 loop` +
                        `              select "${sequenceName}".nextval into :new."${to}" from dual;` +
                        `              select count("${to}") into checking from "${tableName}"` +
                        `              where "${to}" = :new."${to}";` +
                        `            end loop;` +
                        `          end if;` +
                        `        end;');` +
                        `    end if;` +
                        `  end if;` +
                        `END;`);
                },
                createAutoIncrementTrigger: function (logger, tableName) {
                    const triggerName = utils_js_4.default.generateCombinedName(logger, 'autoinc_trg', tableName);
                    const sequenceName = utils_js_4.default.generateCombinedName(logger, 'seq', tableName);
                    return (`DECLARE ` +
                        `PK_NAME VARCHAR(200); ` +
                        `BEGIN` +
                        `  EXECUTE IMMEDIATE ('CREATE SEQUENCE "${sequenceName}"');` +
                        `  SELECT cols.column_name INTO PK_NAME` +
                        `  FROM all_constraints cons, all_cons_columns cols` +
                        `  WHERE cons.constraint_type = 'P'` +
                        `  AND cons.constraint_name = cols.constraint_name` +
                        `  AND cons.owner = cols.owner` +
                        `  AND cols.table_name = '${tableName}';` +
                        `  execute immediate ('create or replace trigger "${triggerName}"` +
                        `  BEFORE INSERT on "${tableName}"` +
                        `  for each row` +
                        `  declare` +
                        `  checking number := 1;` +
                        `  begin` +
                        `    if (:new."' || PK_NAME || '" is null) then` +
                        `      while checking >= 1 loop` +
                        `        select "${sequenceName}".nextval into :new."' || PK_NAME || '" from dual;` +
                        `        select count("' || PK_NAME || '") into checking from "${tableName}"` +
                        `        where "' || PK_NAME || '" = :new."' || PK_NAME || '";` +
                        `      end loop;` +
                        `    end if;` +
                        `  end;'); ` +
                        `END;`);
                },
                renameTableAndAutoIncrementTrigger: function (logger, tableName, to) {
                    const triggerName = utils_js_4.default.generateCombinedName(logger, 'autoinc_trg', tableName);
                    const sequenceName = utils_js_4.default.generateCombinedName(logger, 'seq', tableName);
                    const toTriggerName = utils_js_4.default.generateCombinedName(logger, 'autoinc_trg', to);
                    const toSequenceName = utils_js_4.default.generateCombinedName(logger, 'seq', to);
                    return (`DECLARE ` +
                        `PK_NAME VARCHAR(200); ` +
                        `IS_AUTOINC NUMBER := 0; ` +
                        `BEGIN` +
                        `  EXECUTE IMMEDIATE ('RENAME "${tableName}" TO "${to}"');` +
                        `  SELECT COUNT(*) INTO IS_AUTOINC from "USER_TRIGGERS" where trigger_name = '${triggerName}';` +
                        `  IF (IS_AUTOINC > 0) THEN` +
                        `    EXECUTE IMMEDIATE ('DROP TRIGGER "${triggerName}"');` +
                        `    EXECUTE IMMEDIATE ('RENAME "${sequenceName}" TO "${toSequenceName}"');` +
                        `    SELECT cols.column_name INTO PK_NAME` +
                        `    FROM all_constraints cons, all_cons_columns cols` +
                        `    WHERE cons.constraint_type = 'P'` +
                        `    AND cons.constraint_name = cols.constraint_name` +
                        `    AND cons.owner = cols.owner` +
                        `    AND cols.table_name = '${to}';` +
                        `    EXECUTE IMMEDIATE ('create or replace trigger "${toTriggerName}"` +
                        `    BEFORE INSERT on "${to}" for each row` +
                        `      declare` +
                        `      checking number := 1;` +
                        `      begin` +
                        `        if (:new."' || PK_NAME || '" is null) then` +
                        `          while checking >= 1 loop` +
                        `            select "${toSequenceName}".nextval into :new."' || PK_NAME || '" from dual;` +
                        `            select count("' || PK_NAME || '") into checking from "${to}"` +
                        `            where "' || PK_NAME || '" = :new."' || PK_NAME || '";` +
                        `          end loop;` +
                        `        end if;` +
                        `      end;');` +
                        `  end if;` +
                        `END;`);
                },
            };
            exports_251("default", trigger);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracle/schema/columncompiler", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/raw", "https://raw.githubusercontent.com/denjucks/dex/master/lib/schema/columncompiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracle/schema/trigger"], function (exports_252, context_252) {
    "use strict";
    var index_js_39, uniq, inherits_js_15, raw_js_7, columncompiler_js_6, trigger_js_1;
    var __moduleName = context_252 && context_252.id;
    function ColumnCompiler_Oracle() {
        columncompiler_js_6.default.apply(this, arguments);
        this.modifiers = ['defaultTo', 'checkIn', 'nullable', 'comment'];
    }
    return {
        setters: [
            function (index_js_39_1) {
                index_js_39 = index_js_39_1;
            },
            function (inherits_js_15_1) {
                inherits_js_15 = inherits_js_15_1;
            },
            function (raw_js_7_1) {
                raw_js_7 = raw_js_7_1;
            },
            function (columncompiler_js_6_1) {
                columncompiler_js_6 = columncompiler_js_6_1;
            },
            function (trigger_js_1_1) {
                trigger_js_1 = trigger_js_1_1;
            }
        ],
        execute: function () {
            uniq = index_js_39.default.uniq;
            inherits_js_15.default(ColumnCompiler_Oracle, columncompiler_js_6.default);
            Object.assign(ColumnCompiler_Oracle.prototype, {
                _createAutoIncrementTriggerAndSequence() {
                    this.pushAdditional(function () {
                        const tableName = this.tableCompiler.tableNameRaw;
                        const createTriggerSQL = trigger_js_1.default.createAutoIncrementTrigger(this.client.logger, tableName);
                        this.pushQuery(createTriggerSQL);
                    });
                },
                increments() {
                    this._createAutoIncrementTriggerAndSequence();
                    return 'integer not null primary key';
                },
                bigincrements() {
                    this._createAutoIncrementTriggerAndSequence();
                    return 'number(20, 0) not null primary key';
                },
                floating(precision) {
                    const parsedPrecision = this._num(precision, 0);
                    return `float${parsedPrecision ? `(${parsedPrecision})` : ''}`;
                },
                double(precision, scale) {
                    return `number(${this._num(precision, 8)}, ${this._num(scale, 2)})`;
                },
                decimal(precision, scale) {
                    if (precision === null)
                        return 'decimal';
                    return `decimal(${this._num(precision, 8)}, ${this._num(scale, 2)})`;
                },
                integer(length) {
                    return length ? `number(${this._num(length, 11)})` : 'integer';
                },
                tinyint: 'smallint',
                smallint: 'smallint',
                mediumint: 'integer',
                biginteger: 'number(20, 0)',
                text: 'clob',
                enu(allowed) {
                    allowed = uniq(allowed);
                    const maxLength = (allowed || []).reduce((maxLength, name) => Math.max(maxLength, String(name).length), 1);
                    this.columnBuilder._modifiers.checkIn = [allowed];
                    return `varchar2(${maxLength})`;
                },
                time: 'timestamp with time zone',
                datetime(without) {
                    return without ? 'timestamp' : 'timestamp with time zone';
                },
                timestamp(without) {
                    return without ? 'timestamp' : 'timestamp with time zone';
                },
                bit: 'clob',
                json: 'clob',
                bool() {
                    this.columnBuilder._modifiers.checkIn = [[0, 1]];
                    return 'number(1, 0)';
                },
                varchar(length) {
                    return `varchar2(${this._num(length, 255)})`;
                },
                comment(comment) {
                    const columnName = this.args[0] || this.defaults('columnName');
                    this.pushAdditional(function () {
                        this.pushQuery(`comment on column ${this.tableCompiler.tableName()}.` +
                            this.formatter.wrap(columnName) +
                            " is '" +
                            (comment || '') +
                            "'");
                    }, comment);
                },
                checkIn(value) {
                    if (value === undefined) {
                        return '';
                    }
                    else if (value instanceof raw_js_7.default) {
                        value = value.toQuery();
                    }
                    else if (Array.isArray(value)) {
                        value = value.map((v) => `'${v}'`).join(', ');
                    }
                    else {
                        value = `'${value}'`;
                    }
                    return `check (${this.formatter.wrap(this.args[0])} in (${value}))`;
                },
            });
            exports_252("default", ColumnCompiler_Oracle);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracledb/schema/columncompiler", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracle/schema/columncompiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index"], function (exports_253, context_253) {
    "use strict";
    var inherits_js_16, columncompiler_js_7, index_js_40, isObject;
    var __moduleName = context_253 && context_253.id;
    function ColumnCompiler_Oracledb() {
        columncompiler_js_7.default.apply(this, arguments);
    }
    return {
        setters: [
            function (inherits_js_16_1) {
                inherits_js_16 = inherits_js_16_1;
            },
            function (columncompiler_js_7_1) {
                columncompiler_js_7 = columncompiler_js_7_1;
            },
            function (index_js_40_1) {
                index_js_40 = index_js_40_1;
            }
        ],
        execute: function () {
            isObject = index_js_40.default.isObject;
            inherits_js_16.default(ColumnCompiler_Oracledb, columncompiler_js_7.default);
            Object.assign(ColumnCompiler_Oracledb.prototype, {
                time: 'timestamp with local time zone',
                datetime: function (withoutTz) {
                    let useTz;
                    if (isObject(withoutTz)) {
                        ({ useTz } = withoutTz);
                    }
                    else {
                        useTz = !withoutTz;
                    }
                    return useTz ? 'timestamp with local time zone' : 'timestamp';
                },
                timestamp: function (withoutTz) {
                    let useTz;
                    if (isObject(withoutTz)) {
                        ({ useTz } = withoutTz);
                    }
                    else {
                        useTz = !withoutTz;
                    }
                    return useTz ? 'timestamp with local time zone' : 'timestamp';
                },
            });
            exports_253("default", ColumnCompiler_Oracledb);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/buffer", [], function (exports_254, context_254) {
    "use strict";
    var r, t, e, n, o, a, h, a$1, e$1, n$1, i, o$1, j, Y, Buffer, INSPECT_MAX_BYTES, kMaxLength;
    var __moduleName = context_254 && context_254.id;
    function u(r) { var t = r.length; if (t % 4 > 0)
        throw new Error("Invalid string. Length must be a multiple of 4"); var e = r.indexOf("="); return -1 === e && (e = t), [e, e === t ? 0 : 4 - e % 4]; }
    function c(r, e, n) { for (var o, a, h = [], u = e; u < n; u += 3)
        o = (r[u] << 16 & 16711680) + (r[u + 1] << 8 & 65280) + (255 & r[u + 2]), h.push(t[(a = o) >> 18 & 63] + t[a >> 12 & 63] + t[a >> 6 & 63] + t[63 & a]); return h.join(""); }
    function f(t) { if (t > 2147483647)
        throw new RangeError('The value "' + t + '" is invalid for option "size"'); var r = new Uint8Array(t); return Object.setPrototypeOf(r, u$1.prototype), r; }
    function u$1(t, r, e) { if ("number" == typeof t) {
        if ("string" == typeof r)
            throw new TypeError('The "string" argument must be of type string. Received type number');
        return a$2(t);
    } return s(t, r, e); }
    function s(t, r, e) { if ("string" == typeof t)
        return function (t, r) { "string" == typeof r && "" !== r || (r = "utf8"); if (!u$1.isEncoding(r))
            throw new TypeError("Unknown encoding: " + r); var e = 0 | y(t, r), n = f(e), i = n.write(t, r); i !== e && (n = n.slice(0, i)); return n; }(t, r); if (ArrayBuffer.isView(t))
        return p(t); if (null == t)
        throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof t); if (F(t, ArrayBuffer) || t && F(t.buffer, ArrayBuffer))
        return c$1(t, r, e); if ("undefined" != typeof SharedArrayBuffer && (F(t, SharedArrayBuffer) || t && F(t.buffer, SharedArrayBuffer)))
        return c$1(t, r, e); if ("number" == typeof t)
        throw new TypeError('The "value" argument must not be of type number. Received type number'); var n = t.valueOf && t.valueOf(); if (null != n && n !== t)
        return u$1.from(n, r, e); var i = function (t) { if (u$1.isBuffer(t)) {
        var r = 0 | l(t.length), e = f(r);
        return 0 === e.length || t.copy(e, 0, 0, r), e;
    } if (void 0 !== t.length)
        return "number" != typeof t.length || N(t.length) ? f(0) : p(t); if ("Buffer" === t.type && Array.isArray(t.data))
        return p(t.data); }(t); if (i)
        return i; if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof t[Symbol.toPrimitive])
        return u$1.from(t[Symbol.toPrimitive]("string"), r, e); throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof t); }
    function h$1(t) { if ("number" != typeof t)
        throw new TypeError('"size" argument must be of type number'); if (t < 0)
        throw new RangeError('The value "' + t + '" is invalid for option "size"'); }
    function a$2(t) { return h$1(t), f(t < 0 ? 0 : 0 | l(t)); }
    function p(t) { for (var r = t.length < 0 ? 0 : 0 | l(t.length), e = f(r), n = 0; n < r; n += 1)
        e[n] = 255 & t[n]; return e; }
    function c$1(t, r, e) { if (r < 0 || t.byteLength < r)
        throw new RangeError('"offset" is outside of buffer bounds'); if (t.byteLength < r + (e || 0))
        throw new RangeError('"length" is outside of buffer bounds'); var n; return n = void 0 === r && void 0 === e ? new Uint8Array(t) : void 0 === e ? new Uint8Array(t, r) : new Uint8Array(t, r, e), Object.setPrototypeOf(n, u$1.prototype), n; }
    function l(t) { if (t >= 2147483647)
        throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + 2147483647..toString(16) + " bytes"); return 0 | t; }
    function y(t, r) { if (u$1.isBuffer(t))
        return t.length; if (ArrayBuffer.isView(t) || F(t, ArrayBuffer))
        return t.byteLength; if ("string" != typeof t)
        throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof t); var e = t.length, n = arguments.length > 2 && !0 === arguments[2]; if (!n && 0 === e)
        return 0; for (var i = !1;;)
        switch (r) {
            case "ascii":
            case "latin1":
            case "binary": return e;
            case "utf8":
            case "utf-8": return _(t).length;
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le": return 2 * e;
            case "hex": return e >>> 1;
            case "base64": return z(t).length;
            default:
                if (i)
                    return n ? -1 : _(t).length;
                r = ("" + r).toLowerCase(), i = !0;
        } }
    function g(t, r, e) { var n = !1; if ((void 0 === r || r < 0) && (r = 0), r > this.length)
        return ""; if ((void 0 === e || e > this.length) && (e = this.length), e <= 0)
        return ""; if ((e >>>= 0) <= (r >>>= 0))
        return ""; for (t || (t = "utf8");;)
        switch (t) {
            case "hex": return O(this, r, e);
            case "utf8":
            case "utf-8": return I(this, r, e);
            case "ascii": return S(this, r, e);
            case "latin1":
            case "binary": return R(this, r, e);
            case "base64": return T(this, r, e);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le": return L(this, r, e);
            default:
                if (n)
                    throw new TypeError("Unknown encoding: " + t);
                t = (t + "").toLowerCase(), n = !0;
        } }
    function w(t, r, e) { var n = t[r]; t[r] = t[e], t[e] = n; }
    function d(t, r, e, n, i) { if (0 === t.length)
        return -1; if ("string" == typeof e ? (n = e, e = 0) : e > 2147483647 ? e = 2147483647 : e < -2147483648 && (e = -2147483648), N(e = +e) && (e = i ? 0 : t.length - 1), e < 0 && (e = t.length + e), e >= t.length) {
        if (i)
            return -1;
        e = t.length - 1;
    }
    else if (e < 0) {
        if (!i)
            return -1;
        e = 0;
    } if ("string" == typeof r && (r = u$1.from(r, n)), u$1.isBuffer(r))
        return 0 === r.length ? -1 : v(t, r, e, n, i); if ("number" == typeof r)
        return r &= 255, "function" == typeof Uint8Array.prototype.indexOf ? i ? Uint8Array.prototype.indexOf.call(t, r, e) : Uint8Array.prototype.lastIndexOf.call(t, r, e) : v(t, [r], e, n, i); throw new TypeError("val must be string, number or Buffer"); }
    function v(t, r, e, n, i) { var o, f = 1, u = t.length, s = r.length; if (void 0 !== n && ("ucs2" === (n = String(n).toLowerCase()) || "ucs-2" === n || "utf16le" === n || "utf-16le" === n)) {
        if (t.length < 2 || r.length < 2)
            return -1;
        f = 2, u /= 2, s /= 2, e /= 2;
    } function h(t, r) { return 1 === f ? t[r] : t.readUInt16BE(r * f); } if (i) {
        var a = -1;
        for (o = e; o < u; o++)
            if (h(t, o) === h(r, -1 === a ? 0 : o - a)) {
                if (-1 === a && (a = o), o - a + 1 === s)
                    return a * f;
            }
            else
                -1 !== a && (o -= o - a), a = -1;
    }
    else
        for (e + s > u && (e = u - s), o = e; o >= 0; o--) {
            for (var p = !0, c = 0; c < s; c++)
                if (h(t, o + c) !== h(r, c)) {
                    p = !1;
                    break;
                }
            if (p)
                return o;
        } return -1; }
    function b(t, r, e, n) { e = Number(e) || 0; var i = t.length - e; n ? (n = Number(n)) > i && (n = i) : n = i; var o = r.length; n > o / 2 && (n = o / 2); for (var f = 0; f < n; ++f) {
        var u = parseInt(r.substr(2 * f, 2), 16);
        if (N(u))
            return f;
        t[e + f] = u;
    } return f; }
    function m(t, r, e, n) { return D(_(r, t.length - e), t, e, n); }
    function E(t, r, e, n) { return D(function (t) { for (var r = [], e = 0; e < t.length; ++e)
        r.push(255 & t.charCodeAt(e)); return r; }(r), t, e, n); }
    function B(t, r, e, n) { return E(t, r, e, n); }
    function A(t, r, e, n) { return D(z(r), t, e, n); }
    function U(t, r, e, n) { return D(function (t, r) { for (var e, n, i, o = [], f = 0; f < t.length && !((r -= 2) < 0); ++f)
        e = t.charCodeAt(f), n = e >> 8, i = e % 256, o.push(i), o.push(n); return o; }(r, t.length - e), t, e, n); }
    function T(t, r, e) { return 0 === r && e === t.length ? n$1.fromByteArray(t) : n$1.fromByteArray(t.slice(r, e)); }
    function I(t, r, e) { e = Math.min(t.length, e); for (var n = [], i = r; i < e;) {
        var o, f, u, s, h = t[i], a = null, p = h > 239 ? 4 : h > 223 ? 3 : h > 191 ? 2 : 1;
        if (i + p <= e)
            switch (p) {
                case 1:
                    h < 128 && (a = h);
                    break;
                case 2:
                    128 == (192 & (o = t[i + 1])) && (s = (31 & h) << 6 | 63 & o) > 127 && (a = s);
                    break;
                case 3:
                    o = t[i + 1], f = t[i + 2], 128 == (192 & o) && 128 == (192 & f) && (s = (15 & h) << 12 | (63 & o) << 6 | 63 & f) > 2047 && (s < 55296 || s > 57343) && (a = s);
                    break;
                case 4: o = t[i + 1], f = t[i + 2], u = t[i + 3], 128 == (192 & o) && 128 == (192 & f) && 128 == (192 & u) && (s = (15 & h) << 18 | (63 & o) << 12 | (63 & f) << 6 | 63 & u) > 65535 && s < 1114112 && (a = s);
            }
        null === a ? (a = 65533, p = 1) : a > 65535 && (a -= 65536, n.push(a >>> 10 & 1023 | 55296), a = 56320 | 1023 & a), n.push(a), i += p;
    } return function (t) { var r = t.length; if (r <= 4096)
        return String.fromCharCode.apply(String, t); var e = "", n = 0; for (; n < r;)
        e += String.fromCharCode.apply(String, t.slice(n, n += 4096)); return e; }(n); }
    function S(t, r, e) { var n = ""; e = Math.min(t.length, e); for (var i = r; i < e; ++i)
        n += String.fromCharCode(127 & t[i]); return n; }
    function R(t, r, e) { var n = ""; e = Math.min(t.length, e); for (var i = r; i < e; ++i)
        n += String.fromCharCode(t[i]); return n; }
    function O(t, r, e) { var n = t.length; (!r || r < 0) && (r = 0), (!e || e < 0 || e > n) && (e = n); for (var i = "", o = r; o < e; ++o)
        i += Y[t[o]]; return i; }
    function L(t, r, e) { for (var n = t.slice(r, e), i = "", o = 0; o < n.length; o += 2)
        i += String.fromCharCode(n[o] + 256 * n[o + 1]); return i; }
    function x(t, r, e) { if (t % 1 != 0 || t < 0)
        throw new RangeError("offset is not uint"); if (t + r > e)
        throw new RangeError("Trying to access beyond buffer length"); }
    function C(t, r, e, n, i, o) { if (!u$1.isBuffer(t))
        throw new TypeError('"buffer" argument must be a Buffer instance'); if (r > i || r < o)
        throw new RangeError('"value" argument is out of bounds'); if (e + n > t.length)
        throw new RangeError("Index out of range"); }
    function P(t, r, e, n, i, o) { if (e + n > t.length)
        throw new RangeError("Index out of range"); if (e < 0)
        throw new RangeError("Index out of range"); }
    function k(t, r, e, n, o) { return r = +r, e >>>= 0, o || P(t, 0, e, 4), i.write(t, r, e, n, 23, 4), e + 4; }
    function M(t, r, e, n, o) { return r = +r, e >>>= 0, o || P(t, 0, e, 8), i.write(t, r, e, n, 52, 8), e + 8; }
    function _(t, r) { var e; r = r || 1 / 0; for (var n = t.length, i = null, o = [], f = 0; f < n; ++f) {
        if ((e = t.charCodeAt(f)) > 55295 && e < 57344) {
            if (!i) {
                if (e > 56319) {
                    (r -= 3) > -1 && o.push(239, 191, 189);
                    continue;
                }
                if (f + 1 === n) {
                    (r -= 3) > -1 && o.push(239, 191, 189);
                    continue;
                }
                i = e;
                continue;
            }
            if (e < 56320) {
                (r -= 3) > -1 && o.push(239, 191, 189), i = e;
                continue;
            }
            e = 65536 + (i - 55296 << 10 | e - 56320);
        }
        else
            i && (r -= 3) > -1 && o.push(239, 191, 189);
        if (i = null, e < 128) {
            if ((r -= 1) < 0)
                break;
            o.push(e);
        }
        else if (e < 2048) {
            if ((r -= 2) < 0)
                break;
            o.push(e >> 6 | 192, 63 & e | 128);
        }
        else if (e < 65536) {
            if ((r -= 3) < 0)
                break;
            o.push(e >> 12 | 224, e >> 6 & 63 | 128, 63 & e | 128);
        }
        else {
            if (!(e < 1114112))
                throw new Error("Invalid code point");
            if ((r -= 4) < 0)
                break;
            o.push(e >> 18 | 240, e >> 12 & 63 | 128, e >> 6 & 63 | 128, 63 & e | 128);
        }
    } return o; }
    function z(t) { return n$1.toByteArray(function (t) { if ((t = (t = t.split("=")[0]).trim().replace(j, "")).length < 2)
        return ""; for (; t.length % 4 != 0;)
        t += "="; return t; }(t)); }
    function D(t, r, e, n) { for (var i = 0; i < n && !(i + e >= r.length || i >= t.length); ++i)
        r[i + e] = t[i]; return i; }
    function F(t, r) { return t instanceof r || null != t && null != t.constructor && null != t.constructor.name && t.constructor.name === r.name; }
    function N(t) { return t != t; }
    return {
        setters: [],
        execute: function () {
            for (r = { byteLength: function (r) { var t = u(r), e = t[0], n = t[1]; return 3 * (e + n) / 4 - n; }, toByteArray: function (r) { var t, o, a = u(r), h = a[0], c = a[1], d = new n(function (r, t, e) { return 3 * (t + e) / 4 - e; }(0, h, c)), f = 0, A = c > 0 ? h - 4 : h; for (o = 0; o < A; o += 4)
                    t = e[r.charCodeAt(o)] << 18 | e[r.charCodeAt(o + 1)] << 12 | e[r.charCodeAt(o + 2)] << 6 | e[r.charCodeAt(o + 3)], d[f++] = t >> 16 & 255, d[f++] = t >> 8 & 255, d[f++] = 255 & t; 2 === c && (t = e[r.charCodeAt(o)] << 2 | e[r.charCodeAt(o + 1)] >> 4, d[f++] = 255 & t); 1 === c && (t = e[r.charCodeAt(o)] << 10 | e[r.charCodeAt(o + 1)] << 4 | e[r.charCodeAt(o + 2)] >> 2, d[f++] = t >> 8 & 255, d[f++] = 255 & t); return d; }, fromByteArray: function (r) { for (var e, n = r.length, o = n % 3, a = [], h = 0, u = n - o; h < u; h += 16383)
                    a.push(c(r, h, h + 16383 > u ? u : h + 16383)); 1 === o ? (e = r[n - 1], a.push(t[e >> 2] + t[e << 4 & 63] + "==")) : 2 === o && (e = (r[n - 2] << 8) + r[n - 1], a.push(t[e >> 10] + t[e >> 4 & 63] + t[e << 2 & 63] + "=")); return a.join(""); } }, t = [], e = [], n = "undefined" != typeof Uint8Array ? Uint8Array : Array, o = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", a = 0, h = o.length; a < h; ++a)
                t[a] = o[a], e[o.charCodeAt(a)] = a;
            e["-".charCodeAt(0)] = 62, e["_".charCodeAt(0)] = 63;
            a$1 = { read: function (a, t, o, r, h) { var M, f, p = 8 * h - r - 1, w = (1 << p) - 1, e = w >> 1, i = -7, N = o ? h - 1 : 0, n = o ? -1 : 1, u = a[t + N]; for (N += n, M = u & (1 << -i) - 1, u >>= -i, i += p; i > 0; M = 256 * M + a[t + N], N += n, i -= 8)
                    ; for (f = M & (1 << -i) - 1, M >>= -i, i += r; i > 0; f = 256 * f + a[t + N], N += n, i -= 8)
                    ; if (0 === M)
                    M = 1 - e;
                else {
                    if (M === w)
                        return f ? NaN : 1 / 0 * (u ? -1 : 1);
                    f += Math.pow(2, r), M -= e;
                } return (u ? -1 : 1) * f * Math.pow(2, M - r); }, write: function (a, t, o, r, h, M) { var f, p, w, e = 8 * M - h - 1, i = (1 << e) - 1, N = i >> 1, n = 23 === h ? Math.pow(2, -24) - Math.pow(2, -77) : 0, u = r ? 0 : M - 1, l = r ? 1 : -1, s = t < 0 || 0 === t && 1 / t < 0 ? 1 : 0; for (t = Math.abs(t), isNaN(t) || t === 1 / 0 ? (p = isNaN(t) ? 1 : 0, f = i) : (f = Math.floor(Math.log(t) / Math.LN2), t * (w = Math.pow(2, -f)) < 1 && (f--, w *= 2), (t += f + N >= 1 ? n / w : n * Math.pow(2, 1 - N)) * w >= 2 && (f++, w /= 2), f + N >= i ? (p = 0, f = i) : f + N >= 1 ? (p = (t * w - 1) * Math.pow(2, h), f += N) : (p = t * Math.pow(2, N - 1) * Math.pow(2, h), f = 0)); h >= 8; a[o + u] = 255 & p, u += l, p /= 256, h -= 8)
                    ; for (f = f << h | p, e += h; e > 0; a[o + u] = 255 & f, u += l, f /= 256, e -= 8)
                    ; a[o + u - l] |= 128 * s; } };
            e$1 = {}, n$1 = r, i = a$1, o$1 = "function" == typeof Symbol && "function" == typeof Symbol.for ? Symbol.for("nodejs.util.inspect.custom") : null;
            e$1.Buffer = u$1, e$1.SlowBuffer = function (t) { +t != t && (t = 0); return u$1.alloc(+t); }, e$1.INSPECT_MAX_BYTES = 50;
            e$1.kMaxLength = 2147483647, u$1.TYPED_ARRAY_SUPPORT = function () { try {
                var t = new Uint8Array(1), r = { foo: function () { return 42; } };
                return Object.setPrototypeOf(r, Uint8Array.prototype), Object.setPrototypeOf(t, r), 42 === t.foo();
            }
            catch (t) {
                return !1;
            } }(), u$1.TYPED_ARRAY_SUPPORT || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(u$1.prototype, "parent", { enumerable: !0, get: function () { if (u$1.isBuffer(this))
                    return this.buffer; } }), Object.defineProperty(u$1.prototype, "offset", { enumerable: !0, get: function () { if (u$1.isBuffer(this))
                    return this.byteOffset; } }), u$1.poolSize = 8192, u$1.from = function (t, r, e) { return s(t, r, e); }, Object.setPrototypeOf(u$1.prototype, Uint8Array.prototype), Object.setPrototypeOf(u$1, Uint8Array), u$1.alloc = function (t, r, e) { return function (t, r, e) { return h$1(t), t <= 0 ? f(t) : void 0 !== r ? "string" == typeof e ? f(t).fill(r, e) : f(t).fill(r) : f(t); }(t, r, e); }, u$1.allocUnsafe = function (t) { return a$2(t); }, u$1.allocUnsafeSlow = function (t) { return a$2(t); }, u$1.isBuffer = function (t) { return null != t && !0 === t._isBuffer && t !== u$1.prototype; }, u$1.compare = function (t, r) { if (F(t, Uint8Array) && (t = u$1.from(t, t.offset, t.byteLength)), F(r, Uint8Array) && (r = u$1.from(r, r.offset, r.byteLength)), !u$1.isBuffer(t) || !u$1.isBuffer(r))
                throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'); if (t === r)
                return 0; for (var e = t.length, n = r.length, i = 0, o = Math.min(e, n); i < o; ++i)
                if (t[i] !== r[i]) {
                    e = t[i], n = r[i];
                    break;
                } return e < n ? -1 : n < e ? 1 : 0; }, u$1.isEncoding = function (t) { switch (String(t).toLowerCase()) {
                case "hex":
                case "utf8":
                case "utf-8":
                case "ascii":
                case "latin1":
                case "binary":
                case "base64":
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le": return !0;
                default: return !1;
            } }, u$1.concat = function (t, r) { if (!Array.isArray(t))
                throw new TypeError('"list" argument must be an Array of Buffers'); if (0 === t.length)
                return u$1.alloc(0); var e; if (void 0 === r)
                for (r = 0, e = 0; e < t.length; ++e)
                    r += t[e].length; var n = u$1.allocUnsafe(r), i = 0; for (e = 0; e < t.length; ++e) {
                var o = t[e];
                if (F(o, Uint8Array) && (o = u$1.from(o)), !u$1.isBuffer(o))
                    throw new TypeError('"list" argument must be an Array of Buffers');
                o.copy(n, i), i += o.length;
            } return n; }, u$1.byteLength = y, u$1.prototype._isBuffer = !0, u$1.prototype.swap16 = function () { var t = this.length; if (t % 2 != 0)
                throw new RangeError("Buffer size must be a multiple of 16-bits"); for (var r = 0; r < t; r += 2)
                w(this, r, r + 1); return this; }, u$1.prototype.swap32 = function () { var t = this.length; if (t % 4 != 0)
                throw new RangeError("Buffer size must be a multiple of 32-bits"); for (var r = 0; r < t; r += 4)
                w(this, r, r + 3), w(this, r + 1, r + 2); return this; }, u$1.prototype.swap64 = function () { var t = this.length; if (t % 8 != 0)
                throw new RangeError("Buffer size must be a multiple of 64-bits"); for (var r = 0; r < t; r += 8)
                w(this, r, r + 7), w(this, r + 1, r + 6), w(this, r + 2, r + 5), w(this, r + 3, r + 4); return this; }, u$1.prototype.toString = function () { var t = this.length; return 0 === t ? "" : 0 === arguments.length ? I(this, 0, t) : g.apply(this, arguments); }, u$1.prototype.toLocaleString = u$1.prototype.toString, u$1.prototype.equals = function (t) { if (!u$1.isBuffer(t))
                throw new TypeError("Argument must be a Buffer"); return this === t || 0 === u$1.compare(this, t); }, u$1.prototype.inspect = function () { var t = "", r = e$1.INSPECT_MAX_BYTES; return t = this.toString("hex", 0, r).replace(/(.{2})/g, "$1 ").trim(), this.length > r && (t += " ... "), "<Buffer " + t + ">"; }, o$1 && (u$1.prototype[o$1] = u$1.prototype.inspect), u$1.prototype.compare = function (t, r, e, n, i) { if (F(t, Uint8Array) && (t = u$1.from(t, t.offset, t.byteLength)), !u$1.isBuffer(t))
                throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof t); if (void 0 === r && (r = 0), void 0 === e && (e = t ? t.length : 0), void 0 === n && (n = 0), void 0 === i && (i = this.length), r < 0 || e > t.length || n < 0 || i > this.length)
                throw new RangeError("out of range index"); if (n >= i && r >= e)
                return 0; if (n >= i)
                return -1; if (r >= e)
                return 1; if (this === t)
                return 0; for (var o = (i >>>= 0) - (n >>>= 0), f = (e >>>= 0) - (r >>>= 0), s = Math.min(o, f), h = this.slice(n, i), a = t.slice(r, e), p = 0; p < s; ++p)
                if (h[p] !== a[p]) {
                    o = h[p], f = a[p];
                    break;
                } return o < f ? -1 : f < o ? 1 : 0; }, u$1.prototype.includes = function (t, r, e) { return -1 !== this.indexOf(t, r, e); }, u$1.prototype.indexOf = function (t, r, e) { return d(this, t, r, e, !0); }, u$1.prototype.lastIndexOf = function (t, r, e) { return d(this, t, r, e, !1); }, u$1.prototype.write = function (t, r, e, n) { if (void 0 === r)
                n = "utf8", e = this.length, r = 0;
            else if (void 0 === e && "string" == typeof r)
                n = r, e = this.length, r = 0;
            else {
                if (!isFinite(r))
                    throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                r >>>= 0, isFinite(e) ? (e >>>= 0, void 0 === n && (n = "utf8")) : (n = e, e = void 0);
            } var i = this.length - r; if ((void 0 === e || e > i) && (e = i), t.length > 0 && (e < 0 || r < 0) || r > this.length)
                throw new RangeError("Attempt to write outside buffer bounds"); n || (n = "utf8"); for (var o = !1;;)
                switch (n) {
                    case "hex": return b(this, t, r, e);
                    case "utf8":
                    case "utf-8": return m(this, t, r, e);
                    case "ascii": return E(this, t, r, e);
                    case "latin1":
                    case "binary": return B(this, t, r, e);
                    case "base64": return A(this, t, r, e);
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le": return U(this, t, r, e);
                    default:
                        if (o)
                            throw new TypeError("Unknown encoding: " + n);
                        n = ("" + n).toLowerCase(), o = !0;
                } }, u$1.prototype.toJSON = function () { return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) }; };
            u$1.prototype.slice = function (t, r) { var e = this.length; (t = ~~t) < 0 ? (t += e) < 0 && (t = 0) : t > e && (t = e), (r = void 0 === r ? e : ~~r) < 0 ? (r += e) < 0 && (r = 0) : r > e && (r = e), r < t && (r = t); var n = this.subarray(t, r); return Object.setPrototypeOf(n, u$1.prototype), n; }, u$1.prototype.readUIntLE = function (t, r, e) { t >>>= 0, r >>>= 0, e || x(t, r, this.length); for (var n = this[t], i = 1, o = 0; ++o < r && (i *= 256);)
                n += this[t + o] * i; return n; }, u$1.prototype.readUIntBE = function (t, r, e) { t >>>= 0, r >>>= 0, e || x(t, r, this.length); for (var n = this[t + --r], i = 1; r > 0 && (i *= 256);)
                n += this[t + --r] * i; return n; }, u$1.prototype.readUInt8 = function (t, r) { return t >>>= 0, r || x(t, 1, this.length), this[t]; }, u$1.prototype.readUInt16LE = function (t, r) { return t >>>= 0, r || x(t, 2, this.length), this[t] | this[t + 1] << 8; }, u$1.prototype.readUInt16BE = function (t, r) { return t >>>= 0, r || x(t, 2, this.length), this[t] << 8 | this[t + 1]; }, u$1.prototype.readUInt32LE = function (t, r) { return t >>>= 0, r || x(t, 4, this.length), (this[t] | this[t + 1] << 8 | this[t + 2] << 16) + 16777216 * this[t + 3]; }, u$1.prototype.readUInt32BE = function (t, r) { return t >>>= 0, r || x(t, 4, this.length), 16777216 * this[t] + (this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3]); }, u$1.prototype.readIntLE = function (t, r, e) { t >>>= 0, r >>>= 0, e || x(t, r, this.length); for (var n = this[t], i = 1, o = 0; ++o < r && (i *= 256);)
                n += this[t + o] * i; return n >= (i *= 128) && (n -= Math.pow(2, 8 * r)), n; }, u$1.prototype.readIntBE = function (t, r, e) { t >>>= 0, r >>>= 0, e || x(t, r, this.length); for (var n = r, i = 1, o = this[t + --n]; n > 0 && (i *= 256);)
                o += this[t + --n] * i; return o >= (i *= 128) && (o -= Math.pow(2, 8 * r)), o; }, u$1.prototype.readInt8 = function (t, r) { return t >>>= 0, r || x(t, 1, this.length), 128 & this[t] ? -1 * (255 - this[t] + 1) : this[t]; }, u$1.prototype.readInt16LE = function (t, r) { t >>>= 0, r || x(t, 2, this.length); var e = this[t] | this[t + 1] << 8; return 32768 & e ? 4294901760 | e : e; }, u$1.prototype.readInt16BE = function (t, r) { t >>>= 0, r || x(t, 2, this.length); var e = this[t + 1] | this[t] << 8; return 32768 & e ? 4294901760 | e : e; }, u$1.prototype.readInt32LE = function (t, r) { return t >>>= 0, r || x(t, 4, this.length), this[t] | this[t + 1] << 8 | this[t + 2] << 16 | this[t + 3] << 24; }, u$1.prototype.readInt32BE = function (t, r) { return t >>>= 0, r || x(t, 4, this.length), this[t] << 24 | this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3]; }, u$1.prototype.readFloatLE = function (t, r) { return t >>>= 0, r || x(t, 4, this.length), i.read(this, t, !0, 23, 4); }, u$1.prototype.readFloatBE = function (t, r) { return t >>>= 0, r || x(t, 4, this.length), i.read(this, t, !1, 23, 4); }, u$1.prototype.readDoubleLE = function (t, r) { return t >>>= 0, r || x(t, 8, this.length), i.read(this, t, !0, 52, 8); }, u$1.prototype.readDoubleBE = function (t, r) { return t >>>= 0, r || x(t, 8, this.length), i.read(this, t, !1, 52, 8); }, u$1.prototype.writeUIntLE = function (t, r, e, n) { (t = +t, r >>>= 0, e >>>= 0, n) || C(this, t, r, e, Math.pow(2, 8 * e) - 1, 0); var i = 1, o = 0; for (this[r] = 255 & t; ++o < e && (i *= 256);)
                this[r + o] = t / i & 255; return r + e; }, u$1.prototype.writeUIntBE = function (t, r, e, n) { (t = +t, r >>>= 0, e >>>= 0, n) || C(this, t, r, e, Math.pow(2, 8 * e) - 1, 0); var i = e - 1, o = 1; for (this[r + i] = 255 & t; --i >= 0 && (o *= 256);)
                this[r + i] = t / o & 255; return r + e; }, u$1.prototype.writeUInt8 = function (t, r, e) { return t = +t, r >>>= 0, e || C(this, t, r, 1, 255, 0), this[r] = 255 & t, r + 1; }, u$1.prototype.writeUInt16LE = function (t, r, e) { return t = +t, r >>>= 0, e || C(this, t, r, 2, 65535, 0), this[r] = 255 & t, this[r + 1] = t >>> 8, r + 2; }, u$1.prototype.writeUInt16BE = function (t, r, e) { return t = +t, r >>>= 0, e || C(this, t, r, 2, 65535, 0), this[r] = t >>> 8, this[r + 1] = 255 & t, r + 2; }, u$1.prototype.writeUInt32LE = function (t, r, e) { return t = +t, r >>>= 0, e || C(this, t, r, 4, 4294967295, 0), this[r + 3] = t >>> 24, this[r + 2] = t >>> 16, this[r + 1] = t >>> 8, this[r] = 255 & t, r + 4; }, u$1.prototype.writeUInt32BE = function (t, r, e) { return t = +t, r >>>= 0, e || C(this, t, r, 4, 4294967295, 0), this[r] = t >>> 24, this[r + 1] = t >>> 16, this[r + 2] = t >>> 8, this[r + 3] = 255 & t, r + 4; }, u$1.prototype.writeIntLE = function (t, r, e, n) { if (t = +t, r >>>= 0, !n) {
                var i = Math.pow(2, 8 * e - 1);
                C(this, t, r, e, i - 1, -i);
            } var o = 0, f = 1, u = 0; for (this[r] = 255 & t; ++o < e && (f *= 256);)
                t < 0 && 0 === u && 0 !== this[r + o - 1] && (u = 1), this[r + o] = (t / f >> 0) - u & 255; return r + e; }, u$1.prototype.writeIntBE = function (t, r, e, n) { if (t = +t, r >>>= 0, !n) {
                var i = Math.pow(2, 8 * e - 1);
                C(this, t, r, e, i - 1, -i);
            } var o = e - 1, f = 1, u = 0; for (this[r + o] = 255 & t; --o >= 0 && (f *= 256);)
                t < 0 && 0 === u && 0 !== this[r + o + 1] && (u = 1), this[r + o] = (t / f >> 0) - u & 255; return r + e; }, u$1.prototype.writeInt8 = function (t, r, e) { return t = +t, r >>>= 0, e || C(this, t, r, 1, 127, -128), t < 0 && (t = 255 + t + 1), this[r] = 255 & t, r + 1; }, u$1.prototype.writeInt16LE = function (t, r, e) { return t = +t, r >>>= 0, e || C(this, t, r, 2, 32767, -32768), this[r] = 255 & t, this[r + 1] = t >>> 8, r + 2; }, u$1.prototype.writeInt16BE = function (t, r, e) { return t = +t, r >>>= 0, e || C(this, t, r, 2, 32767, -32768), this[r] = t >>> 8, this[r + 1] = 255 & t, r + 2; }, u$1.prototype.writeInt32LE = function (t, r, e) { return t = +t, r >>>= 0, e || C(this, t, r, 4, 2147483647, -2147483648), this[r] = 255 & t, this[r + 1] = t >>> 8, this[r + 2] = t >>> 16, this[r + 3] = t >>> 24, r + 4; }, u$1.prototype.writeInt32BE = function (t, r, e) { return t = +t, r >>>= 0, e || C(this, t, r, 4, 2147483647, -2147483648), t < 0 && (t = 4294967295 + t + 1), this[r] = t >>> 24, this[r + 1] = t >>> 16, this[r + 2] = t >>> 8, this[r + 3] = 255 & t, r + 4; }, u$1.prototype.writeFloatLE = function (t, r, e) { return k(this, t, r, !0, e); }, u$1.prototype.writeFloatBE = function (t, r, e) { return k(this, t, r, !1, e); }, u$1.prototype.writeDoubleLE = function (t, r, e) { return M(this, t, r, !0, e); }, u$1.prototype.writeDoubleBE = function (t, r, e) { return M(this, t, r, !1, e); }, u$1.prototype.copy = function (t, r, e, n) { if (!u$1.isBuffer(t))
                throw new TypeError("argument should be a Buffer"); if (e || (e = 0), n || 0 === n || (n = this.length), r >= t.length && (r = t.length), r || (r = 0), n > 0 && n < e && (n = e), n === e)
                return 0; if (0 === t.length || 0 === this.length)
                return 0; if (r < 0)
                throw new RangeError("targetStart out of bounds"); if (e < 0 || e >= this.length)
                throw new RangeError("Index out of range"); if (n < 0)
                throw new RangeError("sourceEnd out of bounds"); n > this.length && (n = this.length), t.length - r < n - e && (n = t.length - r + e); var i = n - e; if (this === t && "function" == typeof Uint8Array.prototype.copyWithin)
                this.copyWithin(r, e, n);
            else if (this === t && e < r && r < n)
                for (var o = i - 1; o >= 0; --o)
                    t[o + r] = this[o + e];
            else
                Uint8Array.prototype.set.call(t, this.subarray(e, n), r); return i; }, u$1.prototype.fill = function (t, r, e, n) { if ("string" == typeof t) {
                if ("string" == typeof r ? (n = r, r = 0, e = this.length) : "string" == typeof e && (n = e, e = this.length), void 0 !== n && "string" != typeof n)
                    throw new TypeError("encoding must be a string");
                if ("string" == typeof n && !u$1.isEncoding(n))
                    throw new TypeError("Unknown encoding: " + n);
                if (1 === t.length) {
                    var i = t.charCodeAt(0);
                    ("utf8" === n && i < 128 || "latin1" === n) && (t = i);
                }
            }
            else
                "number" == typeof t ? t &= 255 : "boolean" == typeof t && (t = Number(t)); if (r < 0 || this.length < r || this.length < e)
                throw new RangeError("Out of range index"); if (e <= r)
                return this; var o; if (r >>>= 0, e = void 0 === e ? this.length : e >>> 0, t || (t = 0), "number" == typeof t)
                for (o = r; o < e; ++o)
                    this[o] = t;
            else {
                var f = u$1.isBuffer(t) ? t : u$1.from(t, n), s = f.length;
                if (0 === s)
                    throw new TypeError('The value "' + t + '" is invalid for argument "value"');
                for (o = 0; o < e - r; ++o)
                    this[o + r] = f[o % s];
            } return this; };
            j = /[^+/0-9A-Za-z-_]/g;
            Y = function () { for (var t = new Array(256), r = 0; r < 16; ++r)
                for (var e = 16 * r, n = 0; n < 16; ++n)
                    t[e + n] = "0123456789abcdef"[r] + "0123456789abcdef"[n]; return t; }();
            Buffer = e$1.Buffer;
            exports_254("Buffer", Buffer);
            INSPECT_MAX_BYTES = e$1.INSPECT_MAX_BYTES;
            exports_254("INSPECT_MAX_BYTES", INSPECT_MAX_BYTES);
            kMaxLength = e$1.kMaxLength;
            exports_254("kMaxLength", kMaxLength);
            exports_254("default", e$1);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/chunk-6e68c801", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/buffer"], function (exports_255, context_255) {
    "use strict";
    var buffer_js_1, e, n, o, u, e$1, s, i;
    var __moduleName = context_255 && context_255.id;
    function t(r, e) { for (var n in r)
        e[n] = r[n]; }
    function f(r, e, n) { return o(r, e, n); }
    function a(t) { var e; switch (this.encoding = function (t) { var e = function (t) { if (!t)
        return "utf8"; for (var e;;)
        switch (t) {
            case "utf8":
            case "utf-8": return "utf8";
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le": return "utf16le";
            case "latin1":
            case "binary": return "latin1";
            case "base64":
            case "ascii":
            case "hex": return t;
            default:
                if (e)
                    return;
                t = ("" + t).toLowerCase(), e = !0;
        } }(t); if ("string" != typeof e && (s.isEncoding === i || !i(t)))
        throw new Error("Unknown encoding: " + t); return e || t; }(t), this.encoding) {
        case "utf16le":
            this.text = h, this.end = l, e = 4;
            break;
        case "utf8":
            this.fillLast = n$1, e = 4;
            break;
        case "base64":
            this.text = u$1, this.end = o$1, e = 3;
            break;
        default: return this.write = f$1, this.end = c, void 0;
    } this.lastNeed = 0, this.lastTotal = 0, this.lastChar = s.allocUnsafe(e); }
    function r(t) { return t <= 127 ? 0 : t >> 5 == 6 ? 2 : t >> 4 == 14 ? 3 : t >> 3 == 30 ? 4 : t >> 6 == 2 ? -1 : -2; }
    function n$1(t) { var e = this.lastTotal - this.lastNeed, s = function (t, e, s) { if (128 != (192 & e[0]))
        return t.lastNeed = 0, "�"; if (t.lastNeed > 1 && e.length > 1) {
        if (128 != (192 & e[1]))
            return t.lastNeed = 1, "�";
        if (t.lastNeed > 2 && e.length > 2 && 128 != (192 & e[2]))
            return t.lastNeed = 2, "�";
    } }(this, t); return void 0 !== s ? s : this.lastNeed <= t.length ? (t.copy(this.lastChar, e, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal)) : (t.copy(this.lastChar, e, 0, t.length), this.lastNeed -= t.length, void 0); }
    function h(t, e) { if ((t.length - e) % 2 == 0) {
        var s = t.toString("utf16le", e);
        if (s) {
            var i = s.charCodeAt(s.length - 1);
            if (i >= 55296 && i <= 56319)
                return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = t[t.length - 2], this.lastChar[1] = t[t.length - 1], s.slice(0, -1);
        }
        return s;
    } return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = t[t.length - 1], t.toString("utf16le", e, t.length - 1); }
    function l(t) { var e = t && t.length ? this.write(t) : ""; if (this.lastNeed) {
        var s = this.lastTotal - this.lastNeed;
        return e + this.lastChar.toString("utf16le", 0, s);
    } return e; }
    function u$1(t, e) { var s = (t.length - e) % 3; return 0 === s ? t.toString("base64", e) : (this.lastNeed = 3 - s, this.lastTotal = 3, 1 === s ? this.lastChar[0] = t[t.length - 1] : (this.lastChar[0] = t[t.length - 2], this.lastChar[1] = t[t.length - 1]), t.toString("base64", e, t.length - s)); }
    function o$1(t) { var e = t && t.length ? this.write(t) : ""; return this.lastNeed ? e + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : e; }
    function f$1(t) { return t.toString(this.encoding); }
    function c(t) { return t && t.length ? this.write(t) : ""; }
    return {
        setters: [
            function (buffer_js_1_1) {
                buffer_js_1 = buffer_js_1_1;
            }
        ],
        execute: function () {
            e = {}, n = buffer_js_1.default, o = n.Buffer;
            o.from && o.alloc && o.allocUnsafe && o.allocUnsafeSlow ? e = n : (t(n, e), e.Buffer = f), f.prototype = Object.create(o.prototype), t(o, f), f.from = function (r, e, n) { if ("number" == typeof r)
                throw new TypeError("Argument must not be a number"); return o(r, e, n); }, f.alloc = function (r, e, n) { if ("number" != typeof r)
                throw new TypeError("Argument must be a number"); var t = o(r); return void 0 !== e ? "string" == typeof n ? t.fill(e, n) : t.fill(e) : t.fill(0), t; }, f.allocUnsafe = function (r) { if ("number" != typeof r)
                throw new TypeError("Argument must be a number"); return o(r); }, f.allocUnsafeSlow = function (r) { if ("number" != typeof r)
                throw new TypeError("Argument must be a number"); return n.SlowBuffer(r); };
            u = e;
            exports_255("r", u);
            e$1 = {}, s = u.Buffer, i = s.isEncoding || function (t) { switch ((t = "" + t) && t.toLowerCase()) {
                case "hex":
                case "utf8":
                case "utf-8":
                case "ascii":
                case "binary":
                case "base64":
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                case "raw": return !0;
                default: return !1;
            } };
            exports_255("s", e$1);
            e$1.StringDecoder = a, a.prototype.write = function (t) { if (0 === t.length)
                return ""; var e, s; if (this.lastNeed) {
                if (void 0 === (e = this.fillLast(t)))
                    return "";
                s = this.lastNeed, this.lastNeed = 0;
            }
            else
                s = 0; return s < t.length ? e ? e + this.text(t, s) : this.text(t, s) : e || ""; }, a.prototype.end = function (t) { var e = t && t.length ? this.write(t) : ""; return this.lastNeed ? e + "�" : e; }, a.prototype.text = function (t, e) { var s = function (t, e, s) { var i = e.length - 1; if (i < s)
                return 0; var a = r(e[i]); if (a >= 0)
                return a > 0 && (t.lastNeed = a - 1), a; if (--i < s || -2 === a)
                return 0; if ((a = r(e[i])) >= 0)
                return a > 0 && (t.lastNeed = a - 2), a; if (--i < s || -2 === a)
                return 0; if ((a = r(e[i])) >= 0)
                return a > 0 && (2 === a ? a = 0 : t.lastNeed = a - 3), a; return 0; }(this, t, e); if (!this.lastNeed)
                return t.toString("utf8", e); this.lastTotal = s; var i = t.length - (s - this.lastNeed); return t.copy(this.lastChar, 0, i), t.toString("utf8", e, i); }, a.prototype.fillLast = function (t) { if (this.lastNeed <= t.length)
                return t.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal); t.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, t.length), this.lastNeed -= t.length; };
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/chunk-cffba9d4", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/chunk-dac557ba", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/chunk-0c2d1322", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/buffer", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/util", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/chunk-6e68c801", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/events"], function (exports_256, context_256) {
    "use strict";
    var chunk_dac557ba_js_3, chunk_0c2d1322_js_5, buffer_js_2, util_js_9, chunk_6e68c801_js_1, events_js_8, e, e$1, t, r$1, r$2, t$1, c, b, p, g, y, m, S, R, k, M, j, O, P, x, L, D, C, A, q, W, U, H, F, V, G, Y, z, J, Q, Z, $, t$2, r$3, n$1, b$1, p$1, g$1, y$1, w$1, S$1, R$1, k$1, E$1, M$1, O$1, T$1, x$1, P$1, D$1, L$1, C$1, A$1, I$1, N$1, U$1, H$1, F$1, V$1, Y$1, K$1, z$1, Q$1, X$1, t$4, t$5, n$2, i, a, o, s, f$2, h$2, p$2, o$1, e$3, s$1, t$6, o$2, e$4, f$3, v$2;
    var __moduleName = context_256 && context_256.id;
    function n(e, n, r) { r || (r = Error); class o extends r {
        constructor(e, t, r) { super(function (e, t, r) { return "string" == typeof n ? n : n(e, t, r); }(e, t, r)); }
    } o.prototype.name = r.name, o.prototype.code = e, t[e] = o; }
    function r(e, t) { if (Array.isArray(e)) {
        const n = e.length;
        return e = e.map(e => String(e)), n > 2 ? `one of ${t} ${e.slice(0, n - 1).join(", ")}, or ` + e[n - 1] : 2 === n ? `one of ${t} ${e[0]} or ${e[1]}` : `of ${t} ${e[0]}`;
    } return `of ${t} ${String(e)}`; }
    function e$2(e) { try {
        if (!r$2.localStorage)
            return !1;
    }
    catch (r) {
        return !1;
    } var t = r$2.localStorage[e]; return null != t && "true" === String(t).toLowerCase(); }
    function u(e, t) { var n = Object.keys(e); if (Object.getOwnPropertySymbols) {
        var r = Object.getOwnPropertySymbols(e);
        t && (r = r.filter((function (t) { return Object.getOwnPropertyDescriptor(e, t).enumerable; }))), n.push.apply(n, r);
    } return n; }
    function f(e, t, n) { return t in e ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = n, e; }
    function h(e, t) { for (var n = 0; n < t.length; n++) {
        var r = t[n];
        r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);
    } }
    function w(e, t) { _(e, t), v(e); }
    function v(e) { e._writableState && !e._writableState.emitClose || e._readableState && !e._readableState.emitClose || e.emit("close"); }
    function _(e, t) { e.emit("error", t); }
    function E() { }
    function T(e, t, n) { return t in e ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = n, e; }
    function B(e, t) { return { value: e, done: t }; }
    function I(e) { var t = e[x]; if (null !== t) {
        var n = e[W].read();
        null !== n && (e[A] = null, e[x] = null, e[L] = null, t(B(n, !1)));
    } }
    function N(e) { O.nextTick(I, e); }
    function K() { if (G)
        return V; G = !0; var d, u = chunk_0c2d1322_js_5.h; V = C, C.ReadableState = D; events_js_8.default.EventEmitter; var f = function (e, t) { return e.listeners(t).length; }, h = e, c = buffer_js_2.default.Buffer, b = Y.Uint8Array || function () { }; var p, y = util_js_9.default; p = y && y.debuglog ? y.debuglog("stream") : function () { }; var w, v, _, S = g, k = m, E = R.getHighWaterMark, M = e$1.codes, j = M.ERR_INVALID_ARG_TYPE, O = M.ERR_STREAM_PUSH_AFTER_EOF, T = M.ERR_METHOD_NOT_IMPLEMENTED, P = M.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; chunk_dac557ba_js_3.t(C, h); var x = k.errorOrDestroy, L = ["error", "close", "destroy", "pause", "resume"]; function D(e, t, n) { d = d || ee(), e = e || {}, "boolean" != typeof n && (n = t instanceof d), this.objectMode = !!e.objectMode, n && (this.objectMode = this.objectMode || !!e.readableObjectMode), this.highWaterMark = E(this, e, "readableHighWaterMark", n), this.buffer = new S, this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = !1, this.endEmitted = !1, this.reading = !1, this.sync = !0, this.needReadable = !1, this.emittedReadable = !1, this.readableListening = !1, this.resumeScheduled = !1, this.paused = !0, this.emitClose = !1 !== e.emitClose, this.autoDestroy = !!e.autoDestroy, this.destroyed = !1, this.defaultEncoding = e.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = !1, this.decoder = null, this.encoding = null, e.encoding && (w || (w = chunk_6e68c801_js_1.s.StringDecoder), this.decoder = new w(e.encoding), this.encoding = e.encoding); } function C(e) { if (d = d || ee(), !(this instanceof C))
        return new C(e); var t = this instanceof d; this._readableState = new D(e, this, t), this.readable = !0, e && ("function" == typeof e.read && (this._read = e.read), "function" == typeof e.destroy && (this._destroy = e.destroy)), h.call(this); } function A(e, t, n, r, i) { p("readableAddChunk", t); var a, o = e._readableState; if (null === t)
        o.reading = !1, function (e, t) { if (p("onEofChunk"), t.ended)
            return; if (t.decoder) {
            var n = t.decoder.end();
            n && n.length && (t.buffer.push(n), t.length += t.objectMode ? 1 : n.length);
        } t.ended = !0, t.sync ? B(e) : (t.needReadable = !1, t.emittedReadable || (t.emittedReadable = !0, I(e))); }(e, o);
    else if (i || (a = function (e, t) { var n; r = t, c.isBuffer(r) || r instanceof b || "string" == typeof t || void 0 === t || e.objectMode || (n = new j("chunk", ["string", "Buffer", "Uint8Array"], t)); var r; return n; }(o, t)), a)
        x(e, a);
    else if (o.objectMode || t && t.length > 0)
        if ("string" == typeof t || o.objectMode || Object.getPrototypeOf(t) === c.prototype || (t = function (e) { return c.from(e); }(t)), r)
            o.endEmitted ? x(e, new P) : q(e, o, t, !0);
        else if (o.ended)
            x(e, new O);
        else {
            if (o.destroyed)
                return !1;
            o.reading = !1, o.decoder && !n ? (t = o.decoder.write(t), o.objectMode || 0 !== t.length ? q(e, o, t, !1) : N(e, o)) : q(e, o, t, !1);
        }
    else
        r || (o.reading = !1, N(e, o)); return !o.ended && (o.length < o.highWaterMark || 0 === o.length); } function q(e, t, n, r) { t.flowing && 0 === t.length && !t.sync ? (t.awaitDrain = 0, e.emit("data", n)) : (t.length += t.objectMode ? 1 : n.length, r ? t.buffer.unshift(n) : t.buffer.push(n), t.needReadable && B(e)), N(e, t); } Object.defineProperty(C.prototype, "destroyed", { enumerable: !1, get: function () { return void 0 !== this._readableState && this._readableState.destroyed; }, set: function (e) { this._readableState && (this._readableState.destroyed = e); } }), C.prototype.destroy = k.destroy, C.prototype._undestroy = k.undestroy, C.prototype._destroy = function (e, t) { t(e); }, C.prototype.push = function (e, t) { var n, r = this._readableState; return r.objectMode ? n = !0 : "string" == typeof e && ((t = t || r.defaultEncoding) !== r.encoding && (e = c.from(e, t), t = ""), n = !0), A(this, e, t, !1, n); }, C.prototype.unshift = function (e) { return A(this, e, null, !0, !1); }, C.prototype.isPaused = function () { return !1 === this._readableState.flowing; }, C.prototype.setEncoding = function (e) { w || (w = chunk_6e68c801_js_1.s.StringDecoder); var t = new w(e); this._readableState.decoder = t, this._readableState.encoding = this._readableState.decoder.encoding; for (var n = this._readableState.buffer.head, r = ""; null !== n;)
        r += t.write(n.data), n = n.next; return this._readableState.buffer.clear(), "" !== r && this._readableState.buffer.push(r), this._readableState.length = r.length, this; }; function W(e, t) { return e <= 0 || 0 === t.length && t.ended ? 0 : t.objectMode ? 1 : e != e ? t.flowing && t.length ? t.buffer.head.data.length : t.length : (e > t.highWaterMark && (t.highWaterMark = function (e) { return e >= 1073741824 ? e = 1073741824 : (e--, e |= e >>> 1, e |= e >>> 2, e |= e >>> 4, e |= e >>> 8, e |= e >>> 16, e++), e; }(e)), e <= t.length ? e : t.ended ? t.length : (t.needReadable = !0, 0)); } function B(e) { var t = e._readableState; p("emitReadable", t.needReadable, t.emittedReadable), t.needReadable = !1, t.emittedReadable || (p("emitReadable", t.flowing), t.emittedReadable = !0, u.nextTick(I, e)); } function I(e) { var t = e._readableState; p("emitReadable_", t.destroyed, t.length, t.ended), t.destroyed || !t.length && !t.ended || (e.emit("readable"), t.emittedReadable = !1), t.needReadable = !t.flowing && !t.ended && t.length <= t.highWaterMark, J(e); } function N(e, t) { t.readingMore || (t.readingMore = !0, u.nextTick(U, e, t)); } function U(e, t) { for (; !t.reading && !t.ended && (t.length < t.highWaterMark || t.flowing && 0 === t.length);) {
        var n = t.length;
        if (p("maybeReadMore read 0"), e.read(0), n === t.length)
            break;
    } t.readingMore = !1; } function H(e) { var t = e._readableState; t.readableListening = e.listenerCount("readable") > 0, t.resumeScheduled && !t.paused ? t.flowing = !0 : e.listenerCount("data") > 0 && e.resume(); } function K(e) { p("readable nexttick read 0"), e.read(0); } function z(e, t) { p("resume", t.reading), t.reading || e.read(0), t.resumeScheduled = !1, e.emit("resume"), J(e), t.flowing && !t.reading && e.read(0); } function J(e) { var t = e._readableState; for (p("flow", t.flowing); t.flowing && null !== e.read();)
        ; } function Q(e, t) { return 0 === t.length ? null : (t.objectMode ? n = t.buffer.shift() : !e || e >= t.length ? (n = t.decoder ? t.buffer.join("") : 1 === t.buffer.length ? t.buffer.first() : t.buffer.concat(t.length), t.buffer.clear()) : n = t.buffer.consume(e, t.decoder), n); var n; } function X(e) { var t = e._readableState; p("endReadable", t.endEmitted), t.endEmitted || (t.ended = !0, u.nextTick(Z, t, e)); } function Z(e, t) { if (p("endReadableNT", e.endEmitted, e.length), !e.endEmitted && 0 === e.length && (e.endEmitted = !0, t.readable = !1, t.emit("end"), e.autoDestroy)) {
        var n = t._writableState;
        (!n || n.autoDestroy && n.finished) && t.destroy();
    } } function $(e, t) { for (var n = 0, r = e.length; n < r; n++)
        if (e[n] === t)
            return n; return -1; } return C.prototype.read = function (e) { p("read", e), e = parseInt(e, 10); var t = this._readableState, n = e; if (0 !== e && (t.emittedReadable = !1), 0 === e && t.needReadable && ((0 !== t.highWaterMark ? t.length >= t.highWaterMark : t.length > 0) || t.ended))
        return p("read: emitReadable", t.length, t.ended), 0 === t.length && t.ended ? X(this) : B(this), null; if (0 === (e = W(e, t)) && t.ended)
        return 0 === t.length && X(this), null; var r, i = t.needReadable; return p("need readable", i), (0 === t.length || t.length - e < t.highWaterMark) && p("length less than watermark", i = !0), t.ended || t.reading ? p("reading or ended", i = !1) : i && (p("do read"), t.reading = !0, t.sync = !0, 0 === t.length && (t.needReadable = !0), this._read(t.highWaterMark), t.sync = !1, t.reading || (e = W(n, t))), null === (r = e > 0 ? Q(e, t) : null) ? (t.needReadable = t.length <= t.highWaterMark, e = 0) : (t.length -= e, t.awaitDrain = 0), 0 === t.length && (t.ended || (t.needReadable = !0), n !== e && t.ended && X(this)), null !== r && this.emit("data", r), r; }, C.prototype._read = function (e) { x(this, new T("_read()")); }, C.prototype.pipe = function (e, t) { var n = this, r = this._readableState; switch (r.pipesCount) {
        case 0:
            r.pipes = e;
            break;
        case 1:
            r.pipes = [r.pipes, e];
            break;
        default: r.pipes.push(e);
    } r.pipesCount += 1, p("pipe count=%d opts=%j", r.pipesCount, t); var i = (!t || !1 !== t.end) && e !== u.stdout && e !== u.stderr ? o : g; function a(t, i) { p("onunpipe"), t === n && i && !1 === i.hasUnpiped && (i.hasUnpiped = !0, p("cleanup"), e.removeListener("close", c), e.removeListener("finish", b), e.removeListener("drain", s), e.removeListener("error", h), e.removeListener("unpipe", a), n.removeListener("end", o), n.removeListener("end", g), n.removeListener("data", d), l = !0, !r.awaitDrain || e._writableState && !e._writableState.needDrain || s()); } function o() { p("onend"), e.end(); } r.endEmitted ? u.nextTick(i) : n.once("end", i), e.on("unpipe", a); var s = function (e) { return function () { var t = e._readableState; p("pipeOnDrain", t.awaitDrain), t.awaitDrain && t.awaitDrain--, 0 === t.awaitDrain && f(e, "data") && (t.flowing = !0, J(e)); }; }(n); e.on("drain", s); var l = !1; function d(t) { p("ondata"); var i = e.write(t); p("dest.write", i), !1 === i && ((1 === r.pipesCount && r.pipes === e || r.pipesCount > 1 && -1 !== $(r.pipes, e)) && !l && (p("false write response, pause", r.awaitDrain), r.awaitDrain++), n.pause()); } function h(t) { p("onerror", t), g(), e.removeListener("error", h), 0 === f(e, "error") && x(e, t); } function c() { e.removeListener("finish", b), g(); } function b() { p("onfinish"), e.removeListener("close", c), g(); } function g() { p("unpipe"), n.unpipe(e); } return n.on("data", d), function (e, t, n) { if ("function" == typeof e.prependListener)
        return e.prependListener(t, n); e._events && e._events[t] ? Array.isArray(e._events[t]) ? e._events[t].unshift(n) : e._events[t] = [n, e._events[t]] : e.on(t, n); }(e, "error", h), e.once("close", c), e.once("finish", b), e.emit("pipe", n), r.flowing || (p("pipe resume"), n.resume()), e; }, C.prototype.unpipe = function (e) { var t = this._readableState, n = { hasUnpiped: !1 }; if (0 === t.pipesCount)
        return this; if (1 === t.pipesCount)
        return e && e !== t.pipes || (e || (e = t.pipes), t.pipes = null, t.pipesCount = 0, t.flowing = !1, e && e.emit("unpipe", this, n)), this; if (!e) {
        var r = t.pipes, i = t.pipesCount;
        t.pipes = null, t.pipesCount = 0, t.flowing = !1;
        for (var a = 0; a < i; a++)
            r[a].emit("unpipe", this, { hasUnpiped: !1 });
        return this;
    } var o = $(t.pipes, e); return -1 === o || (t.pipes.splice(o, 1), t.pipesCount -= 1, 1 === t.pipesCount && (t.pipes = t.pipes[0]), e.emit("unpipe", this, n)), this; }, C.prototype.on = function (e, t) { var n = h.prototype.on.call(this, e, t), r = this._readableState; return "data" === e ? (r.readableListening = this.listenerCount("readable") > 0, !1 !== r.flowing && this.resume()) : "readable" === e && (r.endEmitted || r.readableListening || (r.readableListening = r.needReadable = !0, r.flowing = !1, r.emittedReadable = !1, p("on readable", r.length, r.reading), r.length ? B(this) : r.reading || u.nextTick(K, this))), n; }, C.prototype.addListener = C.prototype.on, C.prototype.removeListener = function (e, t) { var n = h.prototype.removeListener.call(this, e, t); return "readable" === e && u.nextTick(H, this), n; }, C.prototype.removeAllListeners = function (e) { var t = h.prototype.removeAllListeners.apply(this, arguments); return "readable" !== e && void 0 !== e || u.nextTick(H, this), t; }, C.prototype.resume = function () { var e = this._readableState; return e.flowing || (p("resume"), e.flowing = !e.readableListening, function (e, t) { t.resumeScheduled || (t.resumeScheduled = !0, u.nextTick(z, e, t)); }(this, e)), e.paused = !1, this; }, C.prototype.pause = function () { return p("call pause flowing=%j", this._readableState.flowing), !1 !== this._readableState.flowing && (p("pause"), this._readableState.flowing = !1, this.emit("pause")), this._readableState.paused = !0, this; }, C.prototype.wrap = function (e) { var t = this, n = this._readableState, r = !1; for (var i in e.on("end", (function () { if (p("wrapped end"), n.decoder && !n.ended) {
        var e = n.decoder.end();
        e && e.length && t.push(e);
    } t.push(null); })), e.on("data", (function (i) { (p("wrapped data"), n.decoder && (i = n.decoder.write(i)), n.objectMode && null == i) || (n.objectMode || i && i.length) && (t.push(i) || (r = !0, e.pause())); })), e)
        void 0 === this[i] && "function" == typeof e[i] && (this[i] = function (t) { return function () { return e[t].apply(e, arguments); }; }(i)); for (var a = 0; a < L.length; a++)
        e.on(L[a], this.emit.bind(this, L[a])); return this._read = function (t) { p("wrapped _read", t), r && (r = !1, e.resume()); }, this; }, "function" == typeof Symbol && (C.prototype[Symbol.asyncIterator] = function () { return void 0 === v && (v = F), v(this); }), Object.defineProperty(C.prototype, "readableHighWaterMark", { enumerable: !1, get: function () { return this._readableState.highWaterMark; } }), Object.defineProperty(C.prototype, "readableBuffer", { enumerable: !1, get: function () { return this._readableState && this._readableState.buffer; } }), Object.defineProperty(C.prototype, "readableFlowing", { enumerable: !1, get: function () { return this._readableState.flowing; }, set: function (e) { this._readableState && (this._readableState.flowing = e); } }), C._fromList = Q, Object.defineProperty(C.prototype, "readableLength", { enumerable: !1, get: function () { return this._readableState.length; } }), "function" == typeof Symbol && (C.from = function (e, t) { return void 0 === _ && (_ = r$1), _(C, e, t); }), V; }
    function X() { if (J)
        return z; J = !0; var e$2, r = chunk_0c2d1322_js_5.h; function s(e) { var t = this; this.next = null, this.entry = null, this.finish = function () { !function (e, t, n) { var r = e.entry; e.entry = null; for (; r;) {
        var i = r.callback;
        t.pendingcb--, i(n), r = r.next;
    } t.corkedRequestsFree.next = e; }(t, e); }; } z = P, P.WritableState = T; var l = { deprecate: t$1 }, u = e, f = buffer_js_2.default.Buffer, h = Q.Uint8Array || function () { }; var c, b = m, p = R.getHighWaterMark, g = e$1.codes, y = g.ERR_INVALID_ARG_TYPE, w = g.ERR_METHOD_NOT_IMPLEMENTED, v = g.ERR_MULTIPLE_CALLBACK, _ = g.ERR_STREAM_CANNOT_PIPE, S = g.ERR_STREAM_DESTROYED, k = g.ERR_STREAM_NULL_VALUES, E = g.ERR_STREAM_WRITE_AFTER_END, M = g.ERR_UNKNOWN_ENCODING, j = b.errorOrDestroy; function O() { } function T(t, n, i) { e$2 = e$2 || ee(), t = t || {}, "boolean" != typeof i && (i = n instanceof e$2), this.objectMode = !!t.objectMode, i && (this.objectMode = this.objectMode || !!t.writableObjectMode), this.highWaterMark = p(this, t, "writableHighWaterMark", i), this.finalCalled = !1, this.needDrain = !1, this.ending = !1, this.ended = !1, this.finished = !1, this.destroyed = !1; var a = !1 === t.decodeStrings; this.decodeStrings = !a, this.defaultEncoding = t.defaultEncoding || "utf8", this.length = 0, this.writing = !1, this.corked = 0, this.sync = !0, this.bufferProcessing = !1, this.onwrite = function (e) { !function (e, t) { var n = e._writableState, i = n.sync, a = n.writecb; if ("function" != typeof a)
        throw new v; if (function (e) { e.writing = !1, e.writecb = null, e.length -= e.writelen, e.writelen = 0; }(n), t)
        !function (e, t, n, i, a) { --t.pendingcb, n ? (r.nextTick(a, i), r.nextTick(q, e, t), e._writableState.errorEmitted = !0, j(e, i)) : (a(i), e._writableState.errorEmitted = !0, j(e, i), q(e, t)); }(e, n, i, t, a);
    else {
        var o = C(n) || e.destroyed;
        o || n.corked || n.bufferProcessing || !n.bufferedRequest || D(e, n), i ? r.nextTick(L, e, n, o, a) : L(e, n, o, a);
    } }(n, e); }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = !1, this.errorEmitted = !1, this.emitClose = !1 !== t.emitClose, this.autoDestroy = !!t.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new s(this); } function P(t) { var n = this instanceof (e$2 = e$2 || ee()); if (!n && !c.call(P, this))
        return new P(t); this._writableState = new T(t, this, n), this.writable = !0, t && ("function" == typeof t.write && (this._write = t.write), "function" == typeof t.writev && (this._writev = t.writev), "function" == typeof t.destroy && (this._destroy = t.destroy), "function" == typeof t.final && (this._final = t.final)), u.call(this); } function x(e, t, n, r, i, a, o) { t.writelen = r, t.writecb = o, t.writing = !0, t.sync = !0, t.destroyed ? t.onwrite(new S("write")) : n ? e._writev(i, t.onwrite) : e._write(i, a, t.onwrite), t.sync = !1; } function L(e, t, n, r) { n || !function (e, t) { 0 === t.length && t.needDrain && (t.needDrain = !1, e.emit("drain")); }(e, t), t.pendingcb--, r(), q(e, t); } function D(e, t) { t.bufferProcessing = !0; var n = t.bufferedRequest; if (e._writev && n && n.next) {
        var r = t.bufferedRequestCount, i = new Array(r), a = t.corkedRequestsFree;
        a.entry = n;
        for (var o = 0, l = !0; n;)
            i[o] = n, n.isBuf || (l = !1), n = n.next, o += 1;
        i.allBuffers = l, x(e, t, !0, t.length, i, "", a.finish), t.pendingcb++, t.lastBufferedRequest = null, a.next ? (t.corkedRequestsFree = a.next, a.next = null) : t.corkedRequestsFree = new s(t), t.bufferedRequestCount = 0;
    }
    else {
        for (; n;) {
            var d = n.chunk, u = n.encoding, f = n.callback;
            if (x(e, t, !1, t.objectMode ? 1 : d.length, d, u, f), n = n.next, t.bufferedRequestCount--, t.writing)
                break;
        }
        null === n && (t.lastBufferedRequest = null);
    } t.bufferedRequest = n, t.bufferProcessing = !1; } function C(e) { return e.ending && 0 === e.length && null === e.bufferedRequest && !e.finished && !e.writing; } function A(e, t) { e._final((function (n) { t.pendingcb--, n && j(e, n), t.prefinished = !0, e.emit("prefinish"), q(e, t); })); } function q(e, t) { var n = C(t); if (n && (!function (e, t) { t.prefinished || t.finalCalled || ("function" != typeof e._final || t.destroyed ? (t.prefinished = !0, e.emit("prefinish")) : (t.pendingcb++, t.finalCalled = !0, r.nextTick(A, e, t))); }(e, t), 0 === t.pendingcb && (t.finished = !0, e.emit("finish"), t.autoDestroy))) {
        var i = e._readableState;
        (!i || i.autoDestroy && i.endEmitted) && e.destroy();
    } return n; } return chunk_dac557ba_js_3.t(P, u), T.prototype.getBuffer = function () { for (var e = this.bufferedRequest, t = []; e;)
        t.push(e), e = e.next; return t; }, function () { try {
        Object.defineProperty(T.prototype, "buffer", { get: l.deprecate((function () { return this.getBuffer(); }), "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003") });
    }
    catch (e) { } }(), "function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance] ? (c = Function.prototype[Symbol.hasInstance], Object.defineProperty(P, Symbol.hasInstance, { value: function (e) { return !!c.call(this, e) || this === P && (e && e._writableState instanceof T); } })) : c = function (e) { return e instanceof this; }, P.prototype.pipe = function () { j(this, new _); }, P.prototype.write = function (e, t, n) { var i, a = this._writableState, o = !1, s = !a.objectMode && (i = e, f.isBuffer(i) || i instanceof h); return s && !f.isBuffer(e) && (e = function (e) { return f.from(e); }(e)), "function" == typeof t && (n = t, t = null), s ? t = "buffer" : t || (t = a.defaultEncoding), "function" != typeof n && (n = O), a.ending ? function (e, t) { var n = new E; j(e, n), r.nextTick(t, n); }(this, n) : (s || function (e, t, n, i) { var a; return null === n ? a = new k : "string" == typeof n || t.objectMode || (a = new y("chunk", ["string", "Buffer"], n)), !a || (j(e, a), r.nextTick(i, a), !1); }(this, a, e, n)) && (a.pendingcb++, o = function (e, t, n, r, i, a) { if (!n) {
        var o = function (e, t, n) { e.objectMode || !1 === e.decodeStrings || "string" != typeof t || (t = f.from(t, n)); return t; }(t, r, i);
        r !== o && (n = !0, i = "buffer", r = o);
    } var s = t.objectMode ? 1 : r.length; t.length += s; var l = t.length < t.highWaterMark; l || (t.needDrain = !0); if (t.writing || t.corked) {
        var d = t.lastBufferedRequest;
        t.lastBufferedRequest = { chunk: r, encoding: i, isBuf: n, callback: a, next: null }, d ? d.next = t.lastBufferedRequest : t.bufferedRequest = t.lastBufferedRequest, t.bufferedRequestCount += 1;
    }
    else
        x(e, t, !1, s, r, i, a); return l; }(this, a, s, e, t, n)), o; }, P.prototype.cork = function () { this._writableState.corked++; }, P.prototype.uncork = function () { var e = this._writableState; e.corked && (e.corked--, e.writing || e.corked || e.bufferProcessing || !e.bufferedRequest || D(this, e)); }, P.prototype.setDefaultEncoding = function (e) { if ("string" == typeof e && (e = e.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((e + "").toLowerCase()) > -1))
        throw new M(e); return this._writableState.defaultEncoding = e, this; }, Object.defineProperty(P.prototype, "writableBuffer", { enumerable: !1, get: function () { return this._writableState && this._writableState.getBuffer(); } }), Object.defineProperty(P.prototype, "writableHighWaterMark", { enumerable: !1, get: function () { return this._writableState.highWaterMark; } }), P.prototype._write = function (e, t, n) { n(new w("_write()")); }, P.prototype._writev = null, P.prototype.end = function (e, t, n) { var i = this._writableState; return "function" == typeof e ? (n = e, e = null, t = null) : "function" == typeof t && (n = t, t = null), null != e && this.write(e, t), i.corked && (i.corked = 1, this.uncork()), i.ending || function (e, t, n) { t.ending = !0, q(e, t), n && (t.finished ? r.nextTick(n) : e.once("finish", n)); t.ended = !0, e.writable = !1; }(this, i, n), this; }, Object.defineProperty(P.prototype, "writableLength", { enumerable: !1, get: function () { return this._writableState.length; } }), Object.defineProperty(P.prototype, "destroyed", { enumerable: !1, get: function () { return void 0 !== this._writableState && this._writableState.destroyed; }, set: function (e) { this._writableState && (this._writableState.destroyed = e); } }), P.prototype.destroy = b.destroy, P.prototype._undestroy = b.undestroy, P.prototype._destroy = function (e, t) { t(e); }, z; }
    function ee() { if ($)
        return Z; $ = !0; var e = chunk_0c2d1322_js_5.h, t = Object.keys || function (e) { var t = []; for (var n in e)
        t.push(n); return t; }; Z = d; var n = K(), r = X(); chunk_dac557ba_js_3.t(d, n); for (var a = t(r.prototype), s = 0; s < a.length; s++) {
        var l = a[s];
        d.prototype[l] || (d.prototype[l] = r.prototype[l]);
    } function d(e) { if (!(this instanceof d))
        return new d(e); n.call(this, e), r.call(this, e), this.allowHalfOpen = !0, e && (!1 === e.readable && (this.readable = !1), !1 === e.writable && (this.writable = !1), !1 === e.allowHalfOpen && (this.allowHalfOpen = !1, this.once("end", u))); } function u() { this._writableState.ended || e.nextTick(f, this); } function f(e) { e.end(); } return Object.defineProperty(d.prototype, "writableHighWaterMark", { enumerable: !1, get: function () { return this._writableState.highWaterMark; } }), Object.defineProperty(d.prototype, "writableBuffer", { enumerable: !1, get: function () { return this._writableState && this._writableState.getBuffer(); } }), Object.defineProperty(d.prototype, "writableLength", { enumerable: !1, get: function () { return this._writableState.length; } }), Object.defineProperty(d.prototype, "destroyed", { enumerable: !1, get: function () { return void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed && this._writableState.destroyed); }, set: function (e) { void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed = e, this._writableState.destroyed = e); } }), Z; }
    function t$3() { }
    function f$1(e, t) { var n = Object.keys(e); if (Object.getOwnPropertySymbols) {
        var r = Object.getOwnPropertySymbols(e);
        t && (r = r.filter((function (t) { return Object.getOwnPropertyDescriptor(e, t).enumerable; }))), n.push.apply(n, r);
    } return n; }
    function h$1(e, t, n) { return t in e ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = n, e; }
    function c$1(e, t) { for (var n = 0; n < t.length; n++) {
        var r = t[n];
        r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);
    } }
    function _$1(e, t) { m$1(e, t), v$1(e); }
    function v$1(e) { e._writableState && !e._writableState.emitClose || e._readableState && !e._readableState.emitClose || e.emit("close"); }
    function m$1(e, t) { e.emit("error", t); }
    function j$1(e, t, n) { return t in e ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = n, e; }
    function W$1(e, t) { return { value: e, done: t }; }
    function B$1(e) { var t = e[T$1]; if (null !== t) {
        var n = e[A$1].read();
        null !== n && (e[L$1] = null, e[T$1] = null, e[x$1] = null, t(W$1(n, !1)));
    } }
    function q$1(e) { M$1.nextTick(B$1, e); }
    function G$1() { if (F$1)
        return H$1; F$1 = !0; var l, u = chunk_0c2d1322_js_5.h; H$1 = C, C.ReadableState = L; events_js_8.default.EventEmitter; var f = function (e, t) { return e.listeners(t).length; }, h = e, c = buffer_js_2.default.Buffer, b = V$1.Uint8Array || function () { }; var p, g = util_js_9.default; p = g && g.debuglog ? g.debuglog("stream") : function () { }; var w, _, v, m = y$1, R = S$1, k = E$1.getHighWaterMark, M = e$1.codes, j = M.ERR_INVALID_ARG_TYPE, O = M.ERR_STREAM_PUSH_AFTER_EOF, T = M.ERR_METHOD_NOT_IMPLEMENTED, x = M.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; chunk_dac557ba_js_3.t(C, h); var P = R.errorOrDestroy, D = ["error", "close", "destroy", "pause", "resume"]; function L(e, t, n) { l = l || Z$1(), e = e || {}, "boolean" != typeof n && (n = t instanceof l), this.objectMode = !!e.objectMode, n && (this.objectMode = this.objectMode || !!e.readableObjectMode), this.highWaterMark = k(this, e, "readableHighWaterMark", n), this.buffer = new m, this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = !1, this.endEmitted = !1, this.reading = !1, this.sync = !0, this.needReadable = !1, this.emittedReadable = !1, this.readableListening = !1, this.resumeScheduled = !1, this.paused = !0, this.emitClose = !1 !== e.emitClose, this.autoDestroy = !!e.autoDestroy, this.destroyed = !1, this.defaultEncoding = e.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = !1, this.decoder = null, this.encoding = null, e.encoding && (w || (w = chunk_6e68c801_js_1.s.StringDecoder), this.decoder = new w(e.encoding), this.encoding = e.encoding); } function C(e) { if (l = l || Z$1(), !(this instanceof C))
        return new C(e); var t = this instanceof l; this._readableState = new L(e, this, t), this.readable = !0, e && ("function" == typeof e.read && (this._read = e.read), "function" == typeof e.destroy && (this._destroy = e.destroy)), h.call(this); } function A(e, t, n, r, i) { p("readableAddChunk", t); var a, o = e._readableState; if (null === t)
        o.reading = !1, function (e, t) { if (p("onEofChunk"), t.ended)
            return; if (t.decoder) {
            var n = t.decoder.end();
            n && n.length && (t.buffer.push(n), t.length += t.objectMode ? 1 : n.length);
        } t.ended = !0, t.sync ? q(e) : (t.needReadable = !1, t.emittedReadable || (t.emittedReadable = !0, I(e))); }(e, o);
    else if (i || (a = function (e, t) { var n; r = t, c.isBuffer(r) || r instanceof b || "string" == typeof t || void 0 === t || e.objectMode || (n = new j("chunk", ["string", "Buffer", "Uint8Array"], t)); var r; return n; }(o, t)), a)
        P(e, a);
    else if (o.objectMode || t && t.length > 0)
        if ("string" == typeof t || o.objectMode || Object.getPrototypeOf(t) === c.prototype || (t = function (e) { return c.from(e); }(t)), r)
            o.endEmitted ? P(e, new x) : W(e, o, t, !0);
        else if (o.ended)
            P(e, new O);
        else {
            if (o.destroyed)
                return !1;
            o.reading = !1, o.decoder && !n ? (t = o.decoder.write(t), o.objectMode || 0 !== t.length ? W(e, o, t, !1) : N(e, o)) : W(e, o, t, !1);
        }
    else
        r || (o.reading = !1, N(e, o)); return !o.ended && (o.length < o.highWaterMark || 0 === o.length); } function W(e, t, n, r) { t.flowing && 0 === t.length && !t.sync ? (t.awaitDrain = 0, e.emit("data", n)) : (t.length += t.objectMode ? 1 : n.length, r ? t.buffer.unshift(n) : t.buffer.push(n), t.needReadable && q(e)), N(e, t); } Object.defineProperty(C.prototype, "destroyed", { enumerable: !1, get: function () { return void 0 !== this._readableState && this._readableState.destroyed; }, set: function (e) { this._readableState && (this._readableState.destroyed = e); } }), C.prototype.destroy = R.destroy, C.prototype._undestroy = R.undestroy, C.prototype._destroy = function (e, t) { t(e); }, C.prototype.push = function (e, t) { var n, r = this._readableState; return r.objectMode ? n = !0 : "string" == typeof e && ((t = t || r.defaultEncoding) !== r.encoding && (e = c.from(e, t), t = ""), n = !0), A(this, e, t, !1, n); }, C.prototype.unshift = function (e) { return A(this, e, null, !0, !1); }, C.prototype.isPaused = function () { return !1 === this._readableState.flowing; }, C.prototype.setEncoding = function (e) { w || (w = chunk_6e68c801_js_1.s.StringDecoder); var t = new w(e); this._readableState.decoder = t, this._readableState.encoding = this._readableState.decoder.encoding; for (var n = this._readableState.buffer.head, r = ""; null !== n;)
        r += t.write(n.data), n = n.next; return this._readableState.buffer.clear(), "" !== r && this._readableState.buffer.push(r), this._readableState.length = r.length, this; }; function B(e, t) { return e <= 0 || 0 === t.length && t.ended ? 0 : t.objectMode ? 1 : e != e ? t.flowing && t.length ? t.buffer.head.data.length : t.length : (e > t.highWaterMark && (t.highWaterMark = function (e) { return e >= 1073741824 ? e = 1073741824 : (e--, e |= e >>> 1, e |= e >>> 2, e |= e >>> 4, e |= e >>> 8, e |= e >>> 16, e++), e; }(e)), e <= t.length ? e : t.ended ? t.length : (t.needReadable = !0, 0)); } function q(e) { var t = e._readableState; p("emitReadable", t.needReadable, t.emittedReadable), t.needReadable = !1, t.emittedReadable || (p("emitReadable", t.flowing), t.emittedReadable = !0, u.nextTick(I, e)); } function I(e) { var t = e._readableState; p("emitReadable_", t.destroyed, t.length, t.ended), t.destroyed || !t.length && !t.ended || (e.emit("readable"), t.emittedReadable = !1), t.needReadable = !t.flowing && !t.ended && t.length <= t.highWaterMark, J(e); } function N(e, t) { t.readingMore || (t.readingMore = !0, u.nextTick(G, e, t)); } function G(e, t) { for (; !t.reading && !t.ended && (t.length < t.highWaterMark || t.flowing && 0 === t.length);) {
        var n = t.length;
        if (p("maybeReadMore read 0"), e.read(0), n === t.length)
            break;
    } t.readingMore = !1; } function Y(e) { var t = e._readableState; t.readableListening = e.listenerCount("readable") > 0, t.resumeScheduled && !t.paused ? t.flowing = !0 : e.listenerCount("data") > 0 && e.resume(); } function K(e) { p("readable nexttick read 0"), e.read(0); } function z(e, t) { p("resume", t.reading), t.reading || e.read(0), t.resumeScheduled = !1, e.emit("resume"), J(e), t.flowing && !t.reading && e.read(0); } function J(e) { var t = e._readableState; for (p("flow", t.flowing); t.flowing && null !== e.read();)
        ; } function Q(e, t) { return 0 === t.length ? null : (t.objectMode ? n = t.buffer.shift() : !e || e >= t.length ? (n = t.decoder ? t.buffer.join("") : 1 === t.buffer.length ? t.buffer.first() : t.buffer.concat(t.length), t.buffer.clear()) : n = t.buffer.consume(e, t.decoder), n); var n; } function X(e) { var t = e._readableState; p("endReadable", t.endEmitted), t.endEmitted || (t.ended = !0, u.nextTick($, t, e)); } function $(e, t) { if (p("endReadableNT", e.endEmitted, e.length), !e.endEmitted && 0 === e.length && (e.endEmitted = !0, t.readable = !1, t.emit("end"), e.autoDestroy)) {
        var n = t._writableState;
        (!n || n.autoDestroy && n.finished) && t.destroy();
    } } function ee(e, t) { for (var n = 0, r = e.length; n < r; n++)
        if (e[n] === t)
            return n; return -1; } return C.prototype.read = function (e) { p("read", e), e = parseInt(e, 10); var t = this._readableState, n = e; if (0 !== e && (t.emittedReadable = !1), 0 === e && t.needReadable && ((0 !== t.highWaterMark ? t.length >= t.highWaterMark : t.length > 0) || t.ended))
        return p("read: emitReadable", t.length, t.ended), 0 === t.length && t.ended ? X(this) : q(this), null; if (0 === (e = B(e, t)) && t.ended)
        return 0 === t.length && X(this), null; var r, i = t.needReadable; return p("need readable", i), (0 === t.length || t.length - e < t.highWaterMark) && p("length less than watermark", i = !0), t.ended || t.reading ? p("reading or ended", i = !1) : i && (p("do read"), t.reading = !0, t.sync = !0, 0 === t.length && (t.needReadable = !0), this._read(t.highWaterMark), t.sync = !1, t.reading || (e = B(n, t))), null === (r = e > 0 ? Q(e, t) : null) ? (t.needReadable = t.length <= t.highWaterMark, e = 0) : (t.length -= e, t.awaitDrain = 0), 0 === t.length && (t.ended || (t.needReadable = !0), n !== e && t.ended && X(this)), null !== r && this.emit("data", r), r; }, C.prototype._read = function (e) { P(this, new T("_read()")); }, C.prototype.pipe = function (e, t) { var n = this, r = this._readableState; switch (r.pipesCount) {
        case 0:
            r.pipes = e;
            break;
        case 1:
            r.pipes = [r.pipes, e];
            break;
        default: r.pipes.push(e);
    } r.pipesCount += 1, p("pipe count=%d opts=%j", r.pipesCount, t); var i = (!t || !1 !== t.end) && e !== u.stdout && e !== u.stderr ? o : g; function a(t, i) { p("onunpipe"), t === n && i && !1 === i.hasUnpiped && (i.hasUnpiped = !0, p("cleanup"), e.removeListener("close", c), e.removeListener("finish", b), e.removeListener("drain", s), e.removeListener("error", h), e.removeListener("unpipe", a), n.removeListener("end", o), n.removeListener("end", g), n.removeListener("data", d), l = !0, !r.awaitDrain || e._writableState && !e._writableState.needDrain || s()); } function o() { p("onend"), e.end(); } r.endEmitted ? u.nextTick(i) : n.once("end", i), e.on("unpipe", a); var s = function (e) { return function () { var t = e._readableState; p("pipeOnDrain", t.awaitDrain), t.awaitDrain && t.awaitDrain--, 0 === t.awaitDrain && f(e, "data") && (t.flowing = !0, J(e)); }; }(n); e.on("drain", s); var l = !1; function d(t) { p("ondata"); var i = e.write(t); p("dest.write", i), !1 === i && ((1 === r.pipesCount && r.pipes === e || r.pipesCount > 1 && -1 !== ee(r.pipes, e)) && !l && (p("false write response, pause", r.awaitDrain), r.awaitDrain++), n.pause()); } function h(t) { p("onerror", t), g(), e.removeListener("error", h), 0 === f(e, "error") && P(e, t); } function c() { e.removeListener("finish", b), g(); } function b() { p("onfinish"), e.removeListener("close", c), g(); } function g() { p("unpipe"), n.unpipe(e); } return n.on("data", d), function (e, t, n) { if ("function" == typeof e.prependListener)
        return e.prependListener(t, n); e._events && e._events[t] ? Array.isArray(e._events[t]) ? e._events[t].unshift(n) : e._events[t] = [n, e._events[t]] : e.on(t, n); }(e, "error", h), e.once("close", c), e.once("finish", b), e.emit("pipe", n), r.flowing || (p("pipe resume"), n.resume()), e; }, C.prototype.unpipe = function (e) { var t = this._readableState, n = { hasUnpiped: !1 }; if (0 === t.pipesCount)
        return this; if (1 === t.pipesCount)
        return e && e !== t.pipes || (e || (e = t.pipes), t.pipes = null, t.pipesCount = 0, t.flowing = !1, e && e.emit("unpipe", this, n)), this; if (!e) {
        var r = t.pipes, i = t.pipesCount;
        t.pipes = null, t.pipesCount = 0, t.flowing = !1;
        for (var a = 0; a < i; a++)
            r[a].emit("unpipe", this, { hasUnpiped: !1 });
        return this;
    } var o = ee(t.pipes, e); return -1 === o || (t.pipes.splice(o, 1), t.pipesCount -= 1, 1 === t.pipesCount && (t.pipes = t.pipes[0]), e.emit("unpipe", this, n)), this; }, C.prototype.on = function (e, t) { var n = h.prototype.on.call(this, e, t), r = this._readableState; return "data" === e ? (r.readableListening = this.listenerCount("readable") > 0, !1 !== r.flowing && this.resume()) : "readable" === e && (r.endEmitted || r.readableListening || (r.readableListening = r.needReadable = !0, r.flowing = !1, r.emittedReadable = !1, p("on readable", r.length, r.reading), r.length ? q(this) : r.reading || u.nextTick(K, this))), n; }, C.prototype.addListener = C.prototype.on, C.prototype.removeListener = function (e, t) { var n = h.prototype.removeListener.call(this, e, t); return "readable" === e && u.nextTick(Y, this), n; }, C.prototype.removeAllListeners = function (e) { var t = h.prototype.removeAllListeners.apply(this, arguments); return "readable" !== e && void 0 !== e || u.nextTick(Y, this), t; }, C.prototype.resume = function () { var e = this._readableState; return e.flowing || (p("resume"), e.flowing = !e.readableListening, function (e, t) { t.resumeScheduled || (t.resumeScheduled = !0, u.nextTick(z, e, t)); }(this, e)), e.paused = !1, this; }, C.prototype.pause = function () { return p("call pause flowing=%j", this._readableState.flowing), !1 !== this._readableState.flowing && (p("pause"), this._readableState.flowing = !1, this.emit("pause")), this._readableState.paused = !0, this; }, C.prototype.wrap = function (e) { var t = this, n = this._readableState, r = !1; for (var i in e.on("end", (function () { if (p("wrapped end"), n.decoder && !n.ended) {
        var e = n.decoder.end();
        e && e.length && t.push(e);
    } t.push(null); })), e.on("data", (function (i) { (p("wrapped data"), n.decoder && (i = n.decoder.write(i)), n.objectMode && null == i) || (n.objectMode || i && i.length) && (t.push(i) || (r = !0, e.pause())); })), e)
        void 0 === this[i] && "function" == typeof e[i] && (this[i] = function (t) { return function () { return e[t].apply(e, arguments); }; }(i)); for (var a = 0; a < D.length; a++)
        e.on(D[a], this.emit.bind(this, D[a])); return this._read = function (t) { p("wrapped _read", t), r && (r = !1, e.resume()); }, this; }, "function" == typeof Symbol && (C.prototype[Symbol.asyncIterator] = function () { return void 0 === _ && (_ = U$1), _(this); }), Object.defineProperty(C.prototype, "readableHighWaterMark", { enumerable: !1, get: function () { return this._readableState.highWaterMark; } }), Object.defineProperty(C.prototype, "readableBuffer", { enumerable: !1, get: function () { return this._readableState && this._readableState.buffer; } }), Object.defineProperty(C.prototype, "readableFlowing", { enumerable: !1, get: function () { return this._readableState.flowing; }, set: function (e) { this._readableState && (this._readableState.flowing = e); } }), C._fromList = Q, Object.defineProperty(C.prototype, "readableLength", { enumerable: !1, get: function () { return this._readableState.length; } }), "function" == typeof Symbol && (C.from = function (e, t) { return void 0 === v && (v = r$1), v(C, e, t); }), H$1; }
    function J$1() { if (K$1)
        return Y$1; K$1 = !0; var e$2, r = chunk_0c2d1322_js_5.h; function s(e) { var t = this; this.next = null, this.entry = null, this.finish = function () { !function (e, t, n) { var r = e.entry; e.entry = null; for (; r;) {
        var i = r.callback;
        t.pendingcb--, i(n), r = r.next;
    } t.corkedRequestsFree.next = e; }(t, e); }; } Y$1 = x, x.WritableState = T; var l = { deprecate: t$1 }, d = e, f = buffer_js_2.default.Buffer, h = z$1.Uint8Array || function () { }; var c, b = S$1, p = E$1.getHighWaterMark, g = e$1.codes, y = g.ERR_INVALID_ARG_TYPE, w = g.ERR_METHOD_NOT_IMPLEMENTED, _ = g.ERR_MULTIPLE_CALLBACK, v = g.ERR_STREAM_CANNOT_PIPE, m = g.ERR_STREAM_DESTROYED, R = g.ERR_STREAM_NULL_VALUES, k = g.ERR_STREAM_WRITE_AFTER_END, M = g.ERR_UNKNOWN_ENCODING, j = b.errorOrDestroy; function O() { } function T(t, n, i) { e$2 = e$2 || Z$1(), t = t || {}, "boolean" != typeof i && (i = n instanceof e$2), this.objectMode = !!t.objectMode, i && (this.objectMode = this.objectMode || !!t.writableObjectMode), this.highWaterMark = p(this, t, "writableHighWaterMark", i), this.finalCalled = !1, this.needDrain = !1, this.ending = !1, this.ended = !1, this.finished = !1, this.destroyed = !1; var a = !1 === t.decodeStrings; this.decodeStrings = !a, this.defaultEncoding = t.defaultEncoding || "utf8", this.length = 0, this.writing = !1, this.corked = 0, this.sync = !0, this.bufferProcessing = !1, this.onwrite = function (e) { !function (e, t) { var n = e._writableState, i = n.sync, a = n.writecb; if ("function" != typeof a)
        throw new _; if (function (e) { e.writing = !1, e.writecb = null, e.length -= e.writelen, e.writelen = 0; }(n), t)
        !function (e, t, n, i, a) { --t.pendingcb, n ? (r.nextTick(a, i), r.nextTick(W, e, t), e._writableState.errorEmitted = !0, j(e, i)) : (a(i), e._writableState.errorEmitted = !0, j(e, i), W(e, t)); }(e, n, i, t, a);
    else {
        var o = C(n) || e.destroyed;
        o || n.corked || n.bufferProcessing || !n.bufferedRequest || L(e, n), i ? r.nextTick(D, e, n, o, a) : D(e, n, o, a);
    } }(n, e); }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = !1, this.errorEmitted = !1, this.emitClose = !1 !== t.emitClose, this.autoDestroy = !!t.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new s(this); } function x(t) { var n = this instanceof (e$2 = e$2 || Z$1()); if (!n && !c.call(x, this))
        return new x(t); this._writableState = new T(t, this, n), this.writable = !0, t && ("function" == typeof t.write && (this._write = t.write), "function" == typeof t.writev && (this._writev = t.writev), "function" == typeof t.destroy && (this._destroy = t.destroy), "function" == typeof t.final && (this._final = t.final)), d.call(this); } function P(e, t, n, r, i, a, o) { t.writelen = r, t.writecb = o, t.writing = !0, t.sync = !0, t.destroyed ? t.onwrite(new m("write")) : n ? e._writev(i, t.onwrite) : e._write(i, a, t.onwrite), t.sync = !1; } function D(e, t, n, r) { n || !function (e, t) { 0 === t.length && t.needDrain && (t.needDrain = !1, e.emit("drain")); }(e, t), t.pendingcb--, r(), W(e, t); } function L(e, t) { t.bufferProcessing = !0; var n = t.bufferedRequest; if (e._writev && n && n.next) {
        var r = t.bufferedRequestCount, i = new Array(r), a = t.corkedRequestsFree;
        a.entry = n;
        for (var o = 0, l = !0; n;)
            i[o] = n, n.isBuf || (l = !1), n = n.next, o += 1;
        i.allBuffers = l, P(e, t, !0, t.length, i, "", a.finish), t.pendingcb++, t.lastBufferedRequest = null, a.next ? (t.corkedRequestsFree = a.next, a.next = null) : t.corkedRequestsFree = new s(t), t.bufferedRequestCount = 0;
    }
    else {
        for (; n;) {
            var d = n.chunk, u = n.encoding, f = n.callback;
            if (P(e, t, !1, t.objectMode ? 1 : d.length, d, u, f), n = n.next, t.bufferedRequestCount--, t.writing)
                break;
        }
        null === n && (t.lastBufferedRequest = null);
    } t.bufferedRequest = n, t.bufferProcessing = !1; } function C(e) { return e.ending && 0 === e.length && null === e.bufferedRequest && !e.finished && !e.writing; } function A(e, t) { e._final((function (n) { t.pendingcb--, n && j(e, n), t.prefinished = !0, e.emit("prefinish"), W(e, t); })); } function W(e, t) { var n = C(t); if (n && (!function (e, t) { t.prefinished || t.finalCalled || ("function" != typeof e._final || t.destroyed ? (t.prefinished = !0, e.emit("prefinish")) : (t.pendingcb++, t.finalCalled = !0, r.nextTick(A, e, t))); }(e, t), 0 === t.pendingcb && (t.finished = !0, e.emit("finish"), t.autoDestroy))) {
        var i = e._readableState;
        (!i || i.autoDestroy && i.endEmitted) && e.destroy();
    } return n; } return chunk_dac557ba_js_3.t(x, d), T.prototype.getBuffer = function () { for (var e = this.bufferedRequest, t = []; e;)
        t.push(e), e = e.next; return t; }, function () { try {
        Object.defineProperty(T.prototype, "buffer", { get: l.deprecate((function () { return this.getBuffer(); }), "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003") });
    }
    catch (e) { } }(), "function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance] ? (c = Function.prototype[Symbol.hasInstance], Object.defineProperty(x, Symbol.hasInstance, { value: function (e) { return !!c.call(this, e) || this === x && (e && e._writableState instanceof T); } })) : c = function (e) { return e instanceof this; }, x.prototype.pipe = function () { j(this, new v); }, x.prototype.write = function (e, t, n) { var i, a = this._writableState, o = !1, s = !a.objectMode && (i = e, f.isBuffer(i) || i instanceof h); return s && !f.isBuffer(e) && (e = function (e) { return f.from(e); }(e)), "function" == typeof t && (n = t, t = null), s ? t = "buffer" : t || (t = a.defaultEncoding), "function" != typeof n && (n = O), a.ending ? function (e, t) { var n = new k; j(e, n), r.nextTick(t, n); }(this, n) : (s || function (e, t, n, i) { var a; return null === n ? a = new R : "string" == typeof n || t.objectMode || (a = new y("chunk", ["string", "Buffer"], n)), !a || (j(e, a), r.nextTick(i, a), !1); }(this, a, e, n)) && (a.pendingcb++, o = function (e, t, n, r, i, a) { if (!n) {
        var o = function (e, t, n) { e.objectMode || !1 === e.decodeStrings || "string" != typeof t || (t = f.from(t, n)); return t; }(t, r, i);
        r !== o && (n = !0, i = "buffer", r = o);
    } var s = t.objectMode ? 1 : r.length; t.length += s; var l = t.length < t.highWaterMark; l || (t.needDrain = !0); if (t.writing || t.corked) {
        var d = t.lastBufferedRequest;
        t.lastBufferedRequest = { chunk: r, encoding: i, isBuf: n, callback: a, next: null }, d ? d.next = t.lastBufferedRequest : t.bufferedRequest = t.lastBufferedRequest, t.bufferedRequestCount += 1;
    }
    else
        P(e, t, !1, s, r, i, a); return l; }(this, a, s, e, t, n)), o; }, x.prototype.cork = function () { this._writableState.corked++; }, x.prototype.uncork = function () { var e = this._writableState; e.corked && (e.corked--, e.writing || e.corked || e.bufferProcessing || !e.bufferedRequest || L(this, e)); }, x.prototype.setDefaultEncoding = function (e) { if ("string" == typeof e && (e = e.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((e + "").toLowerCase()) > -1))
        throw new M(e); return this._writableState.defaultEncoding = e, this; }, Object.defineProperty(x.prototype, "writableBuffer", { enumerable: !1, get: function () { return this._writableState && this._writableState.getBuffer(); } }), Object.defineProperty(x.prototype, "writableHighWaterMark", { enumerable: !1, get: function () { return this._writableState.highWaterMark; } }), x.prototype._write = function (e, t, n) { n(new w("_write()")); }, x.prototype._writev = null, x.prototype.end = function (e, t, n) { var i = this._writableState; return "function" == typeof e ? (n = e, e = null, t = null) : "function" == typeof t && (n = t, t = null), null != e && this.write(e, t), i.corked && (i.corked = 1, this.uncork()), i.ending || function (e, t, n) { t.ending = !0, W(e, t), n && (t.finished ? r.nextTick(n) : e.once("finish", n)); t.ended = !0, e.writable = !1; }(this, i, n), this; }, Object.defineProperty(x.prototype, "writableLength", { enumerable: !1, get: function () { return this._writableState.length; } }), Object.defineProperty(x.prototype, "destroyed", { enumerable: !1, get: function () { return void 0 !== this._writableState && this._writableState.destroyed; }, set: function (e) { this._writableState && (this._writableState.destroyed = e); } }), x.prototype.destroy = b.destroy, x.prototype._undestroy = b.undestroy, x.prototype._destroy = function (e, t) { t(e); }, Y$1; }
    function Z$1() { if (X$1)
        return Q$1; X$1 = !0; var e = chunk_0c2d1322_js_5.h, t = Object.keys || function (e) { var t = []; for (var n in e)
        t.push(n); return t; }; Q$1 = d; var n = G$1(), r = J$1(); chunk_dac557ba_js_3.t(d, n); for (var a = t(r.prototype), s = 0; s < a.length; s++) {
        var l = a[s];
        d.prototype[l] || (d.prototype[l] = r.prototype[l]);
    } function d(e) { if (!(this instanceof d))
        return new d(e); n.call(this, e), r.call(this, e), this.allowHalfOpen = !0, e && (!1 === e.readable && (this.readable = !1), !1 === e.writable && (this.writable = !1), !1 === e.allowHalfOpen && (this.allowHalfOpen = !1, this.once("end", u))); } function u() { this._writableState.ended || e.nextTick(f, this); } function f(e) { e.end(); } return Object.defineProperty(d.prototype, "writableHighWaterMark", { enumerable: !1, get: function () { return this._writableState.highWaterMark; } }), Object.defineProperty(d.prototype, "writableBuffer", { enumerable: !1, get: function () { return this._writableState && this._writableState.getBuffer(); } }), Object.defineProperty(d.prototype, "writableLength", { enumerable: !1, get: function () { return this._writableState.length; } }), Object.defineProperty(d.prototype, "destroyed", { enumerable: !1, get: function () { return void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed && this._writableState.destroyed); }, set: function (e) { void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed = e, this._writableState.destroyed = e); } }), Q$1; }
    function l(t, r) { var e = this._transformState; e.transforming = !1; var n = e.writecb; if (null === n)
        return this.emit("error", new o); e.writechunk = null, e.writecb = null, null != r && this.push(r), n(t); var i = this._readableState; i.reading = !1, (i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark); }
    function u$1(t) { if (!(this instanceof u$1))
        return new u$1(t); h$2.call(this, t), this._transformState = { afterTransform: l.bind(this), needTransform: !1, transforming: !1, writecb: null, writechunk: null, writeencoding: null }, this._readableState.needReadable = !0, this._readableState.sync = !1, t && ("function" == typeof t.transform && (this._transform = t.transform), "function" == typeof t.flush && (this._flush = t.flush)), this.on("prefinish", m$2); }
    function m$2() { var t = this; "function" != typeof this._flush || this._readableState.destroyed ? _$2(this, null, null) : this._flush((function (r, e) { _$2(t, r, e); })); }
    function _$2(t, r, e) { if (r)
        return t.emit("error", r); if (null != e && t.push(e), t._writableState.length)
        throw new f$2; if (t._transformState.transforming)
        throw new s; return t.push(null); }
    function i$1(r) { if (!(this instanceof i$1))
        return new i$1(r); e$3.call(this, r); }
    function i$2(r) { if (r)
        throw r; }
    function u$2(r, o, e, i) { i = function (r) { var n = !1; return function () { n || (n = !0, r.apply(void 0, arguments)); }; }(i); var u = !1; r.on("close", (function () { u = !0; })), void 0 === t$6 && (t$6 = n$1), t$6(r, { readable: o, writable: e }, (function (r) { if (r)
        return i(r); u = !0, i(); })); var a = !1; return function (n) { if (!u && !a)
        return a = !0, function (r) { return r.setHeader && "function" == typeof r.abort; }(r) ? r.abort() : "function" == typeof r.destroy ? r.destroy() : (i(n || new f$3("pipe")), void 0); }; }
    function a$1(r) { r(); }
    function c$2(r, n) { return r.pipe(n); }
    function p$3(r) { return r.length ? "function" != typeof r[r.length - 1] ? i$2 : r.pop() : i$2; }
    return {
        setters: [
            function (chunk_dac557ba_js_3_1) {
                chunk_dac557ba_js_3 = chunk_dac557ba_js_3_1;
            },
            function (chunk_0c2d1322_js_5_1) {
                chunk_0c2d1322_js_5 = chunk_0c2d1322_js_5_1;
            },
            function (buffer_js_2_1) {
                buffer_js_2 = buffer_js_2_1;
            },
            function (util_js_9_1) {
                util_js_9 = util_js_9_1;
            },
            function (chunk_6e68c801_js_1_1) {
                chunk_6e68c801_js_1 = chunk_6e68c801_js_1_1;
            },
            function (events_js_8_1) {
                events_js_8 = events_js_8_1;
            }
        ],
        execute: function () {
            e = events_js_8.default.EventEmitter;
            e$1 = {};
            t = {};
            n("ERR_INVALID_OPT_VALUE", (function (e, t) { return 'The value "' + t + '" is invalid for option "' + e + '"'; }), TypeError), n("ERR_INVALID_ARG_TYPE", (function (e, t, n) { let o; var E; let u; if ("string" == typeof t && (E = "not ", t.substr(0, E.length) === E) ? (o = "must not be", t = t.replace(/^not /, "")) : o = "must be", function (e, t, n) { return (void 0 === n || n > e.length) && (n = e.length), e.substring(n - t.length, n) === t; }(e, " argument"))
                u = `The ${e} ${o} ${r(t, "type")}`;
            else {
                u = `The "${e}" ${function (e, t, n) { return "number" != typeof n && (n = 0), !(n + t.length > e.length) && -1 !== e.indexOf(t, n); }(e, ".") ? "property" : "argument"} ${o} ${r(t, "type")}`;
            } return u += `. Received type ${typeof n}`, u; }), TypeError), n("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"), n("ERR_METHOD_NOT_IMPLEMENTED", (function (e) { return "The " + e + " method is not implemented"; })), n("ERR_STREAM_PREMATURE_CLOSE", "Premature close"), n("ERR_STREAM_DESTROYED", (function (e) { return "Cannot call " + e + " after a stream was destroyed"; })), n("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"), n("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"), n("ERR_STREAM_WRITE_AFTER_END", "write after end"), n("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError), n("ERR_UNKNOWN_ENCODING", (function (e) { return "Unknown encoding: " + e; }), TypeError), n("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"), e$1.codes = t;
            r$1 = function () { throw new Error("Readable.from is not available in the browser"); };
            r$2 = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self ? self : global;
            t$1 = function (t, n) { if (e$2("noDeprecation"))
                return t; var o = !1; return function () { if (!o) {
                if (e$2("throwDeprecation"))
                    throw new Error(n);
                e$2("traceDeprecation") ? console.trace(n) : console.warn(n), o = !0;
            } return t.apply(this || r$2, arguments); }; };
            c = buffer_js_2.default.Buffer, b = util_js_9.default.inspect, p = b && b.custom || "inspect";
            g = function () { function e() { !function (e, t) { if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function"); }(this, e), this.head = null, this.tail = null, this.length = 0; } var t, n; return t = e, (n = [{ key: "push", value: function (e) { var t = { data: e, next: null }; this.length > 0 ? this.tail.next = t : this.head = t, this.tail = t, ++this.length; } }, { key: "unshift", value: function (e) { var t = { data: e, next: this.head }; 0 === this.length && (this.tail = t), this.head = t, ++this.length; } }, { key: "shift", value: function () { if (0 !== this.length) {
                        var e = this.head.data;
                        return 1 === this.length ? this.head = this.tail = null : this.head = this.head.next, --this.length, e;
                    } } }, { key: "clear", value: function () { this.head = this.tail = null, this.length = 0; } }, { key: "join", value: function (e) { if (0 === this.length)
                        return ""; for (var t = this.head, n = "" + t.data; t = t.next;)
                        n += e + t.data; return n; } }, { key: "concat", value: function (e) { if (0 === this.length)
                        return c.alloc(0); for (var t, n, r, i = c.allocUnsafe(e >>> 0), a = this.head, o = 0; a;)
                        t = a.data, n = i, r = o, void c.prototype.copy.call(t, n, r), o += a.data.length, a = a.next; return i; } }, { key: "consume", value: function (e, t) { var n; return e < this.head.data.length ? (n = this.head.data.slice(0, e), this.head.data = this.head.data.slice(e)) : n = e === this.head.data.length ? this.shift() : t ? this._getString(e) : this._getBuffer(e), n; } }, { key: "first", value: function () { return this.head.data; } }, { key: "_getString", value: function (e) { var t = this.head, n = 1, r = t.data; for (e -= r.length; t = t.next;) {
                        var i = t.data, a = e > i.length ? i.length : e;
                        if (a === i.length ? r += i : r += i.slice(0, e), 0 == (e -= a)) {
                            a === i.length ? (++n, t.next ? this.head = t.next : this.head = this.tail = null) : (this.head = t, t.data = i.slice(a));
                            break;
                        }
                        ++n;
                    } return this.length -= n, r; } }, { key: "_getBuffer", value: function (e) { var t = c.allocUnsafe(e), n = this.head, r = 1; for (n.data.copy(t), e -= n.data.length; n = n.next;) {
                        var i = n.data, a = e > i.length ? i.length : e;
                        if (i.copy(t, t.length - e, 0, a), 0 == (e -= a)) {
                            a === i.length ? (++r, n.next ? this.head = n.next : this.head = this.tail = null) : (this.head = n, n.data = i.slice(a));
                            break;
                        }
                        ++r;
                    } return this.length -= r, t; } }, { key: p, value: function (e, t) { return b(this, function (e) { for (var t = 1; t < arguments.length; t++) {
                        var n = null != arguments[t] ? arguments[t] : {};
                        t % 2 ? u(Object(n), !0).forEach((function (t) { f(e, t, n[t]); })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : u(Object(n)).forEach((function (t) { Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t)); }));
                    } return e; }({}, t, { depth: 0, customInspect: !1 })); } }]) && h(t.prototype, n), e; }(), y = chunk_0c2d1322_js_5.h;
            m = { destroy: function (e, t) { var n = this, r = this._readableState && this._readableState.destroyed, i = this._writableState && this._writableState.destroyed; return r || i ? (t ? t(e) : e && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = !0, y.nextTick(_, this, e)) : y.nextTick(_, this, e)), this) : (this._readableState && (this._readableState.destroyed = !0), this._writableState && (this._writableState.destroyed = !0), this._destroy(e || null, (function (e) { !t && e ? n._writableState ? n._writableState.errorEmitted ? y.nextTick(v, n) : (n._writableState.errorEmitted = !0, y.nextTick(w, n, e)) : y.nextTick(w, n, e) : t ? (y.nextTick(v, n), t(e)) : y.nextTick(v, n); })), this); }, undestroy: function () { this._readableState && (this._readableState.destroyed = !1, this._readableState.reading = !1, this._readableState.ended = !1, this._readableState.endEmitted = !1), this._writableState && (this._writableState.destroyed = !1, this._writableState.ended = !1, this._writableState.ending = !1, this._writableState.finalCalled = !1, this._writableState.prefinished = !1, this._writableState.finished = !1, this._writableState.errorEmitted = !1); }, errorOrDestroy: function (e, t) { var n = e._readableState, r = e._writableState; n && n.autoDestroy || r && r.autoDestroy ? e.destroy(t) : e.emit("error", t); } }, S = e$1.codes.ERR_INVALID_OPT_VALUE;
            R = { getHighWaterMark: function (e, t, n, r) { var i = function (e, t, n) { return null != e.highWaterMark ? e.highWaterMark : t ? e[n] : null; }(t, r, n); if (null != i) {
                    if (!isFinite(i) || Math.floor(i) !== i || i < 0)
                        throw new S(r ? n : "highWaterMark", i);
                    return Math.floor(i);
                } return e.objectMode ? 16 : 16384; } }, k = e$1.codes.ERR_STREAM_PREMATURE_CLOSE;
            j = function e(t, n, r) { if ("function" == typeof n)
                return e(t, null, n); n || (n = {}), r = function (e) { var t = !1; return function () { if (!t) {
                t = !0;
                for (var n = arguments.length, r = new Array(n), i = 0; i < n; i++)
                    r[i] = arguments[i];
                e.apply(this, r);
            } }; }(r || E); var i = n.readable || !1 !== n.readable && t.readable, a = n.writable || !1 !== n.writable && t.writable, o = function () { t.writable || l(); }, s = t._writableState && t._writableState.finished, l = function () { a = !1, s = !0, i || r.call(t); }, d = t._readableState && t._readableState.endEmitted, u = function () { i = !1, d = !0, a || r.call(t); }, f = function (e) { r.call(t, e); }, h = function () { var e; return i && !d ? (t._readableState && t._readableState.ended || (e = new k), r.call(t, e)) : a && !s ? (t._writableState && t._writableState.ended || (e = new k), r.call(t, e)) : void 0; }, c = function () { t.req.on("finish", l); }; return !function (e) { return e.setHeader && "function" == typeof e.abort; }(t) ? a && !t._writableState && (t.on("end", o), t.on("close", o)) : (t.on("complete", l), t.on("abort", h), t.req ? c() : t.on("request", c)), t.on("end", u), t.on("finish", l), !1 !== n.error && t.on("error", f), t.on("close", h), function () { t.removeListener("complete", l), t.removeListener("abort", h), t.removeListener("request", c), t.req && t.req.removeListener("finish", l), t.removeListener("end", o), t.removeListener("close", o), t.removeListener("finish", l), t.removeListener("end", u), t.removeListener("error", f), t.removeListener("close", h); }; }, O = chunk_0c2d1322_js_5.h;
            P = j, x = Symbol("lastResolve"), L = Symbol("lastReject"), D = Symbol("error"), C = Symbol("ended"), A = Symbol("lastPromise"), q = Symbol("handlePromise"), W = Symbol("stream");
            U = Object.getPrototypeOf((function () { })), H = Object.setPrototypeOf((T(M = { get stream() { return this[W]; }, next: function () { var e = this, t = this[D]; if (null !== t)
                    return Promise.reject(t); if (this[C])
                    return Promise.resolve(B(void 0, !0)); if (this[W].destroyed)
                    return new Promise((function (t, n) { O.nextTick((function () { e[D] ? n(e[D]) : t(B(void 0, !0)); })); })); var n, r = this[A]; if (r)
                    n = new Promise(function (e, t) { return function (n, r) { e.then((function () { if (t[C])
                        return n(B(void 0, !0)), void 0; t[q](n, r); }), r); }; }(r, this));
                else {
                    var i = this[W].read();
                    if (null !== i)
                        return Promise.resolve(B(i, !1));
                    n = new Promise(this[q]);
                } return this[A] = n, n; } }, Symbol.asyncIterator, (function () { return this; })), T(M, "return", (function () { var e = this; return new Promise((function (t, n) { e[W].destroy(null, (function (e) { if (e)
                return n(e), void 0; t(B(void 0, !0)); })); })); })), M), U), F = function (e) { var t, n = Object.create(H, (T(t = {}, W, { value: e, writable: !0 }), T(t, x, { value: null, writable: !0 }), T(t, L, { value: null, writable: !0 }), T(t, D, { value: null, writable: !0 }), T(t, C, { value: e._readableState.endEmitted, writable: !0 }), T(t, q, { value: function (e, t) { var r = n[W].read(); r ? (n[A] = null, n[x] = null, n[L] = null, e(B(r, !1))) : (n[x] = e, n[L] = t); }, writable: !0 }), t)); return n[A] = null, P(e, (function (e) { if (e && "ERR_STREAM_PREMATURE_CLOSE" !== e.code) {
                var t = n[L];
                return null !== t && (n[A] = null, n[x] = null, n[L] = null, t(e)), n[D] = e, void 0;
            } var r = n[x]; null !== r && (n[A] = null, n[x] = null, n[L] = null, r(B(void 0, !0))), n[C] = !0; })), e.on("readable", N.bind(null, n)), n; }, V = {}, G = !1, Y = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self ? self : global;
            z = {}, J = !1, Q = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self ? self : global;
            Z = {}, $ = !1;
            t$2 = K();
            exports_256("o", t$2);
            r$3 = e$1.codes.ERR_STREAM_PREMATURE_CLOSE;
            n$1 = function e(n, o, a) { if ("function" == typeof o)
                return e(n, null, o); o || (o = {}), a = function (e) { var r = !1; return function () { if (!r) {
                r = !0;
                for (var t = arguments.length, n = new Array(t), o = 0; o < t; o++)
                    n[o] = arguments[o];
                e.apply(this, n);
            } }; }(a || t$3); var i = o.readable || !1 !== o.readable && n.readable, l = o.writable || !1 !== o.writable && n.writable, c = function () { n.writable || s(); }, f = n._writableState && n._writableState.finished, s = function () { l = !1, f = !0, i || a.call(n); }, u = n._readableState && n._readableState.endEmitted, d = function () { i = !1, u = !0, l || a.call(n); }, b = function (e) { a.call(n, e); }, v = function () { var e; return i && !u ? (n._readableState && n._readableState.ended || (e = new r$3), a.call(n, e)) : l && !f ? (n._writableState && n._writableState.ended || (e = new r$3), a.call(n, e)) : void 0; }, m = function () { n.req.on("finish", s); }; return !function (e) { return e.setHeader && "function" == typeof e.abort; }(n) ? l && !n._writableState && (n.on("end", c), n.on("close", c)) : (n.on("complete", s), n.on("abort", v), n.req ? m() : n.on("request", m)), n.on("end", d), n.on("finish", s), !1 !== o.error && n.on("error", b), n.on("close", v), function () { n.removeListener("complete", s), n.removeListener("abort", v), n.removeListener("request", m), n.req && n.req.removeListener("finish", s), n.removeListener("end", c), n.removeListener("close", c), n.removeListener("finish", s), n.removeListener("end", d), n.removeListener("error", b), n.removeListener("close", v); }; };
            exports_256("r", n$1);
            b$1 = buffer_js_2.default.Buffer, p$1 = util_js_9.default.inspect, g$1 = p$1 && p$1.custom || "inspect";
            y$1 = function () { function e() { !function (e, t) { if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function"); }(this, e), this.head = null, this.tail = null, this.length = 0; } var t, n; return t = e, (n = [{ key: "push", value: function (e) { var t = { data: e, next: null }; this.length > 0 ? this.tail.next = t : this.head = t, this.tail = t, ++this.length; } }, { key: "unshift", value: function (e) { var t = { data: e, next: this.head }; 0 === this.length && (this.tail = t), this.head = t, ++this.length; } }, { key: "shift", value: function () { if (0 !== this.length) {
                        var e = this.head.data;
                        return 1 === this.length ? this.head = this.tail = null : this.head = this.head.next, --this.length, e;
                    } } }, { key: "clear", value: function () { this.head = this.tail = null, this.length = 0; } }, { key: "join", value: function (e) { if (0 === this.length)
                        return ""; for (var t = this.head, n = "" + t.data; t = t.next;)
                        n += e + t.data; return n; } }, { key: "concat", value: function (e) { if (0 === this.length)
                        return b$1.alloc(0); for (var t, n, r, i = b$1.allocUnsafe(e >>> 0), a = this.head, o = 0; a;)
                        t = a.data, n = i, r = o, void b$1.prototype.copy.call(t, n, r), o += a.data.length, a = a.next; return i; } }, { key: "consume", value: function (e, t) { var n; return e < this.head.data.length ? (n = this.head.data.slice(0, e), this.head.data = this.head.data.slice(e)) : n = e === this.head.data.length ? this.shift() : t ? this._getString(e) : this._getBuffer(e), n; } }, { key: "first", value: function () { return this.head.data; } }, { key: "_getString", value: function (e) { var t = this.head, n = 1, r = t.data; for (e -= r.length; t = t.next;) {
                        var i = t.data, a = e > i.length ? i.length : e;
                        if (a === i.length ? r += i : r += i.slice(0, e), 0 == (e -= a)) {
                            a === i.length ? (++n, t.next ? this.head = t.next : this.head = this.tail = null) : (this.head = t, t.data = i.slice(a));
                            break;
                        }
                        ++n;
                    } return this.length -= n, r; } }, { key: "_getBuffer", value: function (e) { var t = b$1.allocUnsafe(e), n = this.head, r = 1; for (n.data.copy(t), e -= n.data.length; n = n.next;) {
                        var i = n.data, a = e > i.length ? i.length : e;
                        if (i.copy(t, t.length - e, 0, a), 0 == (e -= a)) {
                            a === i.length ? (++r, n.next ? this.head = n.next : this.head = this.tail = null) : (this.head = n, n.data = i.slice(a));
                            break;
                        }
                        ++r;
                    } return this.length -= r, t; } }, { key: g$1, value: function (e, t) { return p$1(this, function (e) { for (var t = 1; t < arguments.length; t++) {
                        var n = null != arguments[t] ? arguments[t] : {};
                        t % 2 ? f$1(Object(n), !0).forEach((function (t) { h$1(e, t, n[t]); })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : f$1(Object(n)).forEach((function (t) { Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t)); }));
                    } return e; }({}, t, { depth: 0, customInspect: !1 })); } }]) && c$1(t.prototype, n), e; }(), w$1 = chunk_0c2d1322_js_5.h;
            S$1 = { destroy: function (e, t) { var n = this, r = this._readableState && this._readableState.destroyed, i = this._writableState && this._writableState.destroyed; return r || i ? (t ? t(e) : e && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = !0, w$1.nextTick(m$1, this, e)) : w$1.nextTick(m$1, this, e)), this) : (this._readableState && (this._readableState.destroyed = !0), this._writableState && (this._writableState.destroyed = !0), this._destroy(e || null, (function (e) { !t && e ? n._writableState ? n._writableState.errorEmitted ? w$1.nextTick(v$1, n) : (n._writableState.errorEmitted = !0, w$1.nextTick(_$1, n, e)) : w$1.nextTick(_$1, n, e) : t ? (w$1.nextTick(v$1, n), t(e)) : w$1.nextTick(v$1, n); })), this); }, undestroy: function () { this._readableState && (this._readableState.destroyed = !1, this._readableState.reading = !1, this._readableState.ended = !1, this._readableState.endEmitted = !1), this._writableState && (this._writableState.destroyed = !1, this._writableState.ended = !1, this._writableState.ending = !1, this._writableState.finalCalled = !1, this._writableState.prefinished = !1, this._writableState.finished = !1, this._writableState.errorEmitted = !1); }, errorOrDestroy: function (e, t) { var n = e._readableState, r = e._writableState; n && n.autoDestroy || r && r.autoDestroy ? e.destroy(t) : e.emit("error", t); } }, R$1 = e$1.codes.ERR_INVALID_OPT_VALUE;
            E$1 = { getHighWaterMark: function (e, t, n, r) { var i = function (e, t, n) { return null != e.highWaterMark ? e.highWaterMark : t ? e[n] : null; }(t, r, n); if (null != i) {
                    if (!isFinite(i) || Math.floor(i) !== i || i < 0)
                        throw new R$1(r ? n : "highWaterMark", i);
                    return Math.floor(i);
                } return e.objectMode ? 16 : 16384; } }, M$1 = chunk_0c2d1322_js_5.h;
            O$1 = n$1, T$1 = Symbol("lastResolve"), x$1 = Symbol("lastReject"), P$1 = Symbol("error"), D$1 = Symbol("ended"), L$1 = Symbol("lastPromise"), C$1 = Symbol("handlePromise"), A$1 = Symbol("stream");
            I$1 = Object.getPrototypeOf((function () { })), N$1 = Object.setPrototypeOf((j$1(k$1 = { get stream() { return this[A$1]; }, next: function () { var e = this, t = this[P$1]; if (null !== t)
                    return Promise.reject(t); if (this[D$1])
                    return Promise.resolve(W$1(void 0, !0)); if (this[A$1].destroyed)
                    return new Promise((function (t, n) { M$1.nextTick((function () { e[P$1] ? n(e[P$1]) : t(W$1(void 0, !0)); })); })); var n, r = this[L$1]; if (r)
                    n = new Promise(function (e, t) { return function (n, r) { e.then((function () { if (t[D$1])
                        return n(W$1(void 0, !0)), void 0; t[C$1](n, r); }), r); }; }(r, this));
                else {
                    var i = this[A$1].read();
                    if (null !== i)
                        return Promise.resolve(W$1(i, !1));
                    n = new Promise(this[C$1]);
                } return this[L$1] = n, n; } }, Symbol.asyncIterator, (function () { return this; })), j$1(k$1, "return", (function () { var e = this; return new Promise((function (t, n) { e[A$1].destroy(null, (function (e) { if (e)
                return n(e), void 0; t(W$1(void 0, !0)); })); })); })), k$1), I$1), U$1 = function (e) { var t, n = Object.create(N$1, (j$1(t = {}, A$1, { value: e, writable: !0 }), j$1(t, T$1, { value: null, writable: !0 }), j$1(t, x$1, { value: null, writable: !0 }), j$1(t, P$1, { value: null, writable: !0 }), j$1(t, D$1, { value: e._readableState.endEmitted, writable: !0 }), j$1(t, C$1, { value: function (e, t) { var r = n[A$1].read(); r ? (n[L$1] = null, n[T$1] = null, n[x$1] = null, e(W$1(r, !1))) : (n[T$1] = e, n[x$1] = t); }, writable: !0 }), t)); return n[L$1] = null, O$1(e, (function (e) { if (e && "ERR_STREAM_PREMATURE_CLOSE" !== e.code) {
                var t = n[x$1];
                return null !== t && (n[L$1] = null, n[T$1] = null, n[x$1] = null, t(e)), n[P$1] = e, void 0;
            } var r = n[T$1]; null !== r && (n[L$1] = null, n[T$1] = null, n[x$1] = null, r(W$1(void 0, !0))), n[D$1] = !0; })), e.on("readable", q$1.bind(null, n)), n; }, H$1 = {}, F$1 = !1, V$1 = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self ? self : global;
            Y$1 = {}, K$1 = !1, z$1 = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self ? self : global;
            Q$1 = {}, X$1 = !1;
            t$4 = J$1();
            exports_256("s", t$4);
            t$5 = ee();
            exports_256("e", t$5);
            n$2 = u$1;
            i = e$1.codes, a = i.ERR_METHOD_NOT_IMPLEMENTED, o = i.ERR_MULTIPLE_CALLBACK, s = i.ERR_TRANSFORM_ALREADY_TRANSFORMING, f$2 = i.ERR_TRANSFORM_WITH_LENGTH_0, h$2 = t$5;
            chunk_dac557ba_js_3.t(u$1, h$2), u$1.prototype.push = function (t, r) { return this._transformState.needTransform = !1, h$2.prototype.push.call(this, t, r); }, u$1.prototype._transform = function (t, r, e) { e(new a("_transform()")); }, u$1.prototype._write = function (t, r, e) { var n = this._transformState; if (n.writecb = e, n.writechunk = t, n.writeencoding = r, !n.transforming) {
                var i = this._readableState;
                (n.needTransform || i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark);
            } }, u$1.prototype._read = function (t) { var r = this._transformState; null === r.writechunk || r.transforming ? r.needTransform = !0 : (r.transforming = !0, this._transform(r.writechunk, r.writeencoding, r.afterTransform)); }, u$1.prototype._destroy = function (t, r) { h$2.prototype._destroy.call(this, t, (function (t) { r(t); })); };
            p$2 = n$2;
            exports_256("t", p$2);
            o$1 = i$1;
            e$3 = p$2;
            chunk_dac557ba_js_3.t(i$1, e$3), i$1.prototype._transform = function (r, t, o) { o(null, r); };
            s$1 = o$1;
            exports_256("i", s$1);
            o$2 = e$1.codes, e$4 = o$2.ERR_MISSING_ARGS, f$3 = o$2.ERR_STREAM_DESTROYED;
            v$2 = function () { for (var r = arguments.length, n = new Array(r), t = 0; t < r; t++)
                n[t] = arguments[t]; var o, f = p$3(n); if (Array.isArray(n[0]) && (n = n[0]), n.length < 2)
                throw new e$4("streams"); var i = n.map((function (r, t) { var e = t < n.length - 1; return u$2(r, e, t > 0, (function (r) { o || (o = r), r && i.forEach(a$1), e || (i.forEach(a$1), f(o)); })); })); return n.reduce(c$2); };
            exports_256("m", v$2);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/stream", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/chunk-dac557ba", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/chunk-0c2d1322", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/buffer", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/util", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/chunk-6e68c801", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/events", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/chunk-cffba9d4"], function (exports_257, context_257) {
    "use strict";
    var chunk_dac557ba_js_4, events_js_9, chunk_cffba9d4_js_1, l, d, f, b, Readable, Writable, Duplex, Transform, PassThrough, finished, pipeline, Stream;
    var __moduleName = context_257 && context_257.id;
    function p() { f.call(this || d); }
    return {
        setters: [
            function (chunk_dac557ba_js_4_1) {
                chunk_dac557ba_js_4 = chunk_dac557ba_js_4_1;
            },
            function (_3) {
            },
            function (_4) {
            },
            function (_5) {
            },
            function (_6) {
            },
            function (events_js_9_1) {
                events_js_9 = events_js_9_1;
            },
            function (chunk_cffba9d4_js_1_1) {
                chunk_cffba9d4_js_1 = chunk_cffba9d4_js_1_1;
            }
        ],
        execute: function () {
            d = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self ? self : global;
            l = p;
            f = events_js_9.default.EventEmitter;
            chunk_dac557ba_js_4.t(p, f), p.Readable = chunk_cffba9d4_js_1.o, p.Writable = chunk_cffba9d4_js_1.s, p.Duplex = chunk_cffba9d4_js_1.e, p.Transform = chunk_cffba9d4_js_1.t, p.PassThrough = chunk_cffba9d4_js_1.i, p.finished = chunk_cffba9d4_js_1.r, p.pipeline = chunk_cffba9d4_js_1.m, p.Stream = p, p.prototype.pipe = function (e, r) { var t = this || d; function o(r) { e.writable && !1 === e.write(r) && t.pause && t.pause(); } function i() { t.readable && t.resume && t.resume(); } t.on("data", o), e.on("drain", i), e._isStdio || r && !1 === r.end || (t.on("end", a), t.on("close", s)); var n = !1; function a() { n || (n = !0, e.end()); } function s() { n || (n = !0, "function" == typeof e.destroy && e.destroy()); } function m(e) { if (l(), 0 === f.listenerCount(this || d, "error"))
                throw e; } function l() { t.removeListener("data", o), e.removeListener("drain", i), t.removeListener("end", a), t.removeListener("close", s), t.removeListener("error", m), e.removeListener("error", m), t.removeListener("end", l), t.removeListener("close", l), e.removeListener("close", l); } return t.on("error", m), e.on("error", m), t.on("end", l), t.on("close", l), e.on("close", l), e.emit("pipe", t), e; };
            b = l;
            Readable = b.Readable;
            exports_257("Readable", Readable);
            Writable = b.Writable;
            exports_257("Writable", Writable);
            Duplex = b.Duplex;
            exports_257("Duplex", Duplex);
            Transform = b.Transform;
            exports_257("Transform", Transform);
            PassThrough = b.PassThrough;
            exports_257("PassThrough", PassThrough);
            finished = b.finished;
            exports_257("finished", finished);
            pipeline = b.pipeline;
            exports_257("pipeline", pipeline);
            Stream = b.Stream;
            exports_257("Stream", Stream);
            exports_257("default", b);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracledb/transaction", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/transaction", "https://raw.githubusercontent.com/denjucks/dex/master/lib/util/timeout", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/debug@4.1.1/src/index"], function (exports_258, context_258) {
    "use strict";
    var transaction_js_8, timeout_js_5, index_js_41, debugTx, Oracle_Transaction;
    var __moduleName = context_258 && context_258.id;
    return {
        setters: [
            function (transaction_js_8_1) {
                transaction_js_8 = transaction_js_8_1;
            },
            function (timeout_js_5_1) {
                timeout_js_5 = timeout_js_5_1;
            },
            function (index_js_41_1) {
                index_js_41 = index_js_41_1;
            }
        ],
        execute: function () {
            debugTx = index_js_41.default('knex:tx');
            Oracle_Transaction = class Oracle_Transaction extends transaction_js_8.default {
                begin() {
                    return Promise.resolve();
                }
                async commit(conn, value) {
                    this._completed = true;
                    try {
                        await conn.commitAsync();
                        this._resolver(value);
                    }
                    catch (err) {
                        this._rejecter(err);
                    }
                }
                release(conn, value) {
                    return this._resolver(value);
                }
                rollback(conn, err) {
                    this._completed = true;
                    debugTx('%s: rolling back', this.txid);
                    return timeout_js_5.timeout(conn.rollbackAsync(), 5000)
                        .catch((e) => {
                        if (!(e instanceof timeout_js_5.KnexTimeoutError)) {
                            return Promise.reject(e);
                        }
                        this._rejecter(e);
                    })
                        .then(() => {
                        if (err === undefined) {
                            if (this.doNotRejectOnRollback) {
                                this._resolver();
                                return;
                            }
                            err = new Error(`Transaction rejected with non-error: ${err}`);
                        }
                        this._rejecter(err);
                    });
                }
                savepoint(conn) {
                    return this.query(conn, `SAVEPOINT ${this.txid}`);
                }
                async acquireConnection(config, cb) {
                    const configConnection = config && config.connection;
                    const connection = configConnection || (await this.client.acquireConnection());
                    try {
                        connection.__knexTxId = this.txid;
                        connection.isTransaction = true;
                        return await cb(connection);
                    }
                    finally {
                        debugTx('%s: releasing connection', this.txid);
                        connection.isTransaction = false;
                        try {
                            await connection.commitAsync();
                        }
                        catch (err) {
                            this._rejecter(err);
                        }
                        finally {
                            if (!configConnection) {
                                await this.client.releaseConnection(connection);
                            }
                            else {
                                debugTx('%s: not releasing external connection', this.txid);
                            }
                        }
                    }
                }
            };
            exports_258("default", Oracle_Transaction);
            ;
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracle/schema/compiler", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/schema/compiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracle/utils", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracle/schema/trigger"], function (exports_259, context_259) {
    "use strict";
    var inherits_js_17, compiler_js_13, utils_js_5, trigger_js_2;
    var __moduleName = context_259 && context_259.id;
    function SchemaCompiler_Oracle() {
        compiler_js_13.default.apply(this, arguments);
    }
    return {
        setters: [
            function (inherits_js_17_1) {
                inherits_js_17 = inherits_js_17_1;
            },
            function (compiler_js_13_1) {
                compiler_js_13 = compiler_js_13_1;
            },
            function (utils_js_5_1) {
                utils_js_5 = utils_js_5_1;
            },
            function (trigger_js_2_1) {
                trigger_js_2 = trigger_js_2_1;
            }
        ],
        execute: function () {
            inherits_js_17.default(SchemaCompiler_Oracle, compiler_js_13.default);
            SchemaCompiler_Oracle.prototype.renameTable = function (tableName, to) {
                const renameTable = trigger_js_2.default.renameTableAndAutoIncrementTrigger(this.client.logger, tableName, to);
                this.pushQuery(renameTable);
            };
            SchemaCompiler_Oracle.prototype.hasTable = function (tableName) {
                this.pushQuery({
                    sql: 'select TABLE_NAME from USER_TABLES where TABLE_NAME = ' +
                        this.formatter.parameter(tableName),
                    output(resp) {
                        return resp.length > 0;
                    },
                });
            };
            SchemaCompiler_Oracle.prototype.hasColumn = function (tableName, column) {
                const sql = `select COLUMN_NAME from USER_TAB_COLUMNS ` +
                    `where TABLE_NAME = ${this.formatter.parameter(tableName)} ` +
                    `and COLUMN_NAME = ${this.formatter.parameter(column)}`;
                this.pushQuery({ sql, output: (resp) => resp.length > 0 });
            };
            SchemaCompiler_Oracle.prototype.dropSequenceIfExists = function (sequenceName) {
                this.pushQuery(utils_js_5.default.wrapSqlWithCatch(`drop sequence ${this.formatter.wrap(sequenceName)}`, -2289));
            };
            SchemaCompiler_Oracle.prototype._dropRelatedSequenceIfExists = function (tableName) {
                const sequenceName = utils_js_5.default.generateCombinedName(this.client.logger, 'seq', tableName);
                this.dropSequenceIfExists(sequenceName);
            };
            SchemaCompiler_Oracle.prototype.dropTable = function (tableName) {
                this.pushQuery(`drop table ${this.formatter.wrap(tableName)}`);
                this._dropRelatedSequenceIfExists(tableName);
            };
            SchemaCompiler_Oracle.prototype.dropTableIfExists = function (tableName) {
                this.pushQuery(utils_js_5.default.wrapSqlWithCatch(`drop table ${this.formatter.wrap(tableName)}`, -942));
                this._dropRelatedSequenceIfExists(tableName);
            };
            exports_259("default", SchemaCompiler_Oracle);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracle/schema/columnbuilder", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/schema/columnbuilder", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index"], function (exports_260, context_260) {
    "use strict";
    var inherits_js_18, columnbuilder_js_2, index_js_42, toArray;
    var __moduleName = context_260 && context_260.id;
    function ColumnBuilder_Oracle() {
        columnbuilder_js_2.default.apply(this, arguments);
    }
    return {
        setters: [
            function (inherits_js_18_1) {
                inherits_js_18 = inherits_js_18_1;
            },
            function (columnbuilder_js_2_1) {
                columnbuilder_js_2 = columnbuilder_js_2_1;
            },
            function (index_js_42_1) {
                index_js_42 = index_js_42_1;
            }
        ],
        execute: function () {
            toArray = index_js_42.default.toArray;
            inherits_js_18.default(ColumnBuilder_Oracle, columnbuilder_js_2.default);
            ColumnBuilder_Oracle.prototype.checkIn = function () {
                this._modifiers.checkIn = toArray(arguments);
                return this;
            };
            exports_260("default", ColumnBuilder_Oracle);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracle/schema/tablecompiler", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracle/utils", "https://raw.githubusercontent.com/denjucks/dex/master/lib/schema/tablecompiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/helpers", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracle/schema/trigger"], function (exports_261, context_261) {
    "use strict";
    var inherits_js_19, utils_js_6, tablecompiler_js_6, helpers_js_12, trigger_js_3;
    var __moduleName = context_261 && context_261.id;
    function TableCompiler_Oracle() {
        tablecompiler_js_6.default.apply(this, arguments);
    }
    return {
        setters: [
            function (inherits_js_19_1) {
                inherits_js_19 = inherits_js_19_1;
            },
            function (utils_js_6_1) {
                utils_js_6 = utils_js_6_1;
            },
            function (tablecompiler_js_6_1) {
                tablecompiler_js_6 = tablecompiler_js_6_1;
            },
            function (helpers_js_12_1) {
                helpers_js_12 = helpers_js_12_1;
            },
            function (trigger_js_3_1) {
                trigger_js_3 = trigger_js_3_1;
            }
        ],
        execute: function () {
            inherits_js_19.default(TableCompiler_Oracle, tablecompiler_js_6.default);
            Object.assign(TableCompiler_Oracle.prototype, {
                addColumns(columns, prefix) {
                    if (columns.sql.length > 0) {
                        prefix = prefix || this.addColumnsPrefix;
                        const columnSql = columns.sql;
                        const alter = this.lowerCase ? 'alter table ' : 'ALTER TABLE ';
                        let sql = `${alter}${this.tableName()} ${prefix}`;
                        if (columns.sql.length > 1) {
                            sql += `(${columnSql.join(', ')})`;
                        }
                        else {
                            sql += columnSql.join(', ');
                        }
                        this.pushQuery({
                            sql,
                            bindings: columns.bindings,
                        });
                    }
                },
                renameColumn(from, to) {
                    const tableName = this.tableName().slice(1, -1);
                    return this.pushQuery(trigger_js_3.default.renameColumnTrigger(this.client.logger, tableName, from, to));
                },
                compileAdd(builder) {
                    const table = this.formatter.wrap(builder);
                    const columns = this.prefixArray('add column', this.getColumns(builder));
                    return this.pushQuery({
                        sql: `alter table ${table} ${columns.join(', ')}`,
                    });
                },
                createQuery(columns, ifNot) {
                    const sql = `create table ${this.tableName()} (${columns.sql.join(', ')})`;
                    this.pushQuery({
                        sql: ifNot ? utils_js_6.default.wrapSqlWithCatch(sql, -955) : sql,
                        bindings: columns.bindings,
                    });
                    if (this.single.comment)
                        this.comment(this.single.comment);
                },
                comment(comment) {
                    this.pushQuery(`comment on table ${this.tableName()} is '${comment}'`);
                },
                addColumnsPrefix: 'add ',
                alterColumnsPrefix: 'modify ',
                dropColumn() {
                    const columns = helpers_js_12.default.normalizeArr.apply(null, arguments);
                    this.pushQuery(`alter table ${this.tableName()} drop (${this.formatter.columnize(columns)})`);
                },
                changeType() {
                },
                _indexCommand(type, tableName, columns) {
                    return this.formatter.wrap(utils_js_6.default.generateCombinedName(this.client.logger, type, tableName, columns));
                },
                primary(columns, constraintName) {
                    constraintName = constraintName
                        ? this.formatter.wrap(constraintName)
                        : this.formatter.wrap(`${this.tableNameRaw}_pkey`);
                    this.pushQuery(`alter table ${this.tableName()} add constraint ${constraintName} primary key (${this.formatter.columnize(columns)})`);
                },
                dropPrimary(constraintName) {
                    constraintName = constraintName
                        ? this.formatter.wrap(constraintName)
                        : this.formatter.wrap(this.tableNameRaw + '_pkey');
                    this.pushQuery(`alter table ${this.tableName()} drop constraint ${constraintName}`);
                },
                index(columns, indexName) {
                    indexName = indexName
                        ? this.formatter.wrap(indexName)
                        : this._indexCommand('index', this.tableNameRaw, columns);
                    this.pushQuery(`create index ${indexName} on ${this.tableName()}` +
                        ' (' +
                        this.formatter.columnize(columns) +
                        ')');
                },
                dropIndex(columns, indexName) {
                    indexName = indexName
                        ? this.formatter.wrap(indexName)
                        : this._indexCommand('index', this.tableNameRaw, columns);
                    this.pushQuery(`drop index ${indexName}`);
                },
                unique(columns, indexName) {
                    indexName = indexName
                        ? this.formatter.wrap(indexName)
                        : this._indexCommand('unique', this.tableNameRaw, columns);
                    this.pushQuery(`alter table ${this.tableName()} add constraint ${indexName}` +
                        ' unique (' +
                        this.formatter.columnize(columns) +
                        ')');
                },
                dropUnique(columns, indexName) {
                    indexName = indexName
                        ? this.formatter.wrap(indexName)
                        : this._indexCommand('unique', this.tableNameRaw, columns);
                    this.pushQuery(`alter table ${this.tableName()} drop constraint ${indexName}`);
                },
                dropForeign(columns, indexName) {
                    indexName = indexName
                        ? this.formatter.wrap(indexName)
                        : this._indexCommand('foreign', this.tableNameRaw, columns);
                    this.pushQuery(`alter table ${this.tableName()} drop constraint ${indexName}`);
                },
            });
            exports_261("default", TableCompiler_Oracle);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracle/index", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/client", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracle/schema/compiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracle/schema/columnbuilder", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracle/schema/columncompiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracle/schema/tablecompiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracle/utils"], function (exports_262, context_262) {
    "use strict";
    var inherits_js_20, client_js_3, compiler_js_14, columnbuilder_js_3, columncompiler_js_8, tablecompiler_js_7, utils_js_7;
    var __moduleName = context_262 && context_262.id;
    function Client_Oracle(config) {
        client_js_3.default.call(this, config);
    }
    return {
        setters: [
            function (inherits_js_20_1) {
                inherits_js_20 = inherits_js_20_1;
            },
            function (client_js_3_1) {
                client_js_3 = client_js_3_1;
            },
            function (compiler_js_14_1) {
                compiler_js_14 = compiler_js_14_1;
            },
            function (columnbuilder_js_3_1) {
                columnbuilder_js_3 = columnbuilder_js_3_1;
            },
            function (columncompiler_js_8_1) {
                columncompiler_js_8 = columncompiler_js_8_1;
            },
            function (tablecompiler_js_7_1) {
                tablecompiler_js_7 = tablecompiler_js_7_1;
            },
            function (utils_js_7_1) {
                utils_js_7 = utils_js_7_1;
            }
        ],
        execute: function () {
            inherits_js_20.default(Client_Oracle, client_js_3.default);
            Object.assign(Client_Oracle.prototype, {
                dialect: 'oracle',
                driverName: 'oracle',
                schemaCompiler() {
                    return new compiler_js_14.default(this, ...arguments);
                },
                columnBuilder() {
                    return new columnbuilder_js_3.default(this, ...arguments);
                },
                columnCompiler() {
                    return new columncompiler_js_8.default(this, ...arguments);
                },
                tableCompiler() {
                    return new tablecompiler_js_7.default(this, ...arguments);
                },
                database() {
                    return this.connectionSettings.database;
                },
                positionBindings(sql) {
                    let questionCount = 0;
                    return sql.replace(/\?/g, function () {
                        questionCount += 1;
                        return `:${questionCount}`;
                    });
                },
                _stream(connection, obj, stream, options) {
                    return new Promise(function (resolver, rejecter) {
                        stream.on('error', (err) => {
                            if (utils_js_7.isConnectionError(err)) {
                                connection.__knex__disposed = err;
                            }
                            rejecter(err);
                        });
                        stream.on('end', resolver);
                        const queryStream = connection.queryStream(obj.sql, obj.bindings, options);
                        queryStream.pipe(stream);
                        queryStream.on('error', function (error) {
                            rejecter(error);
                            stream.emit('error', error);
                        });
                    });
                },
            });
            exports_262("default", Client_Oracle);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracle/formatter", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/formatter", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracle/utils"], function (exports_263, context_263) {
    "use strict";
    var formatter_js_4, utils_js_8, Oracle_Formatter;
    var __moduleName = context_263 && context_263.id;
    return {
        setters: [
            function (formatter_js_4_1) {
                formatter_js_4 = formatter_js_4_1;
            },
            function (utils_js_8_1) {
                utils_js_8 = utils_js_8_1;
            }
        ],
        execute: function () {
            Oracle_Formatter = class Oracle_Formatter extends formatter_js_4.default {
                alias(first, second) {
                    return first + ' ' + second;
                }
                parameter(value, notSetValue) {
                    if (value instanceof utils_js_8.ReturningHelper && this.client.driver) {
                        value = new this.client.driver.OutParam(this.client.driver.OCCISTRING);
                    }
                    else if (typeof value === 'boolean') {
                        value = value ? 1 : 0;
                    }
                    return super.parameter(value, notSetValue);
                }
            };
            exports_263("default", Oracle_Formatter);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracledb/index", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracledb/query/compiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracledb/schema/columncompiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracledb/utils", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/stream", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/util", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracledb/transaction", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracle/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracle/formatter"], function (exports_264, context_264) {
    "use strict";
    var index_js_43, each, flatten, isEmpty, isString, map, values, inherits_js_21, compiler_js_15, columncompiler_js_9, utils_js_9, utils_js_10, ReturningHelper, isConnectionError, stream_js_1, util_js_10, transaction_js_9, index_js_44, formatter_js_5, lobProcessing, Oracledb_Formatter;
    var __moduleName = context_264 && context_264.id;
    function Client_Oracledb() {
        index_js_44.default.apply(this, arguments);
        if (this.driver) {
            process.env.UV_THREADPOOL_SIZE = process.env.UV_THREADPOOL_SIZE || 1;
            process.env.UV_THREADPOOL_SIZE =
                parseInt(process.env.UV_THREADPOOL_SIZE) + this.driver.poolMax;
        }
    }
    function readStream(stream, type) {
        return new Promise((resolve, reject) => {
            let data = type === 'string' ? '' : Buffer.alloc(0);
            stream.on('error', function (err) {
                reject(err);
            });
            stream.on('data', function (chunk) {
                if (type === 'string') {
                    data += chunk;
                }
                else {
                    data = Buffer.concat([data, chunk]);
                }
            });
            stream.on('end', function () {
                resolve(data);
            });
        });
    }
    return {
        setters: [
            function (index_js_43_1) {
                index_js_43 = index_js_43_1;
            },
            function (inherits_js_21_1) {
                inherits_js_21 = inherits_js_21_1;
            },
            function (compiler_js_15_1) {
                compiler_js_15 = compiler_js_15_1;
            },
            function (columncompiler_js_9_1) {
                columncompiler_js_9 = columncompiler_js_9_1;
            },
            function (utils_js_9_1) {
                utils_js_9 = utils_js_9_1;
                utils_js_10 = utils_js_9_1;
            },
            function (stream_js_1_1) {
                stream_js_1 = stream_js_1_1;
            },
            function (util_js_10_1) {
                util_js_10 = util_js_10_1;
            },
            function (transaction_js_9_1) {
                transaction_js_9 = transaction_js_9_1;
            },
            function (index_js_44_1) {
                index_js_44 = index_js_44_1;
            },
            function (formatter_js_5_1) {
                formatter_js_5 = formatter_js_5_1;
            }
        ],
        execute: function () {
            each = index_js_43.default.each;
            flatten = index_js_43.default.flatten;
            isEmpty = index_js_43.default.isEmpty;
            isString = index_js_43.default.isString;
            map = index_js_43.default.map;
            values = index_js_43.default.values;
            ReturningHelper = utils_js_10.default.ReturningHelper;
            isConnectionError = utils_js_10.default.isConnectionError;
            inherits_js_21.default(Client_Oracledb, index_js_44.default);
            Client_Oracledb.prototype.driverName = 'oracledb';
            Client_Oracledb.prototype._driver = function () {
                const client = this;
                const oracledb = require('oracledb');
                client.fetchAsString = [];
                if (this.config.fetchAsString && Array.isArray(this.config.fetchAsString)) {
                    this.config.fetchAsString.forEach(function (type) {
                        if (!isString(type))
                            return;
                        type = type.toUpperCase();
                        if (oracledb[type]) {
                            if (type !== 'NUMBER' &&
                                type !== 'DATE' &&
                                type !== 'CLOB' &&
                                type !== 'BUFFER') {
                                this.logger.warn('Only "date", "number", "clob" and "buffer" are supported for fetchAsString');
                            }
                            client.fetchAsString.push(oracledb[type]);
                        }
                    });
                }
                return oracledb;
            };
            Client_Oracledb.prototype.queryCompiler = function () {
                return new compiler_js_15.default(this, ...arguments);
            };
            Client_Oracledb.prototype.columnCompiler = function () {
                return new columncompiler_js_9.default(this, ...arguments);
            };
            Client_Oracledb.prototype.formatter = function () {
                return new Oracledb_Formatter(this, ...arguments);
            };
            Client_Oracledb.prototype.transaction = function () {
                return new transaction_js_9.default(this, ...arguments);
            };
            Client_Oracledb.prototype.prepBindings = function (bindings) {
                return map(bindings, (value) => {
                    if (value instanceof utils_js_9.BlobHelper && this.driver) {
                        return { type: this.driver.BLOB, dir: this.driver.BIND_OUT };
                    }
                    else if (value instanceof ReturningHelper && this.driver) {
                        return { type: this.driver.STRING, dir: this.driver.BIND_OUT };
                    }
                    else if (typeof value === 'boolean') {
                        return value ? 1 : 0;
                    }
                    return value;
                });
            };
            Client_Oracledb.prototype.acquireRawConnection = function () {
                const client = this;
                const asyncConnection = new Promise(function (resolver, rejecter) {
                    const oracleDbConfig = client.connectionSettings.externalAuth
                        ? { externalAuth: client.connectionSettings.externalAuth }
                        : {
                            user: client.connectionSettings.user,
                            password: client.connectionSettings.password,
                        };
                    oracleDbConfig.connectString =
                        client.connectionSettings.connectString ||
                            client.connectionSettings.host + '/' + client.connectionSettings.database;
                    if (client.connectionSettings.prefetchRowCount) {
                        oracleDbConfig.prefetchRows = client.connectionSettings.prefetchRowCount;
                    }
                    if (client.connectionSettings.stmtCacheSize !== undefined) {
                        oracleDbConfig.stmtCacheSize = client.connectionSettings.stmtCacheSize;
                    }
                    client.driver.fetchAsString = client.fetchAsString;
                    client.driver.getConnection(oracleDbConfig, function (err, connection) {
                        if (err) {
                            return rejecter(err);
                        }
                        connection.commitAsync = function () {
                            return new Promise((commitResolve, commitReject) => {
                                this.commit(function (err) {
                                    if (err) {
                                        return commitReject(err);
                                    }
                                    commitResolve();
                                });
                            });
                        };
                        connection.rollbackAsync = function () {
                            return new Promise((rollbackResolve, rollbackReject) => {
                                this.rollback(function (err) {
                                    if (err) {
                                        return rollbackReject(err);
                                    }
                                    rollbackResolve();
                                });
                            });
                        };
                        const fetchAsync = util_js_10.promisify(function (sql, bindParams, options, cb) {
                            options = options || {};
                            options.outFormat =
                                client.driver.OUT_FORMAT_OBJECT || client.driver.OBJECT;
                            if (!options.outFormat) {
                                throw new Error('not found oracledb.outFormat constants');
                            }
                            if (options.resultSet) {
                                connection.execute(sql, bindParams || [], options, function (err, result) {
                                    if (err) {
                                        if (isConnectionError(err)) {
                                            connection.close().catch(function (err) { });
                                            connection.__knex__disposed = err;
                                        }
                                        return cb(err);
                                    }
                                    const fetchResult = { rows: [], resultSet: result.resultSet };
                                    const numRows = 100;
                                    const fetchRowsFromRS = function (connection, resultSet, numRows) {
                                        resultSet.getRows(numRows, function (err, rows) {
                                            if (err) {
                                                if (isConnectionError(err)) {
                                                    connection.close().catch(function (err) { });
                                                    connection.__knex__disposed = err;
                                                }
                                                resultSet.close(function () {
                                                    return cb(err);
                                                });
                                            }
                                            else if (rows.length === 0) {
                                                return cb(null, fetchResult);
                                            }
                                            else if (rows.length > 0) {
                                                if (rows.length === numRows) {
                                                    fetchResult.rows = fetchResult.rows.concat(rows);
                                                    fetchRowsFromRS(connection, resultSet, numRows);
                                                }
                                                else {
                                                    fetchResult.rows = fetchResult.rows.concat(rows);
                                                    return cb(null, fetchResult);
                                                }
                                            }
                                        });
                                    };
                                    fetchRowsFromRS(connection, result.resultSet, numRows);
                                });
                            }
                            else {
                                connection.execute(sql, bindParams || [], options, function (err, result) {
                                    if (err) {
                                        if (isConnectionError(err)) {
                                            connection.close().catch(function (err) { });
                                            connection.__knex__disposed = err;
                                        }
                                        return cb(err);
                                    }
                                    return cb(null, result);
                                });
                            }
                        });
                        connection.executeAsync = function (sql, bindParams, options) {
                            return fetchAsync(sql, bindParams, options).then(async (results) => {
                                const closeResultSet = () => {
                                    return results.resultSet
                                        ? util_js_10.promisify(results.resultSet.close).call(results.resultSet)
                                        : Promise.resolve();
                                };
                                const lobs = [];
                                if (results.rows) {
                                    if (Array.isArray(results.rows)) {
                                        for (let i = 0; i < results.rows.length; i++) {
                                            const row = results.rows[i];
                                            for (const column in row) {
                                                if (row[column] instanceof stream_js_1.default.Readable) {
                                                    lobs.push({ index: i, key: column, stream: row[column] });
                                                }
                                            }
                                        }
                                    }
                                }
                                try {
                                    for (const lob of lobs) {
                                        results.rows[lob.index][lob.key] = await lobProcessing(lob.stream);
                                    }
                                }
                                catch (e) {
                                    await closeResultSet().catch(() => { });
                                    throw e;
                                }
                                await closeResultSet();
                                return results;
                            });
                        };
                        resolver(connection);
                    });
                });
                return asyncConnection;
            };
            Client_Oracledb.prototype.destroyRawConnection = function (connection) {
                return connection.release();
            };
            Client_Oracledb.prototype._query = function (connection, obj) {
                if (!obj.sql)
                    throw new Error('The query is empty');
                const options = { autoCommit: false };
                if (obj.method === 'select') {
                    options.resultSet = true;
                }
                return connection
                    .executeAsync(obj.sql, obj.bindings, options)
                    .then(async function (response) {
                    let outBinds = flatten(response.outBinds);
                    obj.response = response.rows || [];
                    obj.rowsAffected = response.rows
                        ? response.rows.rowsAffected
                        : response.rowsAffected;
                    if (obj.method === 'raw' && outBinds.length > 0) {
                        return {
                            response: outBinds,
                        };
                    }
                    if (obj.method === 'update') {
                        const modifiedRowsCount = obj.rowsAffected.length || obj.rowsAffected;
                        const updatedObjOutBinding = [];
                        const updatedOutBinds = [];
                        const updateOutBinds = (i) => function (value, index) {
                            const OutBindsOffset = index * modifiedRowsCount;
                            updatedOutBinds.push(outBinds[i + OutBindsOffset]);
                        };
                        for (let i = 0; i < modifiedRowsCount; i++) {
                            updatedObjOutBinding.push(obj.outBinding[0]);
                            each(obj.outBinding[0], updateOutBinds(i));
                        }
                        outBinds = updatedOutBinds;
                        obj.outBinding = updatedObjOutBinding;
                    }
                    if (!obj.returning && outBinds.length === 0) {
                        if (!connection.isTransaction) {
                            await connection.commitAsync();
                        }
                        return obj;
                    }
                    const rowIds = [];
                    let offset = 0;
                    for (let line = 0; line < obj.outBinding.length; line++) {
                        const ret = obj.outBinding[line];
                        offset =
                            offset +
                                (obj.outBinding[line - 1] ? obj.outBinding[line - 1].length : 0);
                        for (let index = 0; index < ret.length; index++) {
                            const out = ret[index];
                            await new Promise(function (bindResolver, bindRejecter) {
                                if (out instanceof utils_js_9.BlobHelper) {
                                    const blob = outBinds[index + offset];
                                    if (out.returning) {
                                        obj.response[line] = obj.response[line] || {};
                                        obj.response[line][out.columnName] = out.value;
                                    }
                                    blob.on('error', function (err) {
                                        bindRejecter(err);
                                    });
                                    blob.on('finish', function () {
                                        bindResolver();
                                    });
                                    blob.write(out.value);
                                    blob.end();
                                }
                                else if (obj.outBinding[line][index] === 'ROWID') {
                                    rowIds.push(outBinds[index + offset]);
                                    bindResolver();
                                }
                                else {
                                    obj.response[line] = obj.response[line] || {};
                                    obj.response[line][out] = outBinds[index + offset];
                                    bindResolver();
                                }
                            });
                        }
                    }
                    if (connection.isTransaction) {
                        return obj;
                    }
                    await connection.commitAsync();
                    if (obj.returningSql) {
                        const response = await connection.executeAsync(obj.returningSql(), rowIds, { resultSet: true });
                        obj.response = response.rows;
                    }
                    return obj;
                });
            };
            Client_Oracledb.prototype.processResponse = function (obj, runner) {
                let response = obj.response;
                const method = obj.method;
                if (obj.output) {
                    return obj.output.call(runner, response);
                }
                switch (method) {
                    case 'select':
                    case 'pluck':
                    case 'first':
                        if (obj.method === 'pluck') {
                            response = map(response, obj.pluck);
                        }
                        return obj.method === 'first' ? response[0] : response;
                    case 'insert':
                    case 'del':
                    case 'update':
                    case 'counter':
                        if (obj.returning && !isEmpty(obj.returning)) {
                            if (obj.returning.length === 1 && obj.returning[0] !== '*') {
                                return flatten(map(response, values));
                            }
                            return response;
                        }
                        else if (obj.rowsAffected !== undefined) {
                            return obj.rowsAffected;
                        }
                        else {
                            return 1;
                        }
                    default:
                        return response;
                }
            };
            lobProcessing = function (stream) {
                const oracledb = require('oracledb');
                let type;
                if (stream.type) {
                    if (stream.type === oracledb.BLOB) {
                        type = 'buffer';
                    }
                    else if (stream.type === oracledb.CLOB) {
                        type = 'string';
                    }
                }
                else if (stream.iLob) {
                    if (stream.iLob.type === oracledb.CLOB) {
                        type = 'string';
                    }
                    else if (stream.iLob.type === oracledb.BLOB) {
                        type = 'buffer';
                    }
                }
                else {
                    throw new Error('Unrecognized oracledb lob stream type');
                }
                if (type === 'string') {
                    stream.setEncoding('utf-8');
                }
                return readStream(stream, type);
            };
            Oracledb_Formatter = class Oracledb_Formatter extends formatter_js_5.default {
                parameter(value) {
                    if (typeof value === 'function') {
                        return this.outputQuery(this.compileCallback(value), true);
                    }
                    else if (value instanceof utils_js_9.BlobHelper) {
                        return 'EMPTY_BLOB()';
                    }
                    return this.unwrapRaw(value, true) || '?';
                }
            };
            exports_264("default", Client_Oracledb);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/postgres/query/compiler", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/query/compiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index"], function (exports_265, context_265) {
    "use strict";
    var compiler_js_16, index_js_45, identity, reduce, QueryCompiler_PG;
    var __moduleName = context_265 && context_265.id;
    return {
        setters: [
            function (compiler_js_16_1) {
                compiler_js_16 = compiler_js_16_1;
            },
            function (index_js_45_1) {
                index_js_45 = index_js_45_1;
            }
        ],
        execute: function () {
            identity = index_js_45.default.identity;
            reduce = index_js_45.default.reduce;
            QueryCompiler_PG = class QueryCompiler_PG extends compiler_js_16.default {
                constructor(client, builder) {
                    super(client, builder);
                    this._defaultInsertValue = 'default';
                }
                truncate() {
                    return `truncate ${this.tableName} restart identity`;
                }
                insert() {
                    const sql = compiler_js_16.default.prototype.insert.call(this);
                    if (sql === '')
                        return sql;
                    const { returning } = this.single;
                    return {
                        sql: sql + this._returning(returning),
                        returning,
                    };
                }
                update() {
                    const withSQL = this.with();
                    const updateData = this._prepUpdate(this.single.update);
                    const wheres = this.where();
                    const { returning } = this.single;
                    return {
                        sql: withSQL +
                            `update ${this.single.only ? 'only ' : ''}${this.tableName} ` +
                            `set ${updateData.join(', ')}` +
                            (wheres ? ` ${wheres}` : '') +
                            this._returning(returning),
                        returning,
                    };
                }
                del() {
                    const sql = compiler_js_16.default.prototype.del.apply(this, arguments);
                    const { returning } = this.single;
                    return {
                        sql: sql + this._returning(returning),
                        returning,
                    };
                }
                aggregate(stmt) {
                    return this._aggregate(stmt, { distinctParentheses: true });
                }
                _returning(value) {
                    return value ? ` returning ${this.formatter.columnize(value)}` : '';
                }
                _tableNames(tables) {
                    const schemaName = this.single.schema;
                    const sql = [];
                    for (let i = 0; i < tables.length; i++) {
                        let tableName = tables[i];
                        if (tableName) {
                            if (schemaName) {
                                tableName = `${schemaName}.${tableName}`;
                            }
                            sql.push(this.formatter.wrap(tableName));
                        }
                    }
                    return sql.join(', ');
                }
                forUpdate() {
                    const tables = this.single.lockTables || [];
                    return ('for update' + (tables.length ? ' of ' + this._tableNames(tables) : ''));
                }
                forShare() {
                    const tables = this.single.lockTables || [];
                    return ('for share' + (tables.length ? ' of ' + this._tableNames(tables) : ''));
                }
                skipLocked() {
                    return 'skip locked';
                }
                noWait() {
                    return 'nowait';
                }
                columnInfo() {
                    const column = this.single.columnInfo;
                    let schema = this.single.schema;
                    const table = this.client.customWrapIdentifier(this.single.table, identity);
                    if (schema) {
                        schema = this.client.customWrapIdentifier(schema, identity);
                    }
                    let sql = 'select * from information_schema.columns where table_name = ? and table_catalog = ?';
                    const bindings = [table, this.client.database()];
                    if (schema) {
                        sql += ' and table_schema = ?';
                        bindings.push(schema);
                    }
                    else {
                        sql += ' and table_schema = current_schema()';
                    }
                    return {
                        sql,
                        bindings,
                        output(resp) {
                            const out = reduce(resp.rows, function (columns, val) {
                                columns[val.column_name] = {
                                    type: val.data_type,
                                    maxLength: val.character_maximum_length,
                                    nullable: val.is_nullable === 'YES',
                                    defaultValue: val.column_default,
                                };
                                return columns;
                            }, {});
                            return (column && out[column]) || out;
                        },
                    };
                }
                distinctOn(value) {
                    return 'distinct on (' + this.formatter.columnize(value) + ') ';
                }
            };
            exports_265("default", QueryCompiler_PG);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/postgres/schema/columncompiler", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/schema/columncompiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index"], function (exports_266, context_266) {
    "use strict";
    var inherits_js_22, columncompiler_js_10, index_js_46, isObject;
    var __moduleName = context_266 && context_266.id;
    function ColumnCompiler_PG() {
        columncompiler_js_10.default.apply(this, arguments);
        this.modifiers = ['nullable', 'defaultTo', 'comment'];
    }
    function jsonColumn(client, jsonb) {
        if (!client.version || parseFloat(client.version) >= 9.2)
            return jsonb ? 'jsonb' : 'json';
        return 'text';
    }
    return {
        setters: [
            function (inherits_js_22_1) {
                inherits_js_22 = inherits_js_22_1;
            },
            function (columncompiler_js_10_1) {
                columncompiler_js_10 = columncompiler_js_10_1;
            },
            function (index_js_46_1) {
                index_js_46 = index_js_46_1;
            }
        ],
        execute: function () {
            isObject = index_js_46.default.isObject;
            inherits_js_22.default(ColumnCompiler_PG, columncompiler_js_10.default);
            Object.assign(ColumnCompiler_PG.prototype, {
                bigincrements: 'bigserial primary key',
                bigint: 'bigint',
                binary: 'bytea',
                bit(column) {
                    return column.length !== false ? `bit(${column.length})` : 'bit';
                },
                bool: 'boolean',
                enu(allowed, options) {
                    options = options || {};
                    const values = options.useNative && options.existingType
                        ? undefined
                        : allowed.join("', '");
                    if (options.useNative) {
                        let enumName = '';
                        const schemaName = options.schemaName || this.tableCompiler.schemaNameRaw;
                        if (schemaName) {
                            enumName += `"${schemaName}".`;
                        }
                        enumName += `"${options.enumName}"`;
                        if (!options.existingType) {
                            this.tableCompiler.unshiftQuery(`create type ${enumName} as enum ('${values}')`);
                        }
                        return enumName;
                    }
                    return `text check (${this.formatter.wrap(this.args[0])} in ('${values}'))`;
                },
                double: 'double precision',
                decimal(precision, scale) {
                    if (precision === null)
                        return 'decimal';
                    return `decimal(${this._num(precision, 8)}, ${this._num(scale, 2)})`;
                },
                floating: 'real',
                increments: 'serial primary key',
                json(jsonb) {
                    if (jsonb)
                        this.client.logger.deprecate('json(true)', 'jsonb()');
                    return jsonColumn(this.client, jsonb);
                },
                jsonb() {
                    return jsonColumn(this.client, true);
                },
                smallint: 'smallint',
                tinyint: 'smallint',
                datetime(withoutTz = false, precision) {
                    let useTz;
                    if (isObject(withoutTz)) {
                        ({ useTz, precision } = withoutTz);
                    }
                    else {
                        useTz = !withoutTz;
                    }
                    return `${useTz ? 'timestamptz' : 'timestamp'}${precision ? '(' + precision + ')' : ''}`;
                },
                timestamp(withoutTz = false, precision) {
                    let useTz;
                    if (isObject(withoutTz)) {
                        ({ useTz, precision } = withoutTz);
                    }
                    else {
                        useTz = !withoutTz;
                    }
                    return `${useTz ? 'timestamptz' : 'timestamp'}${precision ? '(' + precision + ')' : ''}`;
                },
                uuid: 'uuid',
                comment(comment) {
                    const columnName = this.args[0] || this.defaults('columnName');
                    this.pushAdditional(function () {
                        this.pushQuery(`comment on column ${this.tableCompiler.tableName()}.` +
                            this.formatter.wrap(columnName) +
                            ' is ' +
                            (comment ? `'${comment}'` : 'NULL'));
                    }, comment);
                },
            });
            exports_266("default", ColumnCompiler_PG);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/postgres/schema/tablecompiler", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/schema/tablecompiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index"], function (exports_267, context_267) {
    "use strict";
    var inherits_js_23, tablecompiler_js_8, index_js_47, has;
    var __moduleName = context_267 && context_267.id;
    function TableCompiler_PG() {
        tablecompiler_js_8.default.apply(this, arguments);
    }
    return {
        setters: [
            function (inherits_js_23_1) {
                inherits_js_23 = inherits_js_23_1;
            },
            function (tablecompiler_js_8_1) {
                tablecompiler_js_8 = tablecompiler_js_8_1;
            },
            function (index_js_47_1) {
                index_js_47 = index_js_47_1;
            }
        ],
        execute: function () {
            has = index_js_47.default.has;
            inherits_js_23.default(TableCompiler_PG, tablecompiler_js_8.default);
            TableCompiler_PG.prototype.renameColumn = function (from, to) {
                return this.pushQuery({
                    sql: `alter table ${this.tableName()} rename ${this.formatter.wrap(from)} to ${this.formatter.wrap(to)}`,
                });
            };
            TableCompiler_PG.prototype.compileAdd = function (builder) {
                const table = this.formatter.wrap(builder);
                const columns = this.prefixArray('add column', this.getColumns(builder));
                return this.pushQuery({
                    sql: `alter table ${table} ${columns.join(', ')}`,
                });
            };
            TableCompiler_PG.prototype.createQuery = function (columns, ifNot) {
                const createStatement = ifNot
                    ? 'create table if not exists '
                    : 'create table ';
                let sql = createStatement + this.tableName() + ' (' + columns.sql.join(', ') + ')';
                if (this.single.inherits)
                    sql += ` inherits (${this.formatter.wrap(this.single.inherits)})`;
                this.pushQuery({
                    sql,
                    bindings: columns.bindings,
                });
                const hasComment = has(this.single, 'comment');
                if (hasComment)
                    this.comment(this.single.comment);
            };
            TableCompiler_PG.prototype.addColumns = function (columns, prefix, colCompilers) {
                if (prefix === this.alterColumnsPrefix) {
                    for (const col of colCompilers) {
                        const quotedTableName = this.tableName();
                        const type = col.getColumnType();
                        const colName = this.client.wrapIdentifier(col.getColumnName(), col.columnBuilder.queryContext());
                        this.pushQuery({
                            sql: `alter table ${quotedTableName} alter column ${colName} drop default`,
                            bindings: [],
                        });
                        this.pushQuery({
                            sql: `alter table ${quotedTableName} alter column ${colName} drop not null`,
                            bindings: [],
                        });
                        this.pushQuery({
                            sql: `alter table ${quotedTableName} alter column ${colName} type ${type} using (${colName}::${type})`,
                            bindings: [],
                        });
                        const defaultTo = col.modified['defaultTo'];
                        if (defaultTo) {
                            const modifier = col.defaultTo.apply(col, defaultTo);
                            this.pushQuery({
                                sql: `alter table ${quotedTableName} alter column ${colName} set ${modifier}`,
                                bindings: [],
                            });
                        }
                        const nullable = col.modified['nullable'];
                        if (nullable && nullable[0] === false) {
                            this.pushQuery({
                                sql: `alter table ${quotedTableName} alter column ${colName} set not null`,
                                bindings: [],
                            });
                        }
                    }
                }
                else {
                    tablecompiler_js_8.default.prototype.addColumns.call(this, columns, prefix);
                }
            };
            TableCompiler_PG.prototype.comment = function (comment) {
                this.pushQuery(`comment on table ${this.tableName()} is '${this.single.comment}'`);
            };
            TableCompiler_PG.prototype.primary = function (columns, constraintName) {
                constraintName = constraintName
                    ? this.formatter.wrap(constraintName)
                    : this.formatter.wrap(`${this.tableNameRaw}_pkey`);
                this.pushQuery(`alter table ${this.tableName()} add constraint ${constraintName} primary key (${this.formatter.columnize(columns)})`);
            };
            TableCompiler_PG.prototype.unique = function (columns, indexName) {
                indexName = indexName
                    ? this.formatter.wrap(indexName)
                    : this._indexCommand('unique', this.tableNameRaw, columns);
                this.pushQuery(`alter table ${this.tableName()} add constraint ${indexName}` +
                    ' unique (' +
                    this.formatter.columnize(columns) +
                    ')');
            };
            TableCompiler_PG.prototype.index = function (columns, indexName, indexType) {
                indexName = indexName
                    ? this.formatter.wrap(indexName)
                    : this._indexCommand('index', this.tableNameRaw, columns);
                this.pushQuery(`create index ${indexName} on ${this.tableName()}${(indexType && ` using ${indexType}`) || ''}` +
                    ' (' +
                    this.formatter.columnize(columns) +
                    ')');
            };
            TableCompiler_PG.prototype.dropPrimary = function (constraintName) {
                constraintName = constraintName
                    ? this.formatter.wrap(constraintName)
                    : this.formatter.wrap(this.tableNameRaw + '_pkey');
                this.pushQuery(`alter table ${this.tableName()} drop constraint ${constraintName}`);
            };
            TableCompiler_PG.prototype.dropIndex = function (columns, indexName) {
                indexName = indexName
                    ? this.formatter.wrap(indexName)
                    : this._indexCommand('index', this.tableNameRaw, columns);
                indexName = this.schemaNameRaw
                    ? `${this.formatter.wrap(this.schemaNameRaw)}.${indexName}`
                    : indexName;
                this.pushQuery(`drop index ${indexName}`);
            };
            TableCompiler_PG.prototype.dropUnique = function (columns, indexName) {
                indexName = indexName
                    ? this.formatter.wrap(indexName)
                    : this._indexCommand('unique', this.tableNameRaw, columns);
                this.pushQuery(`alter table ${this.tableName()} drop constraint ${indexName}`);
            };
            TableCompiler_PG.prototype.dropForeign = function (columns, indexName) {
                indexName = indexName
                    ? this.formatter.wrap(indexName)
                    : this._indexCommand('foreign', this.tableNameRaw, columns);
                this.pushQuery(`alter table ${this.tableName()} drop constraint ${indexName}`);
            };
            exports_267("default", TableCompiler_PG);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/postgres/schema/compiler", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/schema/compiler"], function (exports_268, context_268) {
    "use strict";
    var inherits_js_24, compiler_js_17;
    var __moduleName = context_268 && context_268.id;
    function SchemaCompiler_PG() {
        compiler_js_17.default.apply(this, arguments);
    }
    return {
        setters: [
            function (inherits_js_24_1) {
                inherits_js_24 = inherits_js_24_1;
            },
            function (compiler_js_17_1) {
                compiler_js_17 = compiler_js_17_1;
            }
        ],
        execute: function () {
            inherits_js_24.default(SchemaCompiler_PG, compiler_js_17.default);
            SchemaCompiler_PG.prototype.hasTable = function (tableName) {
                let sql = 'select * from information_schema.tables where table_name = ?';
                const bindings = [tableName];
                if (this.schema) {
                    sql += ' and table_schema = ?';
                    bindings.push(this.schema);
                }
                else {
                    sql += ' and table_schema = current_schema()';
                }
                this.pushQuery({
                    sql,
                    bindings,
                    output(resp) {
                        return resp.rows.length > 0;
                    },
                });
            };
            SchemaCompiler_PG.prototype.hasColumn = function (tableName, columnName) {
                let sql = 'select * from information_schema.columns where table_name = ? and column_name = ?';
                const bindings = [tableName, columnName];
                if (this.schema) {
                    sql += ' and table_schema = ?';
                    bindings.push(this.schema);
                }
                else {
                    sql += ' and table_schema = current_schema()';
                }
                this.pushQuery({
                    sql,
                    bindings,
                    output(resp) {
                        return resp.rows.length > 0;
                    },
                });
            };
            SchemaCompiler_PG.prototype.qualifiedTableName = function (tableName) {
                const name = this.schema ? `${this.schema}.${tableName}` : tableName;
                return this.formatter.wrap(name);
            };
            SchemaCompiler_PG.prototype.renameTable = function (from, to) {
                this.pushQuery(`alter table ${this.qualifiedTableName(from)} rename to ${this.formatter.wrap(to)}`);
            };
            SchemaCompiler_PG.prototype.createSchema = function (schemaName) {
                this.pushQuery(`create schema ${this.formatter.wrap(schemaName)}`);
            };
            SchemaCompiler_PG.prototype.createSchemaIfNotExists = function (schemaName) {
                this.pushQuery(`create schema if not exists ${this.formatter.wrap(schemaName)}`);
            };
            SchemaCompiler_PG.prototype.dropSchema = function (schemaName) {
                this.pushQuery(`drop schema ${this.formatter.wrap(schemaName)}`);
            };
            SchemaCompiler_PG.prototype.dropSchemaIfExists = function (schemaName) {
                this.pushQuery(`drop schema if exists ${this.formatter.wrap(schemaName)}`);
            };
            SchemaCompiler_PG.prototype.dropExtension = function (extensionName) {
                this.pushQuery(`drop extension ${this.formatter.wrap(extensionName)}`);
            };
            SchemaCompiler_PG.prototype.dropExtensionIfExists = function (extensionName) {
                this.pushQuery(`drop extension if exists ${this.formatter.wrap(extensionName)}`);
            };
            SchemaCompiler_PG.prototype.createExtension = function (extensionName) {
                this.pushQuery(`create extension ${this.formatter.wrap(extensionName)}`);
            };
            SchemaCompiler_PG.prototype.createExtensionIfNotExists = function (extensionName) {
                this.pushQuery(`create extension if not exists ${this.formatter.wrap(extensionName)}`);
            };
            exports_268("default", SchemaCompiler_PG);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/postgres/index", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/util", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/client", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/postgres/query/compiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/postgres/schema/columncompiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/postgres/schema/tablecompiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/postgres/schema/compiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/query/string"], function (exports_269, context_269) {
    "use strict";
    var index_js_48, extend, isString, map, util_js_11, inherits_js_25, client_js_4, compiler_js_18, columncompiler_js_11, tablecompiler_js_9, compiler_js_19, string_js_3;
    var __moduleName = context_269 && context_269.id;
    function Client_PG(config) {
        client_js_4.default.apply(this, arguments);
        if (config.returning) {
            this.defaultReturning = config.returning;
        }
        if (config.searchPath) {
            this.searchPath = config.searchPath;
        }
    }
    function arrayString(arr, esc) {
        let result = '{';
        for (let i = 0; i < arr.length; i++) {
            if (i > 0)
                result += ',';
            const val = arr[i];
            if (val === null || typeof val === 'undefined') {
                result += 'NULL';
            }
            else if (Array.isArray(val)) {
                result += arrayString(val, esc);
            }
            else if (typeof val === 'number') {
                result += val;
            }
            else {
                result += JSON.stringify(typeof val === 'string' ? val : esc(val));
            }
        }
        return result + '}';
    }
    return {
        setters: [
            function (index_js_48_1) {
                index_js_48 = index_js_48_1;
            },
            function (util_js_11_1) {
                util_js_11 = util_js_11_1;
            },
            function (inherits_js_25_1) {
                inherits_js_25 = inherits_js_25_1;
            },
            function (client_js_4_1) {
                client_js_4 = client_js_4_1;
            },
            function (compiler_js_18_1) {
                compiler_js_18 = compiler_js_18_1;
            },
            function (columncompiler_js_11_1) {
                columncompiler_js_11 = columncompiler_js_11_1;
            },
            function (tablecompiler_js_9_1) {
                tablecompiler_js_9 = tablecompiler_js_9_1;
            },
            function (compiler_js_19_1) {
                compiler_js_19 = compiler_js_19_1;
            },
            function (string_js_3_1) {
                string_js_3 = string_js_3_1;
            }
        ],
        execute: function () {
            extend = index_js_48.default.extend;
            isString = index_js_48.default.isString;
            map = index_js_48.default.map;
            inherits_js_25.default(Client_PG, client_js_4.default);
            Object.assign(Client_PG.prototype, {
                queryCompiler() {
                    return new compiler_js_18.default(this, ...arguments);
                },
                columnCompiler() {
                    return new columncompiler_js_11.default(this, ...arguments);
                },
                schemaCompiler() {
                    return new compiler_js_19.default(this, ...arguments);
                },
                tableCompiler() {
                    return new tablecompiler_js_9.default(this, ...arguments);
                },
                dialect: 'postgresql',
                driverName: 'pg',
                _driver() {
                    return require('pg');
                },
                _escapeBinding: string_js_3.makeEscape({
                    escapeArray(val, esc) {
                        return esc(arrayString(val, esc));
                    },
                    escapeString(str) {
                        let hasBackslash = false;
                        let escaped = "'";
                        for (let i = 0; i < str.length; i++) {
                            const c = str[i];
                            if (c === "'") {
                                escaped += c + c;
                            }
                            else if (c === '\\') {
                                escaped += c + c;
                                hasBackslash = true;
                            }
                            else {
                                escaped += c;
                            }
                        }
                        escaped += "'";
                        if (hasBackslash === true) {
                            escaped = 'E' + escaped;
                        }
                        return escaped;
                    },
                    escapeObject(val, prepareValue, timezone, seen = []) {
                        if (val && typeof val.toPostgres === 'function') {
                            seen = seen || [];
                            if (seen.indexOf(val) !== -1) {
                                throw new Error(`circular reference detected while preparing "${val}" for query`);
                            }
                            seen.push(val);
                            return prepareValue(val.toPostgres(prepareValue), seen);
                        }
                        return JSON.stringify(val);
                    },
                }),
                wrapIdentifierImpl(value) {
                    if (value === '*')
                        return value;
                    let arrayAccessor = '';
                    const arrayAccessorMatch = value.match(/(.*?)(\[[0-9]+\])/);
                    if (arrayAccessorMatch) {
                        value = arrayAccessorMatch[1];
                        arrayAccessor = arrayAccessorMatch[2];
                    }
                    return `"${value.replace(/"/g, '""')}"${arrayAccessor}`;
                },
                acquireRawConnection() {
                    const client = this;
                    return new Promise(function (resolver, rejecter) {
                        const connection = new client.driver.Client(client.connectionSettings);
                        connection.connect(function (err, connection) {
                            if (err) {
                                return rejecter(err);
                            }
                            connection.on('error', (err) => {
                                connection.__knex__disposed = err;
                            });
                            connection.on('end', (err) => {
                                connection.__knex__disposed = err || 'Connection ended unexpectedly';
                            });
                            if (!client.version) {
                                return client.checkVersion(connection).then(function (version) {
                                    client.version = version;
                                    resolver(connection);
                                });
                            }
                            resolver(connection);
                        });
                    }).then(function setSearchPath(connection) {
                        client.setSchemaSearchPath(connection);
                        return connection;
                    });
                },
                async destroyRawConnection(connection) {
                    const end = util_js_11.promisify((cb) => connection.end(cb));
                    return end();
                },
                checkVersion(connection) {
                    return new Promise(function (resolver, rejecter) {
                        connection.query('select version();', function (err, resp) {
                            if (err)
                                return rejecter(err);
                            resolver(/^PostgreSQL (.*?)( |$)/.exec(resp.rows[0].version)[1]);
                        });
                    });
                },
                positionBindings(sql) {
                    let questionCount = 0;
                    return sql.replace(/(\\*)(\?)/g, function (match, escapes) {
                        if (escapes.length % 2) {
                            return '?';
                        }
                        else {
                            questionCount++;
                            return `$${questionCount}`;
                        }
                    });
                },
                setSchemaSearchPath(connection, searchPath) {
                    let path = searchPath || this.searchPath;
                    if (!path)
                        return Promise.resolve(true);
                    if (!Array.isArray(path) && !isString(path)) {
                        throw new TypeError(`knex: Expected searchPath to be Array/String, got: ${typeof path}`);
                    }
                    if (isString(path)) {
                        if (path.includes(',')) {
                            const parts = path.split(',');
                            const arraySyntax = `[${parts
                                .map((searchPath) => `'${searchPath}'`)
                                .join(', ')}]`;
                            this.logger.warn(`Detected comma in searchPath "${path}".` +
                                `If you are trying to specify multiple schemas, use Array syntax: ${arraySyntax}`);
                        }
                        path = [path];
                    }
                    path = path.map((schemaName) => `"${schemaName}"`).join(',');
                    return new Promise(function (resolver, rejecter) {
                        connection.query(`set search_path to ${path}`, function (err) {
                            if (err)
                                return rejecter(err);
                            resolver(true);
                        });
                    });
                },
                _stream(connection, obj, stream, options) {
                    const PGQueryStream = process.browser
                        ? undefined
                        : require('pg-query-stream');
                    const sql = obj.sql;
                    return new Promise(function (resolver, rejecter) {
                        const queryStream = connection.query(new PGQueryStream(sql, obj.bindings, options));
                        queryStream.on('error', function (error) {
                            rejecter(error);
                            stream.emit('error', error);
                        });
                        stream.on('end', resolver);
                        queryStream.pipe(stream);
                    });
                },
                _query(connection, obj) {
                    let queryConfig = {
                        text: obj.sql,
                        values: obj.bindings || [],
                    };
                    if (obj.options) {
                        queryConfig = extend(queryConfig, obj.options);
                    }
                    return new Promise(function (resolver, rejecter) {
                        connection.query(queryConfig, function (err, response) {
                            if (err)
                                return rejecter(err);
                            obj.response = response;
                            resolver(obj);
                        });
                    });
                },
                processResponse(obj, runner) {
                    const resp = obj.response;
                    if (obj.output)
                        return obj.output.call(runner, resp);
                    if (obj.method === 'raw')
                        return resp;
                    const { returning } = obj;
                    if (resp.command === 'SELECT') {
                        if (obj.method === 'first')
                            return resp.rows[0];
                        if (obj.method === 'pluck')
                            return map(resp.rows, obj.pluck);
                        return resp.rows;
                    }
                    if (returning) {
                        const returns = [];
                        for (let i = 0, l = resp.rows.length; i < l; i++) {
                            const row = resp.rows[i];
                            if (returning === '*' || Array.isArray(returning)) {
                                returns[i] = row;
                            }
                            else {
                                returns[i] = row[Object.keys(row)[0]];
                            }
                        }
                        return returns;
                    }
                    if (resp.command === 'UPDATE' || resp.command === 'DELETE') {
                        return resp.rowCount;
                    }
                    return resp;
                },
                canCancelQuery: true,
                async cancelQuery(connectionToKill) {
                    const conn = await this.acquireConnection();
                    try {
                        return await this._wrappedCancelQueryCall(conn, connectionToKill);
                    }
                    finally {
                        this.releaseConnection(conn);
                    }
                },
                _wrappedCancelQueryCall(conn, connectionToKill) {
                    return this.query(conn, {
                        method: 'raw',
                        sql: 'SELECT pg_cancel_backend(?);',
                        bindings: [connectionToKill.processID],
                        options: {},
                    });
                },
            });
            exports_269("default", Client_PG);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/redshift/transaction", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/transaction"], function (exports_270, context_270) {
    "use strict";
    var transaction_js_10, Redshift_Transaction;
    var __moduleName = context_270 && context_270.id;
    return {
        setters: [
            function (transaction_js_10_1) {
                transaction_js_10 = transaction_js_10_1;
            }
        ],
        execute: function () {
            Redshift_Transaction = class Redshift_Transaction extends transaction_js_10.default {
                savepoint(conn) {
                    this.trxClient.logger('Redshift does not support savepoints.');
                    return Promise.resolve();
                }
                release(conn, value) {
                    this.trxClient.logger('Redshift does not support savepoints.');
                    return Promise.resolve();
                }
                rollbackTo(conn, error) {
                    this.trxClient.logger('Redshift does not support savepoints.');
                    return Promise.resolve();
                }
            };
            exports_270("default", Redshift_Transaction);
            ;
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/redshift/query/compiler", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/query/compiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/postgres/query/compiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index"], function (exports_271, context_271) {
    "use strict";
    var compiler_js_20, compiler_js_21, index_js_49, identity, reduce, QueryCompiler_Redshift;
    var __moduleName = context_271 && context_271.id;
    return {
        setters: [
            function (compiler_js_20_1) {
                compiler_js_20 = compiler_js_20_1;
            },
            function (compiler_js_21_1) {
                compiler_js_21 = compiler_js_21_1;
            },
            function (index_js_49_1) {
                index_js_49 = index_js_49_1;
            }
        ],
        execute: function () {
            identity = index_js_49.default.identity;
            reduce = index_js_49.default.reduce;
            QueryCompiler_Redshift = class QueryCompiler_Redshift extends compiler_js_21.default {
                constructor(client, builder) {
                    super(client, builder);
                }
                truncate() {
                    return `truncate ${this.tableName.toLowerCase()}`;
                }
                insert() {
                    const sql = compiler_js_20.default.prototype.insert.apply(this, arguments);
                    if (sql === '')
                        return sql;
                    this._slightReturn();
                    return {
                        sql,
                    };
                }
                update() {
                    const sql = compiler_js_20.default.prototype.update.apply(this, arguments);
                    this._slightReturn();
                    return {
                        sql,
                    };
                }
                del() {
                    const sql = compiler_js_20.default.prototype.del.apply(this, arguments);
                    this._slightReturn();
                    return {
                        sql,
                    };
                }
                _slightReturn() {
                    if (this.single.isReturning) {
                        this.client.logger.warn('insert/update/delete returning is not supported by redshift dialect');
                    }
                }
                forUpdate() {
                    this.client.logger.warn('table lock is not supported by redshift dialect');
                    return '';
                }
                forShare() {
                    this.client.logger.warn('lock for share is not supported by redshift dialect');
                    return '';
                }
                columnInfo() {
                    const column = this.single.columnInfo;
                    let schema = this.single.schema;
                    const table = this.client.customWrapIdentifier(this.single.table, identity);
                    if (schema) {
                        schema = this.client.customWrapIdentifier(schema, identity);
                    }
                    let sql = 'select * from information_schema.columns where table_name = ? and table_catalog = ?';
                    const bindings = [
                        table.toLowerCase(),
                        this.client.database().toLowerCase(),
                    ];
                    if (schema) {
                        sql += ' and table_schema = ?';
                        bindings.push(schema);
                    }
                    else {
                        sql += ' and table_schema = current_schema()';
                    }
                    return {
                        sql,
                        bindings,
                        output(resp) {
                            const out = reduce(resp.rows, function (columns, val) {
                                columns[val.column_name] = {
                                    type: val.data_type,
                                    maxLength: val.character_maximum_length,
                                    nullable: val.is_nullable === 'YES',
                                    defaultValue: val.column_default,
                                };
                                return columns;
                            }, {});
                            return (column && out[column]) || out;
                        },
                    };
                }
            };
            exports_271("default", QueryCompiler_Redshift);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/redshift/schema/columnbuilder", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/schema/columnbuilder"], function (exports_272, context_272) {
    "use strict";
    var inherits_js_26, columnbuilder_js_4;
    var __moduleName = context_272 && context_272.id;
    function ColumnBuilder_Redshift() {
        columnbuilder_js_4.default.apply(this, arguments);
    }
    return {
        setters: [
            function (inherits_js_26_1) {
                inherits_js_26 = inherits_js_26_1;
            },
            function (columnbuilder_js_4_1) {
                columnbuilder_js_4 = columnbuilder_js_4_1;
            }
        ],
        execute: function () {
            inherits_js_26.default(ColumnBuilder_Redshift, columnbuilder_js_4.default);
            ColumnBuilder_Redshift.prototype.primary = function () {
                this.notNullable();
                return columnbuilder_js_4.default.prototype.primary.apply(this, arguments);
            };
            ColumnBuilder_Redshift.prototype.index = function () {
                this.client.logger.warn('Redshift does not support the creation of indexes.');
                return this;
            };
            exports_272("default", ColumnBuilder_Redshift);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/redshift/schema/columncompiler", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/postgres/schema/columncompiler"], function (exports_273, context_273) {
    "use strict";
    var inherits_js_27, columncompiler_js_12;
    var __moduleName = context_273 && context_273.id;
    function ColumnCompiler_Redshift() {
        columncompiler_js_12.default.apply(this, arguments);
    }
    return {
        setters: [
            function (inherits_js_27_1) {
                inherits_js_27 = inherits_js_27_1;
            },
            function (columncompiler_js_12_1) {
                columncompiler_js_12 = columncompiler_js_12_1;
            }
        ],
        execute: function () {
            inherits_js_27.default(ColumnCompiler_Redshift, columncompiler_js_12.default);
            Object.assign(ColumnCompiler_Redshift.prototype, {
                bigincrements: 'bigint identity(1,1) primary key not null',
                binary: 'varchar(max)',
                bit(column) {
                    return column.length !== false ? `char(${column.length})` : 'char(1)';
                },
                blob: 'varchar(max)',
                enu: 'varchar(255)',
                enum: 'varchar(255)',
                increments: 'integer identity(1,1) primary key not null',
                json: 'varchar(max)',
                jsonb: 'varchar(max)',
                longblob: 'varchar(max)',
                mediumblob: 'varchar(16777218)',
                set: 'text',
                text: 'varchar(max)',
                datetime(without) {
                    return without ? 'timestamp' : 'timestamptz';
                },
                timestamp(without) {
                    return without ? 'timestamp' : 'timestamptz';
                },
                tinyblob: 'varchar(256)',
                uuid: 'char(36)',
                varbinary: 'varchar(max)',
                bigint: 'bigint',
                bool: 'boolean',
                double: 'double precision',
                floating: 'real',
                smallint: 'smallint',
                tinyint: 'smallint',
                comment(comment) {
                    this.pushAdditional(function () {
                        this.pushQuery(`comment on column ${this.tableCompiler.tableName()}.` +
                            this.formatter.wrap(this.args[0]) +
                            ' is ' +
                            (comment ? `'${comment}'` : 'NULL'));
                    }, comment);
                },
            });
            exports_273("default", ColumnCompiler_Redshift);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/redshift/schema/tablecompiler", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/postgres/schema/tablecompiler"], function (exports_274, context_274) {
    "use strict";
    var inherits_js_28, index_js_50, has, tablecompiler_js_10;
    var __moduleName = context_274 && context_274.id;
    function TableCompiler_Redshift() {
        tablecompiler_js_10.default.apply(this, arguments);
    }
    return {
        setters: [
            function (inherits_js_28_1) {
                inherits_js_28 = inherits_js_28_1;
            },
            function (index_js_50_1) {
                index_js_50 = index_js_50_1;
            },
            function (tablecompiler_js_10_1) {
                tablecompiler_js_10 = tablecompiler_js_10_1;
            }
        ],
        execute: function () {
            has = index_js_50.default.has;
            inherits_js_28.default(TableCompiler_Redshift, tablecompiler_js_10.default);
            TableCompiler_Redshift.prototype.index = function (columns, indexName, indexType) {
                this.client.logger.warn('Redshift does not support the creation of indexes.');
            };
            TableCompiler_Redshift.prototype.dropIndex = function (columns, indexName) {
                this.client.logger.warn('Redshift does not support the deletion of indexes.');
            };
            TableCompiler_Redshift.prototype.createQuery = function (columns, ifNot) {
                const createStatement = ifNot
                    ? 'create table if not exists '
                    : 'create table ';
                let sql = createStatement + this.tableName() + ' (' + columns.sql.join(', ') + ')';
                if (this.single.inherits)
                    sql += ` like (${this.formatter.wrap(this.single.inherits)})`;
                this.pushQuery({
                    sql,
                    bindings: columns.bindings,
                });
                const hasComment = has(this.single, 'comment');
                if (hasComment)
                    this.comment(this.single.comment);
            };
            TableCompiler_Redshift.prototype.primary = function (columns, constraintName) {
                const self = this;
                constraintName = constraintName
                    ? self.formatter.wrap(constraintName)
                    : self.formatter.wrap(`${this.tableNameRaw}_pkey`);
                if (columns.constructor !== Array) {
                    columns = [columns];
                }
                const thiscolumns = self.grouped.columns;
                if (thiscolumns) {
                    for (let i = 0; i < columns.length; i++) {
                        let exists = thiscolumns.find((tcb) => tcb.grouping === 'columns' &&
                            tcb.builder &&
                            tcb.builder._method === 'add' &&
                            tcb.builder._args &&
                            tcb.builder._args.indexOf(columns[i]) > -1);
                        if (exists) {
                            exists = exists.builder;
                        }
                        const nullable = !(exists &&
                            exists._modifiers &&
                            exists._modifiers['nullable'] &&
                            exists._modifiers['nullable'][0] === false);
                        if (nullable) {
                            if (exists) {
                                return this.client.logger.warn('Redshift does not allow primary keys to contain nullable columns.');
                            }
                            else {
                                return this.client.logger.warn('Redshift does not allow primary keys to contain nonexistent columns.');
                            }
                        }
                    }
                }
                return self.pushQuery(`alter table ${self.tableName()} add constraint ${constraintName} primary key (${self.formatter.columnize(columns)})`);
            };
            TableCompiler_Redshift.prototype.addColumns = function (columns, prefix, colCompilers) {
                if (prefix === this.alterColumnsPrefix) {
                    tablecompiler_js_10.default.prototype.addColumns.call(this, columns, prefix, colCompilers);
                }
                else {
                    prefix = prefix || this.addColumnsPrefix;
                    colCompilers = colCompilers || this.getColumns();
                    for (const col of colCompilers) {
                        const quotedTableName = this.tableName();
                        const colCompiled = col.compileColumn();
                        this.pushQuery({
                            sql: `alter table ${quotedTableName} ${prefix}${colCompiled}`,
                            bindings: [],
                        });
                    }
                }
            };
            exports_274("default", TableCompiler_Redshift);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/redshift/schema/compiler", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/postgres/schema/compiler"], function (exports_275, context_275) {
    "use strict";
    var inherits_js_29, compiler_js_22;
    var __moduleName = context_275 && context_275.id;
    function SchemaCompiler_Redshift() {
        compiler_js_22.default.apply(this, arguments);
    }
    return {
        setters: [
            function (inherits_js_29_1) {
                inherits_js_29 = inherits_js_29_1;
            },
            function (compiler_js_22_1) {
                compiler_js_22 = compiler_js_22_1;
            }
        ],
        execute: function () {
            inherits_js_29.default(SchemaCompiler_Redshift, compiler_js_22.default);
            exports_275("default", SchemaCompiler_Redshift);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/redshift/index", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/postgres/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/redshift/transaction", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/redshift/query/compiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/redshift/schema/columnbuilder", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/redshift/schema/columncompiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/redshift/schema/tablecompiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/redshift/schema/compiler"], function (exports_276, context_276) {
    "use strict";
    var inherits_js_30, index_js_51, index_js_52, map, transaction_js_11, compiler_js_23, columnbuilder_js_5, columncompiler_js_13, tablecompiler_js_11, compiler_js_24;
    var __moduleName = context_276 && context_276.id;
    function Client_Redshift(config) {
        index_js_51.default.apply(this, arguments);
    }
    return {
        setters: [
            function (inherits_js_30_1) {
                inherits_js_30 = inherits_js_30_1;
            },
            function (index_js_51_1) {
                index_js_51 = index_js_51_1;
            },
            function (index_js_52_1) {
                index_js_52 = index_js_52_1;
            },
            function (transaction_js_11_1) {
                transaction_js_11 = transaction_js_11_1;
            },
            function (compiler_js_23_1) {
                compiler_js_23 = compiler_js_23_1;
            },
            function (columnbuilder_js_5_1) {
                columnbuilder_js_5 = columnbuilder_js_5_1;
            },
            function (columncompiler_js_13_1) {
                columncompiler_js_13 = columncompiler_js_13_1;
            },
            function (tablecompiler_js_11_1) {
                tablecompiler_js_11 = tablecompiler_js_11_1;
            },
            function (compiler_js_24_1) {
                compiler_js_24 = compiler_js_24_1;
            }
        ],
        execute: function () {
            map = index_js_52.default.map;
            inherits_js_30.default(Client_Redshift, index_js_51.default);
            Object.assign(Client_Redshift.prototype, {
                transaction() {
                    return new transaction_js_11.default(this, ...arguments);
                },
                queryCompiler() {
                    return new compiler_js_23.default(this, ...arguments);
                },
                columnBuilder() {
                    return new columnbuilder_js_5.default(this, ...arguments);
                },
                columnCompiler() {
                    return new columncompiler_js_13.default(this, ...arguments);
                },
                tableCompiler() {
                    return new tablecompiler_js_11.default(this, ...arguments);
                },
                schemaCompiler() {
                    return new compiler_js_24.default(this, ...arguments);
                },
                dialect: 'redshift',
                driverName: 'pg-redshift',
                _driver() {
                    return require('pg');
                },
                processResponse(obj, runner) {
                    const resp = obj.response;
                    if (obj.output)
                        return obj.output.call(runner, resp);
                    if (obj.method === 'raw')
                        return resp;
                    if (resp.command === 'SELECT') {
                        if (obj.method === 'first')
                            return resp.rows[0];
                        if (obj.method === 'pluck')
                            return map(resp.rows, obj.pluck);
                        return resp.rows;
                    }
                    if (resp.command === 'INSERT' ||
                        resp.command === 'UPDATE' ||
                        resp.command === 'DELETE') {
                        return resp.rowCount;
                    }
                    return resp;
                },
            });
            exports_276("default", Client_Redshift);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/sqlite3/query/compiler", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/query/compiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/util/noop", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index"], function (exports_277, context_277) {
    "use strict";
    var compiler_js_25, noop_js_2, index_js_53, constant, each, identity, isEmpty, isString, reduce, emptyStr, QueryCompiler_SQLite3;
    var __moduleName = context_277 && context_277.id;
    return {
        setters: [
            function (compiler_js_25_1) {
                compiler_js_25 = compiler_js_25_1;
            },
            function (noop_js_2_1) {
                noop_js_2 = noop_js_2_1;
            },
            function (index_js_53_1) {
                index_js_53 = index_js_53_1;
            }
        ],
        execute: function () {
            constant = index_js_53.default.constant;
            each = index_js_53.default.each;
            identity = index_js_53.default.identity;
            isEmpty = index_js_53.default.isEmpty;
            isString = index_js_53.default.isString;
            reduce = index_js_53.default.reduce;
            emptyStr = constant('');
            QueryCompiler_SQLite3 = class QueryCompiler_SQLite3 extends compiler_js_25.default {
                constructor(client, builder) {
                    super(client, builder);
                    const { returning } = this.single;
                    if (returning) {
                        this.client.logger.warn('.returning() is not supported by sqlite3 and will not have any effect.');
                    }
                    this.forShare = emptyStr;
                    this.forUpdate = emptyStr;
                }
                insert() {
                    const insertValues = this.single.insert || [];
                    let sql = this.with() + `insert into ${this.tableName} `;
                    if (Array.isArray(insertValues)) {
                        if (insertValues.length === 0) {
                            return '';
                        }
                        else if (insertValues.length === 1 &&
                            insertValues[0] &&
                            isEmpty(insertValues[0])) {
                            return sql + this._emptyInsertValue;
                        }
                    }
                    else if (typeof insertValues === 'object' && isEmpty(insertValues)) {
                        return sql + this._emptyInsertValue;
                    }
                    const insertData = this._prepInsert(insertValues);
                    if (isString(insertData)) {
                        return sql + insertData;
                    }
                    if (insertData.columns.length === 0) {
                        return '';
                    }
                    sql += `(${this.formatter.columnize(insertData.columns)})`;
                    if (this.client.valueForUndefined !== null) {
                        insertData.values.forEach((bindings) => {
                            each(bindings, (binding) => {
                                if (binding === undefined)
                                    throw new TypeError('`sqlite` does not support inserting default values. Specify ' +
                                        'values explicitly or use the `useNullAsDefault` config flag. ' +
                                        '(see docs http://knexjs.org/#Builder-insert).');
                            });
                        });
                    }
                    if (insertData.values.length === 1) {
                        const parameters = this.formatter.parameterize(insertData.values[0], this.client.valueForUndefined);
                        return sql + ` values (${parameters})`;
                    }
                    const blocks = [];
                    let i = -1;
                    while (++i < insertData.values.length) {
                        let i2 = -1;
                        const block = (blocks[i] = []);
                        let current = insertData.values[i];
                        current = current === undefined ? this.client.valueForUndefined : current;
                        while (++i2 < insertData.columns.length) {
                            block.push(this.formatter.alias(this.formatter.parameter(current[i2]), this.formatter.wrap(insertData.columns[i2])));
                        }
                        blocks[i] = block.join(', ');
                    }
                    return sql + ' select ' + blocks.join(' union all select ');
                }
                truncate() {
                    const { table } = this.single;
                    return {
                        sql: `delete from ${this.tableName}`,
                        output() {
                            return this.query({
                                sql: `delete from sqlite_sequence where name = '${table}'`,
                            }).catch(noop_js_2.default);
                        },
                    };
                }
                columnInfo() {
                    const column = this.single.columnInfo;
                    const table = this.client.customWrapIdentifier(this.single.table, identity);
                    return {
                        sql: `PRAGMA table_info(\`${table}\`)`,
                        output(resp) {
                            const maxLengthRegex = /.*\((\d+)\)/;
                            const out = reduce(resp, function (columns, val) {
                                let { type } = val;
                                let maxLength = type.match(maxLengthRegex);
                                if (maxLength) {
                                    maxLength = maxLength[1];
                                }
                                type = maxLength ? type.split('(')[0] : type;
                                columns[val.name] = {
                                    type: type.toLowerCase(),
                                    maxLength,
                                    nullable: !val.notnull,
                                    defaultValue: val.dflt_value,
                                };
                                return columns;
                            }, {});
                            return (column && out[column]) || out;
                        },
                    };
                }
                limit() {
                    const noLimit = !this.single.limit && this.single.limit !== 0;
                    if (noLimit && !this.single.offset)
                        return '';
                    return `limit ${this.formatter.parameter(noLimit ? -1 : this.single.limit)}`;
                }
            };
            exports_277("default", QueryCompiler_SQLite3);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/sqlite3/schema/compiler", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/schema/compiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index"], function (exports_278, context_278) {
    "use strict";
    var inherits_js_31, compiler_js_26, index_js_54, some;
    var __moduleName = context_278 && context_278.id;
    function SchemaCompiler_SQLite3() {
        compiler_js_26.default.apply(this, arguments);
    }
    return {
        setters: [
            function (inherits_js_31_1) {
                inherits_js_31 = inherits_js_31_1;
            },
            function (compiler_js_26_1) {
                compiler_js_26 = compiler_js_26_1;
            },
            function (index_js_54_1) {
                index_js_54 = index_js_54_1;
            }
        ],
        execute: function () {
            some = index_js_54.default.some;
            inherits_js_31.default(SchemaCompiler_SQLite3, compiler_js_26.default);
            SchemaCompiler_SQLite3.prototype.hasTable = function (tableName) {
                const sql = `select * from sqlite_master ` +
                    `where type = 'table' and name = ${this.formatter.parameter(tableName)}`;
                this.pushQuery({ sql, output: (resp) => resp.length > 0 });
            };
            SchemaCompiler_SQLite3.prototype.hasColumn = function (tableName, column) {
                this.pushQuery({
                    sql: `PRAGMA table_info(${this.formatter.wrap(tableName)})`,
                    output(resp) {
                        return some(resp, (col) => {
                            return (this.client.wrapIdentifier(col.name.toLowerCase()) ===
                                this.client.wrapIdentifier(column.toLowerCase()));
                        });
                    },
                });
            };
            SchemaCompiler_SQLite3.prototype.renameTable = function (from, to) {
                this.pushQuery(`alter table ${this.formatter.wrap(from)} rename to ${this.formatter.wrap(to)}`);
            };
            exports_278("default", SchemaCompiler_SQLite3);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/sqlite3/schema/columncompiler", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/schema/columncompiler"], function (exports_279, context_279) {
    "use strict";
    var inherits_js_32, columncompiler_js_14;
    var __moduleName = context_279 && context_279.id;
    function ColumnCompiler_SQLite3() {
        columncompiler_js_14.default.apply(this, arguments);
        this.modifiers = ['nullable', 'defaultTo'];
    }
    return {
        setters: [
            function (inherits_js_32_1) {
                inherits_js_32 = inherits_js_32_1;
            },
            function (columncompiler_js_14_1) {
                columncompiler_js_14 = columncompiler_js_14_1;
            }
        ],
        execute: function () {
            inherits_js_32.default(ColumnCompiler_SQLite3, columncompiler_js_14.default);
            ColumnCompiler_SQLite3.prototype.double = ColumnCompiler_SQLite3.prototype.decimal = ColumnCompiler_SQLite3.prototype.floating =
                'float';
            ColumnCompiler_SQLite3.prototype.timestamp = 'datetime';
            ColumnCompiler_SQLite3.prototype.enu = function (allowed) {
                return `text check (${this.formatter.wrap(this.args[0])} in ('${allowed.join("', '")}'))`;
            };
            ColumnCompiler_SQLite3.prototype.json = 'json';
            exports_279("default", ColumnCompiler_SQLite3);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/sqlite3/schema/tablecompiler", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/schema/tablecompiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index"], function (exports_280, context_280) {
    "use strict";
    var inherits_js_33, tablecompiler_js_12, index_js_55, filter, values;
    var __moduleName = context_280 && context_280.id;
    function TableCompiler_SQLite3() {
        tablecompiler_js_12.default.apply(this, arguments);
        this.primaryKey = void 0;
    }
    return {
        setters: [
            function (inherits_js_33_1) {
                inherits_js_33 = inherits_js_33_1;
            },
            function (tablecompiler_js_12_1) {
                tablecompiler_js_12 = tablecompiler_js_12_1;
            },
            function (index_js_55_1) {
                index_js_55 = index_js_55_1;
            }
        ],
        execute: function () {
            filter = index_js_55.default.filter;
            values = index_js_55.default.values;
            inherits_js_33.default(TableCompiler_SQLite3, tablecompiler_js_12.default);
            TableCompiler_SQLite3.prototype.createQuery = function (columns, ifNot) {
                const createStatement = ifNot
                    ? 'create table if not exists '
                    : 'create table ';
                let sql = createStatement + this.tableName() + ' (' + columns.sql.join(', ');
                sql += this.foreignKeys() || '';
                sql += this.primaryKeys() || '';
                sql += ')';
                this.pushQuery(sql);
            };
            TableCompiler_SQLite3.prototype.addColumns = function (columns, prefix) {
                if (prefix) {
                    throw new Error('Sqlite does not support alter column.');
                }
                for (let i = 0, l = columns.sql.length; i < l; i++) {
                    this.pushQuery({
                        sql: `alter table ${this.tableName()} add column ${columns.sql[i]}`,
                        bindings: columns.bindings[i],
                    });
                }
            };
            TableCompiler_SQLite3.prototype.dropUnique = function (columns, indexName) {
                indexName = indexName
                    ? this.formatter.wrap(indexName)
                    : this._indexCommand('unique', this.tableNameRaw, columns);
                this.pushQuery(`drop index ${indexName}`);
            };
            TableCompiler_SQLite3.prototype.dropIndex = function (columns, indexName) {
                indexName = indexName
                    ? this.formatter.wrap(indexName)
                    : this._indexCommand('index', this.tableNameRaw, columns);
                this.pushQuery(`drop index ${indexName}`);
            };
            TableCompiler_SQLite3.prototype.unique = function (columns, indexName) {
                indexName = indexName
                    ? this.formatter.wrap(indexName)
                    : this._indexCommand('unique', this.tableNameRaw, columns);
                columns = this.formatter.columnize(columns);
                this.pushQuery(`create unique index ${indexName} on ${this.tableName()} (${columns})`);
            };
            TableCompiler_SQLite3.prototype.index = function (columns, indexName) {
                indexName = indexName
                    ? this.formatter.wrap(indexName)
                    : this._indexCommand('index', this.tableNameRaw, columns);
                columns = this.formatter.columnize(columns);
                this.pushQuery(`create index ${indexName} on ${this.tableName()} (${columns})`);
            };
            TableCompiler_SQLite3.prototype.primary = TableCompiler_SQLite3.prototype.foreign = function () {
                if (this.method !== 'create' && this.method !== 'createIfNot') {
                    this.client.logger.warn('SQLite3 Foreign & Primary keys may only be added on create');
                }
            };
            TableCompiler_SQLite3.prototype.primaryKeys = function () {
                const pks = filter(this.grouped.alterTable || [], { method: 'primary' });
                if (pks.length > 0 && pks[0].args.length > 0) {
                    const columns = pks[0].args[0];
                    let constraintName = pks[0].args[1] || '';
                    if (constraintName) {
                        constraintName = ' constraint ' + this.formatter.wrap(constraintName);
                    }
                    return `,${constraintName} primary key (${this.formatter.columnize(columns)})`;
                }
            };
            TableCompiler_SQLite3.prototype.foreignKeys = function () {
                let sql = '';
                const foreignKeys = filter(this.grouped.alterTable || [], {
                    method: 'foreign',
                });
                for (let i = 0, l = foreignKeys.length; i < l; i++) {
                    const foreign = foreignKeys[i].args[0];
                    const column = this.formatter.columnize(foreign.column);
                    const references = this.formatter.columnize(foreign.references);
                    const foreignTable = this.formatter.wrap(foreign.inTable);
                    let constraintName = foreign.keyName || '';
                    if (constraintName) {
                        constraintName = ' constraint ' + this.formatter.wrap(constraintName);
                    }
                    sql += `,${constraintName} foreign key(${column}) references ${foreignTable}(${references})`;
                    if (foreign.onDelete)
                        sql += ` on delete ${foreign.onDelete}`;
                    if (foreign.onUpdate)
                        sql += ` on update ${foreign.onUpdate}`;
                }
                return sql;
            };
            TableCompiler_SQLite3.prototype.createTableBlock = function () {
                return this.getColumns().concat().join(',');
            };
            TableCompiler_SQLite3.prototype.renameColumn = function (from, to) {
                const compiler = this;
                this.pushQuery({
                    sql: `PRAGMA table_info(${this.tableName()})`,
                    output(pragma) {
                        return compiler.client
                            .ddl(compiler, pragma, this.connection)
                            .renameColumn(from, to);
                    },
                });
            };
            TableCompiler_SQLite3.prototype.dropColumn = function () {
                const compiler = this;
                const columns = values(arguments);
                this.pushQuery({
                    sql: `PRAGMA table_info(${this.tableName()})`,
                    output(pragma) {
                        return compiler.client
                            .ddl(compiler, pragma, this.connection)
                            .dropColumn(columns);
                    },
                });
            };
            exports_280("default", TableCompiler_SQLite3);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/sqlite3/schema/ddl", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index"], function (exports_281, context_281) {
    "use strict";
    var index_js_56, assign, chunk, find, fromPairs, identity, invert, isEmpty, negate, omit, uniqueId;
    var __moduleName = context_281 && context_281.id;
    function SQLite3_DDL(client, tableCompiler, pragma, connection) {
        this.client = client;
        this.tableCompiler = tableCompiler;
        this.pragma = pragma;
        this.tableNameRaw = this.tableCompiler.tableNameRaw;
        this.alteredName = uniqueId('_knex_temp_alter');
        this.connection = connection;
        this.formatter =
            client && client.config && client.config.wrapIdentifier
                ? client.config.wrapIdentifier
                : (value) => value;
    }
    return {
        setters: [
            function (index_js_56_1) {
                index_js_56 = index_js_56_1;
            }
        ],
        execute: function () {
            assign = index_js_56.default.assign;
            chunk = index_js_56.default.chunk;
            find = index_js_56.default.find;
            fromPairs = index_js_56.default.fromPairs;
            identity = index_js_56.default.identity;
            invert = index_js_56.default.invert;
            isEmpty = index_js_56.default.isEmpty;
            negate = index_js_56.default.negate;
            omit = index_js_56.default.omit;
            uniqueId = index_js_56.default.uniqueId;
            assign(SQLite3_DDL.prototype, {
                tableName() {
                    return this.formatter(this.tableNameRaw, (value) => value);
                },
                getColumn: async function (column) {
                    const currentCol = find(this.pragma, (col) => {
                        return (this.client.wrapIdentifier(col.name).toLowerCase() ===
                            this.client.wrapIdentifier(column).toLowerCase());
                    });
                    if (!currentCol)
                        throw new Error(`The column ${column} is not in the ${this.tableName()} table`);
                    return currentCol;
                },
                getTableSql() {
                    this.trx.disableProcessing();
                    return this.trx
                        .raw(`SELECT name, sql FROM sqlite_master WHERE type="table" AND name="${this.tableName()}"`)
                        .then((result) => {
                        this.trx.enableProcessing();
                        return result;
                    });
                },
                renameTable: async function () {
                    return this.trx.raw(`ALTER TABLE "${this.tableName()}" RENAME TO "${this.alteredName}"`);
                },
                dropOriginal() {
                    return this.trx.raw(`DROP TABLE "${this.tableName()}"`);
                },
                dropTempTable() {
                    return this.trx.raw(`DROP TABLE "${this.alteredName}"`);
                },
                copyData() {
                    return this.trx
                        .raw(`SELECT * FROM "${this.tableName()}"`)
                        .then((result) => this.insertChunked(20, this.alteredName, identity, result));
                },
                reinsertData(iterator) {
                    return this.trx
                        .raw(`SELECT * FROM "${this.alteredName}"`)
                        .then((result) => this.insertChunked(20, this.tableName(), iterator, result));
                },
                async insertChunked(chunkSize, target, iterator, result) {
                    iterator = iterator || identity;
                    const chunked = chunk(result, chunkSize);
                    for (const batch of chunked) {
                        await this.trx.queryBuilder().table(target).insert(batch.map(iterator));
                    }
                },
                createTempTable(createTable) {
                    return this.trx.raw(createTable.sql.replace(this.tableName(), this.alteredName));
                },
                _doReplace(sql, from, to) {
                    const oneLineSql = sql.replace(/\s+/g, ' ');
                    const matched = oneLineSql.match(/^CREATE TABLE\s+(\S+)\s*\((.*)\)/);
                    const tableName = matched[1];
                    const defs = matched[2];
                    if (!defs) {
                        throw new Error('No column definitions in this statement!');
                    }
                    let parens = 0, args = [], ptr = 0;
                    let i = 0;
                    const x = defs.length;
                    for (i = 0; i < x; i++) {
                        switch (defs[i]) {
                            case '(':
                                parens++;
                                break;
                            case ')':
                                parens--;
                                break;
                            case ',':
                                if (parens === 0) {
                                    args.push(defs.slice(ptr, i));
                                    ptr = i + 1;
                                }
                                break;
                            case ' ':
                                if (ptr === i) {
                                    ptr = i + 1;
                                }
                                break;
                        }
                    }
                    args.push(defs.slice(ptr, i));
                    const fromIdentifier = from.replace(/[`"'[\]]/g, '');
                    args = args.map((item) => {
                        let split = item.trim().split(' ');
                        const fromMatchCandidates = [
                            new RegExp(`\`${fromIdentifier}\``, 'i'),
                            new RegExp(`"${fromIdentifier}"`, 'i'),
                            new RegExp(`'${fromIdentifier}'`, 'i'),
                            new RegExp(`\\[${fromIdentifier}\\]`, 'i'),
                        ];
                        if (fromIdentifier.match(/^\S+$/)) {
                            fromMatchCandidates.push(new RegExp(`\\b${fromIdentifier}\\b`, 'i'));
                        }
                        const doesMatchFromIdentifier = (target) => fromMatchCandidates.some((c) => target.match(c));
                        const replaceFromIdentifier = (target) => fromMatchCandidates.reduce((result, candidate) => result.replace(candidate, to), target);
                        if (doesMatchFromIdentifier(split[0])) {
                            if (to) {
                                split[0] = to;
                                return split.join(' ');
                            }
                            return '';
                        }
                        const idx = /constraint/i.test(split[0]) ? 2 : 0;
                        if (/primary|unique/i.test(split[idx])) {
                            const ret = item.replace(/\(.*\)/, replaceFromIdentifier);
                            if (ret !== item && isEmpty(to))
                                return '';
                            return ret;
                        }
                        if (/foreign/.test(split[idx])) {
                            split = item.split(/ references /i);
                            const replacedKeySpec = replaceFromIdentifier(split[0]);
                            if (split[0] !== replacedKeySpec) {
                                if (isEmpty(to))
                                    return '';
                                else
                                    split[0] = replacedKeySpec;
                            }
                            if (split[1].slice(0, tableName.length) === tableName) {
                                const replacedKeyTargetSpec = split[1].replace(/\(.*\)/, replaceFromIdentifier);
                                if (split[1] !== replacedKeyTargetSpec) {
                                    if (isEmpty(to))
                                        return '';
                                    else
                                        split[1] = replacedKeyTargetSpec;
                                }
                            }
                            return split.join(' references ');
                        }
                        return item;
                    });
                    args = args.filter(negate(isEmpty));
                    if (args.length === 0) {
                        throw new Error('Unable to drop last column from table');
                    }
                    return oneLineSql
                        .replace(/\(.*\)/, () => `(${args.join(', ')})`)
                        .replace(/,\s*([,)])/, '$1');
                },
                renameColumn: async function (from, to) {
                    return this.client.transaction(async (trx) => {
                        this.trx = trx;
                        const column = await this.getColumn(from);
                        const sql = await this.getTableSql(column);
                        const a = this.client.wrapIdentifier(from);
                        const b = this.client.wrapIdentifier(to);
                        const createTable = sql[0];
                        const newSql = this._doReplace(createTable.sql, a, b);
                        if (sql === newSql) {
                            throw new Error('Unable to find the column to change');
                        }
                        const { from: mappedFrom, to: mappedTo } = invert(this.client.postProcessResponse(invert({
                            from,
                            to,
                        })));
                        return this.reinsertMapped(createTable, newSql, (row) => {
                            row[mappedTo] = row[mappedFrom];
                            return omit(row, mappedFrom);
                        });
                    }, { connection: this.connection });
                },
                dropColumn: async function (columns) {
                    return this.client.transaction((trx) => {
                        this.trx = trx;
                        return Promise.all(columns.map((column) => this.getColumn(column)))
                            .then(() => this.getTableSql())
                            .then((sql) => {
                            const createTable = sql[0];
                            let newSql = createTable.sql;
                            columns.forEach((column) => {
                                const a = this.client.wrapIdentifier(column);
                                newSql = this._doReplace(newSql, a, '');
                            });
                            if (sql === newSql) {
                                throw new Error('Unable to find the column to change');
                            }
                            const mappedColumns = Object.keys(this.client.postProcessResponse(fromPairs(columns.map((column) => [column, column]))));
                            return this.reinsertMapped(createTable, newSql, (row) => omit(row, ...mappedColumns));
                        });
                    }, { connection: this.connection });
                },
                reinsertMapped(createTable, newSql, mapRow) {
                    return Promise.resolve()
                        .then(() => this.createTempTable(createTable))
                        .then(() => this.copyData())
                        .then(() => this.dropOriginal())
                        .then(() => this.trx.raw(newSql))
                        .then(() => this.reinsertData(mapRow))
                        .then(() => this.dropTempTable());
                },
            });
            exports_281("default", SQLite3_DDL);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/sqlite3/formatter", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/formatter", "https://raw.githubusercontent.com/denjucks/dex/master/lib/raw"], function (exports_282, context_282) {
    "use strict";
    var formatter_js_6, raw_js_8, SQlite3_Formatter;
    var __moduleName = context_282 && context_282.id;
    return {
        setters: [
            function (formatter_js_6_1) {
                formatter_js_6 = formatter_js_6_1;
            },
            function (raw_js_8_1) {
                raw_js_8 = raw_js_8_1;
            }
        ],
        execute: function () {
            SQlite3_Formatter = class SQlite3_Formatter extends formatter_js_6.default {
                values(values) {
                    if (Array.isArray(values)) {
                        if (Array.isArray(values[0])) {
                            return `( values ${values
                                .map((value) => `(${this.parameterize(value)})`)
                                .join(', ')})`;
                        }
                        return `(${this.parameterize(values)})`;
                    }
                    if (values instanceof raw_js_8.default) {
                        return `(${this.parameter(values)})`;
                    }
                    return this.parameter(values);
                }
            };
            exports_282("default", SQlite3_Formatter);
            ;
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/sqlite3/index", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/inherits@2.0.4/inherits", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/lodash@4.17.15/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/deps/@jspm/core@1.1.0/nodelibs/util", "https://raw.githubusercontent.com/denjucks/dex/master/lib/client", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/sqlite3/query/compiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/sqlite3/schema/compiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/sqlite3/schema/columncompiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/sqlite3/schema/tablecompiler", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/sqlite3/schema/ddl", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/sqlite3/formatter"], function (exports_283, context_283) {
    "use strict";
    var inherits_js_34, index_js_57, defaults, map, util_js_12, client_js_5, compiler_js_27, compiler_js_28, columncompiler_js_15, tablecompiler_js_13, ddl_js_1, formatter_js_7;
    var __moduleName = context_283 && context_283.id;
    function Client_SQLite3(config) {
        client_js_5.default.call(this, config);
        if (config.useNullAsDefault === undefined) {
            this.logger.warn('sqlite does not support inserting default values. Set the ' +
                '`useNullAsDefault` flag to hide this warning. ' +
                '(see docs http://knexjs.org/#Builder-insert).');
        }
    }
    return {
        setters: [
            function (inherits_js_34_1) {
                inherits_js_34 = inherits_js_34_1;
            },
            function (index_js_57_1) {
                index_js_57 = index_js_57_1;
            },
            function (util_js_12_1) {
                util_js_12 = util_js_12_1;
            },
            function (client_js_5_1) {
                client_js_5 = client_js_5_1;
            },
            function (compiler_js_27_1) {
                compiler_js_27 = compiler_js_27_1;
            },
            function (compiler_js_28_1) {
                compiler_js_28 = compiler_js_28_1;
            },
            function (columncompiler_js_15_1) {
                columncompiler_js_15 = columncompiler_js_15_1;
            },
            function (tablecompiler_js_13_1) {
                tablecompiler_js_13 = tablecompiler_js_13_1;
            },
            function (ddl_js_1_1) {
                ddl_js_1 = ddl_js_1_1;
            },
            function (formatter_js_7_1) {
                formatter_js_7 = formatter_js_7_1;
            }
        ],
        execute: function () {
            defaults = index_js_57.default.defaults;
            map = index_js_57.default.map;
            inherits_js_34.default(Client_SQLite3, client_js_5.default);
            Object.assign(Client_SQLite3.prototype, {
                dialect: 'sqlite3',
                driverName: 'sqlite3',
                _driver() {
                    return require('sqlite3');
                },
                schemaCompiler() {
                    return new compiler_js_28.default(this, ...arguments);
                },
                queryCompiler() {
                    return new compiler_js_27.default(this, ...arguments);
                },
                columnCompiler() {
                    return new columncompiler_js_15.default(this, ...arguments);
                },
                tableCompiler() {
                    return new tablecompiler_js_13.default(this, ...arguments);
                },
                ddl(compiler, pragma, connection) {
                    return new ddl_js_1.default(this, compiler, pragma, connection);
                },
                wrapIdentifierImpl(value) {
                    return value !== '*' ? `\`${value.replace(/`/g, '``')}\`` : '*';
                },
                acquireRawConnection() {
                    return new Promise((resolve, reject) => {
                        const db = new this.driver.Database(this.connectionSettings.filename, (err) => {
                            if (err) {
                                return reject(err);
                            }
                            resolve(db);
                        });
                    });
                },
                async destroyRawConnection(connection) {
                    const close = util_js_12.promisify((cb) => connection.close(cb));
                    return close();
                },
                _query(connection, obj) {
                    const { method } = obj;
                    let callMethod;
                    switch (method) {
                        case 'insert':
                        case 'update':
                        case 'counter':
                        case 'del':
                            callMethod = 'run';
                            break;
                        default:
                            callMethod = 'all';
                    }
                    return new Promise(function (resolver, rejecter) {
                        if (!connection || !connection[callMethod]) {
                            return rejecter(new Error(`Error calling ${callMethod} on connection.`));
                        }
                        connection[callMethod](obj.sql, obj.bindings, function (err, response) {
                            if (err)
                                return rejecter(err);
                            obj.response = response;
                            obj.context = this;
                            return resolver(obj);
                        });
                    });
                },
                _stream(connection, sql, stream) {
                    const client = this;
                    return new Promise(function (resolver, rejecter) {
                        stream.on('error', rejecter);
                        stream.on('end', resolver);
                        return client
                            ._query(connection, sql)
                            .then((obj) => obj.response)
                            .then((rows) => rows.forEach((row) => stream.write(row)))
                            .catch(function (err) {
                            stream.emit('error', err);
                        })
                            .then(function () {
                            stream.end();
                        });
                    });
                },
                processResponse(obj, runner) {
                    const ctx = obj.context;
                    let { response } = obj;
                    if (obj.output)
                        return obj.output.call(runner, response);
                    switch (obj.method) {
                        case 'select':
                        case 'pluck':
                        case 'first':
                            if (obj.method === 'pluck')
                                response = map(response, obj.pluck);
                            return obj.method === 'first' ? response[0] : response;
                        case 'insert':
                            return [ctx.lastID];
                        case 'del':
                        case 'update':
                        case 'counter':
                            return ctx.changes;
                        default:
                            return response;
                    }
                },
                poolDefaults() {
                    return defaults({ min: 1, max: 1 }, client_js_5.default.prototype.poolDefaults.call(this));
                },
                formatter() {
                    return new formatter_js_7.default(this, ...arguments);
                },
            });
            exports_283("default", Client_SQLite3);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/knex", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/raw", "https://raw.githubusercontent.com/denjucks/dex/master/lib/client", "https://raw.githubusercontent.com/denjucks/dex/master/lib/query/builder", "https://raw.githubusercontent.com/denjucks/dex/master/lib/query/methods", "https://raw.githubusercontent.com/denjucks/dex/master/lib/util/make-knex", "https://raw.githubusercontent.com/denjucks/dex/master/lib/util/parse-connection", "https://raw.githubusercontent.com/denjucks/dex/master/lib/util/timeout", "https://raw.githubusercontent.com/denjucks/dex/master/lib/util/fake-client", "https://raw.githubusercontent.com/denjucks/dex/master/lib/constants", "https://raw.githubusercontent.com/denjucks/dex/master/lib/helpers", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/mssql/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/mysql/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/mysql2/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/oracledb/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/postgres/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/redshift/index", "https://raw.githubusercontent.com/denjucks/dex/master/lib/dialects/sqlite3/index"], function (exports_284, context_284) {
    "use strict";
    var raw_js_9, client_js_6, builder_js_5, methods_js_2, make_knex_js_2, parse_connection_js_1, timeout_js_6, fake_client_js_1, constants_js_4, helpers_js_13, index_js_58, index_js_59, index_js_60, index_js_61, index_js_62, index_js_63, index_js_64;
    var __moduleName = context_284 && context_284.id;
    function Knex(config) {
        if (typeof config === 'string') {
            const parsedConfig = Object.assign(parse_connection_js_1.default(config), arguments[2]);
            return new Knex(parsedConfig);
        }
        let Dialect;
        if (arguments.length === 0 || (!config.client && !config.dialect)) {
            Dialect = client_js_6.default;
        }
        else if (typeof config.client === 'function' &&
            config.client.prototype instanceof client_js_6.default) {
            Dialect = config.client;
        }
        else {
            const clientName = config.client || config.dialect;
            if (!constants_js_4.SUPPORTED_CLIENTS.includes(clientName)) {
                throw new Error(`knex: Unknown configuration option 'client' value ${clientName}. Note that it is case-sensitive, check documentation for supported values.`);
            }
            const resolvedClientName = helpers_js_13.resolveClientNameWithAliases(clientName);
            switch (resolvedClientName) {
                case 'mssql':
                    Dialect = index_js_58.default;
                    break;
                case 'mysql':
                    Dialect = index_js_59.default;
                    break;
                case 'mysql2':
                    Dialect = index_js_60.default;
                    break;
                case 'oracledb':
                    Dialect = index_js_61.default;
                    break;
                case 'postgres':
                    Dialect = index_js_62.default;
                    break;
                case 'redshift':
                    Dialect = index_js_63.default;
                    break;
                case 'sqlite3':
                    Dialect = index_js_64.default;
                    break;
            }
        }
        if (typeof config.connection === 'string') {
            config = Object.assign({}, config, {
                connection: parse_connection_js_1.default(config.connection).connection,
            });
        }
        const newKnex = make_knex_js_2.default(new Dialect(config));
        if (config.userParams) {
            newKnex.userParams = config.userParams;
        }
        return newKnex;
    }
    return {
        setters: [
            function (raw_js_9_1) {
                raw_js_9 = raw_js_9_1;
            },
            function (client_js_6_1) {
                client_js_6 = client_js_6_1;
            },
            function (builder_js_5_1) {
                builder_js_5 = builder_js_5_1;
            },
            function (methods_js_2_1) {
                methods_js_2 = methods_js_2_1;
            },
            function (make_knex_js_2_1) {
                make_knex_js_2 = make_knex_js_2_1;
            },
            function (parse_connection_js_1_1) {
                parse_connection_js_1 = parse_connection_js_1_1;
            },
            function (timeout_js_6_1) {
                timeout_js_6 = timeout_js_6_1;
            },
            function (fake_client_js_1_1) {
                fake_client_js_1 = fake_client_js_1_1;
            },
            function (constants_js_4_1) {
                constants_js_4 = constants_js_4_1;
            },
            function (helpers_js_13_1) {
                helpers_js_13 = helpers_js_13_1;
            },
            function (index_js_58_1) {
                index_js_58 = index_js_58_1;
            },
            function (index_js_59_1) {
                index_js_59 = index_js_59_1;
            },
            function (index_js_60_1) {
                index_js_60 = index_js_60_1;
            },
            function (index_js_61_1) {
                index_js_61 = index_js_61_1;
            },
            function (index_js_62_1) {
                index_js_62 = index_js_62_1;
            },
            function (index_js_63_1) {
                index_js_63 = index_js_63_1;
            },
            function (index_js_64_1) {
                index_js_64 = index_js_64_1;
            }
        ],
        execute: function () {
            Knex.Client = client_js_6.default;
            Knex.KnexTimeoutError = timeout_js_6.KnexTimeoutError;
            Knex.QueryBuilder = {
                extend: function (methodName, fn) {
                    builder_js_5.default.extend(methodName, fn);
                    methods_js_2.default.push(methodName);
                },
            };
            Knex.raw = (sql, bindings) => {
                console.warn('global Knex.raw is deprecated, use knex.raw (chain off an initialized knex object)');
                return new raw_js_9.default(fake_client_js_1.default).set(sql, bindings);
            };
            exports_284("default", Knex);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/lib/index", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/knex"], function (exports_285, context_285) {
    "use strict";
    var knex_js_1;
    var __moduleName = context_285 && context_285.id;
    return {
        setters: [
            function (knex_js_1_1) {
                knex_js_1 = knex_js_1_1;
            }
        ],
        execute: function () {
            exports_285("default", knex_js_1.default);
        }
    };
});
System.register("https://raw.githubusercontent.com/denjucks/dex/master/mod", ["https://raw.githubusercontent.com/denjucks/dex/master/lib/index"], function (exports_286, context_286) {
    "use strict";
    var index_js_65;
    var __moduleName = context_286 && context_286.id;
    return {
        setters: [
            function (index_js_65_1) {
                index_js_65 = index_js_65_1;
            }
        ],
        execute: function () {
            exports_286("default", index_js_65.default);
        }
    };
});
System.register("https://deno.land/x/case@v2.1.0/types", [], function (exports_287, context_287) {
    "use strict";
    var __moduleName = context_287 && context_287.id;
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/case@v2.1.0/upperCase", [], function (exports_288, context_288) {
    "use strict";
    var LANGUAGES;
    var __moduleName = context_288 && context_288.id;
    function default_3(str, locale) {
        str = str == null ? "" : String(str);
        if (!locale) {
            return str.toUpperCase();
        }
        const lang = LANGUAGES[locale];
        if (lang) {
            str = str.replace(lang.regexp, function (m) {
                return lang.map[m];
            });
        }
        return str.toUpperCase();
    }
    exports_288("default", default_3);
    return {
        setters: [],
        execute: function () {
            LANGUAGES = {
                tr: {
                    regexp: /[\u0069]/g,
                    map: {
                        i: "\u0130",
                    },
                },
                az: {
                    regexp: /[\u0069]/g,
                    map: {
                        i: "\u0130",
                    },
                },
                lt: {
                    regexp: /[\u0069\u006A\u012F]\u0307|\u0069\u0307[\u0300\u0301\u0303]/g,
                    map: {
                        i̇: "\u0049",
                        j̇: "\u004A",
                        į̇: "\u012E",
                        i̇̀: "\u00CC",
                        i̇́: "\u00CD",
                        i̇̃: "\u0128",
                    },
                },
            };
        }
    };
});
System.register("https://deno.land/x/case@v2.1.0/lowerCase", [], function (exports_289, context_289) {
    "use strict";
    var LANGUAGES;
    var __moduleName = context_289 && context_289.id;
    function default_4(str, locale) {
        str = str == null ? "" : String(str);
        if (!locale) {
            return str.toLowerCase();
        }
        const lang = LANGUAGES[locale];
        if (lang) {
            str = str.replace(lang.regexp, (m) => lang.map[m]);
        }
        return str.toLowerCase();
    }
    exports_289("default", default_4);
    return {
        setters: [],
        execute: function () {
            LANGUAGES = {
                tr: {
                    regexp: /\u0130|\u0049|\u0049\u0307/g,
                    map: {
                        İ: "\u0069",
                        I: "\u0131",
                        İ: "\u0069",
                    },
                },
                az: {
                    regexp: /[\u0130]/g,
                    map: {
                        İ: "\u0069",
                        I: "\u0131",
                        İ: "\u0069",
                    },
                },
                lt: {
                    regexp: /[\u0049\u004A\u012E\u00CC\u00CD\u0128]/g,
                    map: {
                        I: "\u0069\u0307",
                        J: "\u006A\u0307",
                        Į: "\u012F\u0307",
                        Ì: "\u0069\u0307\u0300",
                        Í: "\u0069\u0307\u0301",
                        Ĩ: "\u0069\u0307\u0303",
                    },
                },
            };
        }
    };
});
System.register("https://deno.land/x/case@v2.1.0/vendor/nonWordRegexp", [], function (exports_290, context_290) {
    "use strict";
    var nonWordRegexp;
    var __moduleName = context_290 && context_290.id;
    return {
        setters: [],
        execute: function () {
            nonWordRegexp = /[^A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC0-9\xB2\xB3\xB9\xBC-\xBE\u0660-\u0669\u06F0-\u06F9\u07C0-\u07C9\u0966-\u096F\u09E6-\u09EF\u09F4-\u09F9\u0A66-\u0A6F\u0AE6-\u0AEF\u0B66-\u0B6F\u0B72-\u0B77\u0BE6-\u0BF2\u0C66-\u0C6F\u0C78-\u0C7E\u0CE6-\u0CEF\u0D66-\u0D75\u0DE6-\u0DEF\u0E50-\u0E59\u0ED0-\u0ED9\u0F20-\u0F33\u1040-\u1049\u1090-\u1099\u1369-\u137C\u16EE-\u16F0\u17E0-\u17E9\u17F0-\u17F9\u1810-\u1819\u1946-\u194F\u19D0-\u19DA\u1A80-\u1A89\u1A90-\u1A99\u1B50-\u1B59\u1BB0-\u1BB9\u1C40-\u1C49\u1C50-\u1C59\u2070\u2074-\u2079\u2080-\u2089\u2150-\u2182\u2185-\u2189\u2460-\u249B\u24EA-\u24FF\u2776-\u2793\u2CFD\u3007\u3021-\u3029\u3038-\u303A\u3192-\u3195\u3220-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\uA620-\uA629\uA6E6-\uA6EF\uA830-\uA835\uA8D0-\uA8D9\uA900-\uA909\uA9D0-\uA9D9\uA9F0-\uA9F9\uAA50-\uAA59\uABF0-\uABF9\uFF10-\uFF19]+/g;
            exports_290("default", nonWordRegexp);
        }
    };
});
System.register("https://deno.land/x/case@v2.1.0/vendor/camelCaseRegexp", [], function (exports_291, context_291) {
    "use strict";
    var camelCaseRegexp;
    var __moduleName = context_291 && context_291.id;
    return {
        setters: [],
        execute: function () {
            camelCaseRegexp = /([a-z\xB5\xDF-\xF6\xF8-\xFF\u0101\u0103\u0105\u0107\u0109\u010B\u010D\u010F\u0111\u0113\u0115\u0117\u0119\u011B\u011D\u011F\u0121\u0123\u0125\u0127\u0129\u012B\u012D\u012F\u0131\u0133\u0135\u0137\u0138\u013A\u013C\u013E\u0140\u0142\u0144\u0146\u0148\u0149\u014B\u014D\u014F\u0151\u0153\u0155\u0157\u0159\u015B\u015D\u015F\u0161\u0163\u0165\u0167\u0169\u016B\u016D\u016F\u0171\u0173\u0175\u0177\u017A\u017C\u017E-\u0180\u0183\u0185\u0188\u018C\u018D\u0192\u0195\u0199-\u019B\u019E\u01A1\u01A3\u01A5\u01A8\u01AA\u01AB\u01AD\u01B0\u01B4\u01B6\u01B9\u01BA\u01BD-\u01BF\u01C6\u01C9\u01CC\u01CE\u01D0\u01D2\u01D4\u01D6\u01D8\u01DA\u01DC\u01DD\u01DF\u01E1\u01E3\u01E5\u01E7\u01E9\u01EB\u01ED\u01EF\u01F0\u01F3\u01F5\u01F9\u01FB\u01FD\u01FF\u0201\u0203\u0205\u0207\u0209\u020B\u020D\u020F\u0211\u0213\u0215\u0217\u0219\u021B\u021D\u021F\u0221\u0223\u0225\u0227\u0229\u022B\u022D\u022F\u0231\u0233-\u0239\u023C\u023F\u0240\u0242\u0247\u0249\u024B\u024D\u024F-\u0293\u0295-\u02AF\u0371\u0373\u0377\u037B-\u037D\u0390\u03AC-\u03CE\u03D0\u03D1\u03D5-\u03D7\u03D9\u03DB\u03DD\u03DF\u03E1\u03E3\u03E5\u03E7\u03E9\u03EB\u03ED\u03EF-\u03F3\u03F5\u03F8\u03FB\u03FC\u0430-\u045F\u0461\u0463\u0465\u0467\u0469\u046B\u046D\u046F\u0471\u0473\u0475\u0477\u0479\u047B\u047D\u047F\u0481\u048B\u048D\u048F\u0491\u0493\u0495\u0497\u0499\u049B\u049D\u049F\u04A1\u04A3\u04A5\u04A7\u04A9\u04AB\u04AD\u04AF\u04B1\u04B3\u04B5\u04B7\u04B9\u04BB\u04BD\u04BF\u04C2\u04C4\u04C6\u04C8\u04CA\u04CC\u04CE\u04CF\u04D1\u04D3\u04D5\u04D7\u04D9\u04DB\u04DD\u04DF\u04E1\u04E3\u04E5\u04E7\u04E9\u04EB\u04ED\u04EF\u04F1\u04F3\u04F5\u04F7\u04F9\u04FB\u04FD\u04FF\u0501\u0503\u0505\u0507\u0509\u050B\u050D\u050F\u0511\u0513\u0515\u0517\u0519\u051B\u051D\u051F\u0521\u0523\u0525\u0527\u0529\u052B\u052D\u052F\u0561-\u0587\u13F8-\u13FD\u1D00-\u1D2B\u1D6B-\u1D77\u1D79-\u1D9A\u1E01\u1E03\u1E05\u1E07\u1E09\u1E0B\u1E0D\u1E0F\u1E11\u1E13\u1E15\u1E17\u1E19\u1E1B\u1E1D\u1E1F\u1E21\u1E23\u1E25\u1E27\u1E29\u1E2B\u1E2D\u1E2F\u1E31\u1E33\u1E35\u1E37\u1E39\u1E3B\u1E3D\u1E3F\u1E41\u1E43\u1E45\u1E47\u1E49\u1E4B\u1E4D\u1E4F\u1E51\u1E53\u1E55\u1E57\u1E59\u1E5B\u1E5D\u1E5F\u1E61\u1E63\u1E65\u1E67\u1E69\u1E6B\u1E6D\u1E6F\u1E71\u1E73\u1E75\u1E77\u1E79\u1E7B\u1E7D\u1E7F\u1E81\u1E83\u1E85\u1E87\u1E89\u1E8B\u1E8D\u1E8F\u1E91\u1E93\u1E95-\u1E9D\u1E9F\u1EA1\u1EA3\u1EA5\u1EA7\u1EA9\u1EAB\u1EAD\u1EAF\u1EB1\u1EB3\u1EB5\u1EB7\u1EB9\u1EBB\u1EBD\u1EBF\u1EC1\u1EC3\u1EC5\u1EC7\u1EC9\u1ECB\u1ECD\u1ECF\u1ED1\u1ED3\u1ED5\u1ED7\u1ED9\u1EDB\u1EDD\u1EDF\u1EE1\u1EE3\u1EE5\u1EE7\u1EE9\u1EEB\u1EED\u1EEF\u1EF1\u1EF3\u1EF5\u1EF7\u1EF9\u1EFB\u1EFD\u1EFF-\u1F07\u1F10-\u1F15\u1F20-\u1F27\u1F30-\u1F37\u1F40-\u1F45\u1F50-\u1F57\u1F60-\u1F67\u1F70-\u1F7D\u1F80-\u1F87\u1F90-\u1F97\u1FA0-\u1FA7\u1FB0-\u1FB4\u1FB6\u1FB7\u1FBE\u1FC2-\u1FC4\u1FC6\u1FC7\u1FD0-\u1FD3\u1FD6\u1FD7\u1FE0-\u1FE7\u1FF2-\u1FF4\u1FF6\u1FF7\u210A\u210E\u210F\u2113\u212F\u2134\u2139\u213C\u213D\u2146-\u2149\u214E\u2184\u2C30-\u2C5E\u2C61\u2C65\u2C66\u2C68\u2C6A\u2C6C\u2C71\u2C73\u2C74\u2C76-\u2C7B\u2C81\u2C83\u2C85\u2C87\u2C89\u2C8B\u2C8D\u2C8F\u2C91\u2C93\u2C95\u2C97\u2C99\u2C9B\u2C9D\u2C9F\u2CA1\u2CA3\u2CA5\u2CA7\u2CA9\u2CAB\u2CAD\u2CAF\u2CB1\u2CB3\u2CB5\u2CB7\u2CB9\u2CBB\u2CBD\u2CBF\u2CC1\u2CC3\u2CC5\u2CC7\u2CC9\u2CCB\u2CCD\u2CCF\u2CD1\u2CD3\u2CD5\u2CD7\u2CD9\u2CDB\u2CDD\u2CDF\u2CE1\u2CE3\u2CE4\u2CEC\u2CEE\u2CF3\u2D00-\u2D25\u2D27\u2D2D\uA641\uA643\uA645\uA647\uA649\uA64B\uA64D\uA64F\uA651\uA653\uA655\uA657\uA659\uA65B\uA65D\uA65F\uA661\uA663\uA665\uA667\uA669\uA66B\uA66D\uA681\uA683\uA685\uA687\uA689\uA68B\uA68D\uA68F\uA691\uA693\uA695\uA697\uA699\uA69B\uA723\uA725\uA727\uA729\uA72B\uA72D\uA72F-\uA731\uA733\uA735\uA737\uA739\uA73B\uA73D\uA73F\uA741\uA743\uA745\uA747\uA749\uA74B\uA74D\uA74F\uA751\uA753\uA755\uA757\uA759\uA75B\uA75D\uA75F\uA761\uA763\uA765\uA767\uA769\uA76B\uA76D\uA76F\uA771-\uA778\uA77A\uA77C\uA77F\uA781\uA783\uA785\uA787\uA78C\uA78E\uA791\uA793-\uA795\uA797\uA799\uA79B\uA79D\uA79F\uA7A1\uA7A3\uA7A5\uA7A7\uA7A9\uA7B5\uA7B7\uA7FA\uAB30-\uAB5A\uAB60-\uAB65\uAB70-\uABBF\uFB00-\uFB06\uFB13-\uFB17\uFF41-\uFF5A0-9\xB2\xB3\xB9\xBC-\xBE\u0660-\u0669\u06F0-\u06F9\u07C0-\u07C9\u0966-\u096F\u09E6-\u09EF\u09F4-\u09F9\u0A66-\u0A6F\u0AE6-\u0AEF\u0B66-\u0B6F\u0B72-\u0B77\u0BE6-\u0BF2\u0C66-\u0C6F\u0C78-\u0C7E\u0CE6-\u0CEF\u0D66-\u0D75\u0DE6-\u0DEF\u0E50-\u0E59\u0ED0-\u0ED9\u0F20-\u0F33\u1040-\u1049\u1090-\u1099\u1369-\u137C\u16EE-\u16F0\u17E0-\u17E9\u17F0-\u17F9\u1810-\u1819\u1946-\u194F\u19D0-\u19DA\u1A80-\u1A89\u1A90-\u1A99\u1B50-\u1B59\u1BB0-\u1BB9\u1C40-\u1C49\u1C50-\u1C59\u2070\u2074-\u2079\u2080-\u2089\u2150-\u2182\u2185-\u2189\u2460-\u249B\u24EA-\u24FF\u2776-\u2793\u2CFD\u3007\u3021-\u3029\u3038-\u303A\u3192-\u3195\u3220-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\uA620-\uA629\uA6E6-\uA6EF\uA830-\uA835\uA8D0-\uA8D9\uA900-\uA909\uA9D0-\uA9D9\uA9F0-\uA9F9\uAA50-\uAA59\uABF0-\uABF9\uFF10-\uFF19])([A-Z\xC0-\xD6\xD8-\xDE\u0100\u0102\u0104\u0106\u0108\u010A\u010C\u010E\u0110\u0112\u0114\u0116\u0118\u011A\u011C\u011E\u0120\u0122\u0124\u0126\u0128\u012A\u012C\u012E\u0130\u0132\u0134\u0136\u0139\u013B\u013D\u013F\u0141\u0143\u0145\u0147\u014A\u014C\u014E\u0150\u0152\u0154\u0156\u0158\u015A\u015C\u015E\u0160\u0162\u0164\u0166\u0168\u016A\u016C\u016E\u0170\u0172\u0174\u0176\u0178\u0179\u017B\u017D\u0181\u0182\u0184\u0186\u0187\u0189-\u018B\u018E-\u0191\u0193\u0194\u0196-\u0198\u019C\u019D\u019F\u01A0\u01A2\u01A4\u01A6\u01A7\u01A9\u01AC\u01AE\u01AF\u01B1-\u01B3\u01B5\u01B7\u01B8\u01BC\u01C4\u01C7\u01CA\u01CD\u01CF\u01D1\u01D3\u01D5\u01D7\u01D9\u01DB\u01DE\u01E0\u01E2\u01E4\u01E6\u01E8\u01EA\u01EC\u01EE\u01F1\u01F4\u01F6-\u01F8\u01FA\u01FC\u01FE\u0200\u0202\u0204\u0206\u0208\u020A\u020C\u020E\u0210\u0212\u0214\u0216\u0218\u021A\u021C\u021E\u0220\u0222\u0224\u0226\u0228\u022A\u022C\u022E\u0230\u0232\u023A\u023B\u023D\u023E\u0241\u0243-\u0246\u0248\u024A\u024C\u024E\u0370\u0372\u0376\u037F\u0386\u0388-\u038A\u038C\u038E\u038F\u0391-\u03A1\u03A3-\u03AB\u03CF\u03D2-\u03D4\u03D8\u03DA\u03DC\u03DE\u03E0\u03E2\u03E4\u03E6\u03E8\u03EA\u03EC\u03EE\u03F4\u03F7\u03F9\u03FA\u03FD-\u042F\u0460\u0462\u0464\u0466\u0468\u046A\u046C\u046E\u0470\u0472\u0474\u0476\u0478\u047A\u047C\u047E\u0480\u048A\u048C\u048E\u0490\u0492\u0494\u0496\u0498\u049A\u049C\u049E\u04A0\u04A2\u04A4\u04A6\u04A8\u04AA\u04AC\u04AE\u04B0\u04B2\u04B4\u04B6\u04B8\u04BA\u04BC\u04BE\u04C0\u04C1\u04C3\u04C5\u04C7\u04C9\u04CB\u04CD\u04D0\u04D2\u04D4\u04D6\u04D8\u04DA\u04DC\u04DE\u04E0\u04E2\u04E4\u04E6\u04E8\u04EA\u04EC\u04EE\u04F0\u04F2\u04F4\u04F6\u04F8\u04FA\u04FC\u04FE\u0500\u0502\u0504\u0506\u0508\u050A\u050C\u050E\u0510\u0512\u0514\u0516\u0518\u051A\u051C\u051E\u0520\u0522\u0524\u0526\u0528\u052A\u052C\u052E\u0531-\u0556\u10A0-\u10C5\u10C7\u10CD\u13A0-\u13F5\u1E00\u1E02\u1E04\u1E06\u1E08\u1E0A\u1E0C\u1E0E\u1E10\u1E12\u1E14\u1E16\u1E18\u1E1A\u1E1C\u1E1E\u1E20\u1E22\u1E24\u1E26\u1E28\u1E2A\u1E2C\u1E2E\u1E30\u1E32\u1E34\u1E36\u1E38\u1E3A\u1E3C\u1E3E\u1E40\u1E42\u1E44\u1E46\u1E48\u1E4A\u1E4C\u1E4E\u1E50\u1E52\u1E54\u1E56\u1E58\u1E5A\u1E5C\u1E5E\u1E60\u1E62\u1E64\u1E66\u1E68\u1E6A\u1E6C\u1E6E\u1E70\u1E72\u1E74\u1E76\u1E78\u1E7A\u1E7C\u1E7E\u1E80\u1E82\u1E84\u1E86\u1E88\u1E8A\u1E8C\u1E8E\u1E90\u1E92\u1E94\u1E9E\u1EA0\u1EA2\u1EA4\u1EA6\u1EA8\u1EAA\u1EAC\u1EAE\u1EB0\u1EB2\u1EB4\u1EB6\u1EB8\u1EBA\u1EBC\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1EC8\u1ECA\u1ECC\u1ECE\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EDA\u1EDC\u1EDE\u1EE0\u1EE2\u1EE4\u1EE6\u1EE8\u1EEA\u1EEC\u1EEE\u1EF0\u1EF2\u1EF4\u1EF6\u1EF8\u1EFA\u1EFC\u1EFE\u1F08-\u1F0F\u1F18-\u1F1D\u1F28-\u1F2F\u1F38-\u1F3F\u1F48-\u1F4D\u1F59\u1F5B\u1F5D\u1F5F\u1F68-\u1F6F\u1FB8-\u1FBB\u1FC8-\u1FCB\u1FD8-\u1FDB\u1FE8-\u1FEC\u1FF8-\u1FFB\u2102\u2107\u210B-\u210D\u2110-\u2112\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u2130-\u2133\u213E\u213F\u2145\u2183\u2C00-\u2C2E\u2C60\u2C62-\u2C64\u2C67\u2C69\u2C6B\u2C6D-\u2C70\u2C72\u2C75\u2C7E-\u2C80\u2C82\u2C84\u2C86\u2C88\u2C8A\u2C8C\u2C8E\u2C90\u2C92\u2C94\u2C96\u2C98\u2C9A\u2C9C\u2C9E\u2CA0\u2CA2\u2CA4\u2CA6\u2CA8\u2CAA\u2CAC\u2CAE\u2CB0\u2CB2\u2CB4\u2CB6\u2CB8\u2CBA\u2CBC\u2CBE\u2CC0\u2CC2\u2CC4\u2CC6\u2CC8\u2CCA\u2CCC\u2CCE\u2CD0\u2CD2\u2CD4\u2CD6\u2CD8\u2CDA\u2CDC\u2CDE\u2CE0\u2CE2\u2CEB\u2CED\u2CF2\uA640\uA642\uA644\uA646\uA648\uA64A\uA64C\uA64E\uA650\uA652\uA654\uA656\uA658\uA65A\uA65C\uA65E\uA660\uA662\uA664\uA666\uA668\uA66A\uA66C\uA680\uA682\uA684\uA686\uA688\uA68A\uA68C\uA68E\uA690\uA692\uA694\uA696\uA698\uA69A\uA722\uA724\uA726\uA728\uA72A\uA72C\uA72E\uA732\uA734\uA736\uA738\uA73A\uA73C\uA73E\uA740\uA742\uA744\uA746\uA748\uA74A\uA74C\uA74E\uA750\uA752\uA754\uA756\uA758\uA75A\uA75C\uA75E\uA760\uA762\uA764\uA766\uA768\uA76A\uA76C\uA76E\uA779\uA77B\uA77D\uA77E\uA780\uA782\uA784\uA786\uA78B\uA78D\uA790\uA792\uA796\uA798\uA79A\uA79C\uA79E\uA7A0\uA7A2\uA7A4\uA7A6\uA7A8\uA7AA-\uA7AD\uA7B0-\uA7B4\uA7B6\uFF21-\uFF3A])/g;
            exports_291("default", camelCaseRegexp);
        }
    };
});
System.register("https://deno.land/x/case@v2.1.0/vendor/camelCaseUpperRegexp", [], function (exports_292, context_292) {
    "use strict";
    var camelCaseUpperRegexp;
    var __moduleName = context_292 && context_292.id;
    return {
        setters: [],
        execute: function () {
            camelCaseUpperRegexp = /([A-Z\xC0-\xD6\xD8-\xDE\u0100\u0102\u0104\u0106\u0108\u010A\u010C\u010E\u0110\u0112\u0114\u0116\u0118\u011A\u011C\u011E\u0120\u0122\u0124\u0126\u0128\u012A\u012C\u012E\u0130\u0132\u0134\u0136\u0139\u013B\u013D\u013F\u0141\u0143\u0145\u0147\u014A\u014C\u014E\u0150\u0152\u0154\u0156\u0158\u015A\u015C\u015E\u0160\u0162\u0164\u0166\u0168\u016A\u016C\u016E\u0170\u0172\u0174\u0176\u0178\u0179\u017B\u017D\u0181\u0182\u0184\u0186\u0187\u0189-\u018B\u018E-\u0191\u0193\u0194\u0196-\u0198\u019C\u019D\u019F\u01A0\u01A2\u01A4\u01A6\u01A7\u01A9\u01AC\u01AE\u01AF\u01B1-\u01B3\u01B5\u01B7\u01B8\u01BC\u01C4\u01C7\u01CA\u01CD\u01CF\u01D1\u01D3\u01D5\u01D7\u01D9\u01DB\u01DE\u01E0\u01E2\u01E4\u01E6\u01E8\u01EA\u01EC\u01EE\u01F1\u01F4\u01F6-\u01F8\u01FA\u01FC\u01FE\u0200\u0202\u0204\u0206\u0208\u020A\u020C\u020E\u0210\u0212\u0214\u0216\u0218\u021A\u021C\u021E\u0220\u0222\u0224\u0226\u0228\u022A\u022C\u022E\u0230\u0232\u023A\u023B\u023D\u023E\u0241\u0243-\u0246\u0248\u024A\u024C\u024E\u0370\u0372\u0376\u037F\u0386\u0388-\u038A\u038C\u038E\u038F\u0391-\u03A1\u03A3-\u03AB\u03CF\u03D2-\u03D4\u03D8\u03DA\u03DC\u03DE\u03E0\u03E2\u03E4\u03E6\u03E8\u03EA\u03EC\u03EE\u03F4\u03F7\u03F9\u03FA\u03FD-\u042F\u0460\u0462\u0464\u0466\u0468\u046A\u046C\u046E\u0470\u0472\u0474\u0476\u0478\u047A\u047C\u047E\u0480\u048A\u048C\u048E\u0490\u0492\u0494\u0496\u0498\u049A\u049C\u049E\u04A0\u04A2\u04A4\u04A6\u04A8\u04AA\u04AC\u04AE\u04B0\u04B2\u04B4\u04B6\u04B8\u04BA\u04BC\u04BE\u04C0\u04C1\u04C3\u04C5\u04C7\u04C9\u04CB\u04CD\u04D0\u04D2\u04D4\u04D6\u04D8\u04DA\u04DC\u04DE\u04E0\u04E2\u04E4\u04E6\u04E8\u04EA\u04EC\u04EE\u04F0\u04F2\u04F4\u04F6\u04F8\u04FA\u04FC\u04FE\u0500\u0502\u0504\u0506\u0508\u050A\u050C\u050E\u0510\u0512\u0514\u0516\u0518\u051A\u051C\u051E\u0520\u0522\u0524\u0526\u0528\u052A\u052C\u052E\u0531-\u0556\u10A0-\u10C5\u10C7\u10CD\u13A0-\u13F5\u1E00\u1E02\u1E04\u1E06\u1E08\u1E0A\u1E0C\u1E0E\u1E10\u1E12\u1E14\u1E16\u1E18\u1E1A\u1E1C\u1E1E\u1E20\u1E22\u1E24\u1E26\u1E28\u1E2A\u1E2C\u1E2E\u1E30\u1E32\u1E34\u1E36\u1E38\u1E3A\u1E3C\u1E3E\u1E40\u1E42\u1E44\u1E46\u1E48\u1E4A\u1E4C\u1E4E\u1E50\u1E52\u1E54\u1E56\u1E58\u1E5A\u1E5C\u1E5E\u1E60\u1E62\u1E64\u1E66\u1E68\u1E6A\u1E6C\u1E6E\u1E70\u1E72\u1E74\u1E76\u1E78\u1E7A\u1E7C\u1E7E\u1E80\u1E82\u1E84\u1E86\u1E88\u1E8A\u1E8C\u1E8E\u1E90\u1E92\u1E94\u1E9E\u1EA0\u1EA2\u1EA4\u1EA6\u1EA8\u1EAA\u1EAC\u1EAE\u1EB0\u1EB2\u1EB4\u1EB6\u1EB8\u1EBA\u1EBC\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1EC8\u1ECA\u1ECC\u1ECE\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EDA\u1EDC\u1EDE\u1EE0\u1EE2\u1EE4\u1EE6\u1EE8\u1EEA\u1EEC\u1EEE\u1EF0\u1EF2\u1EF4\u1EF6\u1EF8\u1EFA\u1EFC\u1EFE\u1F08-\u1F0F\u1F18-\u1F1D\u1F28-\u1F2F\u1F38-\u1F3F\u1F48-\u1F4D\u1F59\u1F5B\u1F5D\u1F5F\u1F68-\u1F6F\u1FB8-\u1FBB\u1FC8-\u1FCB\u1FD8-\u1FDB\u1FE8-\u1FEC\u1FF8-\u1FFB\u2102\u2107\u210B-\u210D\u2110-\u2112\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u2130-\u2133\u213E\u213F\u2145\u2183\u2C00-\u2C2E\u2C60\u2C62-\u2C64\u2C67\u2C69\u2C6B\u2C6D-\u2C70\u2C72\u2C75\u2C7E-\u2C80\u2C82\u2C84\u2C86\u2C88\u2C8A\u2C8C\u2C8E\u2C90\u2C92\u2C94\u2C96\u2C98\u2C9A\u2C9C\u2C9E\u2CA0\u2CA2\u2CA4\u2CA6\u2CA8\u2CAA\u2CAC\u2CAE\u2CB0\u2CB2\u2CB4\u2CB6\u2CB8\u2CBA\u2CBC\u2CBE\u2CC0\u2CC2\u2CC4\u2CC6\u2CC8\u2CCA\u2CCC\u2CCE\u2CD0\u2CD2\u2CD4\u2CD6\u2CD8\u2CDA\u2CDC\u2CDE\u2CE0\u2CE2\u2CEB\u2CED\u2CF2\uA640\uA642\uA644\uA646\uA648\uA64A\uA64C\uA64E\uA650\uA652\uA654\uA656\uA658\uA65A\uA65C\uA65E\uA660\uA662\uA664\uA666\uA668\uA66A\uA66C\uA680\uA682\uA684\uA686\uA688\uA68A\uA68C\uA68E\uA690\uA692\uA694\uA696\uA698\uA69A\uA722\uA724\uA726\uA728\uA72A\uA72C\uA72E\uA732\uA734\uA736\uA738\uA73A\uA73C\uA73E\uA740\uA742\uA744\uA746\uA748\uA74A\uA74C\uA74E\uA750\uA752\uA754\uA756\uA758\uA75A\uA75C\uA75E\uA760\uA762\uA764\uA766\uA768\uA76A\uA76C\uA76E\uA779\uA77B\uA77D\uA77E\uA780\uA782\uA784\uA786\uA78B\uA78D\uA790\uA792\uA796\uA798\uA79A\uA79C\uA79E\uA7A0\uA7A2\uA7A4\uA7A6\uA7A8\uA7AA-\uA7AD\uA7B0-\uA7B4\uA7B6\uFF21-\uFF3A])([A-Z\xC0-\xD6\xD8-\xDE\u0100\u0102\u0104\u0106\u0108\u010A\u010C\u010E\u0110\u0112\u0114\u0116\u0118\u011A\u011C\u011E\u0120\u0122\u0124\u0126\u0128\u012A\u012C\u012E\u0130\u0132\u0134\u0136\u0139\u013B\u013D\u013F\u0141\u0143\u0145\u0147\u014A\u014C\u014E\u0150\u0152\u0154\u0156\u0158\u015A\u015C\u015E\u0160\u0162\u0164\u0166\u0168\u016A\u016C\u016E\u0170\u0172\u0174\u0176\u0178\u0179\u017B\u017D\u0181\u0182\u0184\u0186\u0187\u0189-\u018B\u018E-\u0191\u0193\u0194\u0196-\u0198\u019C\u019D\u019F\u01A0\u01A2\u01A4\u01A6\u01A7\u01A9\u01AC\u01AE\u01AF\u01B1-\u01B3\u01B5\u01B7\u01B8\u01BC\u01C4\u01C7\u01CA\u01CD\u01CF\u01D1\u01D3\u01D5\u01D7\u01D9\u01DB\u01DE\u01E0\u01E2\u01E4\u01E6\u01E8\u01EA\u01EC\u01EE\u01F1\u01F4\u01F6-\u01F8\u01FA\u01FC\u01FE\u0200\u0202\u0204\u0206\u0208\u020A\u020C\u020E\u0210\u0212\u0214\u0216\u0218\u021A\u021C\u021E\u0220\u0222\u0224\u0226\u0228\u022A\u022C\u022E\u0230\u0232\u023A\u023B\u023D\u023E\u0241\u0243-\u0246\u0248\u024A\u024C\u024E\u0370\u0372\u0376\u037F\u0386\u0388-\u038A\u038C\u038E\u038F\u0391-\u03A1\u03A3-\u03AB\u03CF\u03D2-\u03D4\u03D8\u03DA\u03DC\u03DE\u03E0\u03E2\u03E4\u03E6\u03E8\u03EA\u03EC\u03EE\u03F4\u03F7\u03F9\u03FA\u03FD-\u042F\u0460\u0462\u0464\u0466\u0468\u046A\u046C\u046E\u0470\u0472\u0474\u0476\u0478\u047A\u047C\u047E\u0480\u048A\u048C\u048E\u0490\u0492\u0494\u0496\u0498\u049A\u049C\u049E\u04A0\u04A2\u04A4\u04A6\u04A8\u04AA\u04AC\u04AE\u04B0\u04B2\u04B4\u04B6\u04B8\u04BA\u04BC\u04BE\u04C0\u04C1\u04C3\u04C5\u04C7\u04C9\u04CB\u04CD\u04D0\u04D2\u04D4\u04D6\u04D8\u04DA\u04DC\u04DE\u04E0\u04E2\u04E4\u04E6\u04E8\u04EA\u04EC\u04EE\u04F0\u04F2\u04F4\u04F6\u04F8\u04FA\u04FC\u04FE\u0500\u0502\u0504\u0506\u0508\u050A\u050C\u050E\u0510\u0512\u0514\u0516\u0518\u051A\u051C\u051E\u0520\u0522\u0524\u0526\u0528\u052A\u052C\u052E\u0531-\u0556\u10A0-\u10C5\u10C7\u10CD\u13A0-\u13F5\u1E00\u1E02\u1E04\u1E06\u1E08\u1E0A\u1E0C\u1E0E\u1E10\u1E12\u1E14\u1E16\u1E18\u1E1A\u1E1C\u1E1E\u1E20\u1E22\u1E24\u1E26\u1E28\u1E2A\u1E2C\u1E2E\u1E30\u1E32\u1E34\u1E36\u1E38\u1E3A\u1E3C\u1E3E\u1E40\u1E42\u1E44\u1E46\u1E48\u1E4A\u1E4C\u1E4E\u1E50\u1E52\u1E54\u1E56\u1E58\u1E5A\u1E5C\u1E5E\u1E60\u1E62\u1E64\u1E66\u1E68\u1E6A\u1E6C\u1E6E\u1E70\u1E72\u1E74\u1E76\u1E78\u1E7A\u1E7C\u1E7E\u1E80\u1E82\u1E84\u1E86\u1E88\u1E8A\u1E8C\u1E8E\u1E90\u1E92\u1E94\u1E9E\u1EA0\u1EA2\u1EA4\u1EA6\u1EA8\u1EAA\u1EAC\u1EAE\u1EB0\u1EB2\u1EB4\u1EB6\u1EB8\u1EBA\u1EBC\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1EC8\u1ECA\u1ECC\u1ECE\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EDA\u1EDC\u1EDE\u1EE0\u1EE2\u1EE4\u1EE6\u1EE8\u1EEA\u1EEC\u1EEE\u1EF0\u1EF2\u1EF4\u1EF6\u1EF8\u1EFA\u1EFC\u1EFE\u1F08-\u1F0F\u1F18-\u1F1D\u1F28-\u1F2F\u1F38-\u1F3F\u1F48-\u1F4D\u1F59\u1F5B\u1F5D\u1F5F\u1F68-\u1F6F\u1FB8-\u1FBB\u1FC8-\u1FCB\u1FD8-\u1FDB\u1FE8-\u1FEC\u1FF8-\u1FFB\u2102\u2107\u210B-\u210D\u2110-\u2112\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u2130-\u2133\u213E\u213F\u2145\u2183\u2C00-\u2C2E\u2C60\u2C62-\u2C64\u2C67\u2C69\u2C6B\u2C6D-\u2C70\u2C72\u2C75\u2C7E-\u2C80\u2C82\u2C84\u2C86\u2C88\u2C8A\u2C8C\u2C8E\u2C90\u2C92\u2C94\u2C96\u2C98\u2C9A\u2C9C\u2C9E\u2CA0\u2CA2\u2CA4\u2CA6\u2CA8\u2CAA\u2CAC\u2CAE\u2CB0\u2CB2\u2CB4\u2CB6\u2CB8\u2CBA\u2CBC\u2CBE\u2CC0\u2CC2\u2CC4\u2CC6\u2CC8\u2CCA\u2CCC\u2CCE\u2CD0\u2CD2\u2CD4\u2CD6\u2CD8\u2CDA\u2CDC\u2CDE\u2CE0\u2CE2\u2CEB\u2CED\u2CF2\uA640\uA642\uA644\uA646\uA648\uA64A\uA64C\uA64E\uA650\uA652\uA654\uA656\uA658\uA65A\uA65C\uA65E\uA660\uA662\uA664\uA666\uA668\uA66A\uA66C\uA680\uA682\uA684\uA686\uA688\uA68A\uA68C\uA68E\uA690\uA692\uA694\uA696\uA698\uA69A\uA722\uA724\uA726\uA728\uA72A\uA72C\uA72E\uA732\uA734\uA736\uA738\uA73A\uA73C\uA73E\uA740\uA742\uA744\uA746\uA748\uA74A\uA74C\uA74E\uA750\uA752\uA754\uA756\uA758\uA75A\uA75C\uA75E\uA760\uA762\uA764\uA766\uA768\uA76A\uA76C\uA76E\uA779\uA77B\uA77D\uA77E\uA780\uA782\uA784\uA786\uA78B\uA78D\uA790\uA792\uA796\uA798\uA79A\uA79C\uA79E\uA7A0\uA7A2\uA7A4\uA7A6\uA7A8\uA7AA-\uA7AD\uA7B0-\uA7B4\uA7B6\uFF21-\uFF3A][a-z\xB5\xDF-\xF6\xF8-\xFF\u0101\u0103\u0105\u0107\u0109\u010B\u010D\u010F\u0111\u0113\u0115\u0117\u0119\u011B\u011D\u011F\u0121\u0123\u0125\u0127\u0129\u012B\u012D\u012F\u0131\u0133\u0135\u0137\u0138\u013A\u013C\u013E\u0140\u0142\u0144\u0146\u0148\u0149\u014B\u014D\u014F\u0151\u0153\u0155\u0157\u0159\u015B\u015D\u015F\u0161\u0163\u0165\u0167\u0169\u016B\u016D\u016F\u0171\u0173\u0175\u0177\u017A\u017C\u017E-\u0180\u0183\u0185\u0188\u018C\u018D\u0192\u0195\u0199-\u019B\u019E\u01A1\u01A3\u01A5\u01A8\u01AA\u01AB\u01AD\u01B0\u01B4\u01B6\u01B9\u01BA\u01BD-\u01BF\u01C6\u01C9\u01CC\u01CE\u01D0\u01D2\u01D4\u01D6\u01D8\u01DA\u01DC\u01DD\u01DF\u01E1\u01E3\u01E5\u01E7\u01E9\u01EB\u01ED\u01EF\u01F0\u01F3\u01F5\u01F9\u01FB\u01FD\u01FF\u0201\u0203\u0205\u0207\u0209\u020B\u020D\u020F\u0211\u0213\u0215\u0217\u0219\u021B\u021D\u021F\u0221\u0223\u0225\u0227\u0229\u022B\u022D\u022F\u0231\u0233-\u0239\u023C\u023F\u0240\u0242\u0247\u0249\u024B\u024D\u024F-\u0293\u0295-\u02AF\u0371\u0373\u0377\u037B-\u037D\u0390\u03AC-\u03CE\u03D0\u03D1\u03D5-\u03D7\u03D9\u03DB\u03DD\u03DF\u03E1\u03E3\u03E5\u03E7\u03E9\u03EB\u03ED\u03EF-\u03F3\u03F5\u03F8\u03FB\u03FC\u0430-\u045F\u0461\u0463\u0465\u0467\u0469\u046B\u046D\u046F\u0471\u0473\u0475\u0477\u0479\u047B\u047D\u047F\u0481\u048B\u048D\u048F\u0491\u0493\u0495\u0497\u0499\u049B\u049D\u049F\u04A1\u04A3\u04A5\u04A7\u04A9\u04AB\u04AD\u04AF\u04B1\u04B3\u04B5\u04B7\u04B9\u04BB\u04BD\u04BF\u04C2\u04C4\u04C6\u04C8\u04CA\u04CC\u04CE\u04CF\u04D1\u04D3\u04D5\u04D7\u04D9\u04DB\u04DD\u04DF\u04E1\u04E3\u04E5\u04E7\u04E9\u04EB\u04ED\u04EF\u04F1\u04F3\u04F5\u04F7\u04F9\u04FB\u04FD\u04FF\u0501\u0503\u0505\u0507\u0509\u050B\u050D\u050F\u0511\u0513\u0515\u0517\u0519\u051B\u051D\u051F\u0521\u0523\u0525\u0527\u0529\u052B\u052D\u052F\u0561-\u0587\u13F8-\u13FD\u1D00-\u1D2B\u1D6B-\u1D77\u1D79-\u1D9A\u1E01\u1E03\u1E05\u1E07\u1E09\u1E0B\u1E0D\u1E0F\u1E11\u1E13\u1E15\u1E17\u1E19\u1E1B\u1E1D\u1E1F\u1E21\u1E23\u1E25\u1E27\u1E29\u1E2B\u1E2D\u1E2F\u1E31\u1E33\u1E35\u1E37\u1E39\u1E3B\u1E3D\u1E3F\u1E41\u1E43\u1E45\u1E47\u1E49\u1E4B\u1E4D\u1E4F\u1E51\u1E53\u1E55\u1E57\u1E59\u1E5B\u1E5D\u1E5F\u1E61\u1E63\u1E65\u1E67\u1E69\u1E6B\u1E6D\u1E6F\u1E71\u1E73\u1E75\u1E77\u1E79\u1E7B\u1E7D\u1E7F\u1E81\u1E83\u1E85\u1E87\u1E89\u1E8B\u1E8D\u1E8F\u1E91\u1E93\u1E95-\u1E9D\u1E9F\u1EA1\u1EA3\u1EA5\u1EA7\u1EA9\u1EAB\u1EAD\u1EAF\u1EB1\u1EB3\u1EB5\u1EB7\u1EB9\u1EBB\u1EBD\u1EBF\u1EC1\u1EC3\u1EC5\u1EC7\u1EC9\u1ECB\u1ECD\u1ECF\u1ED1\u1ED3\u1ED5\u1ED7\u1ED9\u1EDB\u1EDD\u1EDF\u1EE1\u1EE3\u1EE5\u1EE7\u1EE9\u1EEB\u1EED\u1EEF\u1EF1\u1EF3\u1EF5\u1EF7\u1EF9\u1EFB\u1EFD\u1EFF-\u1F07\u1F10-\u1F15\u1F20-\u1F27\u1F30-\u1F37\u1F40-\u1F45\u1F50-\u1F57\u1F60-\u1F67\u1F70-\u1F7D\u1F80-\u1F87\u1F90-\u1F97\u1FA0-\u1FA7\u1FB0-\u1FB4\u1FB6\u1FB7\u1FBE\u1FC2-\u1FC4\u1FC6\u1FC7\u1FD0-\u1FD3\u1FD6\u1FD7\u1FE0-\u1FE7\u1FF2-\u1FF4\u1FF6\u1FF7\u210A\u210E\u210F\u2113\u212F\u2134\u2139\u213C\u213D\u2146-\u2149\u214E\u2184\u2C30-\u2C5E\u2C61\u2C65\u2C66\u2C68\u2C6A\u2C6C\u2C71\u2C73\u2C74\u2C76-\u2C7B\u2C81\u2C83\u2C85\u2C87\u2C89\u2C8B\u2C8D\u2C8F\u2C91\u2C93\u2C95\u2C97\u2C99\u2C9B\u2C9D\u2C9F\u2CA1\u2CA3\u2CA5\u2CA7\u2CA9\u2CAB\u2CAD\u2CAF\u2CB1\u2CB3\u2CB5\u2CB7\u2CB9\u2CBB\u2CBD\u2CBF\u2CC1\u2CC3\u2CC5\u2CC7\u2CC9\u2CCB\u2CCD\u2CCF\u2CD1\u2CD3\u2CD5\u2CD7\u2CD9\u2CDB\u2CDD\u2CDF\u2CE1\u2CE3\u2CE4\u2CEC\u2CEE\u2CF3\u2D00-\u2D25\u2D27\u2D2D\uA641\uA643\uA645\uA647\uA649\uA64B\uA64D\uA64F\uA651\uA653\uA655\uA657\uA659\uA65B\uA65D\uA65F\uA661\uA663\uA665\uA667\uA669\uA66B\uA66D\uA681\uA683\uA685\uA687\uA689\uA68B\uA68D\uA68F\uA691\uA693\uA695\uA697\uA699\uA69B\uA723\uA725\uA727\uA729\uA72B\uA72D\uA72F-\uA731\uA733\uA735\uA737\uA739\uA73B\uA73D\uA73F\uA741\uA743\uA745\uA747\uA749\uA74B\uA74D\uA74F\uA751\uA753\uA755\uA757\uA759\uA75B\uA75D\uA75F\uA761\uA763\uA765\uA767\uA769\uA76B\uA76D\uA76F\uA771-\uA778\uA77A\uA77C\uA77F\uA781\uA783\uA785\uA787\uA78C\uA78E\uA791\uA793-\uA795\uA797\uA799\uA79B\uA79D\uA79F\uA7A1\uA7A3\uA7A5\uA7A7\uA7A9\uA7B5\uA7B7\uA7FA\uAB30-\uAB5A\uAB60-\uAB65\uAB70-\uABBF\uFB00-\uFB06\uFB13-\uFB17\uFF41-\uFF5A])/g;
            exports_292("default", camelCaseUpperRegexp);
        }
    };
});
System.register("https://deno.land/x/case@v2.1.0/normalCase", ["https://deno.land/x/case@v2.1.0/lowerCase", "https://deno.land/x/case@v2.1.0/vendor/nonWordRegexp", "https://deno.land/x/case@v2.1.0/vendor/camelCaseRegexp", "https://deno.land/x/case@v2.1.0/vendor/camelCaseUpperRegexp"], function (exports_293, context_293) {
    "use strict";
    var lowerCase_ts_1, nonWordRegexp_ts_1, camelCaseRegexp_ts_1, camelCaseUpperRegexp_ts_1;
    var __moduleName = context_293 && context_293.id;
    function normalCase(str, locale, replacement) {
        if (str == null) {
            return "";
        }
        replacement = typeof replacement !== "string" ? " " : replacement;
        function replace(match, index, value) {
            if (index === 0 || index === value.length - match.length) {
                return "";
            }
            return replacement;
        }
        str = String(str)
            .replace(camelCaseRegexp_ts_1.default, "$1 $2")
            .replace(camelCaseUpperRegexp_ts_1.default, "$1 $2")
            .replace(nonWordRegexp_ts_1.default, replace);
        return lowerCase_ts_1.default(str, locale);
    }
    exports_293("default", normalCase);
    return {
        setters: [
            function (lowerCase_ts_1_1) {
                lowerCase_ts_1 = lowerCase_ts_1_1;
            },
            function (nonWordRegexp_ts_1_1) {
                nonWordRegexp_ts_1 = nonWordRegexp_ts_1_1;
            },
            function (camelCaseRegexp_ts_1_1) {
                camelCaseRegexp_ts_1 = camelCaseRegexp_ts_1_1;
            },
            function (camelCaseUpperRegexp_ts_1_1) {
                camelCaseUpperRegexp_ts_1 = camelCaseUpperRegexp_ts_1_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/case@v2.1.0/camelCase", ["https://deno.land/x/case@v2.1.0/upperCase", "https://deno.land/x/case@v2.1.0/normalCase"], function (exports_294, context_294) {
    "use strict";
    var upperCase_ts_1, normalCase_ts_1;
    var __moduleName = context_294 && context_294.id;
    function camelCase(value, locale, mergeNumbers) {
        let result = normalCase_ts_1.default(value, locale);
        if (!mergeNumbers) {
            result = result.replace(/ (?=\d)/g, "_");
        }
        return result.replace(/ (.)/g, function (m, $1) {
            return upperCase_ts_1.default($1, locale);
        });
    }
    exports_294("default", camelCase);
    return {
        setters: [
            function (upperCase_ts_1_1) {
                upperCase_ts_1 = upperCase_ts_1_1;
            },
            function (normalCase_ts_1_1) {
                normalCase_ts_1 = normalCase_ts_1_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/case@v2.1.0/snakeCase", ["https://deno.land/x/case@v2.1.0/normalCase"], function (exports_295, context_295) {
    "use strict";
    var normalCase_ts_2;
    var __moduleName = context_295 && context_295.id;
    function snakeCase(value, locale) {
        return normalCase_ts_2.default(value, locale, "_");
    }
    exports_295("default", snakeCase);
    return {
        setters: [
            function (normalCase_ts_2_1) {
                normalCase_ts_2 = normalCase_ts_2_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/case@v2.1.0/constantCase", ["https://deno.land/x/case@v2.1.0/upperCase", "https://deno.land/x/case@v2.1.0/snakeCase"], function (exports_296, context_296) {
    "use strict";
    var upperCase_ts_2, snakeCase_ts_1;
    var __moduleName = context_296 && context_296.id;
    function constantCase(value, locale) {
        return upperCase_ts_2.default(snakeCase_ts_1.default(value, locale), locale);
    }
    exports_296("default", constantCase);
    return {
        setters: [
            function (upperCase_ts_2_1) {
                upperCase_ts_2 = upperCase_ts_2_1;
            },
            function (snakeCase_ts_1_1) {
                snakeCase_ts_1 = snakeCase_ts_1_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/case@v2.1.0/dotCase", ["https://deno.land/x/case@v2.1.0/normalCase"], function (exports_297, context_297) {
    "use strict";
    var normalCase_ts_3;
    var __moduleName = context_297 && context_297.id;
    function dotCase(value, locale) {
        return normalCase_ts_3.default(value, locale, ".");
    }
    exports_297("default", dotCase);
    return {
        setters: [
            function (normalCase_ts_3_1) {
                normalCase_ts_3 = normalCase_ts_3_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/case@v2.1.0/headerCase", ["https://deno.land/x/case@v2.1.0/upperCase", "https://deno.land/x/case@v2.1.0/normalCase"], function (exports_298, context_298) {
    "use strict";
    var upperCase_ts_3, normalCase_ts_4;
    var __moduleName = context_298 && context_298.id;
    function headerCase(value, locale) {
        return normalCase_ts_4.default(value, locale, "-").replace(/^.|-./g, function (m) {
            return upperCase_ts_3.default(m, locale);
        });
    }
    exports_298("default", headerCase);
    return {
        setters: [
            function (upperCase_ts_3_1) {
                upperCase_ts_3 = upperCase_ts_3_1;
            },
            function (normalCase_ts_4_1) {
                normalCase_ts_4 = normalCase_ts_4_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/case@v2.1.0/lowerFirstCase", ["https://deno.land/x/case@v2.1.0/lowerCase"], function (exports_299, context_299) {
    "use strict";
    var lowerCase_ts_2;
    var __moduleName = context_299 && context_299.id;
    function default_5(str, locale) {
        if (str == null) {
            return "";
        }
        str = String(str);
        return lowerCase_ts_2.default(str.charAt(0), locale) + str.substr(1);
    }
    exports_299("default", default_5);
    return {
        setters: [
            function (lowerCase_ts_2_1) {
                lowerCase_ts_2 = lowerCase_ts_2_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/case@v2.1.0/paramCase", ["https://deno.land/x/case@v2.1.0/normalCase"], function (exports_300, context_300) {
    "use strict";
    var normalCase_ts_5;
    var __moduleName = context_300 && context_300.id;
    function paramCase(value, locale) {
        return normalCase_ts_5.default(value, locale, "-");
    }
    exports_300("default", paramCase);
    return {
        setters: [
            function (normalCase_ts_5_1) {
                normalCase_ts_5 = normalCase_ts_5_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/case@v2.1.0/upperFirstCase", ["https://deno.land/x/case@v2.1.0/upperCase"], function (exports_301, context_301) {
    "use strict";
    var upperCase_ts_4;
    var __moduleName = context_301 && context_301.id;
    function default_6(str, locale) {
        if (str == null) {
            return "";
        }
        str = String(str);
        return upperCase_ts_4.default(str.charAt(0), locale) + str.substr(1);
    }
    exports_301("default", default_6);
    return {
        setters: [
            function (upperCase_ts_4_1) {
                upperCase_ts_4 = upperCase_ts_4_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/case@v2.1.0/pascalCase", ["https://deno.land/x/case@v2.1.0/camelCase", "https://deno.land/x/case@v2.1.0/upperFirstCase"], function (exports_302, context_302) {
    "use strict";
    var camelCase_ts_1, upperFirstCase_ts_1;
    var __moduleName = context_302 && context_302.id;
    function pascalCase(value, locale, mergeNumbers) {
        return upperFirstCase_ts_1.default(camelCase_ts_1.default(value, locale, mergeNumbers), locale);
    }
    exports_302("default", pascalCase);
    return {
        setters: [
            function (camelCase_ts_1_1) {
                camelCase_ts_1 = camelCase_ts_1_1;
            },
            function (upperFirstCase_ts_1_1) {
                upperFirstCase_ts_1 = upperFirstCase_ts_1_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/case@v2.1.0/pathCase", ["https://deno.land/x/case@v2.1.0/normalCase"], function (exports_303, context_303) {
    "use strict";
    var normalCase_ts_6;
    var __moduleName = context_303 && context_303.id;
    function default_7(value, locale) {
        return normalCase_ts_6.default(value, locale, "/");
    }
    exports_303("default", default_7);
    return {
        setters: [
            function (normalCase_ts_6_1) {
                normalCase_ts_6 = normalCase_ts_6_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/case@v2.1.0/sentenceCase", ["https://deno.land/x/case@v2.1.0/normalCase", "https://deno.land/x/case@v2.1.0/upperFirstCase"], function (exports_304, context_304) {
    "use strict";
    var normalCase_ts_7, upperFirstCase_ts_2;
    var __moduleName = context_304 && context_304.id;
    function sentenceCase(value, locale) {
        return upperFirstCase_ts_2.default(normalCase_ts_7.default(value, locale), locale);
    }
    exports_304("default", sentenceCase);
    return {
        setters: [
            function (normalCase_ts_7_1) {
                normalCase_ts_7 = normalCase_ts_7_1;
            },
            function (upperFirstCase_ts_2_1) {
                upperFirstCase_ts_2 = upperFirstCase_ts_2_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/case@v2.1.0/swapCase", ["https://deno.land/x/case@v2.1.0/upperCase", "https://deno.land/x/case@v2.1.0/lowerCase"], function (exports_305, context_305) {
    "use strict";
    var upperCase_ts_5, lowerCase_ts_3;
    var __moduleName = context_305 && context_305.id;
    function default_8(str, locale) {
        if (str == null) {
            return "";
        }
        let result = "";
        for (let i = 0; i < str.length; i++) {
            const c = str[i];
            const u = upperCase_ts_5.default(c, locale);
            result += u === c ? lowerCase_ts_3.default(c, locale) : u;
        }
        return result;
    }
    exports_305("default", default_8);
    return {
        setters: [
            function (upperCase_ts_5_1) {
                upperCase_ts_5 = upperCase_ts_5_1;
            },
            function (lowerCase_ts_3_1) {
                lowerCase_ts_3 = lowerCase_ts_3_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/case@v2.1.0/titleCase", ["https://deno.land/x/case@v2.1.0/upperCase", "https://deno.land/x/case@v2.1.0/normalCase"], function (exports_306, context_306) {
    "use strict";
    var upperCase_ts_6, normalCase_ts_8;
    var __moduleName = context_306 && context_306.id;
    function titleCase(value, locale) {
        return normalCase_ts_8.default(value, locale).replace(/^.| ./g, function (m) {
            return upperCase_ts_6.default(m, locale);
        });
    }
    exports_306("default", titleCase);
    return {
        setters: [
            function (upperCase_ts_6_1) {
                upperCase_ts_6 = upperCase_ts_6_1;
            },
            function (normalCase_ts_8_1) {
                normalCase_ts_8 = normalCase_ts_8_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/case@v2.1.0/mod", ["https://deno.land/x/case@v2.1.0/camelCase", "https://deno.land/x/case@v2.1.0/constantCase", "https://deno.land/x/case@v2.1.0/dotCase", "https://deno.land/x/case@v2.1.0/headerCase", "https://deno.land/x/case@v2.1.0/lowerCase", "https://deno.land/x/case@v2.1.0/lowerFirstCase", "https://deno.land/x/case@v2.1.0/normalCase", "https://deno.land/x/case@v2.1.0/paramCase", "https://deno.land/x/case@v2.1.0/pascalCase", "https://deno.land/x/case@v2.1.0/pathCase", "https://deno.land/x/case@v2.1.0/sentenceCase", "https://deno.land/x/case@v2.1.0/snakeCase", "https://deno.land/x/case@v2.1.0/swapCase", "https://deno.land/x/case@v2.1.0/titleCase", "https://deno.land/x/case@v2.1.0/upperCase", "https://deno.land/x/case@v2.1.0/upperFirstCase"], function (exports_307, context_307) {
    "use strict";
    var __moduleName = context_307 && context_307.id;
    return {
        setters: [
            function (camelCase_ts_2_1) {
                exports_307({
                    "camelCase": camelCase_ts_2_1["default"]
                });
            },
            function (constantCase_ts_1_1) {
                exports_307({
                    "constantCase": constantCase_ts_1_1["default"]
                });
            },
            function (dotCase_ts_1_1) {
                exports_307({
                    "dotCase": dotCase_ts_1_1["default"]
                });
            },
            function (headerCase_ts_1_1) {
                exports_307({
                    "headerCase": headerCase_ts_1_1["default"]
                });
            },
            function (lowerCase_ts_4_1) {
                exports_307({
                    "lowerCase": lowerCase_ts_4_1["default"]
                });
            },
            function (lowerFirstCase_ts_1_1) {
                exports_307({
                    "lowerFirstCase": lowerFirstCase_ts_1_1["default"]
                });
            },
            function (normalCase_ts_9_1) {
                exports_307({
                    "normalCase": normalCase_ts_9_1["default"]
                });
            },
            function (paramCase_ts_1_1) {
                exports_307({
                    "paramCase": paramCase_ts_1_1["default"]
                });
            },
            function (pascalCase_ts_1_1) {
                exports_307({
                    "pascalCase": pascalCase_ts_1_1["default"]
                });
            },
            function (pathCase_ts_1_1) {
                exports_307({
                    "pathCase": pathCase_ts_1_1["default"]
                });
            },
            function (sentenceCase_ts_1_1) {
                exports_307({
                    "sentenceCase": sentenceCase_ts_1_1["default"]
                });
            },
            function (snakeCase_ts_2_1) {
                exports_307({
                    "snakeCase": snakeCase_ts_2_1["default"]
                });
            },
            function (swapCase_ts_1_1) {
                exports_307({
                    "swapCase": swapCase_ts_1_1["default"]
                });
            },
            function (titleCase_ts_1_1) {
                exports_307({
                    "titleCase": titleCase_ts_1_1["default"]
                });
            },
            function (upperCase_ts_7_1) {
                exports_307({
                    "upperCase": upperCase_ts_7_1["default"]
                });
            },
            function (upperFirstCase_ts_3_1) {
                exports_307({
                    "upperFirstCase": upperFirstCase_ts_3_1["default"]
                });
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/std@0.63.0/bytes/mod", [], function (exports_308, context_308) {
    "use strict";
    var __moduleName = context_308 && context_308.id;
    function findIndex(source, pat) {
        const s = pat[0];
        for (let i = 0; i < source.length; i++) {
            if (source[i] !== s)
                continue;
            const pin = i;
            let matched = 1;
            let j = i;
            while (matched < pat.length) {
                j++;
                if (source[j] !== pat[j - pin]) {
                    break;
                }
                matched++;
            }
            if (matched === pat.length) {
                return pin;
            }
        }
        return -1;
    }
    exports_308("findIndex", findIndex);
    function findLastIndex(source, pat) {
        const e = pat[pat.length - 1];
        for (let i = source.length - 1; i >= 0; i--) {
            if (source[i] !== e)
                continue;
            const pin = i;
            let matched = 1;
            let j = i;
            while (matched < pat.length) {
                j--;
                if (source[j] !== pat[pat.length - 1 - (pin - j)]) {
                    break;
                }
                matched++;
            }
            if (matched === pat.length) {
                return pin - pat.length + 1;
            }
        }
        return -1;
    }
    exports_308("findLastIndex", findLastIndex);
    function equal(source, match) {
        if (source.length !== match.length)
            return false;
        for (let i = 0; i < match.length; i++) {
            if (source[i] !== match[i])
                return false;
        }
        return true;
    }
    exports_308("equal", equal);
    function hasPrefix(source, prefix) {
        for (let i = 0, max = prefix.length; i < max; i++) {
            if (source[i] !== prefix[i])
                return false;
        }
        return true;
    }
    exports_308("hasPrefix", hasPrefix);
    function hasSuffix(source, suffix) {
        for (let srci = source.length - 1, sfxi = suffix.length - 1; sfxi >= 0; srci--, sfxi--) {
            if (source[srci] !== suffix[sfxi])
                return false;
        }
        return true;
    }
    exports_308("hasSuffix", hasSuffix);
    function repeat(origin, count) {
        if (count === 0) {
            return new Uint8Array();
        }
        if (count < 0) {
            throw new Error("bytes: negative repeat count");
        }
        else if ((origin.length * count) / count !== origin.length) {
            throw new Error("bytes: repeat count causes overflow");
        }
        const int = Math.floor(count);
        if (int !== count) {
            throw new Error("bytes: repeat count must be an integer");
        }
        const nb = new Uint8Array(origin.length * count);
        let bp = copyBytes(origin, nb);
        for (; bp < nb.length; bp *= 2) {
            copyBytes(nb.slice(0, bp), nb, bp);
        }
        return nb;
    }
    exports_308("repeat", repeat);
    function concat(origin, b) {
        const output = new Uint8Array(origin.length + b.length);
        output.set(origin, 0);
        output.set(b, origin.length);
        return output;
    }
    exports_308("concat", concat);
    function contains(source, pat) {
        return findIndex(source, pat) != -1;
    }
    exports_308("contains", contains);
    function copyBytes(src, dst, off = 0) {
        off = Math.max(0, Math.min(off, dst.byteLength));
        const dstBytesAvailable = dst.byteLength - off;
        if (src.byteLength > dstBytesAvailable) {
            src = src.subarray(0, dstBytesAvailable);
        }
        dst.set(src, off);
        return src.byteLength;
    }
    exports_308("copyBytes", copyBytes);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/std@0.63.0/_util/assert", [], function (exports_309, context_309) {
    "use strict";
    var DenoStdInternalError;
    var __moduleName = context_309 && context_309.id;
    function assert(expr, msg = "") {
        if (!expr) {
            throw new DenoStdInternalError(msg);
        }
    }
    exports_309("assert", assert);
    return {
        setters: [],
        execute: function () {
            DenoStdInternalError = class DenoStdInternalError extends Error {
                constructor(message) {
                    super(message);
                    this.name = "DenoStdInternalError";
                }
            };
            exports_309("DenoStdInternalError", DenoStdInternalError);
        }
    };
});
System.register("https://deno.land/std@0.63.0/io/bufio", ["https://deno.land/std@0.63.0/bytes/mod", "https://deno.land/std@0.63.0/_util/assert"], function (exports_310, context_310) {
    "use strict";
    var mod_ts_35, assert_ts_8, DEFAULT_BUF_SIZE, MIN_BUF_SIZE, MAX_CONSECUTIVE_EMPTY_READS, CR, LF, BufferFullError, PartialReadError, BufReader, AbstractBufBase, BufWriter, BufWriterSync;
    var __moduleName = context_310 && context_310.id;
    function createLPS(pat) {
        const lps = new Uint8Array(pat.length);
        lps[0] = 0;
        let prefixEnd = 0;
        let i = 1;
        while (i < lps.length) {
            if (pat[i] == pat[prefixEnd]) {
                prefixEnd++;
                lps[i] = prefixEnd;
                i++;
            }
            else if (prefixEnd === 0) {
                lps[i] = 0;
                i++;
            }
            else {
                prefixEnd = pat[prefixEnd - 1];
            }
        }
        return lps;
    }
    async function* readDelim(reader, delim) {
        const delimLen = delim.length;
        const delimLPS = createLPS(delim);
        let inputBuffer = new Deno.Buffer();
        const inspectArr = new Uint8Array(Math.max(1024, delimLen + 1));
        let inspectIndex = 0;
        let matchIndex = 0;
        while (true) {
            const result = await reader.read(inspectArr);
            if (result === null) {
                yield inputBuffer.bytes();
                return;
            }
            if (result < 0) {
                return;
            }
            const sliceRead = inspectArr.subarray(0, result);
            await Deno.writeAll(inputBuffer, sliceRead);
            let sliceToProcess = inputBuffer.bytes();
            while (inspectIndex < sliceToProcess.length) {
                if (sliceToProcess[inspectIndex] === delim[matchIndex]) {
                    inspectIndex++;
                    matchIndex++;
                    if (matchIndex === delimLen) {
                        const matchEnd = inspectIndex - delimLen;
                        const readyBytes = sliceToProcess.subarray(0, matchEnd);
                        const pendingBytes = sliceToProcess.slice(inspectIndex);
                        yield readyBytes;
                        sliceToProcess = pendingBytes;
                        inspectIndex = 0;
                        matchIndex = 0;
                    }
                }
                else {
                    if (matchIndex === 0) {
                        inspectIndex++;
                    }
                    else {
                        matchIndex = delimLPS[matchIndex - 1];
                    }
                }
            }
            inputBuffer = new Deno.Buffer(sliceToProcess);
        }
    }
    exports_310("readDelim", readDelim);
    async function* readStringDelim(reader, delim) {
        const encoder = new TextEncoder();
        const decoder = new TextDecoder();
        for await (const chunk of readDelim(reader, encoder.encode(delim))) {
            yield decoder.decode(chunk);
        }
    }
    exports_310("readStringDelim", readStringDelim);
    async function* readLines(reader) {
        yield* readStringDelim(reader, "\n");
    }
    exports_310("readLines", readLines);
    return {
        setters: [
            function (mod_ts_35_1) {
                mod_ts_35 = mod_ts_35_1;
            },
            function (assert_ts_8_1) {
                assert_ts_8 = assert_ts_8_1;
            }
        ],
        execute: function () {
            DEFAULT_BUF_SIZE = 4096;
            MIN_BUF_SIZE = 16;
            MAX_CONSECUTIVE_EMPTY_READS = 100;
            CR = "\r".charCodeAt(0);
            LF = "\n".charCodeAt(0);
            BufferFullError = class BufferFullError extends Error {
                constructor(partial) {
                    super("Buffer full");
                    this.partial = partial;
                    this.name = "BufferFullError";
                }
            };
            exports_310("BufferFullError", BufferFullError);
            PartialReadError = class PartialReadError extends Deno.errors.UnexpectedEof {
                constructor() {
                    super("Encountered UnexpectedEof, data only partially read");
                    this.name = "PartialReadError";
                }
            };
            exports_310("PartialReadError", PartialReadError);
            BufReader = class BufReader {
                constructor(rd, size = DEFAULT_BUF_SIZE) {
                    this.r = 0;
                    this.w = 0;
                    this.eof = false;
                    if (size < MIN_BUF_SIZE) {
                        size = MIN_BUF_SIZE;
                    }
                    this._reset(new Uint8Array(size), rd);
                }
                static create(r, size = DEFAULT_BUF_SIZE) {
                    return r instanceof BufReader ? r : new BufReader(r, size);
                }
                size() {
                    return this.buf.byteLength;
                }
                buffered() {
                    return this.w - this.r;
                }
                async _fill() {
                    if (this.r > 0) {
                        this.buf.copyWithin(0, this.r, this.w);
                        this.w -= this.r;
                        this.r = 0;
                    }
                    if (this.w >= this.buf.byteLength) {
                        throw Error("bufio: tried to fill full buffer");
                    }
                    for (let i = MAX_CONSECUTIVE_EMPTY_READS; i > 0; i--) {
                        const rr = await this.rd.read(this.buf.subarray(this.w));
                        if (rr === null) {
                            this.eof = true;
                            return;
                        }
                        assert_ts_8.assert(rr >= 0, "negative read");
                        this.w += rr;
                        if (rr > 0) {
                            return;
                        }
                    }
                    throw new Error(`No progress after ${MAX_CONSECUTIVE_EMPTY_READS} read() calls`);
                }
                reset(r) {
                    this._reset(this.buf, r);
                }
                _reset(buf, rd) {
                    this.buf = buf;
                    this.rd = rd;
                    this.eof = false;
                }
                async read(p) {
                    let rr = p.byteLength;
                    if (p.byteLength === 0)
                        return rr;
                    if (this.r === this.w) {
                        if (p.byteLength >= this.buf.byteLength) {
                            const rr = await this.rd.read(p);
                            const nread = rr ?? 0;
                            assert_ts_8.assert(nread >= 0, "negative read");
                            return rr;
                        }
                        this.r = 0;
                        this.w = 0;
                        rr = await this.rd.read(this.buf);
                        if (rr === 0 || rr === null)
                            return rr;
                        assert_ts_8.assert(rr >= 0, "negative read");
                        this.w += rr;
                    }
                    const copied = mod_ts_35.copyBytes(this.buf.subarray(this.r, this.w), p, 0);
                    this.r += copied;
                    return copied;
                }
                async readFull(p) {
                    let bytesRead = 0;
                    while (bytesRead < p.length) {
                        try {
                            const rr = await this.read(p.subarray(bytesRead));
                            if (rr === null) {
                                if (bytesRead === 0) {
                                    return null;
                                }
                                else {
                                    throw new PartialReadError();
                                }
                            }
                            bytesRead += rr;
                        }
                        catch (err) {
                            err.partial = p.subarray(0, bytesRead);
                            throw err;
                        }
                    }
                    return p;
                }
                async readByte() {
                    while (this.r === this.w) {
                        if (this.eof)
                            return null;
                        await this._fill();
                    }
                    const c = this.buf[this.r];
                    this.r++;
                    return c;
                }
                async readString(delim) {
                    if (delim.length !== 1) {
                        throw new Error("Delimiter should be a single character");
                    }
                    const buffer = await this.readSlice(delim.charCodeAt(0));
                    if (buffer === null)
                        return null;
                    return new TextDecoder().decode(buffer);
                }
                async readLine() {
                    let line;
                    try {
                        line = await this.readSlice(LF);
                    }
                    catch (err) {
                        let { partial } = err;
                        assert_ts_8.assert(partial instanceof Uint8Array, "bufio: caught error from `readSlice()` without `partial` property");
                        if (!(err instanceof BufferFullError)) {
                            throw err;
                        }
                        if (!this.eof &&
                            partial.byteLength > 0 &&
                            partial[partial.byteLength - 1] === CR) {
                            assert_ts_8.assert(this.r > 0, "bufio: tried to rewind past start of buffer");
                            this.r--;
                            partial = partial.subarray(0, partial.byteLength - 1);
                        }
                        return { line: partial, more: !this.eof };
                    }
                    if (line === null) {
                        return null;
                    }
                    if (line.byteLength === 0) {
                        return { line, more: false };
                    }
                    if (line[line.byteLength - 1] == LF) {
                        let drop = 1;
                        if (line.byteLength > 1 && line[line.byteLength - 2] === CR) {
                            drop = 2;
                        }
                        line = line.subarray(0, line.byteLength - drop);
                    }
                    return { line, more: false };
                }
                async readSlice(delim) {
                    let s = 0;
                    let slice;
                    while (true) {
                        let i = this.buf.subarray(this.r + s, this.w).indexOf(delim);
                        if (i >= 0) {
                            i += s;
                            slice = this.buf.subarray(this.r, this.r + i + 1);
                            this.r += i + 1;
                            break;
                        }
                        if (this.eof) {
                            if (this.r === this.w) {
                                return null;
                            }
                            slice = this.buf.subarray(this.r, this.w);
                            this.r = this.w;
                            break;
                        }
                        if (this.buffered() >= this.buf.byteLength) {
                            this.r = this.w;
                            const oldbuf = this.buf;
                            const newbuf = this.buf.slice(0);
                            this.buf = newbuf;
                            throw new BufferFullError(oldbuf);
                        }
                        s = this.w - this.r;
                        try {
                            await this._fill();
                        }
                        catch (err) {
                            err.partial = slice;
                            throw err;
                        }
                    }
                    return slice;
                }
                async peek(n) {
                    if (n < 0) {
                        throw Error("negative count");
                    }
                    let avail = this.w - this.r;
                    while (avail < n && avail < this.buf.byteLength && !this.eof) {
                        try {
                            await this._fill();
                        }
                        catch (err) {
                            err.partial = this.buf.subarray(this.r, this.w);
                            throw err;
                        }
                        avail = this.w - this.r;
                    }
                    if (avail === 0 && this.eof) {
                        return null;
                    }
                    else if (avail < n && this.eof) {
                        return this.buf.subarray(this.r, this.r + avail);
                    }
                    else if (avail < n) {
                        throw new BufferFullError(this.buf.subarray(this.r, this.w));
                    }
                    return this.buf.subarray(this.r, this.r + n);
                }
            };
            exports_310("BufReader", BufReader);
            AbstractBufBase = class AbstractBufBase {
                constructor() {
                    this.usedBufferBytes = 0;
                    this.err = null;
                }
                size() {
                    return this.buf.byteLength;
                }
                available() {
                    return this.buf.byteLength - this.usedBufferBytes;
                }
                buffered() {
                    return this.usedBufferBytes;
                }
            };
            BufWriter = class BufWriter extends AbstractBufBase {
                constructor(writer, size = DEFAULT_BUF_SIZE) {
                    super();
                    this.writer = writer;
                    if (size <= 0) {
                        size = DEFAULT_BUF_SIZE;
                    }
                    this.buf = new Uint8Array(size);
                }
                static create(writer, size = DEFAULT_BUF_SIZE) {
                    return writer instanceof BufWriter ? writer : new BufWriter(writer, size);
                }
                reset(w) {
                    this.err = null;
                    this.usedBufferBytes = 0;
                    this.writer = w;
                }
                async flush() {
                    if (this.err !== null)
                        throw this.err;
                    if (this.usedBufferBytes === 0)
                        return;
                    try {
                        await Deno.writeAll(this.writer, this.buf.subarray(0, this.usedBufferBytes));
                    }
                    catch (e) {
                        this.err = e;
                        throw e;
                    }
                    this.buf = new Uint8Array(this.buf.length);
                    this.usedBufferBytes = 0;
                }
                async write(data) {
                    if (this.err !== null)
                        throw this.err;
                    if (data.length === 0)
                        return 0;
                    let totalBytesWritten = 0;
                    let numBytesWritten = 0;
                    while (data.byteLength > this.available()) {
                        if (this.buffered() === 0) {
                            try {
                                numBytesWritten = await this.writer.write(data);
                            }
                            catch (e) {
                                this.err = e;
                                throw e;
                            }
                        }
                        else {
                            numBytesWritten = mod_ts_35.copyBytes(data, this.buf, this.usedBufferBytes);
                            this.usedBufferBytes += numBytesWritten;
                            await this.flush();
                        }
                        totalBytesWritten += numBytesWritten;
                        data = data.subarray(numBytesWritten);
                    }
                    numBytesWritten = mod_ts_35.copyBytes(data, this.buf, this.usedBufferBytes);
                    this.usedBufferBytes += numBytesWritten;
                    totalBytesWritten += numBytesWritten;
                    return totalBytesWritten;
                }
            };
            exports_310("BufWriter", BufWriter);
            BufWriterSync = class BufWriterSync extends AbstractBufBase {
                constructor(writer, size = DEFAULT_BUF_SIZE) {
                    super();
                    this.writer = writer;
                    if (size <= 0) {
                        size = DEFAULT_BUF_SIZE;
                    }
                    this.buf = new Uint8Array(size);
                }
                static create(writer, size = DEFAULT_BUF_SIZE) {
                    return writer instanceof BufWriterSync
                        ? writer
                        : new BufWriterSync(writer, size);
                }
                reset(w) {
                    this.err = null;
                    this.usedBufferBytes = 0;
                    this.writer = w;
                }
                flush() {
                    if (this.err !== null)
                        throw this.err;
                    if (this.usedBufferBytes === 0)
                        return;
                    try {
                        Deno.writeAllSync(this.writer, this.buf.subarray(0, this.usedBufferBytes));
                    }
                    catch (e) {
                        this.err = e;
                        throw e;
                    }
                    this.buf = new Uint8Array(this.buf.length);
                    this.usedBufferBytes = 0;
                }
                writeSync(data) {
                    if (this.err !== null)
                        throw this.err;
                    if (data.length === 0)
                        return 0;
                    let totalBytesWritten = 0;
                    let numBytesWritten = 0;
                    while (data.byteLength > this.available()) {
                        if (this.buffered() === 0) {
                            try {
                                numBytesWritten = this.writer.writeSync(data);
                            }
                            catch (e) {
                                this.err = e;
                                throw e;
                            }
                        }
                        else {
                            numBytesWritten = mod_ts_35.copyBytes(data, this.buf, this.usedBufferBytes);
                            this.usedBufferBytes += numBytesWritten;
                            this.flush();
                        }
                        totalBytesWritten += numBytesWritten;
                        data = data.subarray(numBytesWritten);
                    }
                    numBytesWritten = mod_ts_35.copyBytes(data, this.buf, this.usedBufferBytes);
                    this.usedBufferBytes += numBytesWritten;
                    totalBytesWritten += numBytesWritten;
                    return totalBytesWritten;
                }
            };
            exports_310("BufWriterSync", BufWriterSync);
        }
    };
});
System.register("https://deno.land/std@0.63.0/async/deferred", [], function (exports_311, context_311) {
    "use strict";
    var __moduleName = context_311 && context_311.id;
    function deferred() {
        let methods;
        const promise = new Promise((resolve, reject) => {
            methods = { resolve, reject };
        });
        return Object.assign(promise, methods);
    }
    exports_311("deferred", deferred);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/std@0.63.0/encoding/base64", [], function (exports_312, context_312) {
    "use strict";
    var __moduleName = context_312 && context_312.id;
    function encode(data) {
        if (typeof data === "string") {
            return btoa(data);
        }
        else {
            const d = new Uint8Array(data);
            let dataString = "";
            for (let i = 0; i < d.length; ++i) {
                dataString += String.fromCharCode(d[i]);
            }
            return btoa(dataString);
        }
    }
    exports_312("encode", encode);
    function decode(data) {
        const binaryString = decodeString(data);
        const binary = new Uint8Array(binaryString.length);
        for (let i = 0; i < binary.length; ++i) {
            binary[i] = binaryString.charCodeAt(i);
        }
        return binary.buffer;
    }
    exports_312("decode", decode);
    function decodeString(data) {
        return atob(data);
    }
    exports_312("decodeString", decodeString);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/std@0.63.0/hash/_wasm/wasm", ["https://deno.land/std@0.63.0/encoding/base64"], function (exports_313, context_313) {
    "use strict";
    var base64, source, wasm, cachedTextDecoder, cachegetUint8Memory0, heap, heap_next, WASM_VECTOR_LEN, cachedTextEncoder, encodeString, cachegetInt32Memory0, DenoHash;
    var __moduleName = context_313 && context_313.id;
    function getUint8Memory0() {
        if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {
            cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);
        }
        return cachegetUint8Memory0;
    }
    function getStringFromWasm0(ptr, len) {
        return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));
    }
    function addHeapObject(obj) {
        if (heap_next === heap.length)
            heap.push(heap.length + 1);
        const idx = heap_next;
        heap_next = heap[idx];
        heap[idx] = obj;
        return idx;
    }
    function getObject(idx) { return heap[idx]; }
    function dropObject(idx) {
        if (idx < 36)
            return;
        heap[idx] = heap_next;
        heap_next = idx;
    }
    function takeObject(idx) {
        const ret = getObject(idx);
        dropObject(idx);
        return ret;
    }
    function passStringToWasm0(arg, malloc, realloc) {
        if (realloc === undefined) {
            const buf = cachedTextEncoder.encode(arg);
            const ptr = malloc(buf.length);
            getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);
            WASM_VECTOR_LEN = buf.length;
            return ptr;
        }
        let len = arg.length;
        let ptr = malloc(len);
        const mem = getUint8Memory0();
        let offset = 0;
        for (; offset < len; offset++) {
            const code = arg.charCodeAt(offset);
            if (code > 0x7F)
                break;
            mem[ptr + offset] = code;
        }
        if (offset !== len) {
            if (offset !== 0) {
                arg = arg.slice(offset);
            }
            ptr = realloc(ptr, len, len = offset + arg.length * 3);
            const view = getUint8Memory0().subarray(ptr + offset, ptr + len);
            const ret = encodeString(arg, view);
            offset += ret.written;
        }
        WASM_VECTOR_LEN = offset;
        return ptr;
    }
    function create_hash(algorithm) {
        var ptr0 = passStringToWasm0(algorithm, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);
        var len0 = WASM_VECTOR_LEN;
        var ret = wasm.create_hash(ptr0, len0);
        return DenoHash.__wrap(ret);
    }
    exports_313("create_hash", create_hash);
    function _assertClass(instance, klass) {
        if (!(instance instanceof klass)) {
            throw new Error(`expected instance of ${klass.name}`);
        }
        return instance.ptr;
    }
    function passArray8ToWasm0(arg, malloc) {
        const ptr = malloc(arg.length * 1);
        getUint8Memory0().set(arg, ptr / 1);
        WASM_VECTOR_LEN = arg.length;
        return ptr;
    }
    function update_hash(hash, data) {
        _assertClass(hash, DenoHash);
        var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);
        var len0 = WASM_VECTOR_LEN;
        wasm.update_hash(hash.ptr, ptr0, len0);
    }
    exports_313("update_hash", update_hash);
    function getInt32Memory0() {
        if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {
            cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);
        }
        return cachegetInt32Memory0;
    }
    function getArrayU8FromWasm0(ptr, len) {
        return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);
    }
    function digest_hash(hash) {
        _assertClass(hash, DenoHash);
        wasm.digest_hash(8, hash.ptr);
        var r0 = getInt32Memory0()[8 / 4 + 0];
        var r1 = getInt32Memory0()[8 / 4 + 1];
        var v0 = getArrayU8FromWasm0(r0, r1).slice();
        wasm.__wbindgen_free(r0, r1 * 1);
        return v0;
    }
    exports_313("digest_hash", digest_hash);
    async function load(module, imports) {
        if (typeof Response === 'function' && module instanceof Response) {
            if (typeof WebAssembly.instantiateStreaming === 'function') {
                try {
                    return await WebAssembly.instantiateStreaming(module, imports);
                }
                catch (e) {
                    if (module.headers.get('Content-Type') != 'application/wasm') {
                        console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n", e);
                    }
                    else {
                        throw e;
                    }
                }
            }
            const bytes = await module.arrayBuffer();
            return await WebAssembly.instantiate(bytes, imports);
        }
        else {
            const instance = await WebAssembly.instantiate(module, imports);
            if (instance instanceof WebAssembly.Instance) {
                return { instance, module };
            }
            else {
                return instance;
            }
        }
    }
    async function init(input) {
        if (typeof input === 'undefined') {
            input = context_313.meta.url.replace(/\.js$/, '_bg.wasm');
        }
        const imports = {};
        imports.wbg = {};
        imports.wbg.__wbindgen_string_new = function (arg0, arg1) {
            var ret = getStringFromWasm0(arg0, arg1);
            return addHeapObject(ret);
        };
        imports.wbg.__wbindgen_throw = function (arg0, arg1) {
            throw new Error(getStringFromWasm0(arg0, arg1));
        };
        imports.wbg.__wbindgen_rethrow = function (arg0) {
            throw takeObject(arg0);
        };
        if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {
            input = fetch(input);
        }
        const { instance, module } = await load(await input, imports);
        wasm = instance.exports;
        init.__wbindgen_wasm_module = module;
        return wasm;
    }
    return {
        setters: [
            function (base64_1) {
                base64 = base64_1;
            }
        ],
        execute: function () {
            exports_313("source", source = base64.decode("AGFzbQEAAAABQAtgAn9/AGADf39/AGACf38Bf2ADf39/AX9gAX8AYAF/AX9gAABgBH9/f38Bf2AFf39/f38AYAJ+fwF/YAF/AX4CTQMDd2JnFV9fd2JpbmRnZW5fc3RyaW5nX25ldwACA3diZxBfX3diaW5kZ2VuX3Rocm93AAADd2JnEl9fd2JpbmRnZW5fcmV0aHJvdwAEA6IBoAEAAAAAAAQFAgEAAAAAAAQEAAMAAAAAAgcAAwAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAQJAAEBAQEAAAAAAAEBAQEBAQEBAQAAAAAAAAAAAAAAAAAAAAAAAAAACAQEAQEBAAIABAYDBAEDBAEEBAMFBAQAAQQDBAICAwICAAcGAgQGBgIBAQEBAAIKBQUFBQUFBQAEBAUBcAFtbQUDAQARBgkBfwFBgIDAAAsHhwEIBm1lbW9yeQIAE19fd2JnX2Rlbm9oYXNoX2ZyZWUAdgtjcmVhdGVfaGFzaAAKC3VwZGF0ZV9oYXNoAHcLZGlnZXN0X2hhc2gAchFfX3diaW5kZ2VuX21hbGxvYwB+El9fd2JpbmRnZW5fcmVhbGxvYwCEAQ9fX3diaW5kZ2VuX2ZyZWUAiwEJlwEBAEEBC2yKAaEBjgGJAZIBogFVGzxznAEsUjRbgwGcAUxRM1qDAUtQIliAAZsBQE4eWXmaAThPIVd/P00WIHueAT0VHXygAT4LEBdsnQE6DxNrnwE5lQEwNo8BngFilAEtMo8BoAFklgEnK48BnQFmkwEmI48BnwFplQEvNWGUAS4xaJYBKCplkwElJGeIASlxhwGZAYYBCsyRBqABjEwBVn4gACABKQN4IgIgASkDSCIaIAEpAwAiFyABKQMIIgtCOIkgC0IHiIUgC0I/iYV8fCABKQNwIgNCA4kgA0IGiIUgA0ItiYV8IgRCOIkgBEIHiIUgBEI/iYV8IAEpA1AiPiABKQMQIglCOIkgCUIHiIUgCUI/iYUgC3x8IAJCBoggAkIDiYUgAkItiYV8IgcgASkDQCITIBpCB4ggGkI4iYUgGkI/iYV8fCABKQMwIhQgASkDOCJCQjiJIEJCB4iFIEJCP4mFfCACfCABKQNoIkQgASkDICIVIAEpAygiQ0I4iSBDQgeIhSBDQj+JhXx8IAEpA1giPyABKQMYIgpCOIkgCkIHiIUgCkI/iYUgCXx8IARCBoggBEIDiYUgBEItiYV8IgZCA4kgBkIGiIUgBkItiYV8IgVCA4kgBUIGiIUgBUItiYV8IghCA4kgCEIGiIUgCEItiYV8Igx8IANCB4ggA0I4iYUgA0I/iYUgRHwgCHwgASkDYCJAQjiJIEBCB4iFIEBCP4mFID98IAV8ID5CB4ggPkI4iYUgPkI/iYUgGnwgBnwgE0IHiCATQjiJhSATQj+JhSBCfCAEfCAUQgeIIBRCOImFIBRCP4mFIEN8IAN8IBVCB4ggFUI4iYUgFUI/iYUgCnwgQHwgB0IGiCAHQgOJhSAHQi2JhXwiDUIDiSANQgaIhSANQi2JhXwiDkIDiSAOQgaIhSAOQi2JhXwiEEIDiSAQQgaIhSAQQi2JhXwiEUIDiSARQgaIhSARQi2JhXwiFkIDiSAWQgaIhSAWQi2JhXwiGEIDiSAYQgaIhSAYQi2JhXwiGUI4iSAZQgeIhSAZQj+JhSACQgeIIAJCOImFIAJCP4mFIAN8IBB8IERCB4ggREI4iYUgREI/iYUgQHwgDnwgP0IHiCA/QjiJhSA/Qj+JhSA+fCANfCAMQgaIIAxCA4mFIAxCLYmFfCIbQgOJIBtCBoiFIBtCLYmFfCIcQgOJIBxCBoiFIBxCLYmFfCIdfCAHQgeIIAdCOImFIAdCP4mFIAR8IBF8IB1CBoggHUIDiYUgHUItiYV8Ih4gDEIHiCAMQjiJhSAMQj+JhSAQfHwgCEIHiCAIQjiJhSAIQj+JhSAOfCAdfCAFQgeIIAVCOImFIAVCP4mFIA18IBx8IAZCB4ggBkI4iYUgBkI/iYUgB3wgG3wgGUIGiCAZQgOJhSAZQi2JhXwiH0IDiSAfQgaIhSAfQi2JhXwiIEIDiSAgQgaIhSAgQi2JhXwiIUIDiSAhQgaIhSAhQi2JhXwiInwgGEIHiCAYQjiJhSAYQj+JhSAcfCAhfCAWQgeIIBZCOImFIBZCP4mFIBt8ICB8IBFCB4ggEUI4iYUgEUI/iYUgDHwgH3wgEEIHiCAQQjiJhSAQQj+JhSAIfCAZfCAOQgeIIA5COImFIA5CP4mFIAV8IBh8IA1CB4ggDUI4iYUgDUI/iYUgBnwgFnwgHkIGiCAeQgOJhSAeQi2JhXwiI0IDiSAjQgaIhSAjQi2JhXwiJEIDiSAkQgaIhSAkQi2JhXwiJUIDiSAlQgaIhSAlQi2JhXwiJkIDiSAmQgaIhSAmQi2JhXwiJ0IDiSAnQgaIhSAnQi2JhXwiKEIDiSAoQgaIhSAoQi2JhXwiKUI4iSApQgeIhSApQj+JhSAdQgeIIB1COImFIB1CP4mFIBh8ICV8IBxCB4ggHEI4iYUgHEI/iYUgFnwgJHwgG0IHiCAbQjiJhSAbQj+JhSARfCAjfCAiQgaIICJCA4mFICJCLYmFfCIqQgOJICpCBoiFICpCLYmFfCIrQgOJICtCBoiFICtCLYmFfCIsfCAeQgeIIB5COImFIB5CP4mFIBl8ICZ8ICxCBoggLEIDiYUgLEItiYV8Ii0gIkIHiCAiQjiJhSAiQj+JhSAlfHwgIUIHiCAhQjiJhSAhQj+JhSAkfCAsfCAgQgeIICBCOImFICBCP4mFICN8ICt8IB9CB4ggH0I4iYUgH0I/iYUgHnwgKnwgKUIGiCApQgOJhSApQi2JhXwiLkIDiSAuQgaIhSAuQi2JhXwiL0IDiSAvQgaIhSAvQi2JhXwiMEIDiSAwQgaIhSAwQi2JhXwiMXwgKEIHiCAoQjiJhSAoQj+JhSArfCAwfCAnQgeIICdCOImFICdCP4mFICp8IC98ICZCB4ggJkI4iYUgJkI/iYUgInwgLnwgJUIHiCAlQjiJhSAlQj+JhSAhfCApfCAkQgeIICRCOImFICRCP4mFICB8ICh8ICNCB4ggI0I4iYUgI0I/iYUgH3wgJ3wgLUIGiCAtQgOJhSAtQi2JhXwiMkIDiSAyQgaIhSAyQi2JhXwiM0IDiSAzQgaIhSAzQi2JhXwiNEIDiSA0QgaIhSA0Qi2JhXwiNUIDiSA1QgaIhSA1Qi2JhXwiNkIDiSA2QgaIhSA2Qi2JhXwiN0IDiSA3QgaIhSA3Qi2JhXwiOEI4iSA4QgeIhSA4Qj+JhSAsQgeIICxCOImFICxCP4mFICh8IDR8ICtCB4ggK0I4iYUgK0I/iYUgJ3wgM3wgKkIHiCAqQjiJhSAqQj+JhSAmfCAyfCAxQgaIIDFCA4mFIDFCLYmFfCI5QgOJIDlCBoiFIDlCLYmFfCI6QgOJIDpCBoiFIDpCLYmFfCI7fCAtQgeIIC1COImFIC1CP4mFICl8IDV8IDtCBoggO0IDiYUgO0ItiYV8IjwgMUIHiCAxQjiJhSAxQj+JhSA0fHwgMEIHiCAwQjiJhSAwQj+JhSAzfCA7fCAvQgeIIC9COImFIC9CP4mFIDJ8IDp8IC5CB4ggLkI4iYUgLkI/iYUgLXwgOXwgOEIGiCA4QgOJhSA4Qi2JhXwiPUIDiSA9QgaIhSA9Qi2JhXwiRkIDiSBGQgaIhSBGQi2JhXwiR0IDiSBHQgaIhSBHQi2JhXwiSHwgN0IHiCA3QjiJhSA3Qj+JhSA6fCBHfCA2QgeIIDZCOImFIDZCP4mFIDl8IEZ8IDVCB4ggNUI4iYUgNUI/iYUgMXwgPXwgNEIHiCA0QjiJhSA0Qj+JhSAwfCA4fCAzQgeIIDNCOImFIDNCP4mFIC98IDd8IDJCB4ggMkI4iYUgMkI/iYUgLnwgNnwgPEIGiCA8QgOJhSA8Qi2JhXwiQUIDiSBBQgaIhSBBQi2JhXwiSUIDiSBJQgaIhSBJQi2JhXwiSkIDiSBKQgaIhSBKQi2JhXwiS0IDiSBLQgaIhSBLQi2JhXwiTEIDiSBMQgaIhSBMQi2JhXwiTkIDiSBOQgaIhSBOQi2JhXwiTyBMIEogQSA7IDkgMCAuICggJiAkIB4gHCAMIAUgBCBAIBMgFSAXIAApAzgiVCAAKQMgIhdCMokgF0IuiYUgF0IXiYV8IAApAzAiUCAAKQMoIk2FIBeDIFCFfHxCotyiuY3zi8XCAHwiEiAAKQMYIlV8IhV8IAogF3wgCSBNfCALIFB8IBUgFyBNhYMgTYV8IBVCMokgFUIuiYUgFUIXiYV8Qs3LvZ+SktGb8QB8IlEgACkDECJSfCIJIBUgF4WDIBeFfCAJQjKJIAlCLomFIAlCF4mFfEKv9rTi/vm+4LV/fCJTIAApAwgiRXwiCiAJIBWFgyAVhXwgCkIyiSAKQi6JhSAKQheJhXxCvLenjNj09tppfCJWIAApAwAiFXwiDyAJIAqFgyAJhXwgD0IyiSAPQi6JhSAPQheJhXxCuOqimr/LsKs5fCJXIEUgUoUgFYMgRSBSg4UgFUIkiSAVQh6JhSAVQhmJhXwgEnwiC3wiEnwgDyBCfCAKIBR8IAkgQ3wgEiAKIA+FgyAKhXwgEkIyiSASQi6JhSASQheJhXxCmaCXsJu+xPjZAHwiQiALQiSJIAtCHomFIAtCGYmFIAsgFSBFhYMgFSBFg4V8IFF8Igl8IhMgDyAShYMgD4V8IBNCMokgE0IuiYUgE0IXiYV8Qpuf5fjK1OCfkn98IkMgCUIkiSAJQh6JhSAJQhmJhSAJIAsgFYWDIAsgFYOFfCBTfCIKfCIPIBIgE4WDIBKFfCAPQjKJIA9CLomFIA9CF4mFfEKYgrbT3dqXjqt/fCJRIApCJIkgCkIeiYUgCkIZiYUgCiAJIAuFgyAJIAuDhXwgVnwiC3wiEiAPIBOFgyAThXwgEkIyiSASQi6JhSASQheJhXxCwoSMmIrT6oNYfCJTIAtCJIkgC0IeiYUgC0IZiYUgCyAJIAqFgyAJIAqDhXwgV3wiCXwiFHwgEiA/fCAPID58IBMgGnwgFCAPIBKFgyAPhXwgFEIyiSAUQi6JhSAUQheJhXxCvt/Bq5Tg1sESfCIaIAlCJIkgCUIeiYUgCUIZiYUgCSAKIAuFgyAKIAuDhXwgQnwiCnwiDyASIBSFgyAShXwgD0IyiSAPQi6JhSAPQheJhXxCjOWS9+S34ZgkfCI+IApCJIkgCkIeiYUgCkIZiYUgCiAJIAuFgyAJIAuDhXwgQ3wiC3wiEiAPIBSFgyAUhXwgEkIyiSASQi6JhSASQheJhXxC4un+r724n4bVAHwiPyALQiSJIAtCHomFIAtCGYmFIAsgCSAKhYMgCSAKg4V8IFF8Igl8IhMgDyAShYMgD4V8IBNCMokgE0IuiYUgE0IXiYV8Qu+S7pPPrpff8gB8IkAgCUIkiSAJQh6JhSAJQhmJhSAJIAogC4WDIAogC4OFfCBTfCIKfCIUfCACIBN8IAMgEnwgDyBEfCAUIBIgE4WDIBKFfCAUQjKJIBRCLomFIBRCF4mFfEKxrdrY47+s74B/fCISIApCJIkgCkIeiYUgCkIZiYUgCiAJIAuFgyAJIAuDhXwgGnwiAnwiCyATIBSFgyAThXwgC0IyiSALQi6JhSALQheJhXxCtaScrvLUge6bf3wiEyACQiSJIAJCHomFIAJCGYmFIAIgCSAKhYMgCSAKg4V8ID58IgN8IgkgCyAUhYMgFIV8IAlCMokgCUIuiYUgCUIXiYV8QpTNpPvMrvzNQXwiFCADQiSJIANCHomFIANCGYmFIAMgAiAKhYMgAiAKg4V8ID98IgR8IgogCSALhYMgC4V8IApCMokgCkIuiYUgCkIXiYV8QtKVxfeZuNrNZHwiGiAEQiSJIARCHomFIARCGYmFIAQgAiADhYMgAiADg4V8IEB8IgJ8Ig98IAogDXwgBiAJfCAHIAt8IA8gCSAKhYMgCYV8IA9CMokgD0IuiYUgD0IXiYV8QuPLvMLj8JHfb3wiCyACQiSJIAJCHomFIAJCGYmFIAIgAyAEhYMgAyAEg4V8IBJ8IgN8IgcgCiAPhYMgCoV8IAdCMokgB0IuiYUgB0IXiYV8QrWrs9zouOfgD3wiCSADQiSJIANCHomFIANCGYmFIAMgAiAEhYMgAiAEg4V8IBN8IgR8IgYgByAPhYMgD4V8IAZCMokgBkIuiYUgBkIXiYV8QuW4sr3HuaiGJHwiCiAEQiSJIARCHomFIARCGYmFIAQgAiADhYMgAiADg4V8IBR8IgJ8IgUgBiAHhYMgB4V8IAVCMokgBUIuiYUgBUIXiYV8QvWErMn1jcv0LXwiDyACQiSJIAJCHomFIAJCGYmFIAIgAyAEhYMgAyAEg4V8IBp8IgN8Ig18IAUgEHwgBiAIfCAHIA58IA0gBSAGhYMgBoV8IA1CMokgDUIuiYUgDUIXiYV8QoPJm/WmlaG6ygB8IgwgA0IkiSADQh6JhSADQhmJhSADIAIgBIWDIAIgBIOFfCALfCIEfCIHIAUgDYWDIAWFfCAHQjKJIAdCLomFIAdCF4mFfELU94fqy7uq2NwAfCIOIARCJIkgBEIeiYUgBEIZiYUgBCACIAOFgyACIAODhXwgCXwiAnwiBiAHIA2FgyANhXwgBkIyiSAGQi6JhSAGQheJhXxCtafFmKib4vz2AHwiDSACQiSJIAJCHomFIAJCGYmFIAIgAyAEhYMgAyAEg4V8IAp8IgN8IgUgBiAHhYMgB4V8IAVCMokgBUIuiYUgBUIXiYV8Qqu/m/OuqpSfmH98IhAgA0IkiSADQh6JhSADQhmJhSADIAIgBIWDIAIgBIOFfCAPfCIEfCIIfCAFIBZ8IAYgG3wgByARfCAIIAUgBoWDIAaFfCAIQjKJIAhCLomFIAhCF4mFfEKQ5NDt0s3xmKh/fCIRIARCJIkgBEIeiYUgBEIZiYUgBCACIAOFgyACIAODhXwgDHwiAnwiByAFIAiFgyAFhXwgB0IyiSAHQi6JhSAHQheJhXxCv8Lsx4n5yYGwf3wiDCACQiSJIAJCHomFIAJCGYmFIAIgAyAEhYMgAyAEg4V8IA58IgN8IgYgByAIhYMgCIV8IAZCMokgBkIuiYUgBkIXiYV8QuSdvPf7+N+sv398Ig4gA0IkiSADQh6JhSADQhmJhSADIAIgBIWDIAIgBIOFfCANfCIEfCIFIAYgB4WDIAeFfCAFQjKJIAVCLomFIAVCF4mFfELCn6Lts/6C8EZ8Ig0gBEIkiSAEQh6JhSAEQhmJhSAEIAIgA4WDIAIgA4OFfCAQfCICfCIIfCAFIBl8IAYgHXwgByAYfCAIIAUgBoWDIAaFfCAIQjKJIAhCLomFIAhCF4mFfEKlzqqY+ajk01V8IhAgAkIkiSACQh6JhSACQhmJhSACIAMgBIWDIAMgBIOFfCARfCIDfCIHIAUgCIWDIAWFfCAHQjKJIAdCLomFIAdCF4mFfELvhI6AnuqY5QZ8IhEgA0IkiSADQh6JhSADQhmJhSADIAIgBIWDIAIgBIOFfCAMfCIEfCIGIAcgCIWDIAiFfCAGQjKJIAZCLomFIAZCF4mFfELw3LnQ8KzKlBR8IgwgBEIkiSAEQh6JhSAEQhmJhSAEIAIgA4WDIAIgA4OFfCAOfCICfCIFIAYgB4WDIAeFfCAFQjKJIAVCLomFIAVCF4mFfEL838i21NDC2yd8Ig4gAkIkiSACQh6JhSACQhmJhSACIAMgBIWDIAMgBIOFfCANfCIDfCIIfCAFICB8IAYgI3wgByAffCAIIAUgBoWDIAaFfCAIQjKJIAhCLomFIAhCF4mFfEKmkpvhhafIjS58Ig0gA0IkiSADQh6JhSADQhmJhSADIAIgBIWDIAIgBIOFfCAQfCIEfCIHIAUgCIWDIAWFfCAHQjKJIAdCLomFIAdCF4mFfELt1ZDWxb+bls0AfCIQIARCJIkgBEIeiYUgBEIZiYUgBCACIAOFgyACIAODhXwgEXwiAnwiBiAHIAiFgyAIhXwgBkIyiSAGQi6JhSAGQheJhXxC3+fW7Lmig5zTAHwiESACQiSJIAJCHomFIAJCGYmFIAIgAyAEhYMgAyAEg4V8IAx8IgN8IgUgBiAHhYMgB4V8IAVCMokgBUIuiYUgBUIXiYV8Qt7Hvd3I6pyF5QB8IgwgA0IkiSADQh6JhSADQhmJhSADIAIgBIWDIAIgBIOFfCAOfCIEfCIIfCAFICJ8IAYgJXwgByAhfCAIIAUgBoWDIAaFfCAIQjKJIAhCLomFIAhCF4mFfEKo5d7js9eCtfYAfCIOIARCJIkgBEIeiYUgBEIZiYUgBCACIAOFgyACIAODhXwgDXwiAnwiByAFIAiFgyAFhXwgB0IyiSAHQi6JhSAHQheJhXxC5t22v+SlsuGBf3wiDSACQiSJIAJCHomFIAJCGYmFIAIgAyAEhYMgAyAEg4V8IBB8IgN8IgYgByAIhYMgCIV8IAZCMokgBkIuiYUgBkIXiYV8QrvqiKTRkIu5kn98IhAgA0IkiSADQh6JhSADQhmJhSADIAIgBIWDIAIgBIOFfCARfCIEfCIFIAYgB4WDIAeFfCAFQjKJIAVCLomFIAVCF4mFfELkhsTnlJT636J/fCIRIARCJIkgBEIeiYUgBEIZiYUgBCACIAOFgyACIAODhXwgDHwiAnwiCHwgBSArfCAGICd8IAcgKnwgCCAFIAaFgyAGhXwgCEIyiSAIQi6JhSAIQheJhXxCgeCI4rvJmY2of3wiDCACQiSJIAJCHomFIAJCGYmFIAIgAyAEhYMgAyAEg4V8IA58IgN8IgcgBSAIhYMgBYV8IAdCMokgB0IuiYUgB0IXiYV8QpGv4oeN7uKlQnwiDiADQiSJIANCHomFIANCGYmFIAMgAiAEhYMgAiAEg4V8IA18IgR8IgYgByAIhYMgCIV8IAZCMokgBkIuiYUgBkIXiYV8QrD80rKwtJS2R3wiDSAEQiSJIARCHomFIARCGYmFIAQgAiADhYMgAiADg4V8IBB8IgJ8IgUgBiAHhYMgB4V8IAVCMokgBUIuiYUgBUIXiYV8Qpikvbedg7rJUXwiECACQiSJIAJCHomFIAJCGYmFIAIgAyAEhYMgAyAEg4V8IBF8IgN8Igh8IAUgLXwgBiApfCAHICx8IAggBSAGhYMgBoV8IAhCMokgCEIuiYUgCEIXiYV8QpDSlqvFxMHMVnwiESADQiSJIANCHomFIANCGYmFIAMgAiAEhYMgAiAEg4V8IAx8IgR8IgcgBSAIhYMgBYV8IAdCMokgB0IuiYUgB0IXiYV8QqrAxLvVsI2HdHwiDCAEQiSJIARCHomFIARCGYmFIAQgAiADhYMgAiADg4V8IA58IgJ8IgYgByAIhYMgCIV8IAZCMokgBkIuiYUgBkIXiYV8Qrij75WDjqi1EHwiDiACQiSJIAJCHomFIAJCGYmFIAIgAyAEhYMgAyAEg4V8IA18IgN8IgUgBiAHhYMgB4V8IAVCMokgBUIuiYUgBUIXiYV8Qsihy8brorDSGXwiDSADQiSJIANCHomFIANCGYmFIAMgAiAEhYMgAiAEg4V8IBB8IgR8Igh8IAUgM3wgBiAvfCAHIDJ8IAggBSAGhYMgBoV8IAhCMokgCEIuiYUgCEIXiYV8QtPWhoqFgdubHnwiECAEQiSJIARCHomFIARCGYmFIAQgAiADhYMgAiADg4V8IBF8IgJ8IgcgBSAIhYMgBYV8IAdCMokgB0IuiYUgB0IXiYV8QpnXu/zN6Z2kJ3wiESACQiSJIAJCHomFIAJCGYmFIAIgAyAEhYMgAyAEg4V8IAx8IgN8IgYgByAIhYMgCIV8IAZCMokgBkIuiYUgBkIXiYV8QqiR7Yzelq/YNHwiDCADQiSJIANCHomFIANCGYmFIAMgAiAEhYMgAiAEg4V8IA58IgR8IgUgBiAHhYMgB4V8IAVCMokgBUIuiYUgBUIXiYV8QuO0pa68loOOOXwiDiAEQiSJIARCHomFIARCGYmFIAQgAiADhYMgAiADg4V8IA18IgJ8Igh8IAUgNXwgBiAxfCAHIDR8IAggBSAGhYMgBoV8IAhCMokgCEIuiYUgCEIXiYV8QsuVhpquyarszgB8Ig0gAkIkiSACQh6JhSACQhmJhSACIAMgBIWDIAMgBIOFfCAQfCIDfCIHIAUgCIWDIAWFfCAHQjKJIAdCLomFIAdCF4mFfELzxo+798myztsAfCIQIANCJIkgA0IeiYUgA0IZiYUgAyACIASFgyACIASDhXwgEXwiBHwiBiAHIAiFgyAIhXwgBkIyiSAGQi6JhSAGQheJhXxCo/HKtb3+m5foAHwiESAEQiSJIARCHomFIARCGYmFIAQgAiADhYMgAiADg4V8IAx8IgJ8IgUgBiAHhYMgB4V8IAVCMokgBUIuiYUgBUIXiYV8Qvzlvu/l3eDH9AB8IgwgAkIkiSACQh6JhSACQhmJhSACIAMgBIWDIAMgBIOFfCAOfCIDfCIIfCAFIDd8IAYgOnwgByA2fCAIIAUgBoWDIAaFfCAIQjKJIAhCLomFIAhCF4mFfELg3tyY9O3Y0vgAfCIOIANCJIkgA0IeiYUgA0IZiYUgAyACIASFgyACIASDhXwgDXwiBHwiByAFIAiFgyAFhXwgB0IyiSAHQi6JhSAHQheJhXxC8tbCj8qCnuSEf3wiDSAEQiSJIARCHomFIARCGYmFIAQgAiADhYMgAiADg4V8IBB8IgJ8IgYgByAIhYMgCIV8IAZCMokgBkIuiYUgBkIXiYV8QuzzkNOBwcDjjH98IhAgAkIkiSACQh6JhSACQhmJhSACIAMgBIWDIAMgBIOFfCARfCIDfCIFIAYgB4WDIAeFfCAFQjKJIAVCLomFIAVCF4mFfEKovIybov+/35B/fCIRIANCJIkgA0IeiYUgA0IZiYUgAyACIASFgyACIASDhXwgDHwiBHwiCHwgBSA9fCAGIDx8IAcgOHwgCCAFIAaFgyAGhXwgCEIyiSAIQi6JhSAIQheJhXxC6fuK9L2dm6ikf3wiDCAEQiSJIARCHomFIARCGYmFIAQgAiADhYMgAiADg4V8IA58IgJ8IgcgBSAIhYMgBYV8IAdCMokgB0IuiYUgB0IXiYV8QpXymZb7/uj8vn98Ig4gAkIkiSACQh6JhSACQhmJhSACIAMgBIWDIAMgBIOFfCANfCIDfCIGIAcgCIWDIAiFfCAGQjKJIAZCLomFIAZCF4mFfEKrpsmbrp7euEZ8Ig0gA0IkiSADQh6JhSADQhmJhSADIAIgBIWDIAIgBIOFfCAQfCIEfCIFIAYgB4WDIAeFfCAFQjKJIAVCLomFIAVCF4mFfEKcw5nR7tnPk0p8IhAgBEIkiSAEQh6JhSAEQhmJhSAEIAIgA4WDIAIgA4OFfCARfCICfCIIfCAFIEd8IAYgSXwgByBGfCAIIAUgBoWDIAaFfCAIQjKJIAhCLomFIAhCF4mFfEKHhIOO8piuw1F8IhEgAkIkiSACQh6JhSACQhmJhSACIAMgBIWDIAMgBIOFfCAMfCIDfCIHIAUgCIWDIAWFfCAHQjKJIAdCLomFIAdCF4mFfEKe1oPv7Lqf7Wp8IgwgA0IkiSADQh6JhSADQhmJhSADIAIgBIWDIAIgBIOFfCAOfCIEfCIGIAcgCIWDIAiFfCAGQjKJIAZCLomFIAZCF4mFfEL4orvz/u/TvnV8Ig4gBEIkiSAEQh6JhSAEQhmJhSAEIAIgA4WDIAIgA4OFfCANfCICfCIFIAYgB4WDIAeFfCAFQjKJIAVCLomFIAVCF4mFfEK6392Qp/WZ+AZ8IhYgAkIkiSACQh6JhSACQhmJhSACIAMgBIWDIAMgBIOFfCAQfCIDfCIIfCA5QgeIIDlCOImFIDlCP4mFIDV8IEF8IEhCBoggSEIDiYUgSEItiYV8Ig0gBXwgBiBLfCAHIEh8IAggBSAGhYMgBoV8IAhCMokgCEIuiYUgCEIXiYV8QqaxopbauN+xCnwiECADQiSJIANCHomFIANCGYmFIAMgAiAEhYMgAiAEg4V8IBF8IgR8IgcgBSAIhYMgBYV8IAdCMokgB0IuiYUgB0IXiYV8Qq6b5PfLgOafEXwiESAEQiSJIARCHomFIARCGYmFIAQgAiADhYMgAiADg4V8IAx8IgJ8IgYgByAIhYMgCIV8IAZCMokgBkIuiYUgBkIXiYV8QpuO8ZjR5sK4G3wiGCACQiSJIAJCHomFIAJCGYmFIAIgAyAEhYMgAyAEg4V8IA58IgN8IgUgBiAHhYMgB4V8IAVCMokgBUIuiYUgBUIXiYV8QoT7kZjS/t3tKHwiGSADQiSJIANCHomFIANCGYmFIAMgAiAEhYMgAiAEg4V8IBZ8IgR8Igh8IDtCB4ggO0I4iYUgO0I/iYUgN3wgSnwgOkIHiCA6QjiJhSA6Qj+JhSA2fCBJfCANQgaIIA1CA4mFIA1CLYmFfCIMQgOJIAxCBoiFIAxCLYmFfCIOIAV8IAYgTnwgByAMfCAIIAUgBoWDIAaFfCAIQjKJIAhCLomFIAhCF4mFfEKTyZyGtO+q5TJ8IgcgBEIkiSAEQh6JhSAEQhmJhSAEIAIgA4WDIAIgA4OFfCAQfCICfCIGIAUgCIWDIAWFfCAGQjKJIAZCLomFIAZCF4mFfEK8/aauocGvzzx8IhAgAkIkiSACQh6JhSACQhmJhSACIAMgBIWDIAMgBIOFfCARfCIDfCIFIAYgCIWDIAiFfCAFQjKJIAVCLomFIAVCF4mFfELMmsDgyfjZjsMAfCIRIANCJIkgA0IeiYUgA0IZiYUgAyACIASFgyACIASDhXwgGHwiBHwiCCAFIAaFgyAGhXwgCEIyiSAIQi6JhSAIQheJhXxCtoX52eyX9eLMAHwiFiAEQiSJIARCHomFIARCGYmFIAQgAiADhYMgAiADg4V8IBl8IgJ8IgwgVHw3AzggACBVIAJCJIkgAkIeiYUgAkIZiYUgAiADIASFgyADIASDhXwgB3wiA0IkiSADQh6JhSADQhmJhSADIAIgBIWDIAIgBIOFfCAQfCIEQiSJIARCHomFIARCGYmFIAQgAiADhYMgAiADg4V8IBF8IgJCJIkgAkIeiYUgAkIZiYUgAiADIASFgyADIASDhXwgFnwiB3w3AxggACBQIAMgPEIHiCA8QjiJhSA8Qj+JhSA4fCBLfCAOQgaIIA5CA4mFIA5CLYmFfCIOIAZ8IAwgBSAIhYMgBYV8IAxCMokgDEIuiYUgDEIXiYV8Qqr8lePPs8q/2QB8IgN8IgZ8NwMwIAAgUiAHQiSJIAdCHomFIAdCGYmFIAcgAiAEhYMgAiAEg4V8IAN8IgN8NwMQIAAgTSA8ID1CB4ggPUI4iYUgPUI/iYV8IA18IE9CBoggT0IDiYUgT0ItiYV8IAV8IAYgCCAMhYMgCIV8IAZCMokgBkIuiYUgBkIXiYV8Quz129az9dvl3wB8IgUgBHwiBHw3AyggACBFIANCJIkgA0IeiYUgA0IZiYUgAyACIAeFgyACIAeDhXwgBXwiBXw3AwggACA9IEFCB4ggQUI4iYUgQUI/iYV8IEx8IA5CBoggDkIDiYUgDkItiYV8IAh8IAQgBiAMhYMgDIV8IARCMokgBEIuiYUgBEIXiYV8QpewndLEsYai7AB8IgQgAiAXfHw3AyAgACAVIAUgAyAHhYMgAyAHg4V8IAVCJIkgBUIeiYUgBUIZiYV8IAR8NwMAC9M+AUZ/IAAgASgAOCIDQRh0IANBCHRBgID8B3FyIANBCHZBgP4DcSADQRh2cnIiAyABKAA8IgRBGHQgBEEIdEGAgPwHcXIgBEEIdkGA/gNxIARBGHZyciIEQRl3IARBA3ZzIARBDndzaiABKAAkIgVBGHQgBUEIdEGAgPwHcXIgBUEIdkGA/gNxIAVBGHZyciIbIAEoAAAiBUEYdCAFQQh0QYCA/AdxciAFQQh2QYD+A3EgBUEYdnJyIg0gASgABCIFQRh0IAVBCHRBgID8B3FyIAVBCHZBgP4DcSAFQRh2cnIiCkEZdyAKQQN2cyAKQQ53c2pqIANBD3cgA0ENd3MgA0EKdnNqIgUgASgAHCICQRh0IAJBCHRBgID8B3FyIAJBCHZBgP4DcSACQRh2cnIiEyABKAAgIgJBGHQgAkEIdEGAgPwHcXIgAkEIdkGA/gNxIAJBGHZyciIUQRl3IBRBA3ZzIBRBDndzamogASgAFCICQRh0IAJBCHRBgID8B3FyIAJBCHZBgP4DcSACQRh2cnIiFyABKAAYIgJBGHQgAkEIdEGAgPwHcXIgAkEIdkGA/gNxIAJBGHZyciIyQRl3IDJBA3ZzIDJBDndzaiADaiABKAAwIgJBGHQgAkEIdEGAgPwHcXIgAkEIdkGA/gNxIAJBGHZyciIcIAEoAAwiAkEYdCACQQh0QYCA/AdxciACQQh2QYD+A3EgAkEYdnJyIgsgASgAECICQRh0IAJBCHRBgID8B3FyIAJBCHZBgP4DcSACQRh2cnIiGEEZdyAYQQN2cyAYQQ53c2pqIAEoACgiAkEYdCACQQh0QYCA/AdxciACQQh2QYD+A3EgAkEYdnJyIi8gASgACCICQRh0IAJBCHRBgID8B3FyIAJBCHZBgP4DcSACQRh2cnIiDEEZdyAMQQN2cyAMQQ53cyAKamogBEEPdyAEQQ13cyAEQQp2c2oiAkEPdyACQQ13cyACQQp2c2oiB0EPdyAHQQ13cyAHQQp2c2oiBkEPdyAGQQ13cyAGQQp2c2oiCWogASgANCIIQRh0IAhBCHRBgID8B3FyIAhBCHZBgP4DcSAIQRh2cnIiM0EZdyAzQQN2cyAzQQ53cyAcaiAGaiABKAAsIgFBGHQgAUEIdEGAgPwHcXIgAUEIdkGA/gNxIAFBGHZyciIwQRl3IDBBA3ZzIDBBDndzIC9qIAdqIBtBA3YgG0EZd3MgG0EOd3MgFGogAmogE0EDdiATQRl3cyATQQ53cyAyaiAEaiAXQQN2IBdBGXdzIBdBDndzIBhqIDNqIAtBA3YgC0EZd3MgC0EOd3MgDGogMGogBUEPdyAFQQ13cyAFQQp2c2oiCEEPdyAIQQ13cyAIQQp2c2oiDkEPdyAOQQ13cyAOQQp2c2oiEEEPdyAQQQ13cyAQQQp2c2oiEUEPdyARQQ13cyARQQp2c2oiEkEPdyASQQ13cyASQQp2c2oiFUEPdyAVQQ13cyAVQQp2c2oiFkEZdyAWQQN2cyAWQQ53cyADQQN2IANBGXdzIANBDndzIDNqIBBqIBxBA3YgHEEZd3MgHEEOd3MgMGogDmogL0EDdiAvQRl3cyAvQQ53cyAbaiAIaiAJQQ93IAlBDXdzIAlBCnZzaiIZQQ93IBlBDXdzIBlBCnZzaiIaQQ93IBpBDXdzIBpBCnZzaiIdaiAFQQN2IAVBGXdzIAVBDndzIARqIBFqIB1BD3cgHUENd3MgHUEKdnNqIh4gCUEDdiAJQRl3cyAJQQ53cyAQamogBkEDdiAGQRl3cyAGQQ53cyAOaiAdaiAHQQN2IAdBGXdzIAdBDndzIAhqIBpqIAJBA3YgAkEZd3MgAkEOd3MgBWogGWogFkEPdyAWQQ13cyAWQQp2c2oiH0EPdyAfQQ13cyAfQQp2c2oiIEEPdyAgQQ13cyAgQQp2c2oiIUEPdyAhQQ13cyAhQQp2c2oiImogFUEDdiAVQRl3cyAVQQ53cyAaaiAhaiASQQN2IBJBGXdzIBJBDndzIBlqICBqIBFBA3YgEUEZd3MgEUEOd3MgCWogH2ogEEEDdiAQQRl3cyAQQQ53cyAGaiAWaiAOQQN2IA5BGXdzIA5BDndzIAdqIBVqIAhBA3YgCEEZd3MgCEEOd3MgAmogEmogHkEPdyAeQQ13cyAeQQp2c2oiI0EPdyAjQQ13cyAjQQp2c2oiJEEPdyAkQQ13cyAkQQp2c2oiJUEPdyAlQQ13cyAlQQp2c2oiJkEPdyAmQQ13cyAmQQp2c2oiJ0EPdyAnQQ13cyAnQQp2c2oiKEEPdyAoQQ13cyAoQQp2c2oiKUEZdyApQQN2cyApQQ53cyAdQQN2IB1BGXdzIB1BDndzIBVqICVqIBpBA3YgGkEZd3MgGkEOd3MgEmogJGogGUEDdiAZQRl3cyAZQQ53cyARaiAjaiAiQQ93ICJBDXdzICJBCnZzaiIqQQ93ICpBDXdzICpBCnZzaiIrQQ93ICtBDXdzICtBCnZzaiIsaiAeQQN2IB5BGXdzIB5BDndzIBZqICZqICxBD3cgLEENd3MgLEEKdnNqIi0gIkEDdiAiQRl3cyAiQQ53cyAlamogIUEDdiAhQRl3cyAhQQ53cyAkaiAsaiAgQQN2ICBBGXdzICBBDndzICNqICtqIB9BA3YgH0EZd3MgH0EOd3MgHmogKmogKUEPdyApQQ13cyApQQp2c2oiLkEPdyAuQQ13cyAuQQp2c2oiNEEPdyA0QQ13cyA0QQp2c2oiNUEPdyA1QQ13cyA1QQp2c2oiNmogKEEDdiAoQRl3cyAoQQ53cyAraiA1aiAnQQN2ICdBGXdzICdBDndzICpqIDRqICZBA3YgJkEZd3MgJkEOd3MgImogLmogJUEDdiAlQRl3cyAlQQ53cyAhaiApaiAkQQN2ICRBGXdzICRBDndzICBqIChqICNBA3YgI0EZd3MgI0EOd3MgH2ogJ2ogLUEPdyAtQQ13cyAtQQp2c2oiMUEPdyAxQQ13cyAxQQp2c2oiN0EPdyA3QQ13cyA3QQp2c2oiOEEPdyA4QQ13cyA4QQp2c2oiOUEPdyA5QQ13cyA5QQp2c2oiOkEPdyA6QQ13cyA6QQp2c2oiPUEPdyA9QQ13cyA9QQp2c2oiPiA6IDggMSAsICogISAfIBUgESAOIAUgHCAUIBggACgCHCJFIAAoAhAiGEEadyAYQRV3cyAYQQd3c2ogACgCGCI/IAAoAhQiO3MgGHEgP3NqIA1qQZjfqJQEaiINIAAoAgwiRmoiAWogCyAYaiAMIDtqIAogP2ogASAYIDtzcSA7c2ogAUEadyABQRV3cyABQQd3c2pBkYndiQdqIkAgACgCCCJBaiIKIAEgGHNxIBhzaiAKQRp3IApBFXdzIApBB3dzakHP94Oue2oiQiAAKAIEIjxqIgsgASAKc3EgAXNqIAtBGncgC0EVd3MgC0EHd3NqQaW3181+aiJDIAAoAgAiAWoiDCAKIAtzcSAKc2ogDEEadyAMQRV3cyAMQQd3c2pB24TbygNqIkQgPCBBcSABIDxxIkcgASBBcXNzIAFBHncgAUETd3MgAUEKd3NqIA1qIg1qIg9qIAwgE2ogCyAyaiAKIBdqIA8gCyAMc3EgC3NqIA9BGncgD0EVd3MgD0EHd3NqQfGjxM8FaiIyIA1BHncgDUETd3MgDUEKd3MgDSABIDxzcSBHc2ogQGoiCmoiEyAMIA9zcSAMc2ogE0EadyATQRV3cyATQQd3c2pBpIX+kXlqIkAgASAKcSAKIA1xIgsgASANcXNzIApBHncgCkETd3MgCkEKd3NqIEJqIgxqIhQgDyATc3EgD3NqIBRBGncgFEEVd3MgFEEHd3NqQdW98dh6aiJCIAxBHncgDEETd3MgDEEKd3MgDCAKIA1zcSALc2ogQ2oiC2oiDSATIBRzcSATc2ogDUEadyANQRV3cyANQQd3c2pBmNWewH1qIkMgRCAKIAtxIAsgDHEiRCAKIAxxc3MgC0EedyALQRN3cyALQQp3c2pqIg9qIhdqIA0gMGogFCAvaiATIBtqIBcgDSAUc3EgFHNqIBdBGncgF0EVd3MgF0EHd3NqQYG2jZQBaiIbIA9BHncgD0ETd3MgD0EKd3MgDyALIAxzcSBEc2ogMmoiCmoiDCANIBdzcSANc2ogDEEadyAMQRV3cyAMQQd3c2pBvovGoQJqIhwgCiALcSAKIA9xIhQgCyAPcXNzIApBHncgCkETd3MgCkEKd3NqIEBqIg1qIhMgDCAXc3EgF3NqIBNBGncgE0EVd3MgE0EHd3NqQcP7sagFaiIXIA1BHncgDUETd3MgDUEKd3MgDSAKIA9zcSAUc2ogQmoiC2oiDyAMIBNzcSAMc2ogD0EadyAPQRV3cyAPQQd3c2pB9Lr5lQdqIi8gCiALcSALIA1xIjAgCiANcXNzIAtBHncgC0ETd3MgC0EKd3NqIENqIgpqIhRqIAQgD2ogAyATaiAMIDNqIBQgDyATc3EgE3NqIBRBGncgFEEVd3MgFEEHd3NqQf7j+oZ4aiITIApBHncgCkETd3MgCkEKd3MgCiALIA1zcSAwc2ogG2oiA2oiBSAPIBRzcSAPc2ogBUEadyAFQRV3cyAFQQd3c2pBp43w3nlqIhsgAyALcSADIApxIgQgCiALcXNzIANBHncgA0ETd3MgA0EKd3NqIBxqIgtqIgwgBSAUc3EgFHNqIAxBGncgDEEVd3MgDEEHd3NqQfTi74x8aiIUIAtBHncgC0ETd3MgC0EKd3MgCyADIApzcSAEc2ogF2oiBGoiCiAFIAxzcSAFc2ogCkEadyAKQRV3cyAKQQd3c2pBwdPtpH5qIhcgAyAEcSAEIAtxIhwgAyALcXNzIARBHncgBEETd3MgBEEKd3NqIC9qIg1qIg9qIAcgCmogCCAMaiACIAVqIA8gCiAMc3EgDHNqIA9BGncgD0EVd3MgD0EHd3NqQYaP+f1+aiIMIA1BHncgDUETd3MgDUEKd3MgDSAEIAtzcSAcc2ogE2oiA2oiBSAKIA9zcSAKc2ogBUEadyAFQRV3cyAFQQd3c2pBxruG/gBqIgsgAyAEcSADIA1xIgggBCANcXNzIANBHncgA0ETd3MgA0EKd3NqIBtqIgJqIgcgBSAPc3EgD3NqIAdBGncgB0EVd3MgB0EHd3NqQczDsqACaiIPIAJBHncgAkETd3MgAkEKd3MgAiADIA1zcSAIc2ogFGoiBGoiCCAFIAdzcSAFc2ogCEEadyAIQRV3cyAIQQd3c2pB79ik7wJqIg0gAyAEcSACIARxIhMgAiADcXNzIARBHncgBEETd3MgBEEKd3NqIBdqIg5qIgpqIAggCWogByAQaiAFIAZqIAogByAIc3EgB3NqIApBGncgCkEVd3MgCkEHd3NqQaqJ0tMEaiIQIA5BHncgDkETd3MgDkEKd3MgDiACIARzcSATc2ogDGoiA2oiBSAIIApzcSAIc2ogBUEadyAFQRV3cyAFQQd3c2pB3NPC5QVqIhEgAyAEcSADIA5xIgYgBCAOcXNzIANBHncgA0ETd3MgA0EKd3NqIAtqIgJqIgcgBSAKc3EgCnNqIAdBGncgB0EVd3MgB0EHd3NqQdqR5rcHaiIKIAJBHncgAkETd3MgAkEKd3MgAiADIA5zcSAGc2ogD2oiBGoiBiAFIAdzcSAFc2ogBkEadyAGQRV3cyAGQQd3c2pB0qL5wXlqIg4gAyAEcSACIARxIgsgAiADcXNzIARBHncgBEETd3MgBEEKd3NqIA1qIglqIghqIAYgGmogByASaiAFIBlqIAggBiAHc3EgB3NqIAhBGncgCEEVd3MgCEEHd3NqQe2Mx8F6aiISIAlBHncgCUETd3MgCUEKd3MgCSACIARzcSALc2ogEGoiA2oiBSAGIAhzcSAGc2ogBUEadyAFQRV3cyAFQQd3c2pByM+MgHtqIhAgAyAEcSADIAlxIgYgBCAJcXNzIANBHncgA0ETd3MgA0EKd3NqIBFqIgJqIgcgBSAIc3EgCHNqIAdBGncgB0EVd3MgB0EHd3NqQcf/5fp7aiIRIAJBHncgAkETd3MgAkEKd3MgAiADIAlzcSAGc2ogCmoiBGoiBiAFIAdzcSAFc2ogBkEadyAGQRV3cyAGQQd3c2pB85eAt3xqIhUgDiADIARxIAIgBHEiDiACIANxc3MgBEEedyAEQRN3cyAEQQp3c2pqIglqIghqIAYgHmogByAWaiAFIB1qIAggBiAHc3EgB3NqIAhBGncgCEEVd3MgCEEHd3NqQceinq19aiIWIAlBHncgCUETd3MgCUEKd3MgCSACIARzcSAOc2ogEmoiA2oiBSAGIAhzcSAGc2ogBUEadyAFQRV3cyAFQQd3c2pB0capNmoiDiADIARxIAMgCXEiBiAEIAlxc3MgA0EedyADQRN3cyADQQp3c2ogEGoiAmoiByAFIAhzcSAIc2ogB0EadyAHQRV3cyAHQQd3c2pB59KkoQFqIhAgAkEedyACQRN3cyACQQp3cyACIAMgCXNxIAZzaiARaiIEaiIGIAUgB3NxIAVzaiAGQRp3IAZBFXdzIAZBB3dzakGFldy9AmoiESADIARxIAIgBHEiEiACIANxc3MgBEEedyAEQRN3cyAEQQp3c2ogFWoiCWoiCGogBiAkaiAHICBqIAUgI2ogCCAGIAdzcSAHc2ogCEEadyAIQRV3cyAIQQd3c2pBuMLs8AJqIhUgCUEedyAJQRN3cyAJQQp3cyAJIAIgBHNxIBJzaiAWaiIDaiIFIAYgCHNxIAZzaiAFQRp3IAVBFXdzIAVBB3dzakH827HpBGoiEiADIARxIAMgCXEiBiAEIAlxc3MgA0EedyADQRN3cyADQQp3c2ogDmoiAmoiByAFIAhzcSAIc2ogB0EadyAHQRV3cyAHQQd3c2pBk5rgmQVqIg4gAkEedyACQRN3cyACQQp3cyACIAMgCXNxIAZzaiAQaiIEaiIGIAUgB3NxIAVzaiAGQRp3IAZBFXdzIAZBB3dzakHU5qmoBmoiECARIAMgBHEgAiAEcSIRIAIgA3FzcyAEQR53IARBE3dzIARBCndzamoiCWoiCGogBiAmaiAHICJqIAUgJWogCCAGIAdzcSAHc2ogCEEadyAIQRV3cyAIQQd3c2pBu5WoswdqIhYgCUEedyAJQRN3cyAJQQp3cyAJIAIgBHNxIBFzaiAVaiIDaiIFIAYgCHNxIAZzaiAFQRp3IAVBFXdzIAVBB3dzakGukouOeGoiESADIARxIAMgCXEiBiAEIAlxc3MgA0EedyADQRN3cyADQQp3c2ogEmoiAmoiByAFIAhzcSAIc2ogB0EadyAHQRV3cyAHQQd3c2pBhdnIk3lqIhIgAkEedyACQRN3cyACQQp3cyACIAMgCXNxIAZzaiAOaiIEaiIGIAUgB3NxIAVzaiAGQRp3IAZBFXdzIAZBB3dzakGh0f+VemoiDiAQIAMgBHEgAiAEcSIQIAIgA3FzcyAEQR53IARBE3dzIARBCndzamoiCWoiCGogBiAoaiAHICtqIAUgJ2ogCCAGIAdzcSAHc2ogCEEadyAIQRV3cyAIQQd3c2pBy8zpwHpqIhUgCUEedyAJQRN3cyAJQQp3cyAJIAIgBHNxIBBzaiAWaiIDaiIFIAYgCHNxIAZzaiAFQRp3IAVBFXdzIAVBB3dzakHwlq6SfGoiECADIARxIAMgCXEiBiAEIAlxc3MgA0EedyADQRN3cyADQQp3c2ogEWoiAmoiByAFIAhzcSAIc2ogB0EadyAHQRV3cyAHQQd3c2pBo6Oxu3xqIhEgAkEedyACQRN3cyACQQp3cyACIAMgCXNxIAZzaiASaiIEaiIGIAUgB3NxIAVzaiAGQRp3IAZBFXdzIAZBB3dzakGZ0MuMfWoiEiAOIAMgBHEgAiAEcSIOIAIgA3FzcyAEQR53IARBE3dzIARBCndzamoiCWoiCGogBiAuaiAHIC1qIAUgKWogCCAGIAdzcSAHc2ogCEEadyAIQRV3cyAIQQd3c2pBpIzktH1qIhYgCUEedyAJQRN3cyAJQQp3cyAJIAIgBHNxIA5zaiAVaiIDaiIFIAYgCHNxIAZzaiAFQRp3IAVBFXdzIAVBB3dzakGF67igf2oiDiADIARxIAMgCXEiBiAEIAlxc3MgA0EedyADQRN3cyADQQp3c2ogEGoiAmoiByAFIAhzcSAIc2ogB0EadyAHQRV3cyAHQQd3c2pB8MCqgwFqIhAgAkEedyACQRN3cyACQQp3cyACIAMgCXNxIAZzaiARaiIEaiIGIAUgB3NxIAVzaiAGQRp3IAZBFXdzIAZBB3dzakGWgpPNAWoiESASIAMgBHEgAiAEcSISIAIgA3FzcyAEQR53IARBE3dzIARBCndzamoiCWoiCGogBiA1aiAHIDdqIAUgNGogCCAGIAdzcSAHc2ogCEEadyAIQRV3cyAIQQd3c2pBiNjd8QFqIhUgCUEedyAJQRN3cyAJQQp3cyAJIAIgBHNxIBJzaiAWaiIDaiIFIAYgCHNxIAZzaiAFQRp3IAVBFXdzIAVBB3dzakHM7qG6AmoiEiADIARxIAMgCXEiBiAEIAlxc3MgA0EedyADQRN3cyADQQp3c2ogDmoiAmoiByAFIAhzcSAIc2ogB0EadyAHQRV3cyAHQQd3c2pBtfnCpQNqIhYgAkEedyACQRN3cyACQQp3cyACIAMgCXNxIAZzaiAQaiIEaiIGIAUgB3NxIAVzaiAGQRp3IAZBFXdzIAZBB3dzakGzmfDIA2oiECARIAMgBHEgAiAEcSIRIAIgA3FzcyAEQR53IARBE3dzIARBCndzamoiCWoiCGogKkEDdiAqQRl3cyAqQQ53cyAmaiAxaiA2QQ93IDZBDXdzIDZBCnZzaiIOIAZqIAcgOWogBSA2aiAIIAYgB3NxIAdzaiAIQRp3IAhBFXdzIAhBB3dzakHK1OL2BGoiGSAJQR53IAlBE3dzIAlBCndzIAkgAiAEc3EgEXNqIBVqIgNqIgUgBiAIc3EgBnNqIAVBGncgBUEVd3MgBUEHd3NqQc+U89wFaiIRIAMgBHEgAyAJcSIGIAQgCXFzcyADQR53IANBE3dzIANBCndzaiASaiICaiIHIAUgCHNxIAhzaiAHQRp3IAdBFXdzIAdBB3dzakHz37nBBmoiEiACQR53IAJBE3dzIAJBCndzIAIgAyAJc3EgBnNqIBZqIgRqIgYgBSAHc3EgBXNqIAZBGncgBkEVd3MgBkEHd3NqQe6FvqQHaiIVIAMgBHEgAiAEcSIWIAIgA3FzcyAEQR53IARBE3dzIARBCndzaiAQaiIJaiIIaiAsQQN2ICxBGXdzICxBDndzIChqIDhqICtBA3YgK0EZd3MgK0EOd3MgJ2ogN2ogDkEPdyAOQQ13cyAOQQp2c2oiA0EPdyADQQ13cyADQQp2c2oiECAGaiAHID1qIAMgBWogCCAGIAdzcSAHc2ogCEEadyAIQRV3cyAIQQd3c2pB78aVxQdqIhogCUEedyAJQRN3cyAJQQp3cyAJIAIgBHNxIBZzaiAZaiIDaiIFIAYgCHNxIAZzaiAFQRp3IAVBFXdzIAVBB3dzakGU8KGmeGoiFiADIARxIAMgCXEiBiAEIAlxc3MgA0EedyADQRN3cyADQQp3c2ogEWoiAmoiByAFIAhzcSAIc2ogB0EadyAHQRV3cyAHQQd3c2pBiISc5nhqIhEgAkEedyACQRN3cyACQQp3cyACIAMgCXNxIAZzaiASaiIEaiIGIAUgB3NxIAVzaiAGQRp3IAZBFXdzIAZBB3dzakH6//uFeWoiEiAVIAMgBHEgAiAEcSIVIAIgA3FzcyAEQR53IARBE3dzIARBCndzamoiCWoiCCBFajYCHCAAIEYgESAJQR53IAlBE3dzIAlBCndzIAkgAiAEc3EgFXNqIBpqIgMgCXEiESAEIAlxcyADIARxcyADQR53IANBE3dzIANBCndzaiAWaiICQR53IAJBE3dzIAJBCndzIAIgAyAJc3EgEXNqaiIEIAJxIhEgAiADcXMgAyAEcXMgBEEedyAEQRN3cyAEQQp3c2ogEmoiCWo2AgwgACA/IAMgLUEDdiAtQRl3cyAtQQ53cyApaiA5aiAQQQ93IBBBDXdzIBBBCnZzaiIQIAVqIAggBiAHc3EgB3NqIAhBGncgCEEVd3MgCEEHd3NqQevZwaJ6aiIDaiIFajYCGCAAIEEgCUEedyAJQRN3cyAJQQp3cyAJIAIgBHNxIBFzaiADaiIDajYCCCAAIDsgLSAuQQN2IC5BGXdzIC5BDndzaiAOaiA+QQ93ID5BDXdzID5BCnZzaiAHaiAFIAYgCHNxIAZzaiAFQRp3IAVBFXdzIAVBB3dzakH3x+b3e2oiByACaiICajYCFCAAIDwgAyAEcSADIAlxIg4gBCAJcXNzIANBHncgA0ETd3MgA0EKd3NqIAdqIgdqNgIEIAAgLiAxQQN2IDFBGXdzIDFBDndzaiA6aiAQQQ93IBBBDXdzIBBBCnZzaiAGaiACIAUgCHNxIAhzaiACQRp3IAJBFXdzIAJBB3dzakHy8cWzfGoiBSAEIBhqajYCECAAIAEgByADIAlzcSAOc2ogB0EedyAHQRN3cyAHQQp3c2ogBWo2AgAL4iwBK38gACABQSRqKAAAIhogASgAACIOIAEoABAiDyAOIAFBLGooAAAiHiABQQxqKAAAIhYgASgABCIbIAFBPGooAAAiICAOICAgAUEUaigAACIXIAAoAhAiIyAOIAAoAgAiKyAAKAIMIiQgACgCCCImIAAoAgQiJXNzampBC3dqIhhBCnciGWogFiAmQQp3IhNqIBsgI2ogEyAlcyAYc2pBDncgJGoiHCAZcyATIAEoAAgiEyAkaiAYICVBCnciFHMgHHNqQQ93aiIYc2pBDHcgFGoiFSAYQQp3IhFzIA8gFGogGCAcQQp3IhRzIBVzakEFdyAZaiIGc2pBCHcgFGoiHUEKdyISIAFBKGooAAAiGGogFUEKdyIVIAEoACAiGWogFCABQRhqKAAAIhxqIAYgFXMgHXNqQQd3IBFqIgMgEnMgFSARIAFBHGooAAAiFGogHSAGQQp3IhVzIANzakEJd2oiEXNqQQt3IBVqIgYgEUEKdyIdcyASIBUgGmogESADQQp3IhJzIAZzakENd2oiA3NqQQ53IBJqIgJBCnciBWogBkEKdyIRIAFBNGooAAAiFWogEiAeaiADIBFzIAJzakEPdyAdaiIGIAVzIBEgHSABQTBqKAAAIhFqIAIgA0EKdyIdcyAGc2pBBndqIhJzakEHdyAdaiIKIBJBCnciDHMgHSABQThqKAAAIgFqIBIgBkEKdyIHcyAKc2pBCXcgBWoiCHNqQQh3IAdqIgVBCnciBmogBiAUIBYgHCAaIAAoAhgiHUEKdyIDaiADIA4gACgCHCInQQp3IgJqIAIgFCAAKAIgIhJqIAAoAiQiKCAoIAAoAhQiLCAnIBJBf3NyIB1zaiAXakHml4qFBWpBCHdqIgQgHSACQX9zcnNqIAFqQeaXioUFakEJdyASaiICIAQgA0F/c3JzakHml4qFBWpBCXdqIgMgAiAEQQp3IgRBf3Nyc2pB5peKhQVqQQt3aiIJIAMgAkEKdyICQX9zcnNqQeaXioUFakENdyAEaiINQQp3IgtqIBUgCUEKdyIQaiAPIANBCnciA2ogAyACIB5qIAQgE2ogDSAJIANBf3Nyc2pB5peKhQVqQQ93IAJqIgMgDSAQQX9zcnNqQeaXioUFakEPd2oiAiADIAtBf3Nyc2pB5peKhQVqQQV3IBBqIgQgAiADQQp3IgNBf3Nyc2pB5peKhQVqQQd3IAtqIgkgBCACQQp3IgJBf3Nyc2pB5peKhQVqQQd3IANqIg1BCnciC2ogGCAJQQp3IhBqIBsgBEEKdyIEaiACIBlqIAMgIGogDSAJIARBf3Nyc2pB5peKhQVqQQh3IAJqIgMgDSAQQX9zcnNqQeaXioUFakELdyAEaiICIAMgC0F/c3JzakHml4qFBWpBDncgEGoiBCACIANBCnciCUF/c3JzakHml4qFBWpBDncgC2oiDSAEIAJBCnciC0F/c3JzakHml4qFBWpBDHcgCWoiEEEKdyIDaiADIBYgDUEKdyICaiACIB4gBEEKdyIfaiALIBxqIBAgAkF/c3EgAiAFcXJqQaSit+IFakEJdyAfaiICIANxIAUgA0F/c3FyakGkorfiBWpBDXdqIgMgBnEgAiAGQX9zcXJqQaSit+IFakEPd2oiBCACQQp3IgZxIAMgBkF/c3FyakGkorfiBWpBB3dqIiEgA0EKdyIDcSAEIANBf3NxcmpBpKK34gVqQQx3IAZqIiJBCnciAmogASAhQQp3IgVqIBggBEEKdyIEaiADIBdqIAYgFWogBCAicSAhIARBf3NxcmpBpKK34gVqQQh3IANqIgYgBXEgIiAFQX9zcXJqQaSit+IFakEJdyAEaiIDIAJxIAYgAkF/c3FyakGkorfiBWpBC3cgBWoiBCAGQQp3IgZxIAMgBkF/c3FyakGkorfiBWpBB3cgAmoiISADQQp3IgNxIAQgA0F/c3FyakGkorfiBWpBB3cgBmoiIkEKdyICaiAaICFBCnciBWogDyAEQQp3IgRqIAMgEWogBiAZaiAEICJxICEgBEF/c3FyakGkorfiBWpBDHcgA2oiBiAFcSAiIAVBf3NxcmpBpKK34gVqQQd3IARqIgMgAnEgBiACQX9zcXJqQaSit+IFakEGdyAFaiIhIAZBCnciBnEgAyAGQX9zcXJqQaSit+IFakEPdyACaiIiIANBCnciA3EgISADQX9zcXJqQaSit+IFakENdyAGaiIpQQp3IipqIBsgASARIBsgCEEKdyIEaiAEIBUgCkEKdyIFaiAFIAwgD2ogByAUaiAJIBFqIBAgDSAfQX9zcnNqQeaXioUFakEGdyALaiICIAhxIAUgAkF/c3FyakGZ84nUBWpBB3cgDGoiBSACcSAEIAVBf3NxcmpBmfOJ1AVqQQZ3aiIEIAVxIAJBCnciCiAEQX9zcXJqQZnzidQFakEId2oiAiAEcSAFQQp3IgwgAkF/c3FyakGZ84nUBWpBDXcgCmoiBUEKdyIHaiAWIAJBCnciCGogICAEQQp3IgRqIAwgHGogCiAYaiACIAVxIAQgBUF/c3FyakGZ84nUBWpBC3cgDGoiAiAFcSAIIAJBf3NxcmpBmfOJ1AVqQQl3IARqIgUgAnEgByAFQX9zcXJqQZnzidQFakEHdyAIaiIEIAVxIAJBCnciCiAEQX9zcXJqQZnzidQFakEPdyAHaiICIARxIAVBCnciDCACQX9zcXJqQZnzidQFakEHdyAKaiIFQQp3IgdqIBMgAkEKdyIIaiAXIARBCnciBGogDCAaaiAKIA5qIAIgBXEgBCAFQX9zcXJqQZnzidQFakEMdyAMaiICIAVxIAggAkF/c3FyakGZ84nUBWpBD3cgBGoiBSACcSAHIAVBf3NxcmpBmfOJ1AVqQQl3IAhqIgQgBXEgAkEKdyIMIARBf3NxcmpBmfOJ1AVqQQt3IAdqIgIgBHEgBUEKdyIHIAJBf3NxcmpBmfOJ1AVqQQd3IAxqIgVBCnciCGogFyAhQQp3IgpqIAMgIGogBiATaiAKIClxICIgCkF/c3FyakGkorfiBWpBC3cgA2oiBiApQX9zciAIc2pB8/3A6wZqQQl3IApqIgMgBkF/c3IgKnNqQfP9wOsGakEHdyAIaiIKIANBf3NyIAZBCnciBnNqQfP9wOsGakEPdyAqaiIIIApBf3NyIANBCnciA3NqQfP9wOsGakELdyAGaiIJQQp3Ig1qIBogCEEKdyILaiAcIApBCnciCmogASADaiAGIBRqIAkgCEF/c3IgCnNqQfP9wOsGakEIdyADaiIGIAlBf3NyIAtzakHz/cDrBmpBBncgCmoiAyAGQX9zciANc2pB8/3A6wZqQQZ3IAtqIgogA0F/c3IgBkEKdyIGc2pB8/3A6wZqQQ53IA1qIgggCkF/c3IgA0EKdyIDc2pB8/3A6wZqQQx3IAZqIglBCnciDWogGCAIQQp3IgtqIBMgCkEKdyIKaiADIBFqIAYgGWogCSAIQX9zciAKc2pB8/3A6wZqQQ13IANqIgYgCUF/c3IgC3NqQfP9wOsGakEFdyAKaiIDIAZBf3NyIA1zakHz/cDrBmpBDncgC2oiCiADQX9zciAGQQp3IgZzakHz/cDrBmpBDXcgDWoiCCAKQX9zciADQQp3IgNzakHz/cDrBmpBDXcgBmoiCUEKdyINaiAcIAhBCnciC2ogGSAcIBkgGCACQQp3IhBqIBYgBEEKdyIEaiAiQQp3Ih8gBCAHIBlqIAwgHmogAiAFcSAEIAVBf3NxcmpBmfOJ1AVqQQ13IAdqIgIgBXEgECACQX9zIgRxcmpBmfOJ1AVqQQx3aiIFIARyc2pBodfn9gZqQQt3IBBqIgQgBUF/c3IgAkEKdyICc2pBodfn9gZqQQ13IB9qIgxBCnciB2ogICAEQQp3IhBqIBogBUEKdyIFaiACIA9qIAEgH2ogDCAEQX9zciAFc2pBodfn9gZqQQZ3IAJqIgIgDEF/c3IgEHNqQaHX5/YGakEHdyAFaiIFIAJBf3NyIAdzakGh1+f2BmpBDncgEGoiBCAFQX9zciACQQp3IgJzakGh1+f2BmpBCXcgB2oiDCAEQX9zciAFQQp3IgVzakGh1+f2BmpBDXcgAmoiB0EKdyIQaiAOIAxBCnciH2ogFCAEQQp3IgRqIAUgE2ogAiAbaiAHIAxBf3NyIARzakGh1+f2BmpBD3cgBWoiAiAHQX9zciAfc2pBodfn9gZqQQ53IARqIgUgAkF/c3IgEHNqQaHX5/YGakEIdyAfaiIEIAVBf3NyIAJBCnciDHNqQaHX5/YGakENdyAQaiIHIARBf3NyIAVBCnciBXNqQaHX5/YGakEGdyAMaiIQQQp3Ih9qIAMgFWogBiAPaiAKQQp3IgogCSAIQX9zcnNqQfP9wOsGakEHdyADaiICIAlBf3NyIAtzakHz/cDrBmpBBXcgCmoiBiACcSANIAZBf3NxcmpB6e210wdqQQ93IAtqIgMgBnEgAkEKdyIIIANBf3NxcmpB6e210wdqQQV3IA1qIgIgA3EgBkEKdyIJIAJBf3NxcmpB6e210wdqQQh3IAhqIgZBCnciDWogICACQQp3IgtqIB4gA0EKdyIDaiAJIBZqIAYgCCAbaiACIAZxIAMgBkF/c3FyakHp7bXTB2pBC3cgCWoiBnEgCyAGQX9zcXJqQenttdMHakEOdyADaiIDIAZxIA0gA0F/c3FyakHp7bXTB2pBDncgC2oiAiADcSAGQQp3IgggAkF/c3FyakHp7bXTB2pBBncgDWoiBiACcSADQQp3IgkgBkF/c3FyakHp7bXTB2pBDncgCGoiA0EKdyINaiAVIAZBCnciC2ogEyACQQp3IgJqIAkgEWogCCAXaiADIAZxIAIgA0F/c3FyakHp7bXTB2pBBncgCWoiBiADcSALIAZBf3NxcmpB6e210wdqQQl3IAJqIgMgBnEgDSADQX9zcXJqQenttdMHakEMdyALaiICIANxIAZBCnciCCACQX9zcXJqQenttdMHakEJdyANaiIGIAJxIANBCnciCSAGQX9zcXJqQenttdMHakEMdyAIaiIDQQp3Ig0gIGogASACQQp3IgJqIAkgGGogAyAIIBRqIAMgBnEgAiADQX9zcXJqQenttdMHakEFdyAJaiIDcSAGQQp3IgggA0F/c3FyakHp7bXTB2pBD3cgAmoiBiADcSANIAZBf3NxcmpB6e210wdqQQh3IAhqIgkgHCAWIA4gESAHQQp3IgJqIAIgFyAEQQp3IgRqIAUgHmogAiAMIBVqIBAgB0F/c3IgBHNqQaHX5/YGakEFdyAFaiICIBBBf3Nyc2pBodfn9gZqQQx3IARqIgQgAkF/c3IgH3NqQaHX5/YGakEHd2oiDCAEQX9zciACQQp3IgdzakGh1+f2BmpBBXcgH2oiC0EKdyICaiACIBggDEEKdyIFaiAFIB4gBEEKdyIEaiAEIAcgGmogCiAbaiAEIAtxIAwgBEF/c3FyakHc+e74eGpBC3cgB2oiBCAFcSALIAVBf3NxcmpB3Pnu+HhqQQx3aiIFIAJxIAQgAkF/c3FyakHc+e74eGpBDndqIgwgBEEKdyICcSAFIAJBf3NxcmpB3Pnu+HhqQQ93aiIHIAVBCnciBXEgDCAFQX9zcXJqQdz57vh4akEOdyACaiILQQp3IgRqIBUgB0EKdyIKaiAPIAxBCnciDGogBSARaiACIBlqIAsgDHEgByAMQX9zcXJqQdz57vh4akEPdyAFaiICIApxIAsgCkF/c3FyakHc+e74eGpBCXcgDGoiBSAEcSACIARBf3NxcmpB3Pnu+HhqQQh3IApqIgwgAkEKdyICcSAFIAJBf3NxcmpB3Pnu+HhqQQl3IARqIgcgBUEKdyIFcSAMIAVBf3NxcmpB3Pnu+HhqQQ53IAJqIgtBCnciBGogBCAXIAdBCnciCmogASAMQQp3IgxqIAUgIGogAiAUaiALIAxxIAcgDEF/c3FyakHc+e74eGpBBXcgBWoiAiAKcSALIApBf3NxcmpB3Pnu+HhqQQZ3IAxqIgUgBHEgAiAEQX9zcXJqQdz57vh4akEIdyAKaiIEIAJBCnciAnEgBSACQX9zcXJqQdz57vh4akEGd2oiCiAFQQp3IgVxIAQgBUF/c3FyakHc+e74eGpBBXcgAmoiDEEKdyIHcyAIIBFqIAwgA0EKdyIDcyAJc2pBCHcgDWoiCHNqQQV3IANqIg1BCnciCyAZaiAJQQp3IgkgG2ogAyAYaiAIIAlzIA1zakEMdyAHaiIDIAtzIAcgD2ogDSAIQQp3IgdzIANzakEJdyAJaiIIc2pBDHcgB2oiCSAIQQp3Ig1zIAcgF2ogCCADQQp3IgNzIAlzakEFdyALaiIHc2pBDncgA2oiCEEKdyILIAFqIAlBCnciCSATaiADIBRqIAcgCXMgCHNqQQZ3IA1qIgMgC3MgDSAcaiAIIAdBCnciB3MgA3NqQQh3IAlqIghzakENdyAHaiIJIAhBCnciDXMgByAVaiAIIANBCnciA3MgCXNqQQZ3IAtqIgdzakEFdyADaiIIQQp3IgsgLGo2AhQgACAjIAMgDmogByAJQQp3IgNzIAhzakEPdyANaiIJQQp3IhBqNgIQIAAgEiANIBZqIAggB0EKdyIjcyAJc2pBDXcgA2oiB0EKd2o2AiAgACArIBkgEyAOIARBCnciEmogBSAPaiACIBNqIAwgEnEgCiASQX9zcXJqQdz57vh4akEMdyAFaiIOIAYgCkEKdyIPQX9zcnNqQc76z8p6akEJdyASaiISIA4gBkEKdyIGQX9zcnNqQc76z8p6akEPdyAPaiICQQp3IgVqIBEgEkEKdyITaiAUIA5BCnciDmogDiAGIBpqIA8gF2ogAiASIA5Bf3Nyc2pBzvrPynpqQQV3IAZqIg4gAiATQX9zcnNqQc76z8p6akELd2oiDyAOIAVBf3Nyc2pBzvrPynpqQQZ3IBNqIhcgDyAOQQp3Ig5Bf3Nyc2pBzvrPynpqQQh3IAVqIhMgFyAPQQp3Ig9Bf3Nyc2pBzvrPynpqQQ13IA5qIhRBCnciEWogFiATQQp3IhlqIBsgF0EKdyIWaiABIA9qIA4gGGogFCATIBZBf3Nyc2pBzvrPynpqQQx3IA9qIgEgFCAZQX9zcnNqQc76z8p6akEFdyAWaiIOIAEgEUF/c3JzakHO+s/KempBDHcgGWoiDyAOIAFBCnciAUF/c3JzakHO+s/KempBDXcgEWoiFiAPIA5BCnciDkF/c3JzakHO+s/KempBDncgAWoiG0EKdyIXajYCACAAICcgAyAaaiAJIAtzIAdzakELdyAjaiIaajYCHCAAIAsgHWogHiAjaiAHIBBzIBpzakELd2o2AhggACAoIAEgHmogGyAWIA9BCnciAUF/c3JzakHO+s/KempBC3cgDmoiGkEKdyIeajYCJCAAICQgDiAcaiAaIBsgFkEKdyIOQX9zcnNqQc76z8p6akEIdyABaiIPQQp3ajYCDCAAICYgASAgaiAPIBogF0F/c3JzakHO+s/KempBBXcgDmoiAWo2AgggACAXICVqIA4gFWogASAPIB5Bf3Nyc2pBzvrPynpqQQZ3ajYCBAucLAEgfyAAIAFBLGooAAAiGSABQShqKAAAIg8gAUEUaigAACISIBIgAUE0aigAACIaIA8gEiABQRxqKAAAIhQgAUEkaigAACIbIAEoACAiCiAbIAFBGGooAAAiFiAUIBkgFiABKAAEIhMgACgCECIeaiAAKAIIIh9BCnciBSAAKAIEIh1zIAEoAAAiFyAAKAIAIiAgACgCDCIEIB0gH3NzampBC3cgHmoiEXNqQQ53IARqIhBBCnciA2ogASgAECIVIB1BCnciB2ogASgACCIYIARqIAcgEXMgEHNqQQ93IAVqIgIgA3MgAUEMaigAACIcIAVqIBAgEUEKdyIRcyACc2pBDHcgB2oiEHNqQQV3IBFqIgYgEEEKdyIIcyARIBJqIBAgAkEKdyIRcyAGc2pBCHcgA2oiEHNqQQd3IBFqIgNBCnciAmogGyAGQQp3IgZqIBEgFGogBiAQcyADc2pBCXcgCGoiESACcyAIIApqIAMgEEEKdyIQcyARc2pBC3cgBmoiA3NqQQ13IBBqIgYgA0EKdyIIcyACIA8gEGogAyARQQp3IgJzIAZzakEOd2oiA3NqQQ93IAJqIglBCnciC2ogA0EKdyIMIAFBPGooAAAiEWogCCAaaiACIAFBMGooAAAiEGogAyAGQQp3IgJzIAlzakEGdyAIaiIDIAkgDHNzakEHdyACaiIGIANBCnciCHMgAiABQThqKAAAIgFqIAMgC3MgBnNqQQl3IAxqIglzakEIdyALaiIDIAlxIAZBCnciBiADQX9zcXJqQZnzidQFakEHdyAIaiICQQp3IgtqIA8gA0EKdyIMaiATIAlBCnciCWogBiAaaiAIIBVqIAIgA3EgCSACQX9zcXJqQZnzidQFakEGdyAGaiIDIAJxIAwgA0F/c3FyakGZ84nUBWpBCHcgCWoiAiADcSALIAJBf3NxcmpBmfOJ1AVqQQ13IAxqIgYgAnEgA0EKdyIIIAZBf3NxcmpBmfOJ1AVqQQt3IAtqIgMgBnEgAkEKdyIJIANBf3NxcmpBmfOJ1AVqQQl3IAhqIgJBCnciC2ogFyADQQp3IgxqIBAgBkEKdyIGaiAJIBxqIAggEWogAiADcSAGIAJBf3NxcmpBmfOJ1AVqQQd3IAlqIgMgAnEgDCADQX9zcXJqQZnzidQFakEPdyAGaiICIANxIAsgAkF/c3FyakGZ84nUBWpBB3cgDGoiBiACcSADQQp3IgggBkF/c3FyakGZ84nUBWpBDHcgC2oiAyAGcSACQQp3IgkgA0F/c3FyakGZ84nUBWpBD3cgCGoiAkEKdyILaiAZIANBCnciDGogASAGQQp3IgZqIAkgGGogCCASaiACIANxIAYgAkF/c3FyakGZ84nUBWpBCXcgCWoiAyACcSAMIANBf3NxcmpBmfOJ1AVqQQt3IAZqIgIgA3EgCyACQX9zcXJqQZnzidQFakEHdyAMaiIGIAJxIANBCnciAyAGQX9zcXJqQZnzidQFakENdyALaiIIIAZxIAJBCnciAiAIQX9zIgxxcmpBmfOJ1AVqQQx3IANqIglBCnciC2ogFSAIQQp3IghqIAEgBkEKdyIGaiACIA9qIAMgHGogCSAMciAGc2pBodfn9gZqQQt3IAJqIgMgCUF/c3IgCHNqQaHX5/YGakENdyAGaiICIANBf3NyIAtzakGh1+f2BmpBBncgCGoiBiACQX9zciADQQp3IgNzakGh1+f2BmpBB3cgC2oiCCAGQX9zciACQQp3IgJzakGh1+f2BmpBDncgA2oiCUEKdyILaiAYIAhBCnciDGogEyAGQQp3IgZqIAIgCmogAyARaiAJIAhBf3NyIAZzakGh1+f2BmpBCXcgAmoiAyAJQX9zciAMc2pBodfn9gZqQQ13IAZqIgIgA0F/c3IgC3NqQaHX5/YGakEPdyAMaiIGIAJBf3NyIANBCnciA3NqQaHX5/YGakEOdyALaiIIIAZBf3NyIAJBCnciAnNqQaHX5/YGakEIdyADaiIJQQp3IgtqIBkgCEEKdyIMaiAaIAZBCnciBmogAiAWaiADIBdqIAkgCEF/c3IgBnNqQaHX5/YGakENdyACaiIDIAlBf3NyIAxzakGh1+f2BmpBBncgBmoiAiADQX9zciALc2pBodfn9gZqQQV3IAxqIgYgAkF/c3IgA0EKdyIIc2pBodfn9gZqQQx3IAtqIgkgBkF/c3IgAkEKdyILc2pBodfn9gZqQQd3IAhqIgxBCnciA2ogAyAZIAlBCnciAmogAiAbIAZBCnciBmogBiALIBNqIAggEGogDCAJQX9zciAGc2pBodfn9gZqQQV3IAtqIgYgAnEgDCACQX9zcXJqQdz57vh4akELd2oiAiADcSAGIANBf3NxcmpB3Pnu+HhqQQx3aiIJIAZBCnciA3EgAiADQX9zcXJqQdz57vh4akEOd2oiCyACQQp3IgJxIAkgAkF/c3FyakHc+e74eGpBD3cgA2oiDEEKdyIGaiAVIAtBCnciCGogECAJQQp3IglqIAIgCmogAyAXaiAJIAxxIAsgCUF/c3FyakHc+e74eGpBDncgAmoiAyAIcSAMIAhBf3NxcmpB3Pnu+HhqQQ93IAlqIgIgBnEgAyAGQX9zcXJqQdz57vh4akEJdyAIaiIJIANBCnciA3EgAiADQX9zcXJqQdz57vh4akEIdyAGaiILIAJBCnciAnEgCSACQX9zcXJqQdz57vh4akEJdyADaiIMQQp3IgZqIAEgC0EKdyIIaiARIAlBCnciCWogAiAUaiADIBxqIAkgDHEgCyAJQX9zcXJqQdz57vh4akEOdyACaiIDIAhxIAwgCEF/c3FyakHc+e74eGpBBXcgCWoiAiAGcSADIAZBf3NxcmpB3Pnu+HhqQQZ3IAhqIgggA0EKdyIDcSACIANBf3NxcmpB3Pnu+HhqQQh3IAZqIgkgAkEKdyICcSAIIAJBf3NxcmpB3Pnu+HhqQQZ3IANqIgtBCnciDGogFyAJQQp3IgZqIBUgCEEKdyIIaiACIBhqIAMgFmogCCALcSAJIAhBf3NxcmpB3Pnu+HhqQQV3IAJqIgMgBnEgCyAGQX9zcXJqQdz57vh4akEMdyAIaiICIAMgDEF/c3JzakHO+s/KempBCXcgBmoiBiACIANBCnciA0F/c3JzakHO+s/KempBD3cgDGoiCCAGIAJBCnciAkF/c3JzakHO+s/KempBBXcgA2oiCUEKdyILaiAYIAhBCnciDGogECAGQQp3IgZqIAIgFGogAyAbaiAJIAggBkF/c3JzakHO+s/KempBC3cgAmoiAyAJIAxBf3Nyc2pBzvrPynpqQQZ3IAZqIgIgAyALQX9zcnNqQc76z8p6akEIdyAMaiIGIAIgA0EKdyIDQX9zcnNqQc76z8p6akENdyALaiIIIAYgAkEKdyICQX9zcnNqQc76z8p6akEMdyADaiIJQQp3IgtqIAogCEEKdyIMaiAcIAZBCnciBmogAiATaiABIANqIAkgCCAGQX9zcnNqQc76z8p6akEFdyACaiIDIAkgDEF/c3JzakHO+s/KempBDHcgBmoiAiADIAtBf3Nyc2pBzvrPynpqQQ13IAxqIgYgAiADQQp3IghBf3Nyc2pBzvrPynpqQQ53IAtqIgkgBiACQQp3IgtBf3Nyc2pBzvrPynpqQQt3IAhqIgxBCnciISAEaiABIAogGyAXIBUgFyAZIBwgEyARIBcgECARIBggICAfIARBf3NyIB1zaiASakHml4qFBWpBCHcgHmoiA0EKdyICaiAHIBtqIAUgF2ogBCAUaiAeIAMgHSAFQX9zcnNqIAFqQeaXioUFakEJdyAEaiIEIAMgB0F/c3JzakHml4qFBWpBCXcgBWoiBSAEIAJBf3Nyc2pB5peKhQVqQQt3IAdqIgcgBSAEQQp3IgRBf3Nyc2pB5peKhQVqQQ13IAJqIgMgByAFQQp3IgVBf3Nyc2pB5peKhQVqQQ93IARqIgJBCnciDWogFiADQQp3Ig5qIBogB0EKdyIHaiAFIBVqIAQgGWogAiADIAdBf3Nyc2pB5peKhQVqQQ93IAVqIgQgAiAOQX9zcnNqQeaXioUFakEFdyAHaiIFIAQgDUF/c3JzakHml4qFBWpBB3cgDmoiByAFIARBCnciBEF/c3JzakHml4qFBWpBB3cgDWoiAyAHIAVBCnciBUF/c3JzakHml4qFBWpBCHcgBGoiAkEKdyINaiAcIANBCnciDmogDyAHQQp3IgdqIAUgE2ogBCAKaiACIAMgB0F/c3JzakHml4qFBWpBC3cgBWoiBCACIA5Bf3Nyc2pB5peKhQVqQQ53IAdqIgUgBCANQX9zcnNqQeaXioUFakEOdyAOaiIHIAUgBEEKdyIDQX9zcnNqQeaXioUFakEMdyANaiICIAcgBUEKdyINQX9zcnNqQeaXioUFakEGdyADaiIOQQp3IgRqIAQgFCACQQp3IgVqIAUgHCAHQQp3IgdqIAcgDSAZaiADIBZqIAcgDnEgAiAHQX9zcXJqQaSit+IFakEJdyANaiIHIAVxIA4gBUF/c3FyakGkorfiBWpBDXdqIgUgBHEgByAEQX9zcXJqQaSit+IFakEPd2oiAiAHQQp3IgRxIAUgBEF/c3FyakGkorfiBWpBB3dqIg0gBUEKdyIFcSACIAVBf3NxcmpBpKK34gVqQQx3IARqIg5BCnciB2ogASANQQp3IgNqIA8gAkEKdyICaiAFIBJqIAQgGmogAiAOcSANIAJBf3NxcmpBpKK34gVqQQh3IAVqIgQgA3EgDiADQX9zcXJqQaSit+IFakEJdyACaiIFIAdxIAQgB0F/c3FyakGkorfiBWpBC3cgA2oiAiAEQQp3IgRxIAUgBEF/c3FyakGkorfiBWpBB3cgB2oiDSAFQQp3IgVxIAIgBUF/c3FyakGkorfiBWpBB3cgBGoiDkEKdyIHaiAHIBsgDUEKdyIDaiAVIAJBCnciAmogBSAQaiAEIApqIAIgDnEgDSACQX9zcXJqQaSit+IFakEMdyAFaiIEIANxIA4gA0F/c3FyakGkorfiBWpBB3cgAmoiBSAHcSAEIAdBf3NxcmpBpKK34gVqQQZ3IANqIgcgBEEKdyIEcSAFIARBf3NxcmpBpKK34gVqQQ93aiIDIAVBCnciBXEgByAFQX9zcXJqQaSit+IFakENdyAEaiICQQp3Ig1qIBMgA0EKdyIOaiASIAdBCnciB2ogBSARaiAEIBhqIAIgB3EgAyAHQX9zcXJqQaSit+IFakELdyAFaiIEIAJBf3NyIA5zakHz/cDrBmpBCXcgB2oiBSAEQX9zciANc2pB8/3A6wZqQQd3IA5qIgcgBUF/c3IgBEEKdyIEc2pB8/3A6wZqQQ93IA1qIgMgB0F/c3IgBUEKdyIFc2pB8/3A6wZqQQt3IARqIgJBCnciDWogGyADQQp3Ig5qIBYgB0EKdyIHaiABIAVqIAQgFGogAiADQX9zciAHc2pB8/3A6wZqQQh3IAVqIgQgAkF/c3IgDnNqQfP9wOsGakEGdyAHaiIFIARBf3NyIA1zakHz/cDrBmpBBncgDmoiByAFQX9zciAEQQp3IgRzakHz/cDrBmpBDncgDWoiAyAHQX9zciAFQQp3IgVzakHz/cDrBmpBDHcgBGoiAkEKdyINaiAPIANBCnciDmogGCAHQQp3IgdqIAUgEGogBCAKaiACIANBf3NyIAdzakHz/cDrBmpBDXcgBWoiBCACQX9zciAOc2pB8/3A6wZqQQV3IAdqIgUgBEF/c3IgDXNqQfP9wOsGakEOdyAOaiIHIAVBf3NyIARBCnciBHNqQfP9wOsGakENdyANaiIDIAdBf3NyIAVBCnciBXNqQfP9wOsGakENdyAEaiICQQp3Ig1qIBYgA0EKdyIOaiAKIAdBCnciB2ogBSAaaiAEIBVqIAIgA0F/c3IgB3NqQfP9wOsGakEHdyAFaiIFIAJBf3NyIA5zakHz/cDrBmpBBXcgB2oiCiAFcSANIApBf3NxcmpB6e210wdqQQ93IA5qIgQgCnEgBUEKdyIHIARBf3NxcmpB6e210wdqQQV3IA1qIgUgBHEgCkEKdyIDIAVBf3NxcmpB6e210wdqQQh3IAdqIgpBCnciAmogESAFQQp3Ig1qIBkgBEEKdyIEaiADIBxqIAogByATaiAFIApxIAQgCkF/c3FyakHp7bXTB2pBC3cgA2oiCnEgDSAKQX9zcXJqQenttdMHakEOdyAEaiIEIApxIAIgBEF/c3FyakHp7bXTB2pBDncgDWoiBSAEcSAKQQp3IgcgBUF/c3FyakHp7bXTB2pBBncgAmoiCiAFcSAEQQp3IgMgCkF/c3FyakHp7bXTB2pBDncgB2oiBEEKdyICaiAaIApBCnciDWogGCAFQQp3IgVqIAMgEGogByASaiAEIApxIAUgBEF/c3FyakHp7bXTB2pBBncgA2oiCiAEcSANIApBf3NxcmpB6e210wdqQQl3IAVqIgQgCnEgAiAEQX9zcXJqQenttdMHakEMdyANaiIFIARxIApBCnciByAFQX9zcXJqQenttdMHakEJdyACaiIKIAVxIARBCnciAyAKQX9zcXJqQenttdMHakEMdyAHaiIEQQp3IgIgEWogASAFQQp3IgVqIAMgD2ogByAUaiAEIApxIAUgBEF/c3FyakHp7bXTB2pBBXcgA2oiASAEcSAKQQp3IgQgAUF/c3FyakHp7bXTB2pBD3cgBWoiCiABcSACIApBf3NxcmpB6e210wdqQQh3IARqIgUgCkEKdyIHcyAEIBBqIAogAUEKdyIBcyAFc2pBCHcgAmoiCnNqQQV3IAFqIhBBCnciBGogEyAFQQp3IhNqIAEgD2ogCiATcyAQc2pBDHcgB2oiASAEcyAHIBVqIBAgCkEKdyIPcyABc2pBCXcgE2oiCnNqQQx3IA9qIhMgCkEKdyIVcyAPIBJqIAogAUEKdyIBcyATc2pBBXcgBGoiD3NqQQ53IAFqIhJBCnciCmogE0EKdyITIBhqIAEgFGogDyATcyASc2pBBncgFWoiASAKcyAVIBZqIBIgD0EKdyIPcyABc2pBCHcgE2oiEnNqQQ13IA9qIhQgEkEKdyITcyAPIBpqIBIgAUEKdyIBcyAUc2pBBncgCmoiD3NqQQV3IAFqIhJBCnciCmo2AgggACABIBdqIA8gFEEKdyIBcyASc2pBD3cgE2oiFEEKdyIYIB8gCCAWaiAMIAkgBkEKdyIWQX9zcnNqQc76z8p6akEIdyALaiIXQQp3amo2AgQgACAdIAsgEWogFyAMIAlBCnciFUF/c3JzakHO+s/KempBBXcgFmoiEWogEyAcaiASIA9BCnciD3MgFHNqQQ13IAFqIhJBCndqNgIAIAAgASAbaiAKIBRzIBJzakELdyAPaiIBIBUgIGogFiAaaiARIBcgIUF/c3JzakHO+s/KempBBndqajYCECAAIBUgHmogCmogDyAZaiASIBhzIAFzakELd2o2AgwLiiIBT38gACABQTRqKAAAIgNBGHQgA0EIdEGAgPwHcXIgA0EIdkGA/gNxIANBGHZyciIDIAEoACAiAkEYdCACQQh0QYCA/AdxciACQQh2QYD+A3EgAkEYdnJyIgogASgACCICQRh0IAJBCHRBgID8B3FyIAJBCHZBgP4DcSACQRh2cnIiCyABKAAAIgJBGHQgAkEIdEGAgPwHcXIgAkEIdkGA/gNxIAJBGHZyciIUc3NzQQF3IgIgAUEsaigAACIEQRh0IARBCHRBgID8B3FyIARBCHZBgP4DcSAEQRh2cnIiECABQRRqKAAAIgRBGHQgBEEIdEGAgPwHcXIgBEEIdkGA/gNxIARBGHZyciINIAFBDGooAAAiBEEYdCAEQQh0QYCA/AdxciAEQQh2QYD+A3EgBEEYdnJyIhVzc3NBAXciBCABQThqKAAAIgZBGHQgBkEIdEGAgPwHcXIgBkEIdkGA/gNxIAZBGHZyciIGIAFBJGooAAAiBUEYdCAFQQh0QYCA/AdxciAFQQh2QYD+A3EgBUEYdnJyIg4gFSABKAAEIgVBGHQgBUEIdEGAgPwHcXIgBUEIdkGA/gNxIAVBGHZyciIWc3NzQQF3IgVzIAogAUEYaigAACIHQRh0IAdBCHRBgID8B3FyIAdBCHZBgP4DcSAHQRh2cnIiRHMgBnMgBHNBAXciByAOIBBzIAVzc0EBdyIJcyABQShqKAAAIghBGHQgCEEIdEGAgPwHcXIgCEEIdkGA/gNxIAhBGHZyciIMIApzIAJzIAFBPGooAAAiCEEYdCAIQQh0QYCA/AdxciAIQQh2QYD+A3EgCEEYdnJyIgggASgAECIPQRh0IA9BCHRBgID8B3FyIA9BCHZBgP4DcSAPQRh2cnIiRSALcyAMc3NBAXciDyABQRxqKAAAIhNBGHQgE0EIdEGAgPwHcXIgE0EIdkGA/gNxIBNBGHZyciJGIA1zIANzc0EBdyITc0EBdyIXIAMgEHMgBHNzQQF3IhggAiAGcyAHc3NBAXciGXNBAXciGiABQTBqKAAAIgFBGHQgAUEIdEGAgPwHcXIgAUEIdkGA/gNxIAFBGHZyciI/IEQgRXNzIAVzQQF3IgEgDiBGcyAIc3NBAXciGyAFIAhzcyAGID9zIAFzIAlzQQF3IhxzQQF3Ih1zIAEgB3MgHHMgGnNBAXciHiAJIBtzIB1zc0EBdyIfcyAMID9zIA9zIBtzQQF3IiAgAyAIcyATc3NBAXciISACIA9zIBdzc0EBdyIiIAQgE3MgGHNzQQF3IiMgByAXcyAZc3NBAXciJCAJIBhzIBpzc0EBdyIlIBkgHHMgHnNzQQF3IiZzQQF3IicgASAPcyAgcyAdc0EBdyIoIBMgG3MgIXNzQQF3IikgHSAhc3MgHCAgcyAocyAfc0EBdyIqc0EBdyIrcyAeIChzICpzICdzQQF3IiwgHyApcyArc3NBAXciLXMgFyAgcyAicyApc0EBdyIuIBggIXMgI3NzQQF3Ii8gGSAicyAkc3NBAXciMCAaICNzICVzc0EBdyIxIB4gJHMgJnNzQQF3IjIgHyAlcyAnc3NBAXciMyAmICpzICxzc0EBdyI0c0EBdyI1ICIgKHMgLnMgK3NBAXciNiAjIClzIC9zc0EBdyI3ICsgL3NzICogLnMgNnMgLXNBAXciOHNBAXciOXMgLCA2cyA4cyA1c0EBdyJAIC0gN3MgOXNzQQF3IkdzICQgLnMgMHMgN3NBAXciOiAlIC9zIDFzc0EBdyI7ICYgMHMgMnNzQQF3IjwgJyAxcyAzc3NBAXciPSAsIDJzIDRzc0EBdyJIIC0gM3MgNXNzQQF3IkkgNCA4cyBAc3NBAXciTnNBAXciTyAwIDZzIDpzIDlzQQF3Ij4gOCA6c3MgR3NBAXciSiAxIDdzIDtzID5zQQF3IkEgPCAzICwgKyAuICMgGSAJIAEgCCAMIA0gACgCECJQIAAoAgAiQkEFdyAUaiAAKAIEIksgACgCDCJDIAAoAggiFHNxIENzampBmfOJ1AVqIhJBHnciEWogCyAUaiASIEtBHnciCyBCQR53Ig1zcSALc2ogQyALIBRzIEJxIBRzaiAWaiASQQV3akGZ84nUBWoiTEEFd2pBmfOJ1AVqIk1BHnciEiBMQR53IhZzIAsgFWogTCANIBFzcSANc2ogTUEFd2pBmfOJ1AVqIgtxIBZzaiANIEVqIBEgFnMgTXEgEXNqIAtBBXdqQZnzidQFaiINQQV3akGZ84nUBWoiFUEedyIRaiAKIAtBHnciDGogFiBEaiANIAwgEnNxIBJzaiAVQQV3akGZ84nUBWoiCyARIA1BHnciCnNxIApzaiASIEZqIBUgCiAMc3EgDHNqIAtBBXdqQZnzidQFaiINQQV3akGZ84nUBWoiEiANQR53IgwgC0EedyILc3EgC3NqIAogDmogCyARcyANcSARc2ogEkEFd2pBmfOJ1AVqIg5BBXdqQZnzidQFaiIRQR53IgpqIAMgEkEedyIIaiALIBBqIA4gCCAMc3EgDHNqIBFBBXdqQZnzidQFaiIQIAogDkEedyIDc3EgA3NqIAwgP2ogAyAIcyARcSAIc2ogEEEFd2pBmfOJ1AVqIg5BBXdqQZnzidQFaiIMIA5BHnciCCAQQR53IhBzcSAQc2ogAyAGaiAOIAogEHNxIApzaiAMQQV3akGZ84nUBWoiCkEFd2pBmfOJ1AVqIg5BHnciA2ogBSAIaiAKQR53IgEgDEEedyIGcyAOcSAGc2ogAiAQaiAGIAhzIApxIAhzaiAOQQV3akGZ84nUBWoiAkEFd2pBmfOJ1AVqIgVBHnciCCACQR53IgpzIAYgD2ogAiABIANzcSABc2ogBUEFd2pBmfOJ1AVqIgJzaiABIARqIAUgAyAKc3EgA3NqIAJBBXdqQZnzidQFaiIBQQV3akGh1+f2BmoiA0EedyIEaiAHIAhqIAFBHnciBiACQR53IgJzIANzaiAKIBNqIAIgCHMgAXNqIANBBXdqQaHX5/YGaiIBQQV3akGh1+f2BmoiA0EedyIFIAFBHnciB3MgAiAbaiAEIAZzIAFzaiADQQV3akGh1+f2BmoiAXNqIAYgF2ogBCAHcyADc2ogAUEFd2pBodfn9gZqIgNBBXdqQaHX5/YGaiICQR53IgRqIAUgGGogA0EedyIGIAFBHnciAXMgAnNqIAcgIGogASAFcyADc2ogAkEFd2pBodfn9gZqIgNBBXdqQaHX5/YGaiICQR53IgUgA0EedyIHcyABIBxqIAQgBnMgA3NqIAJBBXdqQaHX5/YGaiIBc2ogBiAhaiAEIAdzIAJzaiABQQV3akGh1+f2BmoiA0EFd2pBodfn9gZqIgJBHnciBGogBSAiaiADQR53IgYgAUEedyIBcyACc2ogByAdaiABIAVzIANzaiACQQV3akGh1+f2BmoiA0EFd2pBodfn9gZqIgJBHnciBSADQR53IgdzIAEgGmogBCAGcyADc2ogAkEFd2pBodfn9gZqIgFzaiAGIChqIAQgB3MgAnNqIAFBBXdqQaHX5/YGaiIDQQV3akGh1+f2BmoiAkEedyIEaiAFIClqIANBHnciCSABQR53IghzIAJzaiAHIB5qIAUgCHMgA3NqIAJBBXdqQaHX5/YGaiIDQQV3akGh1+f2BmoiAkEedyIBIANBHnciBnMgCCAkaiAEIAlzIANzaiACQQV3akGh1+f2BmoiBXEgASAGcXNqIAkgH2ogBCAGcyACc2ogBUEFd2pBodfn9gZqIgdBBXdqQdz57vh4aiIJQR53IgNqIAEgKmogCSAHQR53IgIgBUEedyIEc3EgAiAEcXNqIAYgJWogASAEcyAHcSABIARxc2ogCUEFd2pB3Pnu+HhqIgVBBXdqQdz57vh4aiIHQR53IgEgBUEedyIGcyAEIC9qIAUgAiADc3EgAiADcXNqIAdBBXdqQdz57vh4aiIEcSABIAZxc2ogAiAmaiADIAZzIAdxIAMgBnFzaiAEQQV3akHc+e74eGoiBUEFd2pB3Pnu+HhqIgdBHnciA2ogNiAEQR53IgJqIAYgMGogBSABIAJzcSABIAJxc2ogB0EFd2pB3Pnu+HhqIgYgAyAFQR53IgRzcSADIARxc2ogASAnaiAHIAIgBHNxIAIgBHFzaiAGQQV3akHc+e74eGoiBUEFd2pB3Pnu+HhqIgcgBUEedyIBIAZBHnciAnNxIAEgAnFzaiAEIDFqIAIgA3MgBXEgAiADcXNqIAdBBXdqQdz57vh4aiIGQQV3akHc+e74eGoiBUEedyIDaiAtIAdBHnciBGogAiA3aiAGIAEgBHNxIAEgBHFzaiAFQQV3akHc+e74eGoiByADIAZBHnciAnNxIAIgA3FzaiABIDJqIAIgBHMgBXEgAiAEcXNqIAdBBXdqQdz57vh4aiIGQQV3akHc+e74eGoiBSAGQR53IgEgB0EedyIEc3EgASAEcXNqIAIgOmogBiADIARzcSADIARxc2ogBUEFd2pB3Pnu+HhqIgdBBXdqQdz57vh4aiIJQR53IgNqIAEgO2ogB0EedyICIAVBHnciBnMgCXEgAiAGcXNqIAQgOGogASAGcyAHcSABIAZxc2ogCUEFd2pB3Pnu+HhqIgRBBXdqQdz57vh4aiIFQR53IgcgBEEedyIBcyAGIDRqIAQgAiADc3EgAiADcXNqIAVBBXdqQdz57vh4aiIEc2ogAiA5aiAFIAEgA3NxIAEgA3FzaiAEQQV3akHc+e74eGoiA0EFd2pB1oOL03xqIgJBHnciBmogByA+aiADQR53IgUgBEEedyIEcyACc2ogASA1aiAEIAdzIANzaiACQQV3akHWg4vTfGoiAUEFd2pB1oOL03xqIgNBHnciAiABQR53IgdzIAQgPWogBSAGcyABc2ogA0EFd2pB1oOL03xqIgFzaiAFIEBqIAYgB3MgA3NqIAFBBXdqQdaDi9N8aiIDQQV3akHWg4vTfGoiBEEedyIGaiACIEdqIANBHnciBSABQR53IgFzIARzaiAHIEhqIAEgAnMgA3NqIARBBXdqQdaDi9N8aiIDQQV3akHWg4vTfGoiAkEedyIEIANBHnciB3MgASAyIDpzIDxzIEFzQQF3IgFqIAUgBnMgA3NqIAJBBXdqQdaDi9N8aiIDc2ogBSBJaiAGIAdzIAJzaiADQQV3akHWg4vTfGoiAkEFd2pB1oOL03xqIgZBHnciBWogBCBOaiACQR53IgkgA0EedyIDcyAGc2ogByAzIDtzID1zIAFzQQF3IgdqIAMgBHMgAnNqIAZBBXdqQdaDi9N8aiICQQV3akHWg4vTfGoiBEEedyIGIAJBHnciCHMgOSA7cyBBcyBKc0EBdyIPIANqIAUgCXMgAnNqIARBBXdqQdaDi9N8aiIDc2ogCSA0IDxzIEhzIAdzQQF3IglqIAUgCHMgBHNqIANBBXdqQdaDi9N8aiICQQV3akHWg4vTfGoiBEEedyIFIFBqNgIQIAAgQyAIIDwgPnMgAXMgD3NBAXciCGogA0EedyIBIAZzIAJzaiAEQQV3akHWg4vTfGoiA0EedyIPajYCDCAAIBQgNSA9cyBJcyAJc0EBdyAGaiACQR53IgIgAXMgBHNqIANBBXdqQdaDi9N8aiIEQR53ajYCCCAAIEsgPiBAcyBKcyBPc0EBdyABaiACIAVzIANzaiAEQQV3akHWg4vTfGoiAWo2AgQgACBCID0gQXMgB3MgCHNBAXdqIAJqIAUgD3MgBHNqIAFBBXdqQdaDi9N8ajYCAAvNKgIGfwN+IwBBgAFrIgIkACAAQdQAaiEDIABBEGohBCAAKQMIIQggACkDACEJAkACQCAAQdAAaiIFKAIAIgFBgAFGBEAgAiADQYABEH0iASABKQMAIgdCOIYgB0IohkKAgICAgIDA/wCDhCAHQhiGQoCAgICA4D+DIAdCCIZCgICAgPAfg4SEIAdCCIhCgICA+A+DIAdCGIhCgID8B4OEIAdCKIhCgP4DgyAHQjiIhISENwMAIAEgASkDCCIHQjiGIAdCKIZCgICAgICAwP8Ag4QgB0IYhkKAgICAgOA/gyAHQgiGQoCAgIDwH4OEhCAHQgiIQoCAgPgPgyAHQhiIQoCA/AeDhCAHQiiIQoD+A4MgB0I4iISEhDcDCCABIAEpAxAiB0I4hiAHQiiGQoCAgICAgMD/AIOEIAdCGIZCgICAgIDgP4MgB0IIhkKAgICA8B+DhIQgB0IIiEKAgID4D4MgB0IYiEKAgPwHg4QgB0IoiEKA/gODIAdCOIiEhIQ3AxAgASABKQMYIgdCOIYgB0IohkKAgICAgIDA/wCDhCAHQhiGQoCAgICA4D+DIAdCCIZCgICAgPAfg4SEIAdCCIhCgICA+A+DIAdCGIhCgID8B4OEIAdCKIhCgP4DgyAHQjiIhISENwMYIAEgASkDICIHQjiGIAdCKIZCgICAgICAwP8Ag4QgB0IYhkKAgICAgOA/gyAHQgiGQoCAgIDwH4OEhCAHQgiIQoCAgPgPgyAHQhiIQoCA/AeDhCAHQiiIQoD+A4MgB0I4iISEhDcDICABIAEpAygiB0I4hiAHQiiGQoCAgICAgMD/AIOEIAdCGIZCgICAgIDgP4MgB0IIhkKAgICA8B+DhIQgB0IIiEKAgID4D4MgB0IYiEKAgPwHg4QgB0IoiEKA/gODIAdCOIiEhIQ3AyggASABKQMwIgdCOIYgB0IohkKAgICAgIDA/wCDhCAHQhiGQoCAgICA4D+DIAdCCIZCgICAgPAfg4SEIAdCCIhCgICA+A+DIAdCGIhCgID8B4OEIAdCKIhCgP4DgyAHQjiIhISENwMwIAEgASkDOCIHQjiGIAdCKIZCgICAgICAwP8Ag4QgB0IYhkKAgICAgOA/gyAHQgiGQoCAgIDwH4OEhCAHQgiIQoCAgPgPgyAHQhiIQoCA/AeDhCAHQiiIQoD+A4MgB0I4iISEhDcDOCABIAEpA0AiB0I4hiAHQiiGQoCAgICAgMD/AIOEIAdCGIZCgICAgIDgP4MgB0IIhkKAgICA8B+DhIQgB0IIiEKAgID4D4MgB0IYiEKAgPwHg4QgB0IoiEKA/gODIAdCOIiEhIQ3A0AgASABKQNIIgdCOIYgB0IohkKAgICAgIDA/wCDhCAHQhiGQoCAgICA4D+DIAdCCIZCgICAgPAfg4SEIAdCCIhCgICA+A+DIAdCGIhCgID8B4OEIAdCKIhCgP4DgyAHQjiIhISENwNIIAEgASkDUCIHQjiGIAdCKIZCgICAgICAwP8Ag4QgB0IYhkKAgICAgOA/gyAHQgiGQoCAgIDwH4OEhCAHQgiIQoCAgPgPgyAHQhiIQoCA/AeDhCAHQiiIQoD+A4MgB0I4iISEhDcDUCABIAEpA1giB0I4hiAHQiiGQoCAgICAgMD/AIOEIAdCGIZCgICAgIDgP4MgB0IIhkKAgICA8B+DhIQgB0IIiEKAgID4D4MgB0IYiEKAgPwHg4QgB0IoiEKA/gODIAdCOIiEhIQ3A1ggASABKQNgIgdCOIYgB0IohkKAgICAgIDA/wCDhCAHQhiGQoCAgICA4D+DIAdCCIZCgICAgPAfg4SEIAdCCIhCgICA+A+DIAdCGIhCgID8B4OEIAdCKIhCgP4DgyAHQjiIhISENwNgIAEgASkDaCIHQjiGIAdCKIZCgICAgICAwP8Ag4QgB0IYhkKAgICAgOA/gyAHQgiGQoCAgIDwH4OEhCAHQgiIQoCAgPgPgyAHQhiIQoCA/AeDhCAHQiiIQoD+A4MgB0I4iISEhDcDaCABIAEpA3AiB0I4hiAHQiiGQoCAgICAgMD/AIOEIAdCGIZCgICAgIDgP4MgB0IIhkKAgICA8B+DhIQgB0IIiEKAgID4D4MgB0IYiEKAgPwHg4QgB0IoiEKA/gODIAdCOIiEhIQ3A3AgASABKQN4IgdCOIYgB0IohkKAgICAgIDA/wCDhCAHQhiGQoCAgICA4D+DIAdCCIZCgICAgPAfg4SEIAdCCIhCgICA+A+DIAdCGIhCgID8B4OEIAdCKIhCgP4DgyAHQjiIhISENwN4IAQgARADQQAhASAFQQA2AgAMAQsgAUH/AEsNAQsgAEHQAGoiBSABakEEakGAAToAACAAIAAoAlAiBkEBaiIBNgJQAkAgAUGBAUkEQCABIAVqQQRqQQBB/wAgBmsQggFBgAEgACgCUGtBD00EQCACIANBgAEQfSIBIAEpAwAiB0I4hiAHQiiGQoCAgICAgMD/AIOEIAdCGIZCgICAgIDgP4MgB0IIhkKAgICA8B+DhIQgB0IIiEKAgID4D4MgB0IYiEKAgPwHg4QgB0IoiEKA/gODIAdCOIiEhIQ3AwAgASABKQMIIgdCOIYgB0IohkKAgICAgIDA/wCDhCAHQhiGQoCAgICA4D+DIAdCCIZCgICAgPAfg4SEIAdCCIhCgICA+A+DIAdCGIhCgID8B4OEIAdCKIhCgP4DgyAHQjiIhISENwMIIAEgASkDECIHQjiGIAdCKIZCgICAgICAwP8Ag4QgB0IYhkKAgICAgOA/gyAHQgiGQoCAgIDwH4OEhCAHQgiIQoCAgPgPgyAHQhiIQoCA/AeDhCAHQiiIQoD+A4MgB0I4iISEhDcDECABIAEpAxgiB0I4hiAHQiiGQoCAgICAgMD/AIOEIAdCGIZCgICAgIDgP4MgB0IIhkKAgICA8B+DhIQgB0IIiEKAgID4D4MgB0IYiEKAgPwHg4QgB0IoiEKA/gODIAdCOIiEhIQ3AxggASABKQMgIgdCOIYgB0IohkKAgICAgIDA/wCDhCAHQhiGQoCAgICA4D+DIAdCCIZCgICAgPAfg4SEIAdCCIhCgICA+A+DIAdCGIhCgID8B4OEIAdCKIhCgP4DgyAHQjiIhISENwMgIAEgASkDKCIHQjiGIAdCKIZCgICAgICAwP8Ag4QgB0IYhkKAgICAgOA/gyAHQgiGQoCAgIDwH4OEhCAHQgiIQoCAgPgPgyAHQhiIQoCA/AeDhCAHQiiIQoD+A4MgB0I4iISEhDcDKCABIAEpAzAiB0I4hiAHQiiGQoCAgICAgMD/AIOEIAdCGIZCgICAgIDgP4MgB0IIhkKAgICA8B+DhIQgB0IIiEKAgID4D4MgB0IYiEKAgPwHg4QgB0IoiEKA/gODIAdCOIiEhIQ3AzAgASABKQM4IgdCOIYgB0IohkKAgICAgIDA/wCDhCAHQhiGQoCAgICA4D+DIAdCCIZCgICAgPAfg4SEIAdCCIhCgICA+A+DIAdCGIhCgID8B4OEIAdCKIhCgP4DgyAHQjiIhISENwM4IAEgASkDQCIHQjiGIAdCKIZCgICAgICAwP8Ag4QgB0IYhkKAgICAgOA/gyAHQgiGQoCAgIDwH4OEhCAHQgiIQoCAgPgPgyAH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NwIAIANBJGogBSkDADcCACADQSxqIAspAwA3AgAgA0E0aiAKKQMANwIAIANBPGogCSkDADcCACADQcQAaiAIKQMANwIAIANBzABqIAcpAwA3AgBBhIDAACEEQQAhBQwNCyACQYIEakIANwEAIAJBigRqQQA7AQAgAkGMBGpCADcCACACQZQEakIANwIAIAJBnARqQgA3AgAgAkGkBGpCADcCACACQawEakIANwIAIAJBtARqQQA6AAAgAkG1BGpBADYAACACQbkEakEAOwAAIAJBuwRqQQA6AAAgAkHAADYC+AMgAkEAOwH8AyACQQA2Af4DIAJBmAFqIAJB+ANqQcQAEH0aIAJBmANqIgQgAkHUAWopAgA3AwAgAkGQA2oiBSACQcwBaikCADcDACACQYgDaiIGIAJBxAFqKQIANwMAIAJBgANqIgcgAkG8AWopAgA3AwAgAkH4AmoiCCACQbQBaikCADcDACACQfACaiIJIAJBrAFqKQIANwMAIAJB6AJqIgogAkGkAWopAgA3AwAgAiACKQKcATcD4AJB4ABBCBCYASIDRQ0TIANBADYCCCADQgA3AwAgAyACKQPgAjcCDCADQRRqIAopAwA3AgAgA0EcaiAJKQMANwIAIANBJGogCCkDADcCACADQSxqIAcpAwA3AgAgA0E0aiAGKQMANwIAIANBPGogBSkDADcCACADQcQAaiAEKQMANwIAIANB1ABqQeCXwAApAwA3AgAgA0HYl8AAKQMANwJMQayAwAAhBEEAIQUMDAsgAkGYAWpBAEHEABCCAUHgAEEIEJgBIgNFDRIgA0IANwMAIANBkJjAACkDADcDCCADQRBqQZiYwAApAwA3AwAgA0EYakGgmMAAKAIANgIAIANBHGogAkGYAWpBxAAQfRpBhIHAACEEDAsLIAJBmAFqQQBBxAAQggFB+ABBCBCYASIDRQ0MIANCADcDACADQeiXwAApAwA3AwggA0EQakHwl8AAKQMANwMAIANBGGpB+JfAACkDADcDACADQSBqQYCYwAApAwA3AwAgA0EoakGImMAAKQMANwMAIANBMGogAkGYAWpBxAAQfRpBtIHAACEEDAoLIAJBmAFqQQBBzAAQggEgAkH8AWpBvJjAACkCADcCACACQfQBakG0mMAAKQIANwIAIAJB7AFqQayYwAApAgA3AgAgAkGk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IAdCKIZCgICAgICAwP8Ag4QgB0IYhkKAgICAgOA/gyAHQgiGQoCAgIDwH4OEhCAHQgiIQoCAgPgPgyAHQhiIQoCA/AeDhCAHQiiIQoD+A4MgB0I4iISEhDcDMCADIAMpAzgiB0I4hiAHQiiGQoCAgICAgMD/AIOEIAdCGIZCgICAgIDgP4MgB0IIhkKAgICA8B+DhIQgB0IIiEKAgID4D4MgB0IYiEKAgPwHg4QgB0IoiEKA/gODIAdCOIiEhIQ3AzggAyADKQNAIgdCOIYgB0IohkKAgICAgIDA/wCDhCAHQhiGQoCAgICA4D+DIAdCCIZCgICAgPAfg4SEIAdCCIhCgICA+A+DIAdCGIhCgID8B4OEIAdCKIhCgP4DgyAHQjiIhISENwNAIAMgAykDSCIHQjiGIAdCKIZCgICAgICAwP8Ag4QgB0IYhkKAgICAgOA/gyAHQgiGQoCAgIDwH4OEhCAHQgiIQoCAgPgPgyAHQhiIQoCA/AeDhCAHQiiIQoD+A4MgB0I4iISEhDcDSCADIAMpA1AiB0I4hiAHQiiGQoCAgICAgMD/AIOEIAdCGIZCgICAgIDgP4MgB0IIhkKAgICA8B+DhIQgB0IIiEKAgID4D4MgB0IYiEKAgPwHg4QgB0IoiEKA/gODIAdCOIiEhIQ3A1AgAyADKQNYIgdCOIYgB0IohkKAgICAgIDA/wCDhCAHQhiGQoCAgICA4D+DIAdCCIZCgICAgPAfg4SEIAdCCIhCgICA+A+DIAdCGIhCgID8B4OEIAdCKIhCgP4DgyAHQjiIhISENwNYIAMgAykDYCIHQjiGIAdCKIZCgICAgICAwP8Ag4QgB0IYhkKAgICAgOA/gyAHQgiGQoCAgIDwH4OEhCAHQgiIQoCAgPgPgyAHQhiIQoCA/AeDhCAHQiiIQoD+A4MgB0I4iISEhDcDYCADIAMpA2giB0I4hiAHQiiGQoCAgICAgMD/AIOEIAdCGIZCgICAgIDgP4MgB0IIhkKAgICA8B+DhIQgB0IIiEKAgID4D4MgB0IYiEKAgPwHg4QgB0IoiEKA/gODIAdCOIiEhIQ3A2ggAyADKQNwIgdCOIYgB0IohkKAgICAgIDA/wCDhCAHQhiGQoCAgICA4D+DIAdCCIZCgICAgPAfg4SEIAdCCIhCgICA+A+DIAdCGIhCgID8B4OEIAdCKIhCgP4DgyAHQjiIhISENwNwIAMgAykDeCIHQjiGIAdCKIZCgICAgICAwP8Ag4QgB0IYhkKAgICAgOA/gyAHQgiGQoCAgIDwH4OEhCAHQgiIQoCAgPgPgyAHQhiIQoCA/AeDhCAHQiiIQoD+A4MgB0I4iISEhDcDeCAGIAMQAyACIARrIQIgASAEaiEBCyACQYABTwRAIAIhAwNAIAUgAUGAARB9IgQgBCkDACIHQjiGIAdCKIZCgICAgICAwP8Ag4QgB0IYhkKAgICAgOA/gyAHQgiGQoCAgIDwH4OEhCAHQgiIQoCAgPgPgyAHQhiIQoCA/AeDhCAHQiiIQoD+A4MgB0I4iISEhDcDACAEIAQpAwgiB0I4hiAHQiiGQoCAgICAgMD/AIOEIAdCGIZCgICAgIDgP4MgB0IIhkKAgICA8B+DhIQgB0IIiEKAgID4D4MgB0IYiEKAgPwHg4QgB0IoiEKA/gODIAdCOIiEhIQ3AwggBCAEKQMQIgdCOIYgB0IohkKAgICAgIDA/wCDhCAHQhiGQoCAgICA4D+DIAdCCIZCgICAgPAfg4SEIAdCCIhCgICA+A+DIAdCGIhCgID8B4OEIAdCKIhCgP4DgyAHQjiIhISENwMQIAQgBCkDGCIHQjiGIAdCKIZCgICAgICAwP8Ag4QgB0IYhkKAgICAgOA/gyAHQgiGQoCAgIDwH4OEhCAHQgiIQoCAgPgPgyAHQhiIQoCA/AeDhCAHQiiIQoD+A4MgB0I4iISEhDcDGCAEIAQpAyAiB0I4hiAHQiiGQoCAgICAgMD/AIOEIAdCGIZCgICAgIDgP4MgB0IIhkKAgICA8B+DhIQgB0IIiEKAgID4D4MgB0IYiEKAgPwHg4QgB0IoiEKA/gODIAdCOIiEhIQ3AyAgBCAEKQMoIgdCOIYgB0IohkKAgICAgIDA/wCDhCAHQhiGQoCAgICA4D+DIAdCCIZCgICAgPAfg4SEIAdCCIhCgICA+A+DIAdCGIhCgID8B4OEIAdCKIhCgP4DgyAHQjiIhISENwMoIAQgBCkDMCIHQjiGIAdCKIZCgICAgICAwP8Ag4QgB0IYhkKAgICAgOA/gyAHQgiGQoCAgIDwH4OEhCAHQgiIQoCAgPgPgyAHQhiIQoCA/AeDhCAHQiiIQoD+A4MgB0I4iISEhDcDMCAEIAQpAzgiB0I4hiAHQiiGQoCAgICAgMD/AIOEIAdCGIZCgICAgIDgP4MgB0IIhkKAgICA8B+DhIQgB0IIiEKAgID4D4MgB0IYiEKAgPwHg4QgB0IoiEKA/gODIAdCOIiEhIQ3AzggBCAEKQNAIgdCOIYgB0IohkKAgICAgIDA/wCDhCAHQhiGQoCAgICA4D+DIAdCCIZCgICAgPAfg4SEIAdCCIhCgICA+A+DIAdCGIhCgID8B4OEIAdCKIhCgP4DgyAHQjiIhISENwNAIAQgBCkDSCIHQjiGIAdCKIZCgICAgICAwP8Ag4QgB0IYhkKAgICAgOA/gyAHQgiGQoCAgIDwH4OEhCAHQgiIQoCAgPgPgyAHQhiIQoCA/AeDhCAHQiiIQoD+A4MgB0I4iISEhDcDSCAEIAQpA1AiB0I4hiAHQiiGQoCAgICAgMD/AIOEIAdCGIZCgICAgIDgP4MgB0IIhkKAgICA8B+DhIQgB0IIiEKAgID4D4MgB0IYiEKAgPwHg4QgB0IoiEKA/gODIAdCOIiEhIQ3A1AgBCAEKQNYIgdCOIYgB0IohkKAgICAgIDA/wCDhCAHQhiGQoCAgICA4D+DIAdCCIZCgICAgPAfg4SEIAdCCIhCgICA+A+DIAdCGIhCgID8B4OEIAdCKIhCgP4DgyAHQjiIhISENwNYIAQgBCkDYCIHQjiGIAdCKIZCgICAgICAwP8Ag4QgB0IYhkKAgICAgOA/gyAHQgiGQoCAgIDwH4OEhCAHQgiIQoCAgPgPgyAHQhiIQoCA/AeDhCAHQiiIQoD+A4MgB0I4iISEhDcDYCAEIAQpA2giB0I4hiAHQiiGQoCAgICAgMD/AIOEIAdCGIZCgICAgIDgP4MgB0IIhkKAgICA8B+DhIQgB0IIiEKAgID4D4MgB0IYiEKAgPwHg4QgB0IoiEKA/gODIAdCOIiEhIQ3A2ggBCAEKQNwIgdCOIYgB0IohkKAgICAgIDA/wCDhCAHQhiGQoCAgICA4D+DIAdCCIZCgICAgPAfg4SEIAdCCIhCgICA+A+DIAdCGIhCgID8B4OEIAdCKIhCgP4DgyAHQjiIhISENwNwIAQgBCkDeCIHQjiGIAdCKIZCgICAgICAwP8Ag4QgB0IYhkKAgICAgOA/gyAHQgiGQoCAgIDwH4OEhCAHQgiIQoCAgPgPgyAHQhiIQoCA/AeDhCAHQiiIQoD+A4Mg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BgEEfyAAIAFqIQICQAJAAkACQAJAIABBBGooAgAiA0EBcQ0AIANBA3FFDQEgACgCACIDIAFqIQEgACADayIAQfChwAAoAgBGBEAgAigCBEEDcUEDRw0BQeihwAAgATYCACACIAIoAgRBfnE2AgQgACABQQFyNgIEIAIgATYCAA8LIAAgAxA7CwJAIAJBBGooAgAiA0ECcQRAIAJBBGogA0F+cTYCACAAIAFBAXI2AgQgACABaiABNgIADAELAkAgAkH0ocAAKAIARwRAQfChwAAoAgAgAkYNASACIANBeHEiAhA7IAAgASACaiIBQQFyNgIEIAAgAWogATYCACAAQfChwAAoAgBHDQJB6KHAACABNgIADwtB9KHAACAANgIAQeyhwABB7KHAACgCACABaiIBNgIAIAAgAUEBcjYCBCAAQfChwAAoAgBHDQJB6KHAAEEANgIAQfChwABBADYCAA8LQfChwAAgADYCAEHoocAAQeihwAAoAgAgAWoiATYCACAAIAFBAXI2AgQgACABaiABNgIADwsgAUGAAkkNAyAAQgA3AhAgAEEcagJ/QQAgAUEIdiIDRQ0AGkEfIAFB////B0sNABogAUEGIANnIgJrQR9xdkEBcSACQQF0a0E+agsiAjYCACACQQJ0QeigwABqIQMCQAJAQdyewAAoAgAiBEEBIAJBH3F0IgVxBEAgAygCACIDQQRqKAIAQXhxIAFHDQEgAyECDAILQdyewAAgBCAFcjYCACADIAA2AgAMBAsgAUEAQRkgAkEBdmtBH3EgAkEfRht0IQQDQCADIARBHXZBBHFqQRBqIgUoAgAiAkUNAyAEQQF0IQQgAiEDIAJBBGooAgBBeHEgAUcNAAsLIAIoAggiASAANgIMIAIgADYCCCAAQRhqQQA2AgAgACACNgIMIAAgATYCCAsPCyAFIAA2AgALIABBGGogAzYCACAAIAA2AgwgACAANgIIDwsgAUEDdiICQQN0QeCewABqIQECf0HYnsAAKAIAIgNBASACQR9xdCICcQRAIAEoAggMAQtB2J7AACACIANyNgIAIAELIQIgASAANgIIIAIgADYCDCAAIAE2AgwgACACNgIIC6wGAQt/IwBBMGsiAyQAIANBJGpBgIfAADYCACADQQM6ACggA0KAgICAgAQ3AwggAyAANgIgIANBADYCGCADQQA2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aiAGKQMANwMAIAJBGGogBCkDADcDACACQSBqIAUpAwA3AwAgAkEoaiADKQMANwMAIAJBNGogAikDoAE3AgAgAkE8aiACQagBaikDADcCACACQcQAaiACQbABaikDADcCACACQcwAaiACQbgBaikDADcCACACQdQAaiACQcABaikDADcCACACQdwAaiACQcgBaikDADcCACACQeQAaiACQdABaikDADcCACACQewAaiACQdgBaikDADcCACACIAc3AwAgAiACKQN4NwMIIAIgASgCMDYCMCACQaABaiACEEMCQAJAQShBARCYASIDBEAgAkIoNwIEIAIgAzYCACACIAJBoAFqQSgQVCACKAIAIQQCQCACKAIEIgUgAigCCCIDRgRAIAUhAwwBCyAFIANJDQIgBUUNACADRQRAIAQQEkEBIQQMAQsgBCAFQQEgAxCMASIERQ0DCyABQgA3AwAgAUEANgIwIAFBCGoiAUHol8AAKQMANwMAIAFBCGpB8JfAACkDADcDACABQRBqQfiXwAApAwA3AwAgAUEYakGAmMAAKQMANwMAIAFBIGpBiJjAACkDADcDACAAIAM2AgQgACAENgIAIAJB4AFqJAAPC0EoEIUBAAtB34vAAEEkQYSMwAAQegALIANBAUGsosAAKAIAIgBBAiAAGxEAAAAL0gQCBX8BfiABQSBqIQMgAUEIaiEEIAEpAwAhBwJAAkAgAUEcaiIFKAIAIgJBwABGBEAgBCADEAdBACECIAVBADYCAAwBCyACQT9LDQELIAFBHGoiBSACakEEakGAAToAACABIAEoAhwiBkEBaiICNgIcAkAgAkHBAEkEQCACIAVqQQRqQQBBPyAGaxCCAUHAACABKAIca0EHTQRAIAQgAxAHIAFBHGooAgAiAkHBAE8NAiABQSBqQQAgAhCCAQsgAUHYAGogB0IDhiIHQjiGIAdCKIZCgICAgICAwP8Ag4QgB0IYhkKAgICAgOA/gyAHQgiGQoCAgIDwH4OEhCAHQgiIQoCAgPgPgyAHQhiIQoCA/AeDhCAHQiiIQoD+A4MgB0I4iISEhDcCACAEIAMQByABQQA2AhwgAEEQaiABQRhqKAIAIgJBGHQgAkEIdEGAgPwHcXIgAkEIdkGA/gNxIAJBGHZycjYAACAAQQxqIAFBFGooAgAiAkEYdCACQQh0QYCA/Adx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IAAgAzYCBCAAIAU2AgAgAkHAAWokAA8LQRQQhQEAC0Hfi8AAQSRBhIzAABB6AAsgA0EBQayiwAAoAgAiAEECIAAbEQAAAAuEBAEEfyMAQeACayICJAAgAkHIAGogAUGYAhB9GgJAAkACQCACKAKQAiIDQcgASQRAIAJBkAJqIANqIgVBBGpBBjoAACAFQQVqQQBBxwAgA2sQggEgAkHbAmoiAyADLQAAQYABcjoAACACQQA2ApACA0AgAkHIAGogBGoiAyADLQAAIANBzAFqLQAAczoAACAEQQFqIgRByABHDQALIAJByABqEBEgAkFAayACQYABaikDADcDACACQThqIAJB+ABqKQMANwMAIAJBMGogAkHwAGopAwA3AwAgAkEoaiACQegAaikDADcDACACQSBqIAJB4ABqKQMANwMAIAJBGGogAkHYAGopAwA3AwAgAkEQaiACQdAAaikDADcDACACIAIpA0g3AwhBwABBARCYASIERQ0BIAJCwAA3AkwgAiAENgJIIAJByABqIAJBCGpBwAAQVCACKAJIIQUCQCACKAJMIgMgAigCUCIERgRAIAMhBAwBCyADIARJDQMgA0UNACAERQRAIAUQEkEBIQUMAQsgBSADQQEgBBCMASIFRQ0ECyABEBIgACAENgIEIAAgBTYCACACQeACaiQADwtBmJrAAEEXIAJBCGpBsJrAAEGIncAAEGoAC0HAABCFAQALQd+LwABBJEGEjMAAEHoACyAEQQFBrKLAACgCACIAQQIgABsRAAAAC4QEAQR/IwBB4AJrIgIkACACQcgAaiABQZgCEH0aAkACQAJAIAIoApACIgNByABJBEAgAkGQAmogA2oiBUEEakEBOgAAIAVBBWpBAEHHACADaxCCASACQdsCaiIDIAMtAABBgAFyOgAAIAJBADYCkAIDQCACQcgAaiAEaiIDIAMtAAAgA0HMAWotAABzOgAAIARBAWoiBEHIAEcNAAsgAkHIAGoQESACQUBrIAJBgAFqKQMANwMAIAJBOGogAkH4AGopAwA3AwAgAkEwaiACQfAAaikDADcDACACQShqIAJB6ABqKQMANwMAIAJBIGogAkHgAGopAwA3AwAgAkEYaiACQdgAaikDADcDACACQRBqIAJB0ABqKQMANwMAIAIgAikDSDcDCEHAAEEBEJgBIgRFDQEgAkLAADcCTCACIAQ2AkggAkHIAGogAkEIakHAABBUIAIoAkghBQJAIAIoAkwiAyACKAJQIgRGBEAgAyEEDAELIAMgBEkNAyADRQ0AIARFBEAgBRASQQEhBQwBCyAFIANBASAEEIwBIgVFDQQLIAEQEiAAIAQ2AgQgACAFNgIAIAJB4AJqJAAPC0GYmsAAQRcgAkEIakGwmsAAQcicwAAQagALQcAAEIUBAAtB34vAAEEkQYSMwAAQegALIARBAUGsosAAKAIAIgBBAiAAGxEAAAALqAQBBH8jAEHgAmsiAyQAIAMgAUHIARB9IgJBmAJqIAFBzAFqEF4gAiABKALIASIENgLIASACQcwBaiACQZgCakHIABB9GgJAAkACQCAEQcgASQRAIAJByAFqIARqIgVBBGpBAToAAEEAIQMgBUEFakEAQccAIARrEIIBIAJBkwJqIgQgBC0AAEGAAXI6AAAgAkEANgLIAQNAIAIgA2oiBCAELQAAIARBzAFqLQAAczoAACADQQFqIgNByABHDQALIAIQESACQdACaiACQThqKQMANwMAIAJByAJqIAJBMGopAwA3AwAgAkHAAmogAkEoaikDADcDACACQbgCaiACQSBqKQMANwMAIAJBsAJqIAJBGGopAwA3AwAgAkGoAmogAkEQaikDADcDACACQaACaiACQQhqKQMANwMAIAIgAikDADcDmAJBwABBARCYASIDRQ0BIAJCwAA3AgQgAiADNgIAIAIgAkGYAmpBwAAQVCACKAIAIQUCQCACKAIEIgQgAigCCCIDRgRAIAQhAwwBCyAEIANJDQMgBEUNACADRQRAIAUQEkEBIQUMAQsgBSAEQQEgAxCMASIFRQ0ECyABQQBBzAEQggEgACADNgIEIAAgBTYCACACQeACaiQADwtBmJrAAEEXIAJBmAJqQbCawABByJzAABBqAAtBwAAQhQEAC0Hfi8AAQSRBhIzAABB6AAsgA0EBQayiwAAoAgAiAEECIAAbEQAAAAuoBAEEfyMAQeACayIDJAAgAyABQcgBEH0iAkGYAmogAUHMAWoQXiACIAEoAsgBIgQ2AsgBIAJBzAFqIAJBmAJqQcgAEH0aAkACQAJAIARByABJBEAgAkHIAWogBGoiBUEEakEGOgAAQQAhAyAFQQVqQQBBxwAgBGsQggEgAkGTAmoiBCAELQAAQYABcjoAACACQQA2AsgBA0AgAiADaiIEIAQtAAAgBEHMAWotAABzOgAAIANBAWoiA0HIAEcNAAsgAhARIAJB0AJqIAJBOGopAwA3AwAgAkHIAmogAkEwaikDADcDACACQcACaiACQShqKQMANwMAIAJBuAJqIAJBIGopAwA3AwAgAkGwAmogAkEYaikDADcDACACQagCaiACQRBqKQMANwMAIAJBoAJqIAJBCGopAwA3AwAgAiACKQMANwOYAkHAAEEBEJgBIgNFDQEgAkLAADcCBCACIAM2AgAgAiACQZgCakHAABBUIAIoAgAhBQJAIAIoAgQiBCACKAIIIgNGBEAgBCEDDAELIAQgA0kNAyAERQ0AIANFBEAgBRASQQEhBQwBCyAFIARBASADEIwBIgVFDQQLIAFBAEHMARCCASAAIAM2AgQgACAFNgIAIAJB4AJqJAAPC0GYmsAAQRcgAkGYAmpBsJrAAEGIncAAEGoAC0HAABCFAQALQd+LwABBJEGEjMAAEHoACyADQQFBrKLAACgCACIAQQIgABsRAAAAC4IEAQR/IwBBoANrIgMkACADIAFByAEQfSICQbgCaiABQcwBahBgIAIgASgCyAEiBDYCyAEgAkHMAWogAkG4AmpB6AAQfRoCQAJAAkAgBEHoAEkEQCACQcgBaiAEaiIFQQRqQQY6AABBACEDIAVBBWpBAEHnACAEaxCCASACQbMCaiIEIAQtAABBgAFyOgAAIAJBADYCyAEDQCACIANqIgQgBC0AACAEQcwBai0AAHM6AAAgA0EBaiIDQegARw0ACyACEBEgAkHgAmogAkEoaikDADcDACACQdgCaiACQSBqKQMANwMAIAJB0AJqIAJBGGopAwA3AwAgAkHIAmogAkEQaikDADcDACACQcACaiACQQhqKQMANwMAIAIgAikDADcDuAJBMEEBEJgBIgNFDQEgAkIwNwIEIAIgAzYCACACIAJBuAJqQTAQVCACKAIAIQUCQCACKAIEIgQgAigCCCIDRgRAIAQhAwwBCyAEIANJDQMgBEUNACADRQRAIAUQEkEBIQUMAQsgBSAEQQEgAxCMASIFRQ0ECyABQQBBzAEQggEgACADNgIEIAAgBTYCACACQaADaiQADwtBmJrAAEEXIAJBuAJqQbCawABB+JzAABBqAAtBMBCFAQALQd+LwABBJEGE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QCACQShqIARqIgMgAy0AACADQcwBai0AAHM6AAAgBEEBaiIEQYgBRw0ACyACQShqEBEgAkEgaiACQUBrKQMANwMAIAJBGGogAkE4aikDADcDACACQRBqIAJBMGopAwA3AwAgAiACKQMoNwMIQSBBARCYASIERQ0BIAJCIDcCLCACIAQ2AiggAkEoaiACQQhqQSAQVCACKAIoIQUCQCACKAIsIgMgAigCMCIERgRAIAMhBAwBCyADIARJDQMgA0UNACAERQRAIAUQEkEBIQUMAQsgBSADQQEgBBCMASIFRQ0ECyABEBIgACAENgIEIAAgBTYCACACQYADaiQADwtBmJrAAEEXIAJBCGpBsJrAAEGonMAAEGoAC0EgEIUBAAtB34vAAEEkQYSMwAAQegALIARBAUGsosAAKAIAIgBBAiAAGxEAAAALtQMBBH8jAEGAA2siAiQAIAJBKGogAUHYAhB9GgJAAkACQCACKALwASIDQYgBSQRAIAJB8AFqIANqIgVBBGpBBjoAACAFQQVqQQBBhwEgA2sQggEgAkH7AmoiAyADLQAAQYABcjoAACACQQA2AvABA0AgAkEoaiAEaiIDIAMtAAAgA0HMAWotAABzOgAAIARBAWoiBEGIAUcNAAsgAkEoahARIAJBIGogAkFAaykDADcDACACQRhqIAJBOGopAwA3AwAgAkEQaiACQTBqKQMANwMAIAIgAikDKDcDCEEgQQEQmAEiBEUNASACQiA3AiwgAiAENgIoIAJBKGogAkEIakEgEFQgAigCKCEFAkAgAigCLCIDIAIoAjAiBEYEQCADIQQMAQsgAyAESQ0DIANFDQAgBEUEQCAFEBJBASEFDAELIAUgA0EBIAQQjAEiBUUNBAsgARASIAAgBDYCBCAAIAU2AgAgAkGAA2okAA8LQZiawABBFyACQQhqQbCawABB6JzAABBqAAtBIBCFAQALQd+LwABBJEGEjMAAEHoACyAEQQFBrKLAACgCACIAQQIgABsRAAAAC84DAgR/AX4jAEGgAWsiAiQAIAEpAwAhBiACQeAAaiABQQxqEFYgAkEMaiACKQNgNwIAIAJBFGogAkHoAGopAwA3AgAgAkEcaiACQfAAaikDADcCACACQSRqIAJB+ABqKQMANwIAIAJBLGogAkGAAWopAwA3AgAgAkE0aiACQYgBaikDADcCACACQTxqIAJBkAFqKQMANwIAIAJBxABqIAJBmAFqKQMANwIAIAIgBjcDACACIAEoAgg2AgggAkHUAGogAUHUAGopAgA3AgAgAiABKQJMNwJMIAJB4ABqIAIQSQJAAkBBEEEBEJgBIgMEQCACQhA3AgQgAiADNgIAIAIgAkHgAGpBEBBUIAIoAgAhBAJAIAIoAgQiBSACKAIIIgNGBEAgBSEDDAELIAUgA0kNAiAFRQ0AIANFBEAgBBASQQEhBAwBCyAEIAVBASADEIwBIgRFDQMLIAFCADcDACABQQA2AgggAUHMAGoiAUEIakHgl8AAKQMANwIAIAFB2JfAACkDADcCACAAIAM2AgQgACAENgIAIAJBoAFqJAAPC0EQEIUBAAtB34vAAEEkQYSMwAAQegALIANBAUGsosAAKAIAIgBBAiAAGxEAAAALzgMCBH8BfiMAQaABayICJAAgASkDACEGIAJB4ABqIAFBDGoQViACQQxqIAIpA2A3AgAgAkEUaiACQegAaikDADcCACACQRxqIAJB8ABqKQMANwIAIAJBJGogAkH4AGopAwA3AgAgAkEsaiACQYABaikDADcCACACQTRqIAJBiAFqKQMANwIAIAJBPGogAkGQAWopAwA3AgAgAkHEAGogAkGYAWopAwA3AgAgAiAGNwMAIAIgASgCCDYCCCACQdQAaiABQdQAaikCADcCACACIAEpAkw3AkwgAkHgAGogAhBKAkACQEEQQQEQmAEiAwRAIAJCEDcCBCACIAM2AgAgAiACQeAAakEQEFQgAigCACEEAkAgAigCBCIFIAIoAggiA0YEQCAFIQMMAQsgBSADSQ0CIAVFDQAgA0UEQCAEEBJBASEEDAELIAQgBUEBIAMQjAEiBEUNAwsgAUIANwMAIAFBADYCCCABQcwAaiIBQQhqQeCXwAApAwA3AgAgAUHYl8AAKQMANwIAIAAgAzYCBCAAIAQ2AgAgAkGgAWokAA8LQRAQhQEAC0Hfi8AAQSRBhIzAABB6AAsgA0EBQayiwAAoAgAiAEECIAAbEQAAAAuvAwEEfyMAQYADayICJAAgAkEgaiABQeACEH0aAkACQAJAIAIoAugBIgNBkAFJBEAgAkHoAWogA2oiBUEEakEBOgAAIAVBBWpBAEGPASADaxCCASACQfsCaiIDIAMtAABBgAFyOgAAIAJBADYC6AEDQCACQSBqIARqIgMgAy0AACADQcwBai0AAHM6AAAgBEEBaiIEQZABRw0ACyACQSBqEBEgAkEYaiACQThqKAIANgIAIAJBEGogAkEwaikDADcDACACQQhqIAJBKGopAwA3AwAgAiACKQMgNwMAQRxBARCYASIERQ0BIAJCHDcCJCACIAQ2AiAgAkEgaiACQRwQVCACKAIgIQUCQCACKAIkIgMgAigCKCIERgRAIAMhBAwBCyADIARJDQMgA0UNACAERQRAIAUQEkEBIQUMAQsgBSADQQEgBBCMASIFRQ0ECyABEBIgACAENgIEIAAgBTYCACACQYADaiQADwtBmJrAAEEXIAJBsJrAAEHAmsAAEGoAC0EcEIUBAAtB34vAAEEkQYSMwAAQegALIARBAUGsosAAKAIAIgBBAiAAGxEAAAALrwMBBH8jAEGAA2siAiQAIAJBIGogAUHgAhB9GgJAAkACQCACKALoASIDQZABSQRAIAJB6AFqIANqIgVBBGpBBjoAACAFQQVqQQBBjwEgA2sQggEgAkH7AmoiAyADLQAAQYABcjoAACACQQA2AugBA0AgAkEgaiAEaiIDIAMtAAAgA0HMAWotAABzOgAAIARBAWoiBEGQAUcNAAsgAkEgahARIAJBGGogAkE4aigCADYCACACQRBqIAJBMGopAwA3AwAgAkEIaiACQShqKQMANwMAIAIgAikDIDcDAEEcQQEQmAEiBEUNASACQhw3AiQgAiAENgIgIAJBIGogAkEcEFQgAigCICEFAkAgAigCJCIDIAIoAigiBEYEQCADIQQMAQsgAyAESQ0DIANFDQAgBEUEQCAFEBJBASEFDAELIAUgA0EBIAQQjAEiBUUNBAsgARASIAAgBDYCBCAAIAU2AgAgAkGAA2okAA8LQZiawABBFyACQbCawABB2JzAABBqAAtBHBCFAQALQd+LwABBJEGEjMAAEHoACyAEQQFBrKLAACgCACIAQQIgABsRAAAAC+gCAQV/AkBBzf97IABBECAAQRBLGyIAayABTQ0AIABBECABQQtqQXhxIAFBC0kbIgRqQQxqEAkiAkUNACACQXhqIQECQCAAQX9qIgMgAnFFBEAgASEADAELIAJBfGoiBSgCACIGQXhxIAIgA2pBACAAa3FBeGoiAiAAIAJqIAIgAWtBEEsbIgAgAWsiAmshAyAGQQNxBEAgACADIAAoAgRBAXFyQQJyNgIEIAAgA2oiAyADKAIEQQFyNgIEIAUgAiAFKAIAQQFxckECcjYCACAAIAAoAgRBAXI2AgQgASACEBgMAQsgASgCACEBIAAgAzYCBCAAIAEgAmo2AgALAkAgAEEEaigCACIBQQNxRQ0AIAFBeHEiAiAEQRBqTQ0AIABBBGogBCABQQFxckECcjYCACAAIARqIgEgAiAEayIEQQNyNgIEIAAgAmoiAiACKAIEQQFyNgIEIAEgBBAYCyAAQQhqIQMLIAMLiwMCBn8BfiMAQfAAayICJAAgAkHQAGoiAyABQRBqKQMANwMAIAJB2ABqIgQgAUEYaikDADcDACACQeAAaiIFIAFBIGopAwA3AwAgAkHoAGoiBiABQShqKQMANwMAIAIgASkDCDcDSCABKQMAIQggAkEIaiABQTRqEFYgASgCMCEHQfgAQQgQmAEiAUUEQEH4AEEIQayiwAAoAgAiAEECIAAbEQAAAAsgASAINwMAIAEgAikDSDcDCCABIAc2AjAgASACKQMINwI0IAFBEGogAykDADcDACABQRhqIAQpAwA3AwAgAUEgaiAFKQMANwMAIAFBKGogBikDADcDACABQTxqIAJBEGopAwA3AgAgAUHEAGogAkEYaikDADcCACABQcwAaiACQSBqKQMANwIAIAFB1ABqIAJBKGopAwA3AgAgAUHcAGogAkEwaikDADcCACABQeQAaiACQThqKQMANwIAIAFB7ABqIAJBQGspAwA3AgAgAEGUjMAANgIEIAAgATYCACACQfAAaiQAC4wDAgl/An4jAEHAAWsiAiQAIAFBCGopAwAhCyABKQMAIQwgAiABQdQAahBfIAJBiAFqIgMgAUEYaikDADcDACACQZABaiIEIAFBIGopAwA3AwAgAkGYAWoiBSABQShqKQMANwMAIAJBoAFqIgYgAUEwaikDADcDACACQagBaiIHIAFBOGopAwA3AwAgAkGwAWoiCCABQUBrKQMANwMAIAJBuAFqIgkgAUHIAGopAwA3AwAgAiABKQMQNwOAASABKAJQIQpB2AFBCBCYASIBRQRAQdgBQQhBrKLAACgCACIAQQIgABsRAAAACyABIAs3AwggASAMNwMAIAEgAikDgAE3AxAgAUEYaiADKQMANwMAIAFBIGogBCkD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BjYCCCABIAc3AwAgASACKQMgNwIMIAFBFGogAkEoaikDADcCACABQRxqIAJBMGopAwA3AgAgAUEkaiACQThqKQMANwIAIAFBLGogAkFAaykDADcCACABQTRqIAJByABqKQMANwIAIAFBPGogAkHQAGopAwA3AgAgAUHEAGogAkHYAGopAwA3AgAgAUHkAGogBSkDADcCACABQdwAaiAEKQMANwIAIAFB1ABqIAMpAwA3AgAgASACKQMANwJMIABB2JDAADYCBCAAIAE2AgAgAkHgAGokAAvIAgIEfwF+IwBB4ABrIgIkACACQdAAaiIDIAFBEGopAwA3AwAgAkHYAGoiBCABQRhqKAIANgIAIAIgASkDCDcDSCABKQMAIQYgAkEIaiABQSBqEFYgASgCHCEFQeAAQQgQmAEiAUUEQEHgAEEIQayiwAAoAgAiAEECIAAbEQAAAAsgASAGNwMAIAEgAikDSDcDCCABIAU2AhwgASACKQMINwMgIAFBEGogAykDADcDACABQRhqIAQoAgA2AgAgAUEoaiACQRBqKQMANwMAIAFBMGogAkEYaikDADcDACABQThqIAJBIGopAwA3AwAgAUFAayACQShqKQMANwMAIAFByABqIAJBMGopAwA3AwAgAUHQAGogAkE4aikDADcDACABQdgAaiACQUBrKQMANwMAIABBuIzAADYCBCAAIAE2AgAgAkHgAGokAAvIAgIEfwF+IwBB4ABrIgIkACACQdAAaiIDIAFBEGopAwA3AwAgAkHYAGoiBCABQRhqKAIANgIAIAIgASkDCDcDSCABKQMAIQYgAkEIaiABQSBqEFYgASgCHCEFQeAAQQgQmAEiAUUEQEHgAEEIQayiwAAoAgAiAEECIAAbEQAAAAsgASAGNwMAIAEgAikDSDcDCCABIAU2AhwgASACKQMINwMgIAFBEGogAykDADcDACABQRhqIAQoAgA2AgAgAUEoaiACQRBqKQMANwMAIAFBMGogAkEYaikDADcDACABQThqIAJBIGopAwA3AwAgAUFAayACQShqKQMANwMAIAFByABqIAJBMGopAwA3AwAgAUHQAGogAkE4aikDADcDACABQdgAaiACQUBrKQMANwMAIABB3IzAADYCBCAAIAE2AgAgAkHgAGokAAvdAgIFfwF+IABBDGohAiAAQcwAaiEDIAApAwAhBgJAAkAgAEEIaiIEKAIAIgFBwABGBEAgAyACEARBACEBIARBADYCAAwBCyABQT9LDQELIABBCGoiBCABakEEakGAAToAACAAIAAoAggiBUEBaiIBNgIIAkAgAUHBAEkEQCABIARqQQRqQQBBPyAFaxCCAUHAACAAKAIIa0EISQRAIAMgAhAEIABBCGooAgAiAUHBAE8NAiAAQQxqQQAgARCCAQsgAEHEAGogBkIohkKAgICAgIDA/wCDIAZCOIaEIAZCGIZCgICAgIDgP4MgBkIIhkKAgICA8B+DhIQgBkIIiEKAgID4D4MgBkIYiEKAgPwHg4QgBkIoiEKA/gODIAZCOIiEhIQ3AgAgAyACEAQgAEEANgIIDwsgAUHAAEHomcAAEG8ACyABQcAAQfiZwAAQbgALIAFBwABBiJrAABBtAAu3AgIFfwF+IwBBMGsiBCQAQSchAgJAIABCkM4AVARAIAAhBwwBCwNAIARBCWogAmoiA0F8aiAAIABCkM4AgCIHQvCxf358pyIFQf//A3FB5ABuIgZBAXRB2ojAAGovAAA7AAAgA0F+aiAGQZx/bCAFakH//wNxQQF0QdqIwABqLwAAOwAAIAJBfGohAiAAQv/B1y9WIAchAA0ACwsgB6ciA0HjAEoEQCACQX5qIgIgBEEJamogB6ciBUH//wNxQeQAbiIDQZx/bCAFakH//wNxQQF0QdqIwABqLwAAOwAACwJAIANBCk4EQCACQX5qIgIgBEEJamogA0EBdEHaiMAAai8AADsAAAwBCyACQX9qIgIgBEEJamogA0EwajoAAAsgASAEQQlqIAJqQScgAmsQHCAEQTBqJAALzgICBX8BfiABQTRqIQQgAUEIaiEDIAEpAwAhBwJAAkAgAUEwaiIFKAIAIgJBwABGBEAgAyAEEAVBACECIAVBADYCAAwBCyACQT9LDQELIAFBMGoiBSACakEEakGAAToAACABIAEoAjAiBkEBaiICNgIwAkAgAkHBAEkEQCACIAVqQQRqQQBBPyAGaxCCAUHAACABKAIwa0EHTQRAIAMgBBAFIAFBMGooAgAiAkHBAE8NAiABQTRqQQAgAhCCAQsgAUHsAGogB0IDhjcCACADIAQQBSABQQA2AjAgACADKQAANwAAIABBCGogA0EIaikAADcAACAAQRBqIANBEGopAAA3AAAgAEEYaiADQRhqKQAANwAAIABBIGogA0EgaikAADcAAA8LIAJBwABB6JnAABBvAAsgAkHAAEH4mcAAEG4ACyACQcAAQYiawAAQbQALvwIBA38CQAJAAkACQCAAQcgBaigCACIDRQ0AQcgAIANrIgQgAksNACADQckATw0BIAAgA2pBzAFqIAEgBBB9GkEAIQMgAEEANgLIASABIARqIQEDQCAAIANqIgUgBS0AACAFQcwBai0AAHM6AAAgA0EBaiIDQcgARw0ACyAAEBEgAiAEayECCyACQcgATwRAA0BBACEDA0AgACADaiIEIAQtAAAgASADai0AAHM6AAAgA0EBaiIDQcgARw0ACyAAEBEgAUHIAGohASACQbh/aiICQcgATw0ACwsgAEHIAWooAgAiAyACaiIEIANJDQEgBEHIAEsNAiAAIANqQcwBaiABIAIQfRogACAAKALIASACajYCyAEPCyADQcgAQaibwAAQbwALIAMgBEG4m8AAEG8ACyAEQcgAQbibwAAQbgALvwIBA38CQAJAAkACQCAAQcgBaigCACIDRQ0AQYgBIANrIgQgAksNACADQYkBTw0BIAAgA2pBzAFqIAEgBBB9GkEAIQMgAEEANgLIASABIARqIQEDQCAAIANqIgUgBS0AACAFQcwBai0AAHM6AAAgA0EBaiIDQYgBRw0ACyAAEBEgAiAEayECCyACQYgBTwRAA0BBACEDA0AgACADaiIEIAQtAAAgASADai0AAHM6AAAgA0EBaiIDQYgBRw0ACyAAEBEgAUGIAWohASACQfh+aiICQYgBTw0ACwsgAEHIAWooAgAiAyACaiIEIANJDQEgBEGIAUsNAiAAIANqQcwBaiABIAIQfRogACAAKALIASACajYCyAEPCyADQYgBQaibwAAQbwALIAMgBEG4m8AAEG8ACyAEQYgBQbibwAAQbgALvwIBA38CQAJAAkACQCAAQcgBaigCACIDRQ0AQZABIANrIgQgAksNACADQZEBTw0BIAAgA2pBzAFqIAEgBBB9GkEAIQMgAEEANgLIASABIARqIQEDQCAAIANqIgUgBS0AACAFQcwBai0AAHM6AAAgA0EBaiIDQZABRw0ACyAAEBEgAiAEayECCyACQZABTwRAA0BBACEDA0AgACADaiIEIAQtAAAgASADai0AAHM6AAAgA0EBaiIDQZABRw0ACyAAEBEgAUGQAWohASACQfB+aiICQZABTw0ACwsgAEHIAWooAgAiAyACaiIEIANJDQEgBEGQAUsNAiAAIANqQcwBaiABIAIQfRogACAAKALIASACajYCyAEPCyADQZABQaibwAAQbwALIAMgBEG4m8AAEG8ACyAEQZABQbibwAAQbgALvwIBA38CQAJAAkACQCAAQcgBaigCACIDRQ0AQegAIANrIgQgAksNACADQekATw0BIAAgA2pBzAFqIAEgBBB9GkEAIQMgAEEANgLIASABIARqIQEDQCAAIANqIgUgBS0AACAFQcwBai0AAHM6AAAgA0EBaiIDQegARw0ACyAAEBEgAiAEayECCyACQegATwRAA0BBACEDA0AgACADaiIEIAQtAAAgASADai0AAHM6AAAgA0EBaiIDQegARw0ACyAAEBEgAUHoAGohASACQZh/aiICQegATw0ACwsgAEHIAWooAgAiAyACaiIEIANJDQEgBEHoAEsNAiAAIANqQcwBaiABIAIQfRogACAAKALIASACajYCyAEPCyADQegAQaibwAAQbwALIAMgBEG4m8AAEG8ACyAEQegAQbibwAAQbgALrgICBX8BfiABQSBqIQQgAUEIaiEDIAEpAwAhBwJAAkAgAUEcaiIFKAIAIgJBwABGBEAgAyAEEAZBACECIAVBADYCAAwBCyACQT9LDQELIAFBHGoiBSACakEEakGAAToAACABIAEoAhwiBkEBaiICNgIcAkAgAkHBAEkEQCACIAVqQQRqQQBBPyAGaxCCAUHAACABKAIca0EHTQRAIAMgBBAGIAFBHGooAgAiAkHBAE8NAiABQSBqQQAgAhCCAQsgAUHYAGogB0IDhjcCACADIAQQBiABQQA2AhwgACADKQAANwAAIABBCGogA0EIaikAADcAACAAQRBqIANBEGooAAA2AAAPCyACQcAAQeiZwAAQbwALIAJBwABB+JnAABBuAAsgAkHAAEGImsAAEG0AC58CAgV/AX4gAUEMaiEEIAFBzABqIQMgASkDACEHAkACQCABQQhqIgUoAgAiAkHAAEYEQCADIAQQDEEAIQIgBUEANgIADAELIAJBP0sNAQsgAUEIaiIFIAJqQQRqQYABOgAAIAEgASgCCCIGQQFqIgI2AggCQCACQcEASQRAIAIgBWpBBGpBAEE/IAZrEIIBQcAAIAEoAghrQQdNBEAgAyAEEAwgAUEIaigCACICQcEATw0CIAFBDGpBACACEIIBCyABQcQAaiAHQgOGNwIAIAMgBBAMIAFBADYCCCAAIAMpAAA3AAAgAEEIaiADQQhqKQAANwAADwsgAkHAAEHomcAAEG8ACyACQcAAQfiZwAAQbgALIAJBwABBiJrAABBtAAudAgIFfwF+IAFBDGohAyABQcwAaiEEIAEpAwAhBwJAAkAgAUEIaiIFKAIAIgJBwABGBEAgBCADEA5BACECIAVBADYCAAwBCyACQT9LDQELIAFBCGoiBSACakEEakGAAToAACABIAEoAggiBkEBaiICNgIIAkAgAkHBAEkEQCACIAVqQQRqQQBBPyAGaxCCAUHAACABKAIIa0EHTQRAIAQgAxAOIAFBCGooAgAiAkHBAE8NAiABQQxqQQAgAhCCAQsgAUHEAGogB0IDhjcCACAEIAMQDiABQQA2AgggACABQdQAaikCADcACCAAIAEpAkw3AAAPCyACQcAAQeiZwAAQbwALIAJBwABB+JnAABBuAAsgAkHAAEGImsAAEG0AC6gCAgN/AX4jAEHQAGsiAiQAIAEpAwAhBSACQRBqIAFBDGoQViACQQhqIgMgAUHUAGopAgA3AwAgAiABKQJMNwMAIAEoAgghBEHgAEEIEJgBIgFFBEBB4ABBCEGsosAAKAIAIgBBAiAAGxEAAAALIAEgBDYCCCABIAU3AwAgASACKQMQNwIMIAFBFGogAkEYaikDADcCACABQRxqIAJBIGopAwA3AgAgAUEkaiACQShqKQMANwIAIAFBLGogAkEwaikDADcCACABQTRqIAJBOGopAwA3AgAgAUE8aiACQUBrKQMANwIAIAFBxABqIAJByABqKQMANwIAIAFB1ABqIAMpAwA3AgAgASACKQMANwJMIABBpI3AADYCBCAAIAE2AgAgAkHQAGokAAuoAgIDfwF+IwBB0ABrIgIkACABKQMAIQUgAkEQaiABQQxqEFYgAkEIaiIDIAFB1ABqKQIANwMAIAIgASkCTDcDACABKAIIIQRB4ABBCBCYASIBRQRAQeAAQQhBrKLAACgCACIAQQIgABsRAAAACyABIAQ2AgggASAFNwMAIAEgAikDEDcCDCABQRRqIAJBGGopAwA3AgAgAUEcaiACQSBqKQMANwIAIAFBJGogAkEoaikDADcCACABQSxqIAJBMGopAwA3AgAgAUE0aiACQThqKQMANwIAIAFBPGogAkFAaykDADcCACABQcQAaiACQcgAaikDADcCACABQdQAaiADKQMANwIAIAEgAikDADcCTCAAQcSRwAA2AgQgACABNgIAIAJB0ABqJAALhwIBA38gACAAKQMAIAKtQgOGfDcDACAAQcwAaiEFAkACQAJAAkAgAEEIaigCACIDRQ0AQcAAIANrIgQgAksNACADQcEATw0BIAMgAEEMaiIDaiABIAQQfRogAEEANgIIIAUgAxAEIAIgBGshAiABIARqIQELIAJBwABPBEAgAiEDA0AgBSABEAQgAUFAayEBIANBQGoiA0HAAE8NAAsgAkE/cSECCyAAQQhqKAIAIgMgAmoiBCADSQ0BIARBwABLDQIgACADakEMaiABIAIQfRogACAAKAIIIAJqNgIIDwsgA0HAAEGom8AAEG8ACyADIARBuJvAABBvAAsgBEHAAEG4m8AAEG4AC4MCAQN/IAAgACkDACACrXw3AwAgAEEIaiEFAkACQAJAAkAgAEEwaigCACIDRQ0AQcAAIANrIgQgAksNACADQcEATw0BIAMgAEE0aiIDaiABIAQQfRogAEEANgIwIAUgAxAFIAIgBGshAiABIARqIQELIAJBwABPBEAgAiEDA0AgBSABEAUgAUFAayEBIANBQGoiA0HAAE8NAAsgAkE/cSECCyAAQTBqKAIAIgMgAmoiBCADSQ0BIARBwABLDQIgACADakE0aiABIAIQfRogACAAKAIwIAJqNgIwDwsgA0HAAEGom8AAEG8ACyADIARBuJvAABBvAAsgBEHAAEG4m8AAEG4AC4MCAQN/IAAgACkDACACrXw3AwAgAEEIaiEFAkACQAJAAkAgAEEcaigCACIDRQ0AQcAAIANrIgQgAksNACADQcEATw0BIAMgAEEgaiIDaiABIAQQfRogAEEANgIcIAUgAxAHIAIgBGshAiABIARqIQELIAJBwABPBEAgAiEDA0AgBSABEAcgAUFAayEBIANBQGoiA0HAAE8NAAsgAkE/cSECCyAAQRxqKAIAIgMgAmoiBCADSQ0BIARBwABLDQIgACADakEgaiABIAIQfRogACAAKAIcIAJqNgIcDwsgA0HAAEGom8AAEG8ACyADIARBuJvAABBvAAsgBEHAAEG4m8AAEG4AC4MCAQN/IAAgACkDACACrXw3AwAgAEEIaiEFAkACQAJAAkAgAEEcaigCACIDRQ0AQcAAIANrIgQgAksNACADQcEATw0BIAMgAEEgaiIDaiABIAQQfRogAEEANgIcIAUgAxAGIAIgBGshAiABIARqIQELIAJBwABPBEAgAiEDA0AgBSABEAYgAUFAayEBIANBQGoiA0HAAE8NAAsgAkE/cSECCyAAQRxqKAIAIgMgAmoiBCADSQ0BIARBwABLDQIgACADakEgaiABIAIQfRogACAAKAIcIAJqNgIcDwsgA0HAAEGom8AAEG8ACyADIARBuJvAABBvAAsgBEHAAEG4m8AAEG4AC4QCAQN/IAAgACkDACACrXw3AwAgAEHMAGohBQJAAkACQAJAIABBCGooAgAiA0UNAEHAACADayIEIAJLDQAgA0HBAE8NASADIABBDGoiA2ogASAEEH0aIABBADYCCCAFIAMQDCACIARrIQIgASAEaiEBCyACQcAATwRAIAIhAwNAIAUgARAMIAFBQGshASADQUBqIgNBwABPDQALIAJBP3EhAgsgAEEIaigCACIDIAJqIgQgA0kNASAEQcAASw0CIAAgA2pBDGogASACEH0aIAAgACgCCCACajYCCA8LIANBwABBqJvAABBvAAsgAyAEQbibwAAQbwALIARBwABBuJvAABBuAAuEAgEDfyAAIAApAwAgAq18NwMAIABBzABqIQUCQAJAAkACQCAAQQhqKAIAIgNFDQBBwAAgA2siBCACSw0AIANBwQBPDQEgAyAAQQxqIgNqIAEgBBB9GiAAQQA2AgggBSADEA4gAiAEayECIAEgBGohAQsgAkHAAE8EQCACIQMDQCAFIAEQDiABQUBrIQEgA0FAaiIDQcAATw0ACyACQT9xIQILIABBCGooAgAiAyACaiIEIANJDQEgBEHAAEsNAiAAIANqQQxqIAEgAhB9GiAAIAAoAgggAmo2AggPCyADQcAAQaibwAAQbwALIAMgBEG4m8AAEG8ACyAEQcAAQbibwAAQbgAL7wEBBH8CQAJAAkAgAEEEaigCACIFIABBCGooAgAiBGsgAiABayIGTwRAIAAoAgAhAgwBCyAEIAZqIgIgBEkNASAFQQF0IgMgAiADIAJLGyIDQQBIDQECQAJAIAUEQCAAKAIAIgINAQsgA0UEQEEBIQIMAgsgA0EBEJgBIgINAQwECyADIAVHBEAgAiAFQQEgAxCMASECCyACRQ0DIABBCGooAgAhBAsgACACNgIAIABBBGogAzYCAAsgAiAEaiABIAYQfRogAEEIaiAEIAZqNgIADwsQjQEACyADQQFBrKLAACgCACIAQQIgABsRAAAAC/gBAQR/AkAgAEEEaigCACIGIABBCGooAgAiA2sgAk8EQCAAKAIAIQQMAQsCQCACIANqIgUgA08EQEEAIQMgBkEBdCIEIAUgBCAFSxsiBUEASA0BAkACQCAGRQRAIAUNAUEBIQQMAgsgACgCACEEIAUgBkYNAUEBIQMgBCAGQQEgBRCMASIEDQEMAwtBASEDIAVBARCYASIERQ0CCyAAIAQ2AgAgAEEEaiAFNgIAIABBCGooAgAhAwwCC0EAIQMLIAMEQCAFIANBrKLAACgCACIAQQIgABsRAAAACxCNAQALIAMgBGogASACEH0aIABBCGogAiADajYCAAvoAQEDfyAAQRRqIQUCQAJAAkACQCAAKAIAIgNFDQBBECADayIEIAJLDQAgA0ERTw0BIAMgAEEEaiIDaiABIAQQfRogAEEANgIAIAUgAxANIAIgBGshAiABIARqIQELIAJBEE8EQCACIQMDQCAFIAEQDSABQRBqIQEgA0FwaiIDQRBPDQALIAJBD3EhAgsgACgCACIDIAJqIgQgA0kNASAEQRBLDQIgACADakEEaiABIAIQfRogACAAKAIAIAJqNgIADwsgA0EQQaibwAAQbwALIAMgBEG4m8AAEG8ACyAEQRBBuJvAABBuAAvyAQEEfyMAQZABayICJAAgAkEANgIAIAJBBHIhBQNAIAMgBWogASADai0AADoAACACIAIoAgBBAWoiBDYCACADQQFqIgNBwABHDQALIARBP00EQCAEQcAAEHAACyACQcgAaiACQcQAEH0aIABBOGogAkGEAWopAgA3AAAgAEEwaiACQfwAaikCADcAACAAQShqIAJB9ABqKQIANwAAIABBIGogAkHsAGopAgA3AAAgAEEYaiACQeQAaikCADcAACAAQRBqIAJB3ABqKQIANwAAIABBCGogAkHUAGopAgA3AAAgACACKQJMNwAAIAJBkAFqJAAL6gEBBH8jAEGAAWsiAiQAIAJBIGogAUHgABB9GiACQQhqIAJBIGoQHwJAAkBBFEEBEJgBIgMEQCACQhQ3AiQgAiADNgIgIAJBIGogAkEIakEUEFQgAigCICEEAkAgAigCJCIFIAIoAigiA0YEQCAFIQMMAQsgBSADSQ0CIAVFDQAgA0UEQCAEEBJBASEEDAELIAQgBUEBIAMQjAEiBEUNAwsgARASIAAgAzYCBCAAIAQ2AgAgAkGAAWokAA8LQRQQhQEAC0Hfi8AAQSRBhIzAABB6AAsgA0EBQayiwAAoAgAiAEECIAAbEQAAAAvqAQEEfyMAQYABayICJAAgAkEgaiABQeAAEH0aIAJBCGogAkEgahBIAkACQEEUQQEQmAEiAwRAIAJCFDcCJCACIAM2AiAgAkEgaiACQQhqQRQQVCACKAIgIQQCQCACKAIkIgUgAigCKCIDRgRAIAUhAwwBCyAFIANJDQIgBUUNACADRQRAIAQQEkEBIQQMAQsgBCAFQQEgAxCMASIERQ0DCyABEBIgACADNgIEIAAgBDYCACACQYABaiQADwtBFBCFAQALQd+LwABBJEGEjMAAEHoACyADQQFBrKLAACgCACIAQQIgABsRAAAAC+QBAQR/IwBBoAFrIgIkACACQShqIAFB+AAQfRogAiACQShqEEMCQAJAQShBARCYASIDBEAgAkIoNwIsIAIgAzYCKCACQShqIAJBKBBUIAIoAighBAJAIAIoAiwiBSACKAIwIgNGBEAgBSEDDAELIAUgA0kNAiAFRQ0AIANFBEAgBBASQQEhBAwBCyAEIAVBASADEIwBIgRFDQMLIAEQEiAAIAM2AgQgACAENgIAIAJBoAFqJAAPC0EoEIUBAAtB34vAAEEkQYSMwAAQegALIANBAUGsosAAKAIAIgBBAiAAGxEAAAAL5AEBBH8jAEHwAGsiAiQAIAJBEGogAUHgABB9GiACIAJBEGoQSQJAAkBBEEEBEJgBIgMEQCACQhA3AhQgAiADNgIQIAJBEGogAkEQEFQgAigCECEEAkAgAigCFCIFIAIoAhgiA0YEQCAFIQMMAQsgBSADSQ0CIAVFDQAgA0UEQCAEEBJBASEEDAELIAQgBUEBIAMQjAEiBEUNAwsgARASIAAgAzYCBCAAIAQ2AgAgAkHwAGokAA8LQRAQhQEAC0Hfi8AAQSRBhIzAABB6AAsgA0EBQayiwAAoAgAiAEECIAAbEQAAAAvkAQEEfyMAQfAAayICJAAgAkEQaiABQeAAEH0aIAIgAkEQahBKAkACQEEQQQEQmAEiAwRAIAJCEDcCFCACIAM2AhAgAkEQaiACQRAQVCACKAIQIQQCQCACKAIUIgUgAigCGCIDRgRAIAUhAwwBCyAFIANJDQIgBUUNACADRQRAIAQQEkEBIQQMAQsgBCAFQQEgAxCMASIERQ0DCyABEBIgACADNgIEIAAgBDYCACACQfAAaiQADwtBEBCFAQALQd+LwABBJEGEjMAAEHoACyADQQFBrKLAACgCACIAQQIgABsRAAAAC4MBAQR/IwBBsAJrIgIkACACQQA2AgAgAkEEciEFA0AgAyAFaiABIANqLQAAOgAAIAIgAigCAEEBaiIENgIAIANBAWoiA0GQAUcNAAsgBEGPAU0EQCAEQZABEHAACyACQZgBaiACQZQBEH0aIAAgAkGYAWpBBHJBkAEQfRogAkGwAmokAAuDAQEEfyMAQaACayICJAAgAkEANgIAIAJBBHIhBQNAIAMgBWogASADai0AADoAACACIAIoAgBBAWoiBDYCACADQQFqIgNBiAFHDQALIARBhwFNBEAgBEGIARBwAAsgAkGQAWogAkGMARB9GiAAIAJBkAFqQQRyQYgBEH0aIAJBoAJqJAALgwEBBH8jAEGgAWsiAiQAIAJBADYCACACQQRyIQUDQCADIAVqIAEgA2otAAA6AAAgAiACKAIAQQFqIgQ2AgAgA0EBaiIDQcgARw0ACyAEQccATQRAIARByAAQcAALIAJB0ABqIAJBzAAQfRogACACQdAAakEEckHIABB9GiACQaABaiQAC4MBAQR/IwBBkAJrIgIkACACQQA2AgAgAkEEciEFA0AgAyAFaiABIANqLQAAOgAAIAIgAigCAEEBaiIENgIAIANBAWoiA0GAAUcNAAsgBEH/AE0EQCAEQYABEHAACyACQYgBaiACQYQBEH0aIAAgAkGIAWpBBHJBgAEQfRogAkGQAmokAAuDAQEEfyMAQeABayICJAAgAkEANgIAIAJBBHIhBQNAIAMgBWogASADai0AADoAACACIAIoAgBBAWoiBDYCACADQQFqIgNB6ABHDQALIARB5wBNBEAgBEHoABBwAAsgAkHwAGogAkHsABB9GiAAIAJB8ABqQQRyQegAEH0aIAJB4AFqJAALlgEBAn8jAEHgAmsiAiQAIAJBmAFqIAFByAEQfRogAkEIaiABQcwBahBcIAEoAsgBIQNB4AJBCBCYASIBRQRAQeACQQhBrKLAACgCACIAQQIgABsRAAAACyABIAJBmAFqQcgBEH0iASADNgLIASABQcwBaiACQQhqQZABEH0aIABByI3AADYCBCAAIAE2AgAgAkHgAmokAAuWAQECfyMAQeACayICJAAgAkGYAWogAUHIARB9GiACQQhqIAFBzAFqEFwgASgCyAEhA0HgAkEIEJgBIgFFBEBB4AJBCEGsosAAKAIAIgBBAiAAGxEAAAALIAEgAkGYAWpByAEQfSIBIAM2AsgBIAFBzAFqIAJBCGpBkAEQfRogAEGQjsAANgIEIAAgATYCACACQeACaiQAC4IBAQF/IwBBMGsiAkEOaiABKAAKNgEAIAJBEmogAS8ADjsBACACIAEvAAA7AQQgAiABKQACNwEGIAJBEDYCACACQSBqIAJBCGopAwA3AwAgAkEoaiACQRBqKAIANgIAIAIgAikDADcDGCAAIAIpAhw3AAAgAEEIaiACQSRqKQIANwAAC5ABAQJ/IwBB0AJrIgIkACACQYgBaiABQcgBEH0aIAIgAUHMAWoQXSABKALIASEDQdgCQQgQmAEiAUUEQEHYAkEIQayiwAAoAgAiAEECIAAbEQAAAAsgASACQYgBakHIARB9IgEgAzYCyAEgAUHMAWogAkGIARB9GiAAQeyNwAA2AgQgACABNgIAIAJB0AJqJAALkAEBAn8jAEGwAmsiAiQAIAJB6ABqIAFByAEQfRogAiABQcwBahBgIAEoAsgBIQNBuAJBCBCYASIBRQRAQbgCQQhBrKLAACgCACIAQQIgABsRAAAACyABIAJB6ABqQcgBEH0iASADNgLIASABQcwBaiACQegAEH0aIABBtI7AADYCBCAAIAE2AgAgAkGwAmokAAuQAQECfyMAQbACayICJAAgAkHoAGogAUHIARB9GiACIAFBzAFqEGAgASgCyAEhA0G4AkEIEJgBIgFFBEBBuAJBCEGsosAAKAIAIgBBAiAAGxEAAAALIAEgAkHoAGpByAEQfSIBIAM2AsgBIAFBzAFqIAJB6AAQfRogAEHYjsAANgIEIAAgATYCACACQbACaiQAC5ABAQJ/IwBBkAJrIgIkACACQcgAaiABQcgBEH0aIAIgAUHMAWoQXiABKALIASEDQZgCQQgQmAEiAUUEQEGYAkEIQayiwAAoAgAiAEECIAAbEQAAAAsgASACQcgAakHIARB9IgEgAzYCyAEgAUHMAWogAkHIABB9GiAAQfyOwAA2AgQgACABNgIAIAJBkAJqJAALkAEBAn8jAEHQAmsiAiQAIAJBiAFqIAFByAEQfRogAiABQcwBahBdIAEoAsgBIQNB2AJBCBCYASIBRQRAQdgCQQhBrKLAACgCACIAQQIgABsRAAAACyABIAJBiAFqQcgBEH0iASADNgLIASABQcwBaiACQYgBEH0aIABBoI/AADYCBCAAIAE2AgAgAkHQAmokAAuQAQECfyMAQZACayICJAAgAkHIAGogAUHIARB9GiACIAFBzAFqEF4gASgCyAEhA0GYAkEIEJgBIgFFBEBBmAJBCEGsosAAKAIAIgBBAiAAGxEAAAALIAEgAkHIAGpByAEQfSIBIAM2AsgBIAFBzAFqIAJByAAQfRogAEHEj8AANgIEIAAgATYCACACQZACaiQAC34BAX8jAEFAaiIFJAAgBSABNgIMIAUgADYCCCAFIAM2AhQgBSACNgIQIAVBLGpBAjYCACAFQTxqQQQ2AgAgBUICNwIcIAVByIvAADYCGCAFQQE2AjQgBSAFQTBqNgIoIAUgBUEQajYCOCAFIAVBCGo2AjAgBUEYaiAEEIEBAAuYAQAgAEIANwMAIABBCGpCADcDACAAQQA2AlAgAEGomcAAKQMANwMQIABBGGpBsJnAACkDADcDACAAQSBqQbiZwAApAwA3AwAgAEEoakHAmcAAKQMANwMAIABBMGpByJnAACkDADcDACAAQThqQdCZwAApAwA3AwAgAEFAa0HYmcAAKQMANwMAIABByABqQeCZwAApAwA3AwALmAEAIABCADcDACAAQQhqQgA3AwAgAEEANgJQIABB6JjAACkDADcDECAAQRhqQfCYwAApAwA3AwAgAEEgakH4mMAAKQMANwMAIABBKGpBgJnAACkDADcDACAAQTBqQYiZwAApAwA3AwAgAEE4akGQmcAAKQMANwMAIABBQGtBmJnAACkDADcDACAAQcgAakGgmcAAKQMANwMAC20BAX8jAEEwayIDJAAgAyABNgIEIAMgADYCACADQRxqQQI2AgAgA0EsakEFNgIAIANCAjcCDCADQYiIwAA2AgggA0EFNgIkIAMgA0EgajYCGCADIAM2AiggAyADQQRqNgIgIANBCGogAhCBAQALbQEBfyMAQTBrIgMkACADIAE2AgQgAyAANgIAIANBHGpBAjYCACADQSxqQQU2AgAgA0ICNwIMIANBpIrAADYCCCADQQU2AiQgAyADQSBqNgIYIAMgA0EEajYCKCADIAM2AiAgA0EIaiACEIEBAAttAQF/IwBBMGsiAyQAIAMgATYCBCADIAA2AgAgA0EcakECNgIAIANBLGpBBTYCACADQgI3AgwgA0HcisAANgIIIANBBTYCJCADIANBIGo2AhggAyADQQRqNgIoIAMgAzYCICADQQhqIAIQgQEAC3ABAX8jAEEwayICJAAgAiABNgIEIAIgADYCACACQRxqQQI2AgAgAkEsakEFNgIAIAJCAjcCDCACQeiRwAA2AgggAkEFNgIkIAIgAkEgajYCGCACIAJBBGo2AiggAiACNgIgIAJBCGpB+JHAABCBAQALVAEBfyMAQSBrIgIkACACIAAoAgA2AgQgAkEYaiABQRBqKQIANwMAIAJBEGogAUEIaikCADcDACACIAEpAgA3AwggAkEEaiACQQhqEBkgAkEgaiQAC2ICAX8BfiMAQRBrIgIkAAJAIAEEQCABKAIADQEgAUF/NgIAIAJBCGogASgCBCABQQhqKAIAKAIQEQAAIAIpAwghAyABQQA2AgAgACADNwIAIAJBEGokAA8LEJABAAsQkQEAC1gAIABCADcCFCAAQQA2AgAgAEHMAGpCADcCACAAQcQAakIANwIAIABBPGpCADcCACAAQTRqQgA3AgAgAEEsakIANwIAIABBJGpCADcCACAAQRxqQgA3AgALagECf0EBIQACQAJAQaCiwAAoAgBBAUcEQEGgosAAQoGAgIAQNwMADAELQaSiwABBpKLAACgCAEEBaiIANgIAIABBAksNAQtBqKLAACgCACIBQX9MDQBBqKLAACABNgIAIABBAUsNAAALAAtDAQN/AkAgAkUNAANAIAAtAAAiBCABLQAAIgVGBEAgAEEBaiEAIAFBAWohASACQX9qIgINAQwCCwsgBCAFayEDCyADC0sBAn8CQCAABEAgACgCAA0BIABBADYCACAAKAIEIQEgACgCCCECIAAQEiABIAIoAgARBAAgAigCBARAIAEQEgsPCxCQAQALEJEBAAtIAAJAIAAEQCAAKAIADQEgAEF/NgIAIAAoAgQgASACIABBCGooAgAoAgwRAQAgAgRAIAEQEgsgAEEANgIADwsQkAEACxCRAQALSgACfyABQYCAxABHBEBBASAAKAIYIAEgAEEcaigCACgCEBECAA0BGgsgAkUEQEEADwsgACgCGCACQQAgAEEcaigCACgCDBEDAAsLXQAgAEIANwMAIABBADYCMCAAQeiXwAApAwA3AwggAEEQakHwl8AAKQMANwMAIABBGGpB+JfAACkDADcDACAAQSBqQYCYwAApAwA3AwAgAEEoakGImMAAKQMANwMAC0gBAX8jAEEgayIDJAAgA0EUakEANgIAIANBxJ3AADYCECADQgE3AgQgAyABNgIcIAMgADYCGCADIANBGGo2AgAgAyACEIEBAAtQACAAQgA3AwAgAEEANgIIIABBpJjAACkCADcCTCAAQdQAakGsmMAAKQIANwIAIABB3ABqQbSYwAApAgA3AgAgAEHkAGpBvJjAACkCADcCAAtQACAAQgA3AwAgAEEANgIIIABBxJjAACkCADcCTCAAQdQAakHMmMAAKQIANwIAIABB3ABqQdSYwAApAgA3AgAgAEHkAGpB3JjAACkCADcCAAszAQF/IAIEQCAAIQMDQCADIAEtAAA6AAAgA0EBaiEDIAFBAWohASACQX9qIgINAAsLIAALKwACQCAAQXxLDQAgAEUEQEEEDwsgACAAQX1JQQJ0EJgBIgBFDQAgAA8LAAs9ACAAQQA2AhwgAEEYakGgmMAAKAIANgIAIABBEGpBmJjAACkDADcDACAAQZCYwAApAwA3AwggAEIANwMACz0AIABCADcDACAAQQA2AhwgAEGQmMAAKQMANwMIIABBEGpBmJjAACkDADcDACAAQRhqQaCYwAAoAgA2AgALSgEBfyMAQRBrIgIkACACIAE2AgwgAiAANgIIIAJBmIjAADYCBCACQcSdwAA2AgAgAigCCEUEQEGYncAAQStBxJ3AABB6AAsQdAALIQAgAgRAA0AgACABOgAAIABBAWohACACQX9qIgINAAsLCy4AIABB1ABqQeCXwAApAwA3AgAgAEHYl8AAKQMANwJMIABBADYCCCAAQgA3AwALIAACQCABQXxLDQAgACABQQQgAhCMASIARQ0AIAAP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"));
            cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });
            cachedTextDecoder.decode();
            cachegetUint8Memory0 = null;
            heap = new Array(32).fill(undefined);
            heap.push(undefined, null, true, false);
            heap_next = heap.length;
            WASM_VECTOR_LEN = 0;
            cachedTextEncoder = new TextEncoder('utf-8');
            encodeString = (typeof cachedTextEncoder.encodeInto === 'function'
                ? function (arg, view) {
                    return cachedTextEncoder.encodeInto(arg, view);
                }
                : function (arg, view) {
                    const buf = cachedTextEncoder.encode(arg);
                    view.set(buf);
                    return {
                        read: arg.length,
                        written: buf.length
                    };
                });
            cachegetInt32Memory0 = null;
            DenoHash = class DenoHash {
                static __wrap(ptr) {
                    const obj = Object.create(DenoHash.prototype);
                    obj.ptr = ptr;
                    return obj;
                }
                free() {
                    const ptr = this.ptr;
                    this.ptr = 0;
                    wasm.__wbg_denohash_free(ptr);
                }
            };
            exports_313("DenoHash", DenoHash);
            exports_313("default", init);
        }
    };
});
System.register("https://deno.land/std@0.63.0/encoding/hex", [], function (exports_314, context_314) {
    "use strict";
    var hextable;
    var __moduleName = context_314 && context_314.id;
    function errInvalidByte(byte) {
        return new Error("encoding/hex: invalid byte: " +
            new TextDecoder().decode(new Uint8Array([byte])));
    }
    exports_314("errInvalidByte", errInvalidByte);
    function errLength() {
        return new Error("encoding/hex: odd length hex string");
    }
    exports_314("errLength", errLength);
    function fromHexChar(byte) {
        if (48 <= byte && byte <= 57)
            return byte - 48;
        if (97 <= byte && byte <= 102)
            return byte - 97 + 10;
        if (65 <= byte && byte <= 70)
            return byte - 65 + 10;
        throw errInvalidByte(byte);
    }
    function encodedLen(n) {
        return n * 2;
    }
    exports_314("encodedLen", encodedLen);
    function encode(src) {
        const dst = new Uint8Array(encodedLen(src.length));
        for (let i = 0; i < dst.length; i++) {
            const v = src[i];
            dst[i * 2] = hextable[v >> 4];
            dst[i * 2 + 1] = hextable[v & 0x0f];
        }
        return dst;
    }
    exports_314("encode", encode);
    function encodeToString(src) {
        return new TextDecoder().decode(encode(src));
    }
    exports_314("encodeToString", encodeToString);
    function decode(src) {
        const dst = new Uint8Array(decodedLen(src.length));
        for (let i = 0; i < dst.length; i++) {
            const a = fromHexChar(src[i * 2]);
            const b = fromHexChar(src[i * 2 + 1]);
            dst[i] = (a << 4) | b;
        }
        if (src.length % 2 == 1) {
            fromHexChar(src[dst.length * 2]);
            throw errLength();
        }
        return dst;
    }
    exports_314("decode", decode);
    function decodedLen(x) {
        return x >>> 1;
    }
    exports_314("decodedLen", decodedLen);
    function decodeString(s) {
        return decode(new TextEncoder().encode(s));
    }
    exports_314("decodeString", decodeString);
    return {
        setters: [],
        execute: function () {
            hextable = new TextEncoder().encode("0123456789abcdef");
        }
    };
});
System.register("https://deno.land/std@0.63.0/hash/hasher", [], function (exports_315, context_315) {
    "use strict";
    var __moduleName = context_315 && context_315.id;
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/std@0.63.0/hash/_wasm/hash", ["https://deno.land/std@0.63.0/hash/_wasm/wasm", "https://deno.land/std@0.63.0/encoding/hex", "https://deno.land/std@0.63.0/encoding/base64"], function (exports_316, context_316) {
    "use strict";
    var wasm_js_1, hex, base64, TYPE_ERROR_MSG, Hash;
    var __moduleName = context_316 && context_316.id;
    return {
        setters: [
            function (wasm_js_1_1) {
                wasm_js_1 = wasm_js_1_1;
            },
            function (hex_1) {
                hex = hex_1;
            },
            function (base64_2) {
                base64 = base64_2;
            }
        ],
        execute: async function () {
            await wasm_js_1.default(wasm_js_1.source);
            TYPE_ERROR_MSG = "hash: `data` is invalid type";
            Hash = class Hash {
                constructor(algorithm) {
                    this.#hash = wasm_js_1.create_hash(algorithm);
                    this.#digested = false;
                }
                #hash;
                #digested;
                update(data) {
                    let msg;
                    if (typeof data === "string") {
                        msg = new TextEncoder().encode(data);
                    }
                    else if (typeof data === "object") {
                        if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {
                            msg = new Uint8Array(data);
                        }
                        else {
                            throw new Error(TYPE_ERROR_MSG);
                        }
                    }
                    else {
                        throw new Error(TYPE_ERROR_MSG);
                    }
                    wasm_js_1.update_hash(this.#hash, msg);
                    return this;
                }
                digest() {
                    if (this.#digested)
                        throw new Error("hash: already digested");
                    this.#digested = true;
                    return wasm_js_1.digest_hash(this.#hash);
                }
                toString(format = "hex") {
                    const finalized = new Uint8Array(this.digest());
                    switch (format) {
                        case "hex":
                            return hex.encodeToString(finalized);
                        case "base64":
                            return base64.encode(finalized);
                        default:
                            throw new Error("hash: invalid format");
                    }
                }
            };
            exports_316("Hash", Hash);
        }
    };
});
System.register("https://deno.land/std@0.63.0/hash/mod", ["https://deno.land/std@0.63.0/hash/_wasm/hash"], function (exports_317, context_317) {
    "use strict";
    var hash_ts_1;
    var __moduleName = context_317 && context_317.id;
    function createHash(algorithm) {
        return new hash_ts_1.Hash(algorithm);
    }
    exports_317("createHash", createHash);
    return {
        setters: [
            function (hash_ts_1_1) {
                hash_ts_1 = hash_ts_1_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/postgres@v0.4.3/deps", ["https://deno.land/std@0.63.0/io/bufio", "https://deno.land/std@0.63.0/bytes/mod", "https://deno.land/std@0.63.0/async/deferred", "https://deno.land/std@0.63.0/hash/mod"], function (exports_318, context_318) {
    "use strict";
    var __moduleName = context_318 && context_318.id;
    return {
        setters: [
            function (bufio_ts_3_1) {
                exports_318({
                    "BufReader": bufio_ts_3_1["BufReader"],
                    "BufWriter": bufio_ts_3_1["BufWriter"]
                });
            },
            function (mod_ts_36_1) {
                exports_318({
                    "copyBytes": mod_ts_36_1["copyBytes"]
                });
            },
            function (deferred_ts_3_1) {
                exports_318({
                    "deferred": deferred_ts_3_1["deferred"]
                });
            },
            function (mod_ts_37_1) {
                exports_318({
                    "createHash": mod_ts_37_1["createHash"]
                });
            }
        ],
        execute: function () {
        }
    };
});
/*!
 * Adapted directly from https://github.com/brianc/node-buffer-writer
 * which is licensed as follows:
 *
 * The MIT License (MIT)
 *
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * 'Software'), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
System.register("https://deno.land/x/postgres@v0.4.3/packet_writer", ["https://deno.land/x/postgres@v0.4.3/deps"], function (exports_319, context_319) {
    "use strict";
    var deps_ts_8, PacketWriter;
    var __moduleName = context_319 && context_319.id;
    return {
        setters: [
            function (deps_ts_8_1) {
                deps_ts_8 = deps_ts_8_1;
            }
        ],
        execute: function () {
            PacketWriter = class PacketWriter {
                constructor(size) {
                    this.encoder = new TextEncoder();
                    this.size = size || 1024;
                    this.buffer = new Uint8Array(this.size + 5);
                    this.offset = 5;
                    this.headerPosition = 0;
                }
                _ensure(size) {
                    const remaining = this.buffer.length - this.offset;
                    if (remaining < size) {
                        const oldBuffer = this.buffer;
                        const newSize = oldBuffer.length + (oldBuffer.length >> 1) + size;
                        this.buffer = new Uint8Array(newSize);
                        deps_ts_8.copyBytes(oldBuffer, this.buffer);
                    }
                }
                addInt32(num) {
                    this._ensure(4);
                    this.buffer[this.offset++] = (num >>> 24) & 0xff;
                    this.buffer[this.offset++] = (num >>> 16) & 0xff;
                    this.buffer[this.offset++] = (num >>> 8) & 0xff;
                    this.buffer[this.offset++] = (num >>> 0) & 0xff;
                    return this;
                }
                addInt16(num) {
                    this._ensure(2);
                    this.buffer[this.offset++] = (num >>> 8) & 0xff;
                    this.buffer[this.offset++] = (num >>> 0) & 0xff;
                    return this;
                }
                addCString(string) {
                    if (!string) {
                        this._ensure(1);
                    }
                    else {
                        const encodedStr = this.encoder.encode(string);
                        this._ensure(encodedStr.byteLength + 1);
                        deps_ts_8.copyBytes(encodedStr, this.buffer, this.offset);
                        this.offset += encodedStr.byteLength;
                    }
                    this.buffer[this.offset++] = 0;
                    return this;
                }
                addChar(c) {
                    if (c.length != 1) {
                        throw new Error("addChar requires single character strings");
                    }
                    this._ensure(1);
                    deps_ts_8.copyBytes(this.encoder.encode(c), this.buffer, this.offset);
                    this.offset++;
                    return this;
                }
                addString(string) {
                    string = string || "";
                    const encodedStr = this.encoder.encode(string);
                    this._ensure(encodedStr.byteLength);
                    deps_ts_8.copyBytes(encodedStr, this.buffer, this.offset);
                    this.offset += encodedStr.byteLength;
                    return this;
                }
                add(otherBuffer) {
                    this._ensure(otherBuffer.length);
                    deps_ts_8.copyBytes(otherBuffer, this.buffer, this.offset);
                    this.offset += otherBuffer.length;
                    return this;
                }
                clear() {
                    this.offset = 5;
                    this.headerPosition = 0;
                }
                addHeader(code, last) {
                    const origOffset = this.offset;
                    this.offset = this.headerPosition;
                    this.buffer[this.offset++] = code;
                    this.addInt32(origOffset - (this.headerPosition + 1));
                    this.headerPosition = origOffset;
                    this.offset = origOffset;
                    if (!last) {
                        this._ensure(5);
                        this.offset += 5;
                    }
                    return this;
                }
                join(code) {
                    if (code) {
                        this.addHeader(code, true);
                    }
                    return this.buffer.slice(code ? 0 : 5, this.offset);
                }
                flush(code) {
                    const result = this.join(code);
                    this.clear();
                    return result;
                }
            };
            exports_319("PacketWriter", PacketWriter);
        }
    };
});
System.register("https://deno.land/x/postgres@v0.4.3/utils", ["https://deno.land/x/postgres@v0.4.3/deps"], function (exports_320, context_320) {
    "use strict";
    var deps_ts_9, encoder;
    var __moduleName = context_320 && context_320.id;
    function readInt16BE(buffer, offset) {
        offset = offset >>> 0;
        const val = buffer[offset + 1] | (buffer[offset] << 8);
        return val & 0x8000 ? val | 0xffff0000 : val;
    }
    exports_320("readInt16BE", readInt16BE);
    function readUInt16BE(buffer, offset) {
        offset = offset >>> 0;
        return buffer[offset] | (buffer[offset + 1] << 8);
    }
    exports_320("readUInt16BE", readUInt16BE);
    function readInt32BE(buffer, offset) {
        offset = offset >>> 0;
        return ((buffer[offset] << 24) |
            (buffer[offset + 1] << 16) |
            (buffer[offset + 2] << 8) |
            buffer[offset + 3]);
    }
    exports_320("readInt32BE", readInt32BE);
    function readUInt32BE(buffer, offset) {
        offset = offset >>> 0;
        return (buffer[offset] * 0x1000000 +
            ((buffer[offset + 1] << 16) |
                (buffer[offset + 2] << 8) |
                buffer[offset + 3]));
    }
    exports_320("readUInt32BE", readUInt32BE);
    function md5(bytes) {
        return deps_ts_9.createHash("md5").update(bytes).toString("hex");
    }
    function hashMd5Password(password, username, salt) {
        const innerHash = md5(encoder.encode(password + username));
        const innerBytes = encoder.encode(innerHash);
        const outerBuffer = new Uint8Array(innerBytes.length + salt.length);
        outerBuffer.set(innerBytes);
        outerBuffer.set(salt, innerBytes.length);
        const outerHash = md5(outerBuffer);
        return "md5" + outerHash;
    }
    exports_320("hashMd5Password", hashMd5Password);
    function parseDsn(dsn) {
        const [protocol, stripped_url] = dsn.match(/(?:(?!:\/\/).)+/g) ?? ["", ""];
        const url = new URL(`http:${stripped_url}`);
        return {
            driver: protocol,
            user: url.username,
            password: url.password,
            hostname: url.hostname,
            port: url.port,
            database: url.pathname.slice(1),
            params: Object.fromEntries(url.searchParams.entries()),
        };
    }
    exports_320("parseDsn", parseDsn);
    function delay(ms, value) {
        return new Promise((resolve, reject) => {
            setTimeout(() => {
                resolve(value);
            }, ms);
        });
    }
    exports_320("delay", delay);
    return {
        setters: [
            function (deps_ts_9_1) {
                deps_ts_9 = deps_ts_9_1;
            }
        ],
        execute: function () {
            encoder = new TextEncoder();
        }
    };
});
System.register("https://deno.land/x/postgres@v0.4.3/packet_reader", ["https://deno.land/x/postgres@v0.4.3/utils"], function (exports_321, context_321) {
    "use strict";
    var utils_ts_1, PacketReader;
    var __moduleName = context_321 && context_321.id;
    return {
        setters: [
            function (utils_ts_1_1) {
                utils_ts_1 = utils_ts_1_1;
            }
        ],
        execute: function () {
            PacketReader = class PacketReader {
                constructor(buffer) {
                    this.buffer = buffer;
                    this.offset = 0;
                    this.decoder = new TextDecoder();
                }
                readInt16() {
                    const value = utils_ts_1.readInt16BE(this.buffer, this.offset);
                    this.offset += 2;
                    return value;
                }
                readInt32() {
                    const value = utils_ts_1.readInt32BE(this.buffer, this.offset);
                    this.offset += 4;
                    return value;
                }
                readByte() {
                    return this.readBytes(1)[0];
                }
                readBytes(length) {
                    const start = this.offset;
                    const end = start + length;
                    const slice = this.buffer.slice(start, end);
                    this.offset = end;
                    return slice;
                }
                readString(length) {
                    const bytes = this.readBytes(length);
                    return this.decoder.decode(bytes);
                }
                readCString() {
                    const start = this.offset;
                    const end = this.buffer.indexOf(0, start);
                    const slice = this.buffer.slice(start, end);
                    this.offset = end + 1;
                    return this.decoder.decode(slice);
                }
            };
            exports_321("PacketReader", PacketReader);
        }
    };
});
System.register("https://deno.land/x/postgres@v0.4.3/encode", [], function (exports_322, context_322) {
    "use strict";
    var __moduleName = context_322 && context_322.id;
    function pad(number, digits) {
        let padded = "" + number;
        while (padded.length < digits) {
            padded = "0" + padded;
        }
        return padded;
    }
    function encodeDate(date) {
        const year = pad(date.getFullYear(), 4);
        const month = pad(date.getMonth() + 1, 2);
        const day = pad(date.getDate(), 2);
        const hour = pad(date.getHours(), 2);
        const min = pad(date.getMinutes(), 2);
        const sec = pad(date.getSeconds(), 2);
        const ms = pad(date.getMilliseconds(), 3);
        const encodedDate = `${year}-${month}-${day}T${hour}:${min}:${sec}.${ms}`;
        const offset = date.getTimezoneOffset();
        const tzSign = offset > 0 ? "-" : "+";
        const absOffset = Math.abs(offset);
        const tzHours = pad(Math.floor(absOffset / 60), 2);
        const tzMinutes = pad(Math.floor(absOffset % 60), 2);
        const encodedTz = `${tzSign}${tzHours}:${tzMinutes}`;
        return encodedDate + encodedTz;
    }
    function escapeArrayElement(value) {
        let strValue = value.toString();
        const escapedValue = strValue.replace(/\\/g, "\\\\").replace(/"/g, '\\"');
        return `"${escapedValue}"`;
    }
    function encodeArray(array) {
        let encodedArray = "{";
        array.forEach((element, index) => {
            if (index > 0) {
                encodedArray += ",";
            }
            if (element === null || typeof element === "undefined") {
                encodedArray += "NULL";
            }
            else if (Array.isArray(element)) {
                encodedArray += encodeArray(element);
            }
            else if (element instanceof Uint8Array) {
                throw new Error("Can't encode array of buffers.");
            }
            else {
                const encodedElement = encode(element);
                encodedArray += escapeArrayElement(encodedElement);
            }
        });
        encodedArray += "}";
        return encodedArray;
    }
    function encodeBytes(value) {
        let hex = Array.from(value)
            .map((val) => (val < 10 ? `0${val.toString(16)}` : val.toString(16)))
            .join("");
        return `\\x${hex}`;
    }
    function encode(value) {
        if (value === null || typeof value === "undefined") {
            return null;
        }
        else if (value instanceof Uint8Array) {
            return encodeBytes(value);
        }
        else if (value instanceof Date) {
            return encodeDate(value);
        }
        else if (value instanceof Array) {
            return encodeArray(value);
        }
        else if (value instanceof Object) {
            return JSON.stringify(value);
        }
        else {
            return value.toString();
        }
    }
    exports_322("encode", encode);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/postgres@v0.4.3/oid", [], function (exports_323, context_323) {
    "use strict";
    var Oid;
    var __moduleName = context_323 && context_323.id;
    return {
        setters: [],
        execute: function () {
            exports_323("Oid", Oid = {
                bool: 16,
                bytea: 17,
                char: 18,
                name: 19,
                int8: 20,
                int2: 21,
                int2vector: 22,
                int4: 23,
                regproc: 24,
                text: 25,
                oid: 26,
                tid: 27,
                xid: 28,
                cid: 29,
                oidvector: 30,
                pg_ddl_command: 32,
                pg_type: 71,
                pg_attribute: 75,
                pg_proc: 81,
                pg_class: 83,
                json: 114,
                xml: 142,
                _xml: 143,
                pg_node_tree: 194,
                _json: 199,
                smgr: 210,
                index_am_handler: 325,
                point: 600,
                lseg: 601,
                path: 602,
                box: 603,
                polygon: 604,
                line: 628,
                _line: 629,
                cidr: 650,
                _cidr: 651,
                float4: 700,
                float8: 701,
                abstime: 702,
                reltime: 703,
                tinterval: 704,
                unknown: 705,
                circle: 718,
                _circle: 719,
                money: 790,
                _money: 791,
                macaddr: 829,
                inet: 869,
                _bool: 1000,
                _bytea: 1001,
                _char: 1002,
                _name: 1003,
                _int2: 1005,
                _int2vector: 1006,
                _int4: 1007,
                _regproc: 1008,
                _text: 1009,
                _tid: 1010,
                _xid: 1011,
                _cid: 1012,
                _oidvector: 1013,
                _bpchar: 1014,
                _varchar: 1015,
                _int8: 1016,
                _point: 1017,
                _lseg: 1018,
                _path: 1019,
                _box: 1020,
                _float4: 1021,
                _float8: 1022,
                _abstime: 1023,
                _reltime: 1024,
                _tinterval: 1025,
                _polygon: 1027,
                _oid: 1028,
                aclitem: 1033,
                _aclitem: 1034,
                _macaddr: 1040,
                _inet: 1041,
                bpchar: 1042,
                varchar: 1043,
                date: 1082,
                time: 1083,
                timestamp: 1114,
                _timestamp: 1115,
                _date: 1182,
                _time: 1183,
                timestamptz: 1184,
                _timestamptz: 1185,
                interval: 1186,
                _interval: 1187,
                _numeric: 1231,
                pg_database: 1248,
                _cstring: 1263,
                timetz: 1266,
                _timetz: 1270,
                bit: 1560,
                _bit: 1561,
                varbit: 1562,
                _varbit: 1563,
                numeric: 1700,
                refcursor: 1790,
                _refcursor: 2201,
                regprocedure: 2202,
                regoper: 2203,
                regoperator: 2204,
                regclass: 2205,
                regtype: 2206,
                _regprocedure: 2207,
                _regoper: 2208,
                _regoperator: 2209,
                _regclass: 2210,
                _regtype: 2211,
                record: 2249,
                cstring: 2275,
                any: 2276,
                anyarray: 2277,
                void: 2278,
                trigger: 2279,
                language_handler: 2280,
                internal: 2281,
                opaque: 2282,
                anyelement: 2283,
                _record: 2287,
                anynonarray: 2776,
                pg_authid: 2842,
                pg_auth_members: 2843,
                _txid_snapshot: 2949,
                uuid: 2950,
                _uuid: 2951,
                txid_snapshot: 2970,
                fdw_handler: 3115,
                pg_lsn: 3220,
                _pg_lsn: 3221,
                tsm_handler: 3310,
                anyenum: 3500,
                tsvector: 3614,
                tsquery: 3615,
                gtsvector: 3642,
                _tsvector: 3643,
                _gtsvector: 3644,
                _tsquery: 3645,
                regconfig: 3734,
                _regconfig: 3735,
                regdictionary: 3769,
                _regdictionary: 3770,
                jsonb: 3802,
                _jsonb: 3807,
                anyrange: 3831,
                event_trigger: 3838,
                int4range: 3904,
                _int4range: 3905,
                numrange: 3906,
                _numrange: 3907,
                tsrange: 3908,
                _tsrange: 3909,
                tstzrange: 3910,
                _tstzrange: 3911,
                daterange: 3912,
                _daterange: 3913,
                int8range: 3926,
                _int8range: 3927,
                pg_shseclabel: 4066,
                regnamespace: 4089,
                _regnamespace: 4090,
                regrole: 4096,
                _regrole: 4097,
            });
        }
    };
});
System.register("https://deno.land/x/postgres@v0.4.3/array_parser", [], function (exports_324, context_324) {
    "use strict";
    var ArrayParser;
    var __moduleName = context_324 && context_324.id;
    function parseArray(source, transform) {
        return new ArrayParser(source, transform).parse();
    }
    exports_324("parseArray", parseArray);
    function identity(value) {
        return value;
    }
    return {
        setters: [],
        execute: function () {
            ArrayParser = class ArrayParser {
                constructor(source, transform) {
                    this.position = 0;
                    this.entries = [];
                    this.recorded = [];
                    this.dimension = 0;
                    this.source = source;
                    this.transform = transform || identity;
                }
                isEof() {
                    return this.position >= this.source.length;
                }
                nextCharacter() {
                    const character = this.source[this.position++];
                    if (character === "\\") {
                        return {
                            value: this.source[this.position++],
                            escaped: true,
                        };
                    }
                    return {
                        value: character,
                        escaped: false,
                    };
                }
                record(character) {
                    this.recorded.push(character);
                }
                newEntry(includeEmpty = false) {
                    let entry;
                    if (this.recorded.length > 0 || includeEmpty) {
                        entry = this.recorded.join("");
                        if (entry === "NULL" && !includeEmpty) {
                            entry = null;
                        }
                        if (entry !== null)
                            entry = this.transform(entry);
                        this.entries.push(entry);
                        this.recorded = [];
                    }
                }
                consumeDimensions() {
                    if (this.source[0] === "[") {
                        while (!this.isEof()) {
                            let char = this.nextCharacter();
                            if (char.value === "=")
                                break;
                        }
                    }
                }
                parse(nested) {
                    let character, parser, quote;
                    this.consumeDimensions();
                    while (!this.isEof()) {
                        character = this.nextCharacter();
                        if (character.value === "{" && !quote) {
                            this.dimension++;
                            if (this.dimension > 1) {
                                parser = new ArrayParser(this.source.substr(this.position - 1), this.transform);
                                this.entries.push(parser.parse(true));
                                this.position += parser.position - 2;
                            }
                        }
                        else if (character.value === "}" && !quote) {
                            this.dimension--;
                            if (!this.dimension) {
                                this.newEntry();
                                if (nested)
                                    return this.entries;
                            }
                        }
                        else if (character.value === '"' && !character.escaped) {
                            if (quote)
                                this.newEntry(true);
                            quote = !quote;
                        }
                        else if (character.value === "," && !quote) {
                            this.newEntry();
                        }
                        else {
                            this.record(character.value);
                        }
                    }
                    if (this.dimension !== 0) {
                        throw new Error("array dimension not balanced");
                    }
                    return this.entries;
                }
            };
        }
    };
});
System.register("https://deno.land/x/postgres@v0.4.3/decode", ["https://deno.land/x/postgres@v0.4.3/oid", "https://deno.land/x/postgres@v0.4.3/connection", "https://deno.land/x/postgres@v0.4.3/array_parser"], function (exports_325, context_325) {
    "use strict";
    var oid_ts_1, connection_ts_1, array_parser_ts_1, DATETIME_RE, DATE_RE, TIMEZONE_RE, BC_RE, HEX, BACKSLASH_BYTE_VALUE, HEX_PREFIX_REGEX, decoder;
    var __moduleName = context_325 && context_325.id;
    function decodeDate(dateStr) {
        const matches = DATE_RE.exec(dateStr);
        if (!matches) {
            return null;
        }
        const year = parseInt(matches[1], 10);
        const month = parseInt(matches[2], 10) - 1;
        const day = parseInt(matches[3], 10);
        const date = new Date(year, month, day);
        date.setUTCFullYear(year);
        return date;
    }
    function decodeTimezoneOffset(dateStr) {
        const timeStr = dateStr.split(" ")[1];
        const matches = TIMEZONE_RE.exec(timeStr);
        if (!matches) {
            return null;
        }
        const type = matches[1];
        if (type === "Z") {
            return 0;
        }
        const sign = type === "-" ? 1 : -1;
        const hours = parseInt(matches[2], 10);
        const minutes = parseInt(matches[3] || "0", 10);
        const seconds = parseInt(matches[4] || "0", 10);
        const offset = hours * 3600 + minutes * 60 + seconds;
        return sign * offset * 1000;
    }
    function decodeDatetime(dateStr) {
        if (dateStr === "infinity") {
            return Number(Infinity);
        }
        else if (dateStr === "-infinity") {
            return Number(-Infinity);
        }
        const matches = DATETIME_RE.exec(dateStr);
        if (!matches) {
            return decodeDate(dateStr);
        }
        const isBC = BC_RE.test(dateStr);
        const year = parseInt(matches[1], 10) * (isBC ? -1 : 1);
        const month = parseInt(matches[2], 10) - 1;
        const day = parseInt(matches[3], 10);
        const hour = parseInt(matches[4], 10);
        const minute = parseInt(matches[5], 10);
        const second = parseInt(matches[6], 10);
        const msMatch = matches[7];
        const ms = msMatch ? 1000 * parseFloat(msMatch) : 0;
        let date;
        const offset = decodeTimezoneOffset(dateStr);
        if (offset === null) {
            date = new Date(year, month, day, hour, minute, second, ms);
        }
        else {
            const utc = Date.UTC(year, month, day, hour, minute, second, ms);
            date = new Date(utc + offset);
        }
        date.setUTCFullYear(year);
        return date;
    }
    function decodeBinary() {
        throw new Error("Not implemented!");
    }
    function decodeBytea(byteaStr) {
        if (HEX_PREFIX_REGEX.test(byteaStr)) {
            return decodeByteaHex(byteaStr);
        }
        else {
            return decodeByteaEscape(byteaStr);
        }
    }
    function decodeByteaHex(byteaStr) {
        let bytesStr = byteaStr.slice(2);
        let bytes = new Uint8Array(bytesStr.length / 2);
        for (let i = 0, j = 0; i < bytesStr.length; i += 2, j++) {
            bytes[j] = parseInt(bytesStr[i] + bytesStr[i + 1], HEX);
        }
        return bytes;
    }
    function decodeByteaEscape(byteaStr) {
        let bytes = [];
        let i = 0;
        while (i < byteaStr.length) {
            if (byteaStr[i] !== "\\") {
                bytes.push(byteaStr.charCodeAt(i));
                ++i;
            }
            else {
                if (/[0-7]{3}/.test(byteaStr.substr(i + 1, 3))) {
                    bytes.push(parseInt(byteaStr.substr(i + 1, 3), 8));
                    i += 4;
                }
                else {
                    let backslashes = 1;
                    while (i + backslashes < byteaStr.length &&
                        byteaStr[i + backslashes] === "\\") {
                        backslashes++;
                    }
                    for (var k = 0; k < Math.floor(backslashes / 2); ++k) {
                        bytes.push(BACKSLASH_BYTE_VALUE);
                    }
                    i += Math.floor(backslashes / 2) * 2;
                }
            }
        }
        return new Uint8Array(bytes);
    }
    function decodeStringArray(value) {
        if (!value)
            return null;
        return array_parser_ts_1.parseArray(value, undefined);
    }
    function decodeBaseTenInt(value) {
        return parseInt(value, 10);
    }
    function decodeIntArray(value) {
        if (!value)
            return null;
        return array_parser_ts_1.parseArray(value, decodeBaseTenInt);
    }
    function decodeText(value, typeOid) {
        const strValue = decoder.decode(value);
        switch (typeOid) {
            case oid_ts_1.Oid.char:
            case oid_ts_1.Oid.varchar:
            case oid_ts_1.Oid.text:
            case oid_ts_1.Oid.time:
            case oid_ts_1.Oid.timetz:
            case oid_ts_1.Oid.inet:
            case oid_ts_1.Oid.cidr:
            case oid_ts_1.Oid.macaddr:
            case oid_ts_1.Oid.name:
            case oid_ts_1.Oid.uuid:
            case oid_ts_1.Oid.oid:
            case oid_ts_1.Oid.regproc:
            case oid_ts_1.Oid.regprocedure:
            case oid_ts_1.Oid.regoper:
            case oid_ts_1.Oid.regoperator:
            case oid_ts_1.Oid.regclass:
            case oid_ts_1.Oid.regtype:
            case oid_ts_1.Oid.regrole:
            case oid_ts_1.Oid.regnamespace:
            case oid_ts_1.Oid.regconfig:
            case oid_ts_1.Oid.regdictionary:
            case oid_ts_1.Oid.int8:
            case oid_ts_1.Oid.numeric:
            case oid_ts_1.Oid.void:
            case oid_ts_1.Oid.bpchar:
                return strValue;
            case oid_ts_1.Oid._text:
            case oid_ts_1.Oid._varchar:
            case oid_ts_1.Oid._macaddr:
            case oid_ts_1.Oid._cidr:
            case oid_ts_1.Oid._inet:
            case oid_ts_1.Oid._bpchar:
            case oid_ts_1.Oid._uuid:
                return decodeStringArray(strValue);
            case oid_ts_1.Oid.bool:
                return strValue[0] === "t";
            case oid_ts_1.Oid.int2:
            case oid_ts_1.Oid.int4:
                return decodeBaseTenInt(strValue);
            case oid_ts_1.Oid._int2:
            case oid_ts_1.Oid._int4:
                return decodeIntArray(strValue);
            case oid_ts_1.Oid.float4:
            case oid_ts_1.Oid.float8:
                return parseFloat(strValue);
            case oid_ts_1.Oid.timestamptz:
            case oid_ts_1.Oid.timestamp:
                return decodeDatetime(strValue);
            case oid_ts_1.Oid.date:
                return decodeDate(strValue);
            case oid_ts_1.Oid.json:
            case oid_ts_1.Oid.jsonb:
                return JSON.parse(strValue);
            case oid_ts_1.Oid.bytea:
                return decodeBytea(strValue);
            default:
                throw new Error(`Don't know how to parse column type: ${typeOid}`);
        }
    }
    function decode(value, column) {
        if (column.format === connection_ts_1.Format.BINARY) {
            return decodeBinary();
        }
        else if (column.format === connection_ts_1.Format.TEXT) {
            return decodeText(value, column.typeOid);
        }
        else {
            throw new Error(`Unknown column format: ${column.format}`);
        }
    }
    exports_325("decode", decode);
    return {
        setters: [
            function (oid_ts_1_1) {
                oid_ts_1 = oid_ts_1_1;
            },
            function (connection_ts_1_1) {
                connection_ts_1 = connection_ts_1_1;
            },
            function (array_parser_ts_1_1) {
                array_parser_ts_1 = array_parser_ts_1_1;
            }
        ],
        execute: function () {
            DATETIME_RE = /^(\d{1,})-(\d{2})-(\d{2}) (\d{2}):(\d{2}):(\d{2})(\.\d{1,})?/;
            DATE_RE = /^(\d{1,})-(\d{2})-(\d{2})$/;
            TIMEZONE_RE = /([Z+-])(\d{2})?:?(\d{2})?:?(\d{2})?/;
            BC_RE = /BC$/;
            HEX = 16;
            BACKSLASH_BYTE_VALUE = 92;
            HEX_PREFIX_REGEX = /^\\x/;
            decoder = new TextDecoder();
        }
    };
});
System.register("https://deno.land/x/postgres@v0.4.3/query", ["https://deno.land/x/postgres@v0.4.3/encode", "https://deno.land/x/postgres@v0.4.3/decode"], function (exports_326, context_326) {
    "use strict";
    var encode_ts_1, decode_ts_1, commandTagRegexp, QueryResult, Query;
    var __moduleName = context_326 && context_326.id;
    return {
        setters: [
            function (encode_ts_1_1) {
                encode_ts_1 = encode_ts_1_1;
            },
            function (decode_ts_1_1) {
                decode_ts_1 = decode_ts_1_1;
            }
        ],
        execute: function () {
            commandTagRegexp = /^([A-Za-z]+)(?: (\d+))?(?: (\d+))?/;
            QueryResult = class QueryResult {
                constructor(query) {
                    this.query = query;
                    this._done = false;
                    this.rows = [];
                }
                handleRowDescription(description) {
                    this.rowDescription = description;
                }
                _parseDataRow(dataRow) {
                    const parsedRow = [];
                    for (let i = 0, len = dataRow.length; i < len; i++) {
                        const column = this.rowDescription.columns[i];
                        const rawValue = dataRow[i];
                        if (rawValue === null) {
                            parsedRow.push(null);
                        }
                        else {
                            parsedRow.push(decode_ts_1.decode(rawValue, column));
                        }
                    }
                    return parsedRow;
                }
                handleDataRow(dataRow) {
                    if (this._done) {
                        throw new Error("New data row, after result if done.");
                    }
                    const parsedRow = this._parseDataRow(dataRow);
                    this.rows.push(parsedRow);
                }
                handleCommandComplete(commandTag) {
                    const match = commandTagRegexp.exec(commandTag);
                    if (match) {
                        this.command = match[1];
                        if (match[3]) {
                            this.rowCount = parseInt(match[3], 10);
                        }
                        else {
                            this.rowCount = parseInt(match[2], 10);
                        }
                    }
                }
                rowsOfObjects() {
                    return this.rows.map((row) => {
                        const rv = {};
                        this.rowDescription.columns.forEach((column, index) => {
                            rv[column.name] = row[index];
                        });
                        return rv;
                    });
                }
                done() {
                    this._done = true;
                }
            };
            exports_326("QueryResult", QueryResult);
            Query = class Query {
                constructor(text, ...args) {
                    let config;
                    if (typeof text === "string") {
                        config = { text, args };
                    }
                    else {
                        config = text;
                    }
                    this.text = config.text;
                    this.args = this._prepareArgs(config);
                    this.result = new QueryResult(this);
                }
                _prepareArgs(config) {
                    const encodingFn = config.encoder ? config.encoder : encode_ts_1.encode;
                    return (config.args || []).map(encodingFn);
                }
            };
            exports_326("Query", Query);
        }
    };
});
System.register("https://deno.land/x/postgres@v0.4.3/error", [], function (exports_327, context_327) {
    "use strict";
    var PostgresError;
    var __moduleName = context_327 && context_327.id;
    function parseError(msg) {
        const errorFields = {};
        let byte;
        let char;
        let errorMsg;
        while ((byte = msg.reader.readByte())) {
            char = String.fromCharCode(byte);
            errorMsg = msg.reader.readCString();
            switch (char) {
                case "S":
                    errorFields.severity = errorMsg;
                    break;
                case "C":
                    errorFields.code = errorMsg;
                    break;
                case "M":
                    errorFields.message = errorMsg;
                    break;
                case "D":
                    errorFields.detail = errorMsg;
                    break;
                case "H":
                    errorFields.hint = errorMsg;
                    break;
                case "P":
                    errorFields.position = errorMsg;
                    break;
                case "p":
                    errorFields.internalPosition = errorMsg;
                    break;
                case "q":
                    errorFields.internalQuery = errorMsg;
                    break;
                case "W":
                    errorFields.where = errorMsg;
                    break;
                case "s":
                    errorFields.schema = errorMsg;
                    break;
                case "t":
                    errorFields.table = errorMsg;
                    break;
                case "c":
                    errorFields.column = errorMsg;
                    break;
                case "d":
                    errorFields.dataTypeName = errorMsg;
                    break;
                case "n":
                    errorFields.constraint = errorMsg;
                    break;
                case "F":
                    errorFields.file = errorMsg;
                    break;
                case "L":
                    errorFields.line = errorMsg;
                    break;
                case "R":
                    errorFields.routine = errorMsg;
                    break;
                default:
                    break;
            }
        }
        return new PostgresError(errorFields);
    }
    exports_327("parseError", parseError);
    return {
        setters: [],
        execute: function () {
            PostgresError = class PostgresError extends Error {
                constructor(fields) {
                    super(fields.message);
                    this.fields = fields;
                    this.name = "PostgresError";
                }
            };
            exports_327("PostgresError", PostgresError);
        }
    };
});
System.register("https://deno.land/x/postgres@v0.4.3/connection_params", ["https://deno.land/x/postgres@v0.4.3/utils"], function (exports_328, context_328) {
    "use strict";
    var utils_ts_2, ConnectionParamsError, DEFAULT_OPTIONS;
    var __moduleName = context_328 && context_328.id;
    function getPgEnv() {
        try {
            const env = Deno.env;
            const port = env.get("PGPORT");
            return {
                database: env.get("PGDATABASE"),
                hostname: env.get("PGHOST"),
                port: port !== undefined ? parseInt(port, 10) : undefined,
                user: env.get("PGUSER"),
                password: env.get("PGPASSWORD"),
                applicationName: env.get("PGAPPNAME"),
            };
        }
        catch (e) {
            return {};
        }
    }
    function isDefined(value) {
        return value !== undefined && value !== null;
    }
    function select(sources, key) {
        return sources.map((s) => s[key]).find(isDefined);
    }
    function selectRequired(sources, key) {
        const result = select(sources, key);
        if (!isDefined(result)) {
            throw new ConnectionParamsError(`Required parameter ${key} not provided`);
        }
        return result;
    }
    function assertRequiredOptions(sources, requiredKeys) {
        const missingParams = [];
        for (const key of requiredKeys) {
            if (!isDefined(select(sources, key))) {
                missingParams.push(key);
            }
        }
        if (missingParams.length) {
            throw new ConnectionParamsError(formatMissingParams(missingParams));
        }
    }
    function formatMissingParams(missingParams) {
        return `Missing connection parameters: ${missingParams.join(", ")}. Connection parameters can be read from environment only if Deno is run with env permission (deno run --allow-env)`;
    }
    function parseOptionsFromDsn(connString) {
        const dsn = utils_ts_2.parseDsn(connString);
        if (dsn.driver !== "postgres") {
            throw new Error(`Supplied DSN has invalid driver: ${dsn.driver}.`);
        }
        return {
            ...dsn,
            port: dsn.port ? parseInt(dsn.port, 10) : undefined,
            applicationName: dsn.params.application_name,
        };
    }
    function createParams(config = {}) {
        if (typeof config === "string") {
            const dsn = parseOptionsFromDsn(config);
            return createParams(dsn);
        }
        const pgEnv = getPgEnv();
        const sources = [config, pgEnv, DEFAULT_OPTIONS];
        assertRequiredOptions(sources, ["database", "hostname", "port", "user", "applicationName"]);
        const params = {
            database: selectRequired(sources, "database"),
            hostname: selectRequired(sources, "hostname"),
            port: selectRequired(sources, "port"),
            applicationName: selectRequired(sources, "applicationName"),
            user: selectRequired(sources, "user"),
            password: select(sources, "password"),
        };
        if (isNaN(params.port)) {
            throw new ConnectionParamsError(`Invalid port ${params.port}`);
        }
        return params;
    }
    exports_328("createParams", createParams);
    return {
        setters: [
            function (utils_ts_2_1) {
                utils_ts_2 = utils_ts_2_1;
            }
        ],
        execute: function () {
            ConnectionParamsError = class ConnectionParamsError extends Error {
                constructor(message) {
                    super(message);
                    this.name = "ConnectionParamsError";
                }
            };
            DEFAULT_OPTIONS = {
                hostname: "127.0.0.1",
                port: 5432,
                applicationName: "deno_postgres",
            };
        }
    };
});
System.register("https://deno.land/x/postgres@v0.4.3/deferred", ["https://deno.land/x/postgres@v0.4.3/deps"], function (exports_329, context_329) {
    "use strict";
    var deps_ts_10, DeferredStack;
    var __moduleName = context_329 && context_329.id;
    return {
        setters: [
            function (deps_ts_10_1) {
                deps_ts_10 = deps_ts_10_1;
            }
        ],
        execute: function () {
            DeferredStack = class DeferredStack {
                constructor(max, ls, _creator) {
                    this._creator = _creator;
                    this._maxSize = max || 10;
                    this._array = ls ? [...ls] : [];
                    this._size = this._array.length;
                    this._queue = [];
                }
                async pop() {
                    if (this._array.length > 0) {
                        return this._array.pop();
                    }
                    else if (this._size < this._maxSize && this._creator) {
                        this._size++;
                        return await this._creator();
                    }
                    const d = deps_ts_10.deferred();
                    this._queue.push(d);
                    await d;
                    return this._array.pop();
                }
                push(value) {
                    this._array.push(value);
                    if (this._queue.length > 0) {
                        const d = this._queue.shift();
                        d.resolve();
                    }
                }
                get size() {
                    return this._size;
                }
                get available() {
                    return this._array.length;
                }
            };
            exports_329("DeferredStack", DeferredStack);
        }
    };
});
/*!
 * Substantial parts adapted from https://github.com/brianc/node-postgres
 * which is licensed as follows:
 *
 * The MIT License (MIT)
 *
 * Copyright (c) 2010 - 2019 Brian Carlson
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * 'Software'), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
System.register("https://deno.land/x/postgres@v0.4.3/connection", ["https://deno.land/x/postgres@v0.4.3/deps", "https://deno.land/x/postgres@v0.4.3/packet_writer", "https://deno.land/x/postgres@v0.4.3/utils", "https://deno.land/x/postgres@v0.4.3/packet_reader", "https://deno.land/x/postgres@v0.4.3/query", "https://deno.land/x/postgres@v0.4.3/error", "https://deno.land/x/postgres@v0.4.3/deferred"], function (exports_330, context_330) {
    "use strict";
    var deps_ts_11, packet_writer_ts_1, utils_ts_3, packet_reader_ts_1, query_ts_1, error_ts_1, deferred_ts_4, Format, TransactionStatus, Message, Column, RowDescription, Connection;
    var __moduleName = context_330 && context_330.id;
    return {
        setters: [
            function (deps_ts_11_1) {
                deps_ts_11 = deps_ts_11_1;
            },
            function (packet_writer_ts_1_1) {
                packet_writer_ts_1 = packet_writer_ts_1_1;
            },
            function (utils_ts_3_1) {
                utils_ts_3 = utils_ts_3_1;
            },
            function (packet_reader_ts_1_1) {
                packet_reader_ts_1 = packet_reader_ts_1_1;
            },
            function (query_ts_1_1) {
                query_ts_1 = query_ts_1_1;
            },
            function (error_ts_1_1) {
                error_ts_1 = error_ts_1_1;
            },
            function (deferred_ts_4_1) {
                deferred_ts_4 = deferred_ts_4_1;
            }
        ],
        execute: function () {
            (function (Format) {
                Format[Format["TEXT"] = 0] = "TEXT";
                Format[Format["BINARY"] = 1] = "BINARY";
            })(Format || (Format = {}));
            exports_330("Format", Format);
            (function (TransactionStatus) {
                TransactionStatus["Idle"] = "I";
                TransactionStatus["IdleInTransaction"] = "T";
                TransactionStatus["InFailedTransaction"] = "E";
            })(TransactionStatus || (TransactionStatus = {}));
            Message = class Message {
                constructor(type, byteCount, body) {
                    this.type = type;
                    this.byteCount = byteCount;
                    this.body = body;
                    this.reader = new packet_reader_ts_1.PacketReader(body);
                }
            };
            exports_330("Message", Message);
            Column = class Column {
                constructor(name, tableOid, index, typeOid, columnLength, typeModifier, format) {
                    this.name = name;
                    this.tableOid = tableOid;
                    this.index = index;
                    this.typeOid = typeOid;
                    this.columnLength = columnLength;
                    this.typeModifier = typeModifier;
                    this.format = format;
                }
            };
            exports_330("Column", Column);
            RowDescription = class RowDescription {
                constructor(columnCount, columns) {
                    this.columnCount = columnCount;
                    this.columns = columns;
                }
            };
            exports_330("RowDescription", RowDescription);
            Connection = class Connection {
                constructor(connParams) {
                    this.connParams = connParams;
                    this.decoder = new TextDecoder();
                    this.encoder = new TextEncoder();
                    this._parameters = {};
                    this._queryLock = new deferred_ts_4.DeferredStack(1, [undefined]);
                }
                async readMessage() {
                    const header = new Uint8Array(5);
                    await this.bufReader.readFull(header);
                    const msgType = this.decoder.decode(header.slice(0, 1));
                    const msgLength = utils_ts_3.readUInt32BE(header, 1) - 4;
                    const msgBody = new Uint8Array(msgLength);
                    await this.bufReader.readFull(msgBody);
                    return new Message(msgType, msgLength, msgBody);
                }
                async _sendStartupMessage() {
                    const writer = this.packetWriter;
                    writer.clear();
                    writer.addInt16(3).addInt16(0);
                    const connParams = this.connParams;
                    writer.addCString("user").addCString(connParams.user);
                    writer.addCString("database").addCString(connParams.database);
                    writer.addCString("application_name").addCString(connParams.applicationName);
                    writer.addCString("client_encoding").addCString("'utf-8'");
                    writer.addCString("");
                    const bodyBuffer = writer.flush();
                    const bodyLength = bodyBuffer.length + 4;
                    writer.clear();
                    const finalBuffer = writer
                        .addInt32(bodyLength)
                        .add(bodyBuffer)
                        .join();
                    await this.bufWriter.write(finalBuffer);
                }
                async startup() {
                    const { port, hostname } = this.connParams;
                    this.conn = await Deno.connect({ port, hostname });
                    this.bufReader = new deps_ts_11.BufReader(this.conn);
                    this.bufWriter = new deps_ts_11.BufWriter(this.conn);
                    this.packetWriter = new packet_writer_ts_1.PacketWriter();
                    await this._sendStartupMessage();
                    await this.bufWriter.flush();
                    let msg;
                    msg = await this.readMessage();
                    await this.handleAuth(msg);
                    while (true) {
                        msg = await this.readMessage();
                        switch (msg.type) {
                            case "K":
                                this._processBackendKeyData(msg);
                                break;
                            case "S":
                                this._processParameterStatus(msg);
                                break;
                            case "Z":
                                this._processReadyForQuery(msg);
                                return;
                            default:
                                throw new Error(`Unknown response for startup: ${msg.type}`);
                        }
                    }
                }
                async handleAuth(msg) {
                    const code = msg.reader.readInt32();
                    switch (code) {
                        case 0:
                            break;
                        case 3:
                            await this._authCleartext();
                            await this._readAuthResponse();
                            break;
                        case 5: {
                            const salt = msg.reader.readBytes(4);
                            await this._authMd5(salt);
                            await this._readAuthResponse();
                            break;
                        }
                        default:
                            throw new Error(`Unknown auth message code ${code}`);
                    }
                }
                async _readAuthResponse() {
                    const msg = await this.readMessage();
                    if (msg.type === "E") {
                        throw error_ts_1.parseError(msg);
                    }
                    else if (msg.type !== "R") {
                        throw new Error(`Unexpected auth response: ${msg.type}.`);
                    }
                    const responseCode = msg.reader.readInt32();
                    if (responseCode !== 0) {
                        throw new Error(`Unexpected auth response code: ${responseCode}.`);
                    }
                }
                async _authCleartext() {
                    this.packetWriter.clear();
                    const password = this.connParams.password || "";
                    const buffer = this.packetWriter.addCString(password).flush(0x70);
                    await this.bufWriter.write(buffer);
                    await this.bufWriter.flush();
                }
                async _authMd5(salt) {
                    this.packetWriter.clear();
                    if (!this.connParams.password) {
                        throw new Error("Auth Error: attempting MD5 auth with password unset");
                    }
                    const password = utils_ts_3.hashMd5Password(this.connParams.password, this.connParams.user, salt);
                    const buffer = this.packetWriter.addCString(password).flush(0x70);
                    await this.bufWriter.write(buffer);
                    await this.bufWriter.flush();
                }
                _processBackendKeyData(msg) {
                    this._pid = msg.reader.readInt32();
                    this._secretKey = msg.reader.readInt32();
                }
                _processParameterStatus(msg) {
                    const key = msg.reader.readCString();
                    const value = msg.reader.readCString();
                    this._parameters[key] = value;
                }
                _processReadyForQuery(msg) {
                    const txStatus = msg.reader.readByte();
                    this._transactionStatus = String.fromCharCode(txStatus);
                }
                async _readReadyForQuery() {
                    const msg = await this.readMessage();
                    if (msg.type !== "Z") {
                        throw new Error(`Unexpected message type: ${msg.type}, expected "Z" (ReadyForQuery)`);
                    }
                    this._processReadyForQuery(msg);
                }
                async _simpleQuery(query) {
                    this.packetWriter.clear();
                    const buffer = this.packetWriter.addCString(query.text).flush(0x51);
                    await this.bufWriter.write(buffer);
                    await this.bufWriter.flush();
                    const result = query.result;
                    let msg;
                    msg = await this.readMessage();
                    switch (msg.type) {
                        case "T":
                            result.handleRowDescription(this._processRowDescription(msg));
                            break;
                        case "n":
                            break;
                        case "E":
                            await this._processError(msg);
                            break;
                        case "N":
                            console.log("TODO: handle notice");
                            break;
                        case "C": {
                            const commandTag = this._readCommandTag(msg);
                            result.handleCommandComplete(commandTag);
                            result.done();
                            break;
                        }
                        default:
                            throw new Error(`Unexpected frame: ${msg.type}`);
                    }
                    while (true) {
                        msg = await this.readMessage();
                        switch (msg.type) {
                            case "D": {
                                const foo = this._readDataRow(msg);
                                result.handleDataRow(foo);
                                break;
                            }
                            case "C": {
                                const commandTag = this._readCommandTag(msg);
                                result.handleCommandComplete(commandTag);
                                result.done();
                                break;
                            }
                            case "Z":
                                this._processReadyForQuery(msg);
                                return result;
                            case "E":
                                await this._processError(msg);
                                break;
                            default:
                                throw new Error(`Unexpected frame: ${msg.type}`);
                        }
                    }
                }
                async _sendPrepareMessage(query) {
                    this.packetWriter.clear();
                    const buffer = this.packetWriter
                        .addCString("")
                        .addCString(query.text)
                        .addInt16(0)
                        .flush(0x50);
                    await this.bufWriter.write(buffer);
                }
                async _sendBindMessage(query) {
                    this.packetWriter.clear();
                    const hasBinaryArgs = query.args.reduce((prev, curr) => {
                        return prev || curr instanceof Uint8Array;
                    }, false);
                    this.packetWriter.clear();
                    this.packetWriter
                        .addCString("")
                        .addCString("");
                    if (hasBinaryArgs) {
                        this.packetWriter.addInt16(query.args.length);
                        query.args.forEach((arg) => {
                            this.packetWriter.addInt16(arg instanceof Uint8Array ? 1 : 0);
                        });
                    }
                    else {
                        this.packetWriter.addInt16(0);
                    }
                    this.packetWriter.addInt16(query.args.length);
                    query.args.forEach((arg) => {
                        if (arg === null || typeof arg === "undefined") {
                            this.packetWriter.addInt32(-1);
                        }
                        else if (arg instanceof Uint8Array) {
                            this.packetWriter.addInt32(arg.length);
                            this.packetWriter.add(arg);
                        }
                        else {
                            const byteLength = this.encoder.encode(arg).length;
                            this.packetWriter.addInt32(byteLength);
                            this.packetWriter.addString(arg);
                        }
                    });
                    this.packetWriter.addInt16(0);
                    const buffer = this.packetWriter.flush(0x42);
                    await this.bufWriter.write(buffer);
                }
                async _sendDescribeMessage() {
                    this.packetWriter.clear();
                    const buffer = this.packetWriter.addCString("P").flush(0x44);
                    await this.bufWriter.write(buffer);
                }
                async _sendExecuteMessage() {
                    this.packetWriter.clear();
                    const buffer = this.packetWriter
                        .addCString("")
                        .addInt32(0)
                        .flush(0x45);
                    await this.bufWriter.write(buffer);
                }
                async _sendFlushMessage() {
                    this.packetWriter.clear();
                    const buffer = this.packetWriter.flush(0x48);
                    await this.bufWriter.write(buffer);
                }
                async _sendSyncMessage() {
                    this.packetWriter.clear();
                    const buffer = this.packetWriter.flush(0x53);
                    await this.bufWriter.write(buffer);
                }
                async _processError(msg) {
                    const error = error_ts_1.parseError(msg);
                    await this._readReadyForQuery();
                    throw error;
                }
                async _readParseComplete() {
                    const msg = await this.readMessage();
                    switch (msg.type) {
                        case "1":
                            break;
                        case "E":
                            await this._processError(msg);
                            break;
                        default:
                            throw new Error(`Unexpected frame: ${msg.type}`);
                    }
                }
                async _readBindComplete() {
                    const msg = await this.readMessage();
                    switch (msg.type) {
                        case "2":
                            break;
                        case "E":
                            await this._processError(msg);
                            break;
                        default:
                            throw new Error(`Unexpected frame: ${msg.type}`);
                    }
                }
                async _preparedQuery(query) {
                    await this._sendPrepareMessage(query);
                    await this._sendBindMessage(query);
                    await this._sendDescribeMessage();
                    await this._sendExecuteMessage();
                    await this._sendSyncMessage();
                    await this.bufWriter.flush();
                    await this._readParseComplete();
                    await this._readBindComplete();
                    const result = query.result;
                    let msg;
                    msg = await this.readMessage();
                    switch (msg.type) {
                        case "T": {
                            const rowDescription = this._processRowDescription(msg);
                            result.handleRowDescription(rowDescription);
                            break;
                        }
                        case "n":
                            break;
                        case "E":
                            await this._processError(msg);
                            break;
                        default:
                            throw new Error(`Unexpected frame: ${msg.type}`);
                    }
                    outerLoop: while (true) {
                        msg = await this.readMessage();
                        switch (msg.type) {
                            case "D": {
                                const rawDataRow = this._readDataRow(msg);
                                result.handleDataRow(rawDataRow);
                                break;
                            }
                            case "C": {
                                const commandTag = this._readCommandTag(msg);
                                result.handleCommandComplete(commandTag);
                                result.done();
                                break outerLoop;
                            }
                            case "E":
                                await this._processError(msg);
                                break;
                            default:
                                throw new Error(`Unexpected frame: ${msg.type}`);
                        }
                    }
                    await this._readReadyForQuery();
                    return result;
                }
                async query(query) {
                    await this._queryLock.pop();
                    try {
                        if (query.args.length === 0) {
                            return await this._simpleQuery(query);
                        }
                        else {
                            return await this._preparedQuery(query);
                        }
                    }
                    finally {
                        this._queryLock.push(undefined);
                    }
                }
                _processRowDescription(msg) {
                    const columnCount = msg.reader.readInt16();
                    const columns = [];
                    for (let i = 0; i < columnCount; i++) {
                        const column = new Column(msg.reader.readCString(), msg.reader.readInt32(), msg.reader.readInt16(), msg.reader.readInt32(), msg.reader.readInt16(), msg.reader.readInt32(), msg.reader.readInt16());
                        columns.push(column);
                    }
                    return new RowDescription(columnCount, columns);
                }
                _readDataRow(msg) {
                    const fieldCount = msg.reader.readInt16();
                    const row = [];
                    for (let i = 0; i < fieldCount; i++) {
                        const colLength = msg.reader.readInt32();
                        if (colLength == -1) {
                            row.push(null);
                            continue;
                        }
                        row.push(msg.reader.readBytes(colLength));
                    }
                    return row;
                }
                _readCommandTag(msg) {
                    return msg.reader.readString(msg.byteCount);
                }
                async initSQL() {
                    const config = { text: "select 1;", args: [] };
                    const query = new query_ts_1.Query(config);
                    await this.query(query);
                }
                async end() {
                    const terminationMessage = new Uint8Array([0x58, 0x00, 0x00, 0x00, 0x04]);
                    await this.bufWriter.write(terminationMessage);
                    await this.bufWriter.flush();
                    this.conn.close();
                    delete this.conn;
                    delete this.bufReader;
                    delete this.bufWriter;
                    delete this.packetWriter;
                }
            };
            exports_330("Connection", Connection);
        }
    };
});
System.register("https://deno.land/x/postgres@v0.4.3/client", ["https://deno.land/x/postgres@v0.4.3/connection", "https://deno.land/x/postgres@v0.4.3/connection_params", "https://deno.land/x/postgres@v0.4.3/query"], function (exports_331, context_331) {
    "use strict";
    var connection_ts_2, connection_params_ts_1, query_ts_2, Client, PoolClient;
    var __moduleName = context_331 && context_331.id;
    return {
        setters: [
            function (connection_ts_2_1) {
                connection_ts_2 = connection_ts_2_1;
            },
            function (connection_params_ts_1_1) {
                connection_params_ts_1 = connection_params_ts_1_1;
            },
            function (query_ts_2_1) {
                query_ts_2 = query_ts_2_1;
            }
        ],
        execute: function () {
            Client = class Client {
                constructor(config) {
                    this._aenter = this.connect;
                    this._aexit = this.end;
                    const connectionParams = connection_params_ts_1.createParams(config);
                    this._connection = new connection_ts_2.Connection(connectionParams);
                }
                async connect() {
                    await this._connection.startup();
                    await this._connection.initSQL();
                }
                async query(text, ...args) {
                    const query = new query_ts_2.Query(text, ...args);
                    return await this._connection.query(query);
                }
                async multiQuery(queries) {
                    const result = [];
                    for (const query of queries) {
                        result.push(await this.query(query));
                    }
                    return result;
                }
                async end() {
                    await this._connection.end();
                }
            };
            exports_331("Client", Client);
            PoolClient = class PoolClient {
                constructor(connection, releaseCallback) {
                    this._connection = connection;
                    this._releaseCallback = releaseCallback;
                }
                async query(text, ...args) {
                    const query = new query_ts_2.Query(text, ...args);
                    return await this._connection.query(query);
                }
                async release() {
                    await this._releaseCallback();
                }
            };
            exports_331("PoolClient", PoolClient);
        }
    };
});
System.register("https://deno.land/x/postgres@v0.4.3/pool", ["https://deno.land/x/postgres@v0.4.3/client", "https://deno.land/x/postgres@v0.4.3/connection", "https://deno.land/x/postgres@v0.4.3/connection_params", "https://deno.land/x/postgres@v0.4.3/deferred", "https://deno.land/x/postgres@v0.4.3/query"], function (exports_332, context_332) {
    "use strict";
    var client_ts_1, connection_ts_3, connection_params_ts_2, deferred_ts_5, query_ts_3, Pool;
    var __moduleName = context_332 && context_332.id;
    return {
        setters: [
            function (client_ts_1_1) {
                client_ts_1 = client_ts_1_1;
            },
            function (connection_ts_3_1) {
                connection_ts_3 = connection_ts_3_1;
            },
            function (connection_params_ts_2_1) {
                connection_params_ts_2 = connection_params_ts_2_1;
            },
            function (deferred_ts_5_1) {
                deferred_ts_5 = deferred_ts_5_1;
            },
            function (query_ts_3_1) {
                query_ts_3 = query_ts_3_1;
            }
        ],
        execute: function () {
            Pool = class Pool {
                constructor(connectionParams, maxSize, lazy) {
                    this._aenter = () => { };
                    this._aexit = this.end;
                    this._connectionParams = connection_params_ts_2.createParams(connectionParams);
                    this._maxSize = maxSize;
                    this._lazy = !!lazy;
                    this.ready = this._startup();
                }
                async _createConnection() {
                    const connection = new connection_ts_3.Connection(this._connectionParams);
                    await connection.startup();
                    await connection.initSQL();
                    return connection;
                }
                get maxSize() {
                    return this._maxSize;
                }
                get size() {
                    if (this._availableConnections == null) {
                        return 0;
                    }
                    return this._availableConnections.size;
                }
                get available() {
                    if (this._availableConnections == null) {
                        return 0;
                    }
                    return this._availableConnections.available;
                }
                async _startup() {
                    const initSize = this._lazy ? 1 : this._maxSize;
                    const connecting = [...Array(initSize)].map(async () => await this._createConnection());
                    this._connections = await Promise.all(connecting);
                    this._availableConnections = new deferred_ts_5.DeferredStack(this._maxSize, this._connections, this._createConnection.bind(this));
                }
                async _execute(query) {
                    await this.ready;
                    const connection = await this._availableConnections.pop();
                    try {
                        const result = await connection.query(query);
                        return result;
                    }
                    catch (error) {
                        throw error;
                    }
                    finally {
                        this._availableConnections.push(connection);
                    }
                }
                async connect() {
                    await this.ready;
                    const connection = await this._availableConnections.pop();
                    const release = () => this._availableConnections.push(connection);
                    return new client_ts_1.PoolClient(connection, release);
                }
                async query(text, ...args) {
                    const query = new query_ts_3.Query(text, ...args);
                    return await this._execute(query);
                }
                async end() {
                    await this.ready;
                    while (this.available > 0) {
                        const conn = await this._availableConnections.pop();
                        await conn.end();
                    }
                }
            };
            exports_332("Pool", Pool);
        }
    };
});
System.register("https://deno.land/x/postgres@v0.4.3/mod", ["https://deno.land/x/postgres@v0.4.3/client", "https://deno.land/x/postgres@v0.4.3/error", "https://deno.land/x/postgres@v0.4.3/pool"], function (exports_333, context_333) {
    "use strict";
    var __moduleName = context_333 && context_333.id;
    return {
        setters: [
            function (client_ts_2_1) {
                exports_333({
                    "Client": client_ts_2_1["Client"]
                });
            },
            function (error_ts_2_1) {
                exports_333({
                    "PostgresError": error_ts_2_1["PostgresError"]
                });
            },
            function (pool_ts_1_1) {
                exports_333({
                    "Pool": pool_ts_1_1["Pool"]
                });
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/std@0.63.0/async/delay", [], function (exports_334, context_334) {
    "use strict";
    var __moduleName = context_334 && context_334.id;
    function delay(ms) {
        return new Promise((res) => setTimeout(() => {
            res();
        }, ms));
    }
    exports_334("delay", delay);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/std@0.63.0/async/mux_async_iterator", ["https://deno.land/std@0.63.0/async/deferred"], function (exports_335, context_335) {
    "use strict";
    var deferred_ts_6, MuxAsyncIterator;
    var __moduleName = context_335 && context_335.id;
    return {
        setters: [
            function (deferred_ts_6_1) {
                deferred_ts_6 = deferred_ts_6_1;
            }
        ],
        execute: function () {
            MuxAsyncIterator = class MuxAsyncIterator {
                constructor() {
                    this.iteratorCount = 0;
                    this.yields = [];
                    this.throws = [];
                    this.signal = deferred_ts_6.deferred();
                }
                add(iterator) {
                    ++this.iteratorCount;
                    this.callIteratorNext(iterator);
                }
                async callIteratorNext(iterator) {
                    try {
                        const { value, done } = await iterator.next();
                        if (done) {
                            --this.iteratorCount;
                        }
                        else {
                            this.yields.push({ iterator, value });
                        }
                    }
                    catch (e) {
                        this.throws.push(e);
                    }
                    this.signal.resolve();
                }
                async *iterate() {
                    while (this.iteratorCount > 0) {
                        await this.signal;
                        for (let i = 0; i < this.yields.length; i++) {
                            const { iterator, value } = this.yields[i];
                            yield value;
                            this.callIteratorNext(iterator);
                        }
                        if (this.throws.length) {
                            for (const e of this.throws) {
                                throw e;
                            }
                            this.throws.length = 0;
                        }
                        this.yields.length = 0;
                        this.signal = deferred_ts_6.deferred();
                    }
                }
                [Symbol.asyncIterator]() {
                    return this.iterate();
                }
            };
            exports_335("MuxAsyncIterator", MuxAsyncIterator);
        }
    };
});
System.register("https://deno.land/std@0.63.0/async/pool", [], function (exports_336, context_336) {
    "use strict";
    var __moduleName = context_336 && context_336.id;
    function pooledMap(poolLimit, array, iteratorFn) {
        const res = new TransformStream({
            async transform(p, controller) {
                controller.enqueue(await p);
            },
        });
        (async () => {
            const writer = res.writable.getWriter();
            const executing = [];
            for await (const item of array) {
                const p = Promise.resolve().then(() => iteratorFn(item));
                writer.write(p);
                const e = p.then(() => executing.splice(executing.indexOf(e), 1));
                executing.push(e);
                if (executing.length >= poolLimit) {
                    await Promise.race(executing);
                }
            }
            await Promise.all(executing);
            writer.close();
        })();
        return res.readable.getIterator();
    }
    exports_336("pooledMap", pooledMap);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/std@0.63.0/async/mod", ["https://deno.land/std@0.63.0/async/deferred", "https://deno.land/std@0.63.0/async/delay", "https://deno.land/std@0.63.0/async/mux_async_iterator", "https://deno.land/std@0.63.0/async/pool"], function (exports_337, context_337) {
    "use strict";
    var __moduleName = context_337 && context_337.id;
    function exportStar_11(m) {
        var exports = {};
        for (var n in m) {
            if (n !== "default") exports[n] = m[n];
        }
        exports_337(exports);
    }
    return {
        setters: [
            function (deferred_ts_7_1) {
                exportStar_11(deferred_ts_7_1);
            },
            function (delay_ts_2_1) {
                exportStar_11(delay_ts_2_1);
            },
            function (mux_async_iterator_ts_2_1) {
                exportStar_11(mux_async_iterator_ts_2_1);
            },
            function (pool_ts_2_1) {
                exportStar_11(pool_ts_2_1);
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/std@0.63.0/encoding/utf8", [], function (exports_338, context_338) {
    "use strict";
    var encoder, decoder;
    var __moduleName = context_338 && context_338.id;
    function encode(input) {
        return encoder.encode(input);
    }
    exports_338("encode", encode);
    function decode(input) {
        return decoder.decode(input);
    }
    exports_338("decode", decode);
    return {
        setters: [],
        execute: function () {
            exports_338("encoder", encoder = new TextEncoder());
            exports_338("decoder", decoder = new TextDecoder());
        }
    };
});
System.register("https://deno.land/std@0.63.0/fmt/colors", [], function (exports_339, context_339) {
    "use strict";
    var noColor, enabled, ANSI_PATTERN;
    var __moduleName = context_339 && context_339.id;
    function setColorEnabled(value) {
        if (noColor) {
            return;
        }
        enabled = value;
    }
    exports_339("setColorEnabled", setColorEnabled);
    function getColorEnabled() {
        return enabled;
    }
    exports_339("getColorEnabled", getColorEnabled);
    function code(open, close) {
        return {
            open: `\x1b[${open.join(";")}m`,
            close: `\x1b[${close}m`,
            regexp: new RegExp(`\\x1b\\[${close}m`, "g"),
        };
    }
    function run(str, code) {
        return enabled
            ? `${code.open}${str.replace(code.regexp, code.open)}${code.close}`
            : str;
    }
    function reset(str) {
        return run(str, code([0], 0));
    }
    exports_339("reset", reset);
    function bold(str) {
        return run(str, code([1], 22));
    }
    exports_339("bold", bold);
    function dim(str) {
        return run(str, code([2], 22));
    }
    exports_339("dim", dim);
    function italic(str) {
        return run(str, code([3], 23));
    }
    exports_339("italic", italic);
    function underline(str) {
        return run(str, code([4], 24));
    }
    exports_339("underline", underline);
    function inverse(str) {
        return run(str, code([7], 27));
    }
    exports_339("inverse", inverse);
    function hidden(str) {
        return run(str, code([8], 28));
    }
    exports_339("hidden", hidden);
    function strikethrough(str) {
        return run(str, code([9], 29));
    }
    exports_339("strikethrough", strikethrough);
    function black(str) {
        return run(str, code([30], 39));
    }
    exports_339("black", black);
    function red(str) {
        return run(str, code([31], 39));
    }
    exports_339("red", red);
    function green(str) {
        return run(str, code([32], 39));
    }
    exports_339("green", green);
    function yellow(str) {
        return run(str, code([33], 39));
    }
    exports_339("yellow", yellow);
    function blue(str) {
        return run(str, code([34], 39));
    }
    exports_339("blue", blue);
    function magenta(str) {
        return run(str, code([35], 39));
    }
    exports_339("magenta", magenta);
    function cyan(str) {
        return run(str, code([36], 39));
    }
    exports_339("cyan", cyan);
    function white(str) {
        return run(str, code([37], 39));
    }
    exports_339("white", white);
    function gray(str) {
        return run(str, code([90], 39));
    }
    exports_339("gray", gray);
    function bgBlack(str) {
        return run(str, code([40], 49));
    }
    exports_339("bgBlack", bgBlack);
    function bgRed(str) {
        return run(str, code([41], 49));
    }
    exports_339("bgRed", bgRed);
    function bgGreen(str) {
        return run(str, code([42], 49));
    }
    exports_339("bgGreen", bgGreen);
    function bgYellow(str) {
        return run(str, code([43], 49));
    }
    exports_339("bgYellow", bgYellow);
    function bgBlue(str) {
        return run(str, code([44], 49));
    }
    exports_339("bgBlue", bgBlue);
    function bgMagenta(str) {
        return run(str, code([45], 49));
    }
    exports_339("bgMagenta", bgMagenta);
    function bgCyan(str) {
        return run(str, code([46], 49));
    }
    exports_339("bgCyan", bgCyan);
    function bgWhite(str) {
        return run(str, code([47], 49));
    }
    exports_339("bgWhite", bgWhite);
    function clampAndTruncate(n, max = 255, min = 0) {
        return Math.trunc(Math.max(Math.min(n, max), min));
    }
    function rgb8(str, color) {
        return run(str, code([38, 5, clampAndTruncate(color)], 39));
    }
    exports_339("rgb8", rgb8);
    function bgRgb8(str, color) {
        return run(str, code([48, 5, clampAndTruncate(color)], 49));
    }
    exports_339("bgRgb8", bgRgb8);
    function rgb24(str, color) {
        if (typeof color === "number") {
            return run(str, code([38, 2, (color >> 16) & 0xff, (color >> 8) & 0xff, color & 0xff], 39));
        }
        return run(str, code([
            38,
            2,
            clampAndTruncate(color.r),
            clampAndTruncate(color.g),
            clampAndTruncate(color.b),
        ], 39));
    }
    exports_339("rgb24", rgb24);
    function bgRgb24(str, color) {
        if (typeof color === "number") {
            return run(str, code([48, 2, (color >> 16) & 0xff, (color >> 8) & 0xff, color & 0xff], 49));
        }
        return run(str, code([
            48,
            2,
            clampAndTruncate(color.r),
            clampAndTruncate(color.g),
            clampAndTruncate(color.b),
        ], 49));
    }
    exports_339("bgRgb24", bgRgb24);
    function stripColor(string) {
        return string.replace(ANSI_PATTERN, "");
    }
    exports_339("stripColor", stripColor);
    return {
        setters: [],
        execute: function () {
            noColor = globalThis.Deno?.noColor ?? true;
            enabled = !noColor;
            ANSI_PATTERN = new RegExp([
                "[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:[a-zA-Z\\d]*(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)",
                "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))",
            ].join("|"), "g");
        }
    };
});
System.register("https://deno.land/x/bytes_formater@v1.3.0/deps", ["https://deno.land/std@0.63.0/fmt/colors"], function (exports_340, context_340) {
    "use strict";
    var __moduleName = context_340 && context_340.id;
    return {
        setters: [
            function (colors_ts_2_1) {
                exports_340({
                    "setColorEnabled": colors_ts_2_1["setColorEnabled"],
                    "green": colors_ts_2_1["green"]
                });
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/bytes_formater@v1.3.0/format", ["https://deno.land/x/bytes_formater@v1.3.0/deps"], function (exports_341, context_341) {
    "use strict";
    var deps_ts_12;
    var __moduleName = context_341 && context_341.id;
    function format(data) {
        const bytes = new Uint8Array(data.buffer);
        let out = "";
        out += "         +-------------------------------------------------+\n";
        out += `         |${deps_ts_12.green("  0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f ")}|\n`;
        out += "+--------+-------------------------------------------------+----------------+\n";
        const lineCount = Math.ceil(bytes.length / 16);
        for (let line = 0; line < lineCount; line++) {
            const start = line * 16;
            const addr = start.toString(16).padStart(8, "0");
            const lineBytes = bytes.slice(start, start + 16);
            out += `|${deps_ts_12.green(addr)}| `;
            lineBytes.forEach(byte => (out += byte.toString(16).padStart(2, "0") + " "));
            if (lineBytes.length < 16) {
                out += "   ".repeat(16 - lineBytes.length);
            }
            out += "|";
            lineBytes.forEach(function (byte) {
                return (out += byte > 31 && byte < 127 ? deps_ts_12.green(String.fromCharCode(byte)) : ".");
            });
            if (lineBytes.length < 16) {
                out += " ".repeat(16 - lineBytes.length);
            }
            out += "|\n";
        }
        out += "+--------+-------------------------------------------------+----------------+";
        return out;
    }
    exports_341("format", format);
    return {
        setters: [
            function (deps_ts_12_1) {
                deps_ts_12 = deps_ts_12_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/bytes_formater@v1.3.0/mod", ["https://deno.land/x/bytes_formater@v1.3.0/format", "https://deno.land/x/bytes_formater@v1.3.0/deps"], function (exports_342, context_342) {
    "use strict";
    var __moduleName = context_342 && context_342.id;
    return {
        setters: [
            function (format_ts_1_1) {
                exports_342({
                    "format": format_ts_1_1["format"]
                });
            },
            function (deps_ts_13_1) {
                exports_342({
                    "setColorEnabled": deps_ts_13_1["setColorEnabled"]
                });
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/checksum@1.4.0/sha1", [], function (exports_343, context_343) {
    "use strict";
    var Sha1Hash;
    var __moduleName = context_343 && context_343.id;
    function binb_sha1(x, len) {
        x[len >> 5] |= 0x80 << (24 - (len % 32));
        x[(((len + 64) >> 9) << 4) + 15] = len;
        const w = [];
        let a = 1732584193;
        let b = -271733879;
        let c = -1732584194;
        let d = 271733878;
        let e = -1009589776;
        for (let i = 0; i < x.length; i += 16) {
            const olda = a;
            const oldb = b;
            const oldc = c;
            const oldd = d;
            const olde = e;
            for (let j = 0; j < 80; j++) {
                if (j < 16)
                    w[j] = x[i + j];
                else
                    w[j] = bit_rol(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);
                var t = safe_add(safe_add(bit_rol(a, 5), sha1_ft(j, b, c, d)), safe_add(safe_add(e, w[j]), sha1_kt(j)));
                e = d;
                d = c;
                c = bit_rol(b, 30);
                b = a;
                a = t;
            }
            a = safe_add(a, olda);
            b = safe_add(b, oldb);
            c = safe_add(c, oldc);
            d = safe_add(d, oldd);
            e = safe_add(e, olde);
        }
        return [a, b, c, d, e];
    }
    function sha1_ft(t, b, c, d) {
        if (t < 20)
            return (b & c) | (~b & d);
        if (t < 40)
            return b ^ c ^ d;
        if (t < 60)
            return (b & c) | (b & d) | (c & d);
        return b ^ c ^ d;
    }
    function sha1_kt(t) {
        return t < 20
            ? 1518500249
            : t < 40
                ? 1859775393
                : t < 60
                    ? -1894007588
                    : -899497514;
    }
    function safe_add(x, y) {
        const lsw = (x & 0xffff) + (y & 0xffff);
        const msw = (x >> 16) + (y >> 16) + (lsw >> 16);
        return (msw << 16) | (lsw & 0xffff);
    }
    function bit_rol(num, cnt) {
        return (num << cnt) | (num >>> (32 - cnt));
    }
    return {
        setters: [],
        execute: function () {
            Sha1Hash = class Sha1Hash {
                digest(bytes) {
                    let data = [];
                    for (var i = 0; i < bytes.length * 8; i += 8) {
                        data[i >> 5] |= (bytes[i / 8] & 0xff) << (24 - (i % 32));
                    }
                    data = binb_sha1(data, bytes.length * 8);
                    return this.toStrBytes(data);
                }
                toStrBytes(input) {
                    let pos = 0;
                    const data = new Uint8Array(input.length * 4);
                    for (let i = 0; i < input.length * 32; i += 8) {
                        data[pos++] = (input[i >> 5] >> (24 - (i % 32))) & 0xff;
                    }
                    return data;
                }
            };
            exports_343("Sha1Hash", Sha1Hash);
        }
    };
});
System.register("https://deno.land/x/checksum@1.4.0/md5", [], function (exports_344, context_344) {
    "use strict";
    var Md5Hash;
    var __moduleName = context_344 && context_344.id;
    function safeAdd(x, y) {
        const lsw = (x & 0xffff) + (y & 0xffff);
        const msw = (x >> 16) + (y >> 16) + (lsw >> 16);
        return (msw << 16) | (lsw & 0xffff);
    }
    function bitRotateLeft(num, cnt) {
        return (num << cnt) | (num >>> (32 - cnt));
    }
    function md5cmn(q, a, b, x, s, t) {
        return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);
    }
    function md5ff(a, b, c, d, x, s, t) {
        return md5cmn((b & c) | (~b & d), a, b, x, s, t);
    }
    function md5gg(a, b, c, d, x, s, t) {
        return md5cmn((b & d) | (c & ~d), a, b, x, s, t);
    }
    function md5hh(a, b, c, d, x, s, t) {
        return md5cmn(b ^ c ^ d, a, b, x, s, t);
    }
    function md5ii(a, b, c, d, x, s, t) {
        return md5cmn(c ^ (b | ~d), a, b, x, s, t);
    }
    function binlMD5(x, len) {
        x[len >> 5] |= 0x80 << len % 32;
        x[(((len + 64) >>> 9) << 4) + 14] = len;
        let olda, oldb, oldc, oldd;
        let a = 1732584193, b = -271733879, c = -1732584194, d = 271733878;
        for (let i = 0; i < x.length; i += 16) {
            olda = a;
            oldb = b;
            oldc = c;
            oldd = d;
            a = md5ff(a, b, c, d, x[i], 7, -680876936);
            d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);
            c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);
            b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);
            a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);
            d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);
            c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);
            b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);
            a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);
            d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);
            c = md5ff(c, d, a, b, x[i + 10], 17, -42063);
            b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);
            a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);
            d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);
            c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);
            b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);
            a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);
            d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);
            c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);
            b = md5gg(b, c, d, a, x[i], 20, -373897302);
            a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);
            d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);
            c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);
            b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);
            a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);
            d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);
            c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);
            b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);
            a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);
            d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);
            c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);
            b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);
            a = md5hh(a, b, c, d, x[i + 5], 4, -378558);
            d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);
            c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);
            b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);
            a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);
            d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);
            c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);
            b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);
            a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);
            d = md5hh(d, a, b, c, x[i], 11, -358537222);
            c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);
            b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);
            a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);
            d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);
            c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);
            b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);
            a = md5ii(a, b, c, d, x[i], 6, -198630844);
            d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);
            c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);
            b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);
            a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);
            d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);
            c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);
            b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);
            a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);
            d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);
            c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);
            b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);
            a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);
            d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);
            c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);
            b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);
            a = safeAdd(a, olda);
            b = safeAdd(b, oldb);
            c = safeAdd(c, oldc);
            d = safeAdd(d, oldd);
        }
        return [a, b, c, d];
    }
    function md5(bytes) {
        let data = [];
        var length8 = bytes.length * 8;
        for (let i = 0; i < length8; i += 8) {
            data[i >> 5] |= (bytes[i / 8] & 0xff) << i % 32;
        }
        return binlMD5(data, bytes.length * 8);
    }
    return {
        setters: [],
        execute: function () {
            Md5Hash = class Md5Hash {
                digest(bytes) {
                    const data = md5(bytes);
                    return this.toStrBytes(data);
                }
                toStrBytes(input) {
                    const buffer = new ArrayBuffer(16);
                    new Uint32Array(buffer).set(input);
                    return new Uint8Array(buffer);
                }
            };
            exports_344("Md5Hash", Md5Hash);
        }
    };
});
System.register("https://deno.land/x/checksum@1.4.0/hash", ["https://deno.land/x/checksum@1.4.0/sha1", "https://deno.land/x/checksum@1.4.0/md5"], function (exports_345, context_345) {
    "use strict";
    var sha1_ts_2, md5_ts_1, encoder, Hash;
    var __moduleName = context_345 && context_345.id;
    function hex(bytes) {
        return Array.prototype.map
            .call(bytes, (x) => x.toString(16).padStart(2, "0"))
            .join("");
    }
    exports_345("hex", hex);
    function encode(str) {
        return encoder.encode(str);
    }
    exports_345("encode", encode);
    return {
        setters: [
            function (sha1_ts_2_1) {
                sha1_ts_2 = sha1_ts_2_1;
            },
            function (md5_ts_1_1) {
                md5_ts_1 = md5_ts_1_1;
            }
        ],
        execute: function () {
            encoder = new TextEncoder();
            Hash = class Hash {
                constructor(algorithm) {
                    this.algorithm = algorithm;
                    const algorithms = {
                        sha1: sha1_ts_2.Sha1Hash,
                        md5: md5_ts_1.Md5Hash,
                    };
                    this.instance = new algorithms[algorithm]();
                }
                digest(bytes) {
                    bytes = this.instance.digest(bytes);
                    return {
                        data: bytes,
                        hex: () => hex(bytes),
                    };
                }
                digestString(string) {
                    return this.digest(encode(string));
                }
            };
            exports_345("Hash", Hash);
        }
    };
});
System.register("https://deno.land/x/checksum@1.4.0/mod", ["https://deno.land/x/checksum@1.4.0/hash"], function (exports_346, context_346) {
    "use strict";
    var __moduleName = context_346 && context_346.id;
    return {
        setters: [
            function (hash_ts_2_1) {
                exports_346({
                    "Hash": hash_ts_2_1["Hash"],
                    "hex": hash_ts_2_1["hex"],
                    "encode": hash_ts_2_1["encode"]
                });
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/base64@v0.2.1/base", [], function (exports_347, context_347) {
    "use strict";
    var __moduleName = context_347 && context_347.id;
    function getLengths(b64) {
        const len = b64.length;
        let validLen = b64.indexOf("=");
        if (validLen === -1) {
            validLen = len;
        }
        const placeHoldersLen = validLen === len ? 0 : 4 - (validLen % 4);
        return [validLen, placeHoldersLen];
    }
    function init(lookup, revLookup, urlsafe = false) {
        function _byteLength(validLen, placeHoldersLen) {
            return Math.floor(((validLen + placeHoldersLen) * 3) / 4 - placeHoldersLen);
        }
        function tripletToBase64(num) {
            return (lookup[(num >> 18) & 0x3f] +
                lookup[(num >> 12) & 0x3f] +
                lookup[(num >> 6) & 0x3f] +
                lookup[num & 0x3f]);
        }
        function encodeChunk(buf, start, end) {
            const out = new Array((end - start) / 3);
            for (let i = start, curTriplet = 0; i < end; i += 3) {
                out[curTriplet++] = tripletToBase64((buf[i] << 16) + (buf[i + 1] << 8) + buf[i + 2]);
            }
            return out.join("");
        }
        return {
            byteLength(b64) {
                return _byteLength.apply(null, getLengths(b64));
            },
            toUint8Array(b64) {
                const [validLen, placeHoldersLen] = getLengths(b64);
                const buf = new Uint8Array(_byteLength(validLen, placeHoldersLen));
                const len = placeHoldersLen ? validLen - 4 : validLen;
                let tmp;
                let curByte = 0;
                let i;
                for (i = 0; i < len; i += 4) {
                    tmp = (revLookup[b64.charCodeAt(i)] << 18) |
                        (revLookup[b64.charCodeAt(i + 1)] << 12) |
                        (revLookup[b64.charCodeAt(i + 2)] << 6) |
                        revLookup[b64.charCodeAt(i + 3)];
                    buf[curByte++] = (tmp >> 16) & 0xff;
                    buf[curByte++] = (tmp >> 8) & 0xff;
                    buf[curByte++] = tmp & 0xff;
                }
                if (placeHoldersLen === 2) {
                    tmp = (revLookup[b64.charCodeAt(i)] << 2) |
                        (revLookup[b64.charCodeAt(i + 1)] >> 4);
                    buf[curByte++] = tmp & 0xff;
                }
                else if (placeHoldersLen === 1) {
                    tmp = (revLookup[b64.charCodeAt(i)] << 10) |
                        (revLookup[b64.charCodeAt(i + 1)] << 4) |
                        (revLookup[b64.charCodeAt(i + 2)] >> 2);
                    buf[curByte++] = (tmp >> 8) & 0xff;
                    buf[curByte++] = tmp & 0xff;
                }
                return buf;
            },
            fromUint8Array(buf) {
                const maxChunkLength = 16383;
                const len = buf.length;
                const extraBytes = len % 3;
                const len2 = len - extraBytes;
                const parts = new Array(Math.ceil(len2 / maxChunkLength) + (extraBytes ? 1 : 0));
                let curChunk = 0;
                let chunkEnd;
                for (let i = 0; i < len2; i += maxChunkLength) {
                    chunkEnd = i + maxChunkLength;
                    parts[curChunk++] = encodeChunk(buf, i, chunkEnd > len2 ? len2 : chunkEnd);
                }
                let tmp;
                if (extraBytes === 1) {
                    tmp = buf[len2];
                    parts[curChunk] = lookup[tmp >> 2] + lookup[(tmp << 4) & 0x3f];
                    if (!urlsafe)
                        parts[curChunk] += "==";
                }
                else if (extraBytes === 2) {
                    tmp = (buf[len2] << 8) | (buf[len2 + 1] & 0xff);
                    parts[curChunk] = lookup[tmp >> 10] +
                        lookup[(tmp >> 4) & 0x3f] +
                        lookup[(tmp << 2) & 0x3f];
                    if (!urlsafe)
                        parts[curChunk] += "=";
                }
                return parts.join("");
            },
        };
    }
    exports_347("init", init);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/base64@v0.2.1/base64url", ["https://deno.land/x/base64@v0.2.1/base"], function (exports_348, context_348) {
    "use strict";
    var base_ts_1, lookup, revLookup, code, _a, byteLength, toUint8Array, fromUint8Array;
    var __moduleName = context_348 && context_348.id;
    return {
        setters: [
            function (base_ts_1_1) {
                base_ts_1 = base_ts_1_1;
            }
        ],
        execute: function () {
            lookup = [];
            revLookup = [];
            code = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_";
            for (let i = 0, l = code.length; i < l; ++i) {
                lookup[i] = code[i];
                revLookup[code.charCodeAt(i)] = i;
            }
            _a = base_ts_1.init(lookup, revLookup, true), exports_348("byteLength", byteLength = _a.byteLength), exports_348("toUint8Array", toUint8Array = _a.toUint8Array), exports_348("fromUint8Array", fromUint8Array = _a.fromUint8Array);
        }
    };
});
System.register("https://raw.githubusercontent.com/chiefbiiko/std-encoding/v1.0.0/mod", ["https://deno.land/x/base64@v0.2.1/base64url"], function (exports_349, context_349) {
    "use strict";
    var base64url_ts_1, decoder, encoder;
    var __moduleName = context_349 && context_349.id;
    function toHexString(buf) {
        return buf.reduce((hex, byte) => `${hex}${byte < 16 ? "0" : ""}${byte.toString(16)}`, "");
    }
    function fromHexString(hex) {
        const len = hex.length;
        if (len % 2 || !/^[0-9a-fA-F]+$/.test(hex)) {
            throw new TypeError("Invalid hex string.");
        }
        hex = hex.toLowerCase();
        const buf = new Uint8Array(Math.floor(len / 2));
        const end = len / 2;
        for (let i = 0; i < end; ++i) {
            buf[i] = parseInt(hex.substr(i * 2, 2), 16);
        }
        return buf;
    }
    function decode(buf, encoding = "utf8") {
        if (/^utf-?8$/i.test(encoding)) {
            return decoder.decode(buf);
        }
        else if (/^base64$/i.test(encoding)) {
            return base64url_ts_1.fromUint8Array(buf);
        }
        else if (/^hex(?:adecimal)?$/i.test(encoding)) {
            return toHexString(buf);
        }
        else {
            throw new TypeError("Unsupported string encoding.");
        }
    }
    exports_349("decode", decode);
    function encode(str, encoding = "utf8") {
        if (/^utf-?8$/i.test(encoding)) {
            return encoder.encode(str);
        }
        else if (/^base64$/i.test(encoding)) {
            return base64url_ts_1.toUint8Array(str);
        }
        else if (/^hex(?:adecimal)?$/i.test(encoding)) {
            return fromHexString(str);
        }
        else {
            throw new TypeError("Unsupported string encoding.");
        }
    }
    exports_349("encode", encode);
    return {
        setters: [
            function (base64url_ts_1_1) {
                base64url_ts_1 = base64url_ts_1_1;
            }
        ],
        execute: function () {
            decoder = new TextDecoder();
            encoder = new TextEncoder();
        }
    };
});
System.register("https://deno.land/x/sha256@v1.0.2/deps", ["https://raw.githubusercontent.com/chiefbiiko/std-encoding/v1.0.0/mod"], function (exports_350, context_350) {
    "use strict";
    var __moduleName = context_350 && context_350.id;
    return {
        setters: [
            function (mod_ts_38_1) {
                exports_350({
                    "encode": mod_ts_38_1["encode"],
                    "decode": mod_ts_38_1["decode"]
                });
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/sha256@v1.0.2/mod", ["https://deno.land/x/sha256@v1.0.2/deps"], function (exports_351, context_351) {
    "use strict";
    var deps_ts_14, BYTES, SHA256;
    var __moduleName = context_351 && context_351.id;
    function sha256(msg, inputEncoding, outputEncoding) {
        return new SHA256().update(msg, inputEncoding).digest(outputEncoding);
    }
    exports_351("sha256", sha256);
    return {
        setters: [
            function (deps_ts_14_1) {
                deps_ts_14 = deps_ts_14_1;
            }
        ],
        execute: function () {
            exports_351("BYTES", BYTES = 32);
            SHA256 = class SHA256 {
                constructor() {
                    this.hashSize = BYTES;
                    this._buf = new Uint8Array(64);
                    this._K = new Uint32Array([
                        0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,
                        0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
                        0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,
                        0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
                        0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
                        0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
                        0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,
                        0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
                        0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,
                        0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
                        0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,
                        0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
                        0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
                        0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
                        0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
                        0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
                    ]);
                    this.init();
                }
                init() {
                    this._H = new Uint32Array([
                        0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,
                        0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19
                    ]);
                    this._bufIdx = 0;
                    this._count = new Uint32Array(2);
                    this._buf.fill(0);
                    this._finalized = false;
                    return this;
                }
                update(msg, inputEncoding) {
                    if (msg === null) {
                        throw new TypeError("msg must be a string or Uint8Array.");
                    }
                    else if (typeof msg === "string") {
                        msg = deps_ts_14.encode(msg, inputEncoding);
                    }
                    for (let i = 0, len = msg.length; i < len; i++) {
                        this._buf[this._bufIdx++] = msg[i];
                        if (this._bufIdx === 64) {
                            this._transform();
                            this._bufIdx = 0;
                        }
                    }
                    const c = this._count;
                    if ((c[0] += msg.length << 3) < msg.length << 3) {
                        c[1]++;
                    }
                    c[1] += msg.length >>> 29;
                    return this;
                }
                digest(outputEncoding) {
                    if (this._finalized) {
                        throw new Error("digest has already been called.");
                    }
                    this._finalized = true;
                    const b = this._buf;
                    let idx = this._bufIdx;
                    b[idx++] = 0x80;
                    while (idx !== 56) {
                        if (idx === 64) {
                            this._transform();
                            idx = 0;
                        }
                        b[idx++] = 0;
                    }
                    const c = this._count;
                    b[56] = (c[1] >>> 24) & 0xff;
                    b[57] = (c[1] >>> 16) & 0xff;
                    b[58] = (c[1] >>> 8) & 0xff;
                    b[59] = (c[1] >>> 0) & 0xff;
                    b[60] = (c[0] >>> 24) & 0xff;
                    b[61] = (c[0] >>> 16) & 0xff;
                    b[62] = (c[0] >>> 8) & 0xff;
                    b[63] = (c[0] >>> 0) & 0xff;
                    this._transform();
                    const hash = new Uint8Array(BYTES);
                    for (let i = 0; i < 8; i++) {
                        hash[(i << 2) + 0] = (this._H[i] >>> 24) & 0xff;
                        hash[(i << 2) + 1] = (this._H[i] >>> 16) & 0xff;
                        hash[(i << 2) + 2] = (this._H[i] >>> 8) & 0xff;
                        hash[(i << 2) + 3] = (this._H[i] >>> 0) & 0xff;
                    }
                    this.init();
                    return outputEncoding ? deps_ts_14.decode(hash, outputEncoding) : hash;
                }
                _transform() {
                    const h = this._H;
                    let h0 = h[0];
                    let h1 = h[1];
                    let h2 = h[2];
                    let h3 = h[3];
                    let h4 = h[4];
                    let h5 = h[5];
                    let h6 = h[6];
                    let h7 = h[7];
                    const w = new Uint32Array(16);
                    let i;
                    for (i = 0; i < 16; i++) {
                        w[i] =
                            this._buf[(i << 2) + 3] |
                                (this._buf[(i << 2) + 2] << 8) |
                                (this._buf[(i << 2) + 1] << 16) |
                                (this._buf[i << 2] << 24);
                    }
                    for (i = 0; i < 64; i++) {
                        let tmp;
                        if (i < 16) {
                            tmp = w[i];
                        }
                        else {
                            let a = w[(i + 1) & 15];
                            let b = w[(i + 14) & 15];
                            tmp = w[i & 15] =
                                (((a >>> 7) ^ (a >>> 18) ^ (a >>> 3) ^ (a << 25) ^ (a << 14)) +
                                    ((b >>> 17) ^ (b >>> 19) ^ (b >>> 10) ^ (b << 15) ^ (b << 13)) +
                                    w[i & 15] +
                                    w[(i + 9) & 15]) |
                                    0;
                        }
                        tmp =
                            (tmp +
                                h7 +
                                ((h4 >>> 6) ^
                                    (h4 >>> 11) ^
                                    (h4 >>> 25) ^
                                    (h4 << 26) ^
                                    (h4 << 21) ^
                                    (h4 << 7)) +
                                (h6 ^ (h4 & (h5 ^ h6))) +
                                this._K[i]) |
                                0;
                        h7 = h6;
                        h6 = h5;
                        h5 = h4;
                        h4 = h3 + tmp;
                        h3 = h2;
                        h2 = h1;
                        h1 = h0;
                        h0 =
                            (tmp +
                                ((h1 & h2) ^ (h3 & (h1 ^ h2))) +
                                ((h1 >>> 2) ^
                                    (h1 >>> 13) ^
                                    (h1 >>> 22) ^
                                    (h1 << 30) ^
                                    (h1 << 19) ^
                                    (h1 << 10))) |
                                0;
                    }
                    h[0] = (h[0] + h0) | 0;
                    h[1] = (h[1] + h1) | 0;
                    h[2] = (h[2] + h2) | 0;
                    h[3] = (h[3] + h3) | 0;
                    h[4] = (h[4] + h4) | 0;
                    h[5] = (h[5] + h5) | 0;
                    h[6] = (h[6] + h6) | 0;
                    h[7] = (h[7] + h7) | 0;
                }
            };
            exports_351("SHA256", SHA256);
        }
    };
});
System.register("https://deno.land/x/sql_builder@v1.6.0/util", [], function (exports_352, context_352) {
    "use strict";
    var __moduleName = context_352 && context_352.id;
    function replaceParams(sql, params) {
        if (!params)
            return sql;
        let paramIndex = 0;
        sql = sql.replace(/('.*')|(".*")|(\?\?)|(\?)/g, (str) => {
            if (paramIndex >= params.length)
                return str;
            if (/".*"/g.test(str) || /'.*'/g.test(str)) {
                return str;
            }
            if (str === "??") {
                const val = params[paramIndex++];
                if (val instanceof Array) {
                    return `(${val.map((item) => replaceParams("??", [item])).join(",")})`;
                }
                else if (val === "*") {
                    return val;
                }
                else if (typeof val === "string" && val.indexOf(".") > -1) {
                    const _arr = val.split(".");
                    return replaceParams(_arr.map(() => "??").join("."), _arr);
                }
                else if (typeof val === "string" &&
                    (val.toLowerCase().indexOf(" as ") > -1 ||
                        val.toLowerCase().indexOf(" AS ") > -1)) {
                    const newVal = val.replace(" as ", " AS ");
                    const _arr = newVal.split(" AS ");
                    return replaceParams(_arr.map(() => "??").join(" AS "), _arr);
                }
                else {
                    return ["`", val, "`"].join("");
                }
            }
            const val = params[paramIndex++];
            if (val === null)
                return "NULL";
            switch (typeof val) {
                case "object":
                    if (val instanceof Date)
                        return `"${formatDate(val)}"`;
                    if (val instanceof Array) {
                        return `(${val.map((item) => replaceParams("?", [item])).join(",")})`;
                    }
                case "string":
                    return `"${escapeString(val)}"`;
                case "undefined":
                    return "NULL";
                case "number":
                case "boolean":
                default:
                    return val;
            }
        });
        return sql;
    }
    exports_352("replaceParams", replaceParams);
    function formatDate(date) {
        const year = date.getFullYear();
        const month = (date.getMonth() + 1).toString().padStart(2, "0");
        const days = date
            .getDate()
            .toString()
            .padStart(2, "0");
        const hours = date
            .getHours()
            .toString()
            .padStart(2, "0");
        const minutes = date
            .getMinutes()
            .toString()
            .padStart(2, "0");
        const seconds = date
            .getSeconds()
            .toString()
            .padStart(2, "0");
        const milliseconds = date
            .getMilliseconds()
            .toString()
            .padStart(3, "0");
        return `${year}-${month}-${days} ${hours}:${minutes}:${seconds}.${milliseconds}`;
    }
    function escapeString(str) {
        return str.replace(/"/g, '\\"');
    }
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/std@0.63.0/log/levels", [], function (exports_353, context_353) {
    "use strict";
    var LogLevels, LogLevelNames, byLevel;
    var __moduleName = context_353 && context_353.id;
    function getLevelByName(name) {
        switch (name) {
            case "NOTSET":
                return LogLevels.NOTSET;
            case "DEBUG":
                return LogLevels.DEBUG;
            case "INFO":
                return LogLevels.INFO;
            case "WARNING":
                return LogLevels.WARNING;
            case "ERROR":
                return LogLevels.ERROR;
            case "CRITICAL":
                return LogLevels.CRITICAL;
            default:
                throw new Error(`no log level found for "${name}"`);
        }
    }
    exports_353("getLevelByName", getLevelByName);
    function getLevelName(level) {
        const levelName = byLevel[level];
        if (levelName) {
            return levelName;
        }
        throw new Error(`no level name found for level: ${level}`);
    }
    exports_353("getLevelName", getLevelName);
    return {
        setters: [],
        execute: function () {
            (function (LogLevels) {
                LogLevels[LogLevels["NOTSET"] = 0] = "NOTSET";
                LogLevels[LogLevels["DEBUG"] = 10] = "DEBUG";
                LogLevels[LogLevels["INFO"] = 20] = "INFO";
                LogLevels[LogLevels["WARNING"] = 30] = "WARNING";
                LogLevels[LogLevels["ERROR"] = 40] = "ERROR";
                LogLevels[LogLevels["CRITICAL"] = 50] = "CRITICAL";
            })(LogLevels || (LogLevels = {}));
            exports_353("LogLevels", LogLevels);
            exports_353("LogLevelNames", LogLevelNames = Object.keys(LogLevels).filter((key) => isNaN(Number(key))));
            byLevel = {
                [String(LogLevels.NOTSET)]: "NOTSET",
                [String(LogLevels.DEBUG)]: "DEBUG",
                [String(LogLevels.INFO)]: "INFO",
                [String(LogLevels.WARNING)]: "WARNING",
                [String(LogLevels.ERROR)]: "ERROR",
                [String(LogLevels.CRITICAL)]: "CRITICAL",
            };
        }
    };
});
System.register("https://deno.land/x/std@0.63.0/fmt/colors", [], function (exports_354, context_354) {
    "use strict";
    var noColor, enabled, ANSI_PATTERN;
    var __moduleName = context_354 && context_354.id;
    function setColorEnabled(value) {
        if (noColor) {
            return;
        }
        enabled = value;
    }
    exports_354("setColorEnabled", setColorEnabled);
    function getColorEnabled() {
        return enabled;
    }
    exports_354("getColorEnabled", getColorEnabled);
    function code(open, close) {
        return {
            open: `\x1b[${open.join(";")}m`,
            close: `\x1b[${close}m`,
            regexp: new RegExp(`\\x1b\\[${close}m`, "g"),
        };
    }
    function run(str, code) {
        return enabled
            ? `${code.open}${str.replace(code.regexp, code.open)}${code.close}`
            : str;
    }
    function reset(str) {
        return run(str, code([0], 0));
    }
    exports_354("reset", reset);
    function bold(str) {
        return run(str, code([1], 22));
    }
    exports_354("bold", bold);
    function dim(str) {
        return run(str, code([2], 22));
    }
    exports_354("dim", dim);
    function italic(str) {
        return run(str, code([3], 23));
    }
    exports_354("italic", italic);
    function underline(str) {
        return run(str, code([4], 24));
    }
    exports_354("underline", underline);
    function inverse(str) {
        return run(str, code([7], 27));
    }
    exports_354("inverse", inverse);
    function hidden(str) {
        return run(str, code([8], 28));
    }
    exports_354("hidden", hidden);
    function strikethrough(str) {
        return run(str, code([9], 29));
    }
    exports_354("strikethrough", strikethrough);
    function black(str) {
        return run(str, code([30], 39));
    }
    exports_354("black", black);
    function red(str) {
        return run(str, code([31], 39));
    }
    exports_354("red", red);
    function green(str) {
        return run(str, code([32], 39));
    }
    exports_354("green", green);
    function yellow(str) {
        return run(str, code([33], 39));
    }
    exports_354("yellow", yellow);
    function blue(str) {
        return run(str, code([34], 39));
    }
    exports_354("blue", blue);
    function magenta(str) {
        return run(str, code([35], 39));
    }
    exports_354("magenta", magenta);
    function cyan(str) {
        return run(str, code([36], 39));
    }
    exports_354("cyan", cyan);
    function white(str) {
        return run(str, code([37], 39));
    }
    exports_354("white", white);
    function gray(str) {
        return run(str, code([90], 39));
    }
    exports_354("gray", gray);
    function bgBlack(str) {
        return run(str, code([40], 49));
    }
    exports_354("bgBlack", bgBlack);
    function bgRed(str) {
        return run(str, code([41], 49));
    }
    exports_354("bgRed", bgRed);
    function bgGreen(str) {
        return run(str, code([42], 49));
    }
    exports_354("bgGreen", bgGreen);
    function bgYellow(str) {
        return run(str, code([43], 49));
    }
    exports_354("bgYellow", bgYellow);
    function bgBlue(str) {
        return run(str, code([44], 49));
    }
    exports_354("bgBlue", bgBlue);
    function bgMagenta(str) {
        return run(str, code([45], 49));
    }
    exports_354("bgMagenta", bgMagenta);
    function bgCyan(str) {
        return run(str, code([46], 49));
    }
    exports_354("bgCyan", bgCyan);
    function bgWhite(str) {
        return run(str, code([47], 49));
    }
    exports_354("bgWhite", bgWhite);
    function clampAndTruncate(n, max = 255, min = 0) {
        return Math.trunc(Math.max(Math.min(n, max), min));
    }
    function rgb8(str, color) {
        return run(str, code([38, 5, clampAndTruncate(color)], 39));
    }
    exports_354("rgb8", rgb8);
    function bgRgb8(str, color) {
        return run(str, code([48, 5, clampAndTruncate(color)], 49));
    }
    exports_354("bgRgb8", bgRgb8);
    function rgb24(str, color) {
        if (typeof color === "number") {
            return run(str, code([38, 2, (color >> 16) & 0xff, (color >> 8) & 0xff, color & 0xff], 39));
        }
        return run(str, code([
            38,
            2,
            clampAndTruncate(color.r),
            clampAndTruncate(color.g),
            clampAndTruncate(color.b),
        ], 39));
    }
    exports_354("rgb24", rgb24);
    function bgRgb24(str, color) {
        if (typeof color === "number") {
            return run(str, code([48, 2, (color >> 16) & 0xff, (color >> 8) & 0xff, color & 0xff], 49));
        }
        return run(str, code([
            48,
            2,
            clampAndTruncate(color.r),
            clampAndTruncate(color.g),
            clampAndTruncate(color.b),
        ], 49));
    }
    exports_354("bgRgb24", bgRgb24);
    function stripColor(string) {
        return string.replace(ANSI_PATTERN, "");
    }
    exports_354("stripColor", stripColor);
    return {
        setters: [],
        execute: function () {
            noColor = globalThis.Deno?.noColor ?? true;
            enabled = !noColor;
            ANSI_PATTERN = new RegExp([
                "[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:[a-zA-Z\\d]*(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)",
                "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))",
            ].join("|"), "g");
        }
    };
});
System.register("https://deno.land/x/std@0.63.0/fs/exists", [], function (exports_355, context_355) {
    "use strict";
    var __moduleName = context_355 && context_355.id;
    async function exists(filePath) {
        try {
            await Deno.lstat(filePath);
            return true;
        }
        catch (err) {
            if (err instanceof Deno.errors.NotFound) {
                return false;
            }
            throw err;
        }
    }
    exports_355("exists", exists);
    function existsSync(filePath) {
        try {
            Deno.lstatSync(filePath);
            return true;
        }
        catch (err) {
            if (err instanceof Deno.errors.NotFound) {
                return false;
            }
            throw err;
        }
    }
    exports_355("existsSync", existsSync);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/std@0.63.0/bytes/mod", [], function (exports_356, context_356) {
    "use strict";
    var __moduleName = context_356 && context_356.id;
    function findIndex(source, pat) {
        const s = pat[0];
        for (let i = 0; i < source.length; i++) {
            if (source[i] !== s)
                continue;
            const pin = i;
            let matched = 1;
            let j = i;
            while (matched < pat.length) {
                j++;
                if (source[j] !== pat[j - pin]) {
                    break;
                }
                matched++;
            }
            if (matched === pat.length) {
                return pin;
            }
        }
        return -1;
    }
    exports_356("findIndex", findIndex);
    function findLastIndex(source, pat) {
        const e = pat[pat.length - 1];
        for (let i = source.length - 1; i >= 0; i--) {
            if (source[i] !== e)
                continue;
            const pin = i;
            let matched = 1;
            let j = i;
            while (matched < pat.length) {
                j--;
                if (source[j] !== pat[pat.length - 1 - (pin - j)]) {
                    break;
                }
                matched++;
            }
            if (matched === pat.length) {
                return pin - pat.length + 1;
            }
        }
        return -1;
    }
    exports_356("findLastIndex", findLastIndex);
    function equal(source, match) {
        if (source.length !== match.length)
            return false;
        for (let i = 0; i < match.length; i++) {
            if (source[i] !== match[i])
                return false;
        }
        return true;
    }
    exports_356("equal", equal);
    function hasPrefix(source, prefix) {
        for (let i = 0, max = prefix.length; i < max; i++) {
            if (source[i] !== prefix[i])
                return false;
        }
        return true;
    }
    exports_356("hasPrefix", hasPrefix);
    function hasSuffix(source, suffix) {
        for (let srci = source.length - 1, sfxi = suffix.length - 1; sfxi >= 0; srci--, sfxi--) {
            if (source[srci] !== suffix[sfxi])
                return false;
        }
        return true;
    }
    exports_356("hasSuffix", hasSuffix);
    function repeat(origin, count) {
        if (count === 0) {
            return new Uint8Array();
        }
        if (count < 0) {
            throw new Error("bytes: negative repeat count");
        }
        else if ((origin.length * count) / count !== origin.length) {
            throw new Error("bytes: repeat count causes overflow");
        }
        const int = Math.floor(count);
        if (int !== count) {
            throw new Error("bytes: repeat count must be an integer");
        }
        const nb = new Uint8Array(origin.length * count);
        let bp = copyBytes(origin, nb);
        for (; bp < nb.length; bp *= 2) {
            copyBytes(nb.slice(0, bp), nb, bp);
        }
        return nb;
    }
    exports_356("repeat", repeat);
    function concat(origin, b) {
        const output = new Uint8Array(origin.length + b.length);
        output.set(origin, 0);
        output.set(b, origin.length);
        return output;
    }
    exports_356("concat", concat);
    function contains(source, pat) {
        return findIndex(source, pat) != -1;
    }
    exports_356("contains", contains);
    function copyBytes(src, dst, off = 0) {
        off = Math.max(0, Math.min(off, dst.byteLength));
        const dstBytesAvailable = dst.byteLength - off;
        if (src.byteLength > dstBytesAvailable) {
            src = src.subarray(0, dstBytesAvailable);
        }
        dst.set(src, off);
        return src.byteLength;
    }
    exports_356("copyBytes", copyBytes);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/std@0.63.0/_util/assert", [], function (exports_357, context_357) {
    "use strict";
    var DenoStdInternalError;
    var __moduleName = context_357 && context_357.id;
    function assert(expr, msg = "") {
        if (!expr) {
            throw new DenoStdInternalError(msg);
        }
    }
    exports_357("assert", assert);
    return {
        setters: [],
        execute: function () {
            DenoStdInternalError = class DenoStdInternalError extends Error {
                constructor(message) {
                    super(message);
                    this.name = "DenoStdInternalError";
                }
            };
            exports_357("DenoStdInternalError", DenoStdInternalError);
        }
    };
});
System.register("https://deno.land/x/std@0.63.0/io/bufio", ["https://deno.land/x/std@0.63.0/bytes/mod", "https://deno.land/x/std@0.63.0/_util/assert"], function (exports_358, context_358) {
    "use strict";
    var mod_ts_39, assert_ts_9, DEFAULT_BUF_SIZE, MIN_BUF_SIZE, MAX_CONSECUTIVE_EMPTY_READS, CR, LF, BufferFullError, PartialReadError, BufReader, AbstractBufBase, BufWriter, BufWriterSync;
    var __moduleName = context_358 && context_358.id;
    function createLPS(pat) {
        const lps = new Uint8Array(pat.length);
        lps[0] = 0;
        let prefixEnd = 0;
        let i = 1;
        while (i < lps.length) {
            if (pat[i] == pat[prefixEnd]) {
                prefixEnd++;
                lps[i] = prefixEnd;
                i++;
            }
            else if (prefixEnd === 0) {
                lps[i] = 0;
                i++;
            }
            else {
                prefixEnd = pat[prefixEnd - 1];
            }
        }
        return lps;
    }
    async function* readDelim(reader, delim) {
        const delimLen = delim.length;
        const delimLPS = createLPS(delim);
        let inputBuffer = new Deno.Buffer();
        const inspectArr = new Uint8Array(Math.max(1024, delimLen + 1));
        let inspectIndex = 0;
        let matchIndex = 0;
        while (true) {
            const result = await reader.read(inspectArr);
            if (result === null) {
                yield inputBuffer.bytes();
                return;
            }
            if (result < 0) {
                return;
            }
            const sliceRead = inspectArr.subarray(0, result);
            await Deno.writeAll(inputBuffer, sliceRead);
            let sliceToProcess = inputBuffer.bytes();
            while (inspectIndex < sliceToProcess.length) {
                if (sliceToProcess[inspectIndex] === delim[matchIndex]) {
                    inspectIndex++;
                    matchIndex++;
                    if (matchIndex === delimLen) {
                        const matchEnd = inspectIndex - delimLen;
                        const readyBytes = sliceToProcess.subarray(0, matchEnd);
                        const pendingBytes = sliceToProcess.slice(inspectIndex);
                        yield readyBytes;
                        sliceToProcess = pendingBytes;
                        inspectIndex = 0;
                        matchIndex = 0;
                    }
                }
                else {
                    if (matchIndex === 0) {
                        inspectIndex++;
                    }
                    else {
                        matchIndex = delimLPS[matchIndex - 1];
                    }
                }
            }
            inputBuffer = new Deno.Buffer(sliceToProcess);
        }
    }
    exports_358("readDelim", readDelim);
    async function* readStringDelim(reader, delim) {
        const encoder = new TextEncoder();
        const decoder = new TextDecoder();
        for await (const chunk of readDelim(reader, encoder.encode(delim))) {
            yield decoder.decode(chunk);
        }
    }
    exports_358("readStringDelim", readStringDelim);
    async function* readLines(reader) {
        yield* readStringDelim(reader, "\n");
    }
    exports_358("readLines", readLines);
    return {
        setters: [
            function (mod_ts_39_1) {
                mod_ts_39 = mod_ts_39_1;
            },
            function (assert_ts_9_1) {
                assert_ts_9 = assert_ts_9_1;
            }
        ],
        execute: function () {
            DEFAULT_BUF_SIZE = 4096;
            MIN_BUF_SIZE = 16;
            MAX_CONSECUTIVE_EMPTY_READS = 100;
            CR = "\r".charCodeAt(0);
            LF = "\n".charCodeAt(0);
            BufferFullError = class BufferFullError extends Error {
                constructor(partial) {
                    super("Buffer full");
                    this.partial = partial;
                    this.name = "BufferFullError";
                }
            };
            exports_358("BufferFullError", BufferFullError);
            PartialReadError = class PartialReadError extends Deno.errors.UnexpectedEof {
                constructor() {
                    super("Encountered UnexpectedEof, data only partially read");
                    this.name = "PartialReadError";
                }
            };
            exports_358("PartialReadError", PartialReadError);
            BufReader = class BufReader {
                constructor(rd, size = DEFAULT_BUF_SIZE) {
                    this.r = 0;
                    this.w = 0;
                    this.eof = false;
                    if (size < MIN_BUF_SIZE) {
                        size = MIN_BUF_SIZE;
                    }
                    this._reset(new Uint8Array(size), rd);
                }
                static create(r, size = DEFAULT_BUF_SIZE) {
                    return r instanceof BufReader ? r : new BufReader(r, size);
                }
                size() {
                    return this.buf.byteLength;
                }
                buffered() {
                    return this.w - this.r;
                }
                async _fill() {
                    if (this.r > 0) {
                        this.buf.copyWithin(0, this.r, this.w);
                        this.w -= this.r;
                        this.r = 0;
                    }
                    if (this.w >= this.buf.byteLength) {
                        throw Error("bufio: tried to fill full buffer");
                    }
                    for (let i = MAX_CONSECUTIVE_EMPTY_READS; i > 0; i--) {
                        const rr = await this.rd.read(this.buf.subarray(this.w));
                        if (rr === null) {
                            this.eof = true;
                            return;
                        }
                        assert_ts_9.assert(rr >= 0, "negative read");
                        this.w += rr;
                        if (rr > 0) {
                            return;
                        }
                    }
                    throw new Error(`No progress after ${MAX_CONSECUTIVE_EMPTY_READS} read() calls`);
                }
                reset(r) {
                    this._reset(this.buf, r);
                }
                _reset(buf, rd) {
                    this.buf = buf;
                    this.rd = rd;
                    this.eof = false;
                }
                async read(p) {
                    let rr = p.byteLength;
                    if (p.byteLength === 0)
                        return rr;
                    if (this.r === this.w) {
                        if (p.byteLength >= this.buf.byteLength) {
                            const rr = await this.rd.read(p);
                            const nread = rr ?? 0;
                            assert_ts_9.assert(nread >= 0, "negative read");
                            return rr;
                        }
                        this.r = 0;
                        this.w = 0;
                        rr = await this.rd.read(this.buf);
                        if (rr === 0 || rr === null)
                            return rr;
                        assert_ts_9.assert(rr >= 0, "negative read");
                        this.w += rr;
                    }
                    const copied = mod_ts_39.copyBytes(this.buf.subarray(this.r, this.w), p, 0);
                    this.r += copied;
                    return copied;
                }
                async readFull(p) {
                    let bytesRead = 0;
                    while (bytesRead < p.length) {
                        try {
                            const rr = await this.read(p.subarray(bytesRead));
                            if (rr === null) {
                                if (bytesRead === 0) {
                                    return null;
                                }
                                else {
                                    throw new PartialReadError();
                                }
                            }
                            bytesRead += rr;
                        }
                        catch (err) {
                            err.partial = p.subarray(0, bytesRead);
                            throw err;
                        }
                    }
                    return p;
                }
                async readByte() {
                    while (this.r === this.w) {
                        if (this.eof)
                            return null;
                        await this._fill();
                    }
                    const c = this.buf[this.r];
                    this.r++;
                    return c;
                }
                async readString(delim) {
                    if (delim.length !== 1) {
                        throw new Error("Delimiter should be a single character");
                    }
                    const buffer = await this.readSlice(delim.charCodeAt(0));
                    if (buffer === null)
                        return null;
                    return new TextDecoder().decode(buffer);
                }
                async readLine() {
                    let line;
                    try {
                        line = await this.readSlice(LF);
                    }
                    catch (err) {
                        let { partial } = err;
                        assert_ts_9.assert(partial instanceof Uint8Array, "bufio: caught error from `readSlice()` without `partial` property");
                        if (!(err instanceof BufferFullError)) {
                            throw err;
                        }
                        if (!this.eof &&
                            partial.byteLength > 0 &&
                            partial[partial.byteLength - 1] === CR) {
                            assert_ts_9.assert(this.r > 0, "bufio: tried to rewind past start of buffer");
                            this.r--;
                            partial = partial.subarray(0, partial.byteLength - 1);
                        }
                        return { line: partial, more: !this.eof };
                    }
                    if (line === null) {
                        return null;
                    }
                    if (line.byteLength === 0) {
                        return { line, more: false };
                    }
                    if (line[line.byteLength - 1] == LF) {
                        let drop = 1;
                        if (line.byteLength > 1 && line[line.byteLength - 2] === CR) {
                            drop = 2;
                        }
                        line = line.subarray(0, line.byteLength - drop);
                    }
                    return { line, more: false };
                }
                async readSlice(delim) {
                    let s = 0;
                    let slice;
                    while (true) {
                        let i = this.buf.subarray(this.r + s, this.w).indexOf(delim);
                        if (i >= 0) {
                            i += s;
                            slice = this.buf.subarray(this.r, this.r + i + 1);
                            this.r += i + 1;
                            break;
                        }
                        if (this.eof) {
                            if (this.r === this.w) {
                                return null;
                            }
                            slice = this.buf.subarray(this.r, this.w);
                            this.r = this.w;
                            break;
                        }
                        if (this.buffered() >= this.buf.byteLength) {
                            this.r = this.w;
                            const oldbuf = this.buf;
                            const newbuf = this.buf.slice(0);
                            this.buf = newbuf;
                            throw new BufferFullError(oldbuf);
                        }
                        s = this.w - this.r;
                        try {
                            await this._fill();
                        }
                        catch (err) {
                            err.partial = slice;
                            throw err;
                        }
                    }
                    return slice;
                }
                async peek(n) {
                    if (n < 0) {
                        throw Error("negative count");
                    }
                    let avail = this.w - this.r;
                    while (avail < n && avail < this.buf.byteLength && !this.eof) {
                        try {
                            await this._fill();
                        }
                        catch (err) {
                            err.partial = this.buf.subarray(this.r, this.w);
                            throw err;
                        }
                        avail = this.w - this.r;
                    }
                    if (avail === 0 && this.eof) {
                        return null;
                    }
                    else if (avail < n && this.eof) {
                        return this.buf.subarray(this.r, this.r + avail);
                    }
                    else if (avail < n) {
                        throw new BufferFullError(this.buf.subarray(this.r, this.w));
                    }
                    return this.buf.subarray(this.r, this.r + n);
                }
            };
            exports_358("BufReader", BufReader);
            AbstractBufBase = class AbstractBufBase {
                constructor() {
                    this.usedBufferBytes = 0;
                    this.err = null;
                }
                size() {
                    return this.buf.byteLength;
                }
                available() {
                    return this.buf.byteLength - this.usedBufferBytes;
                }
                buffered() {
                    return this.usedBufferBytes;
                }
            };
            BufWriter = class BufWriter extends AbstractBufBase {
                constructor(writer, size = DEFAULT_BUF_SIZE) {
                    super();
                    this.writer = writer;
                    if (size <= 0) {
                        size = DEFAULT_BUF_SIZE;
                    }
                    this.buf = new Uint8Array(size);
                }
                static create(writer, size = DEFAULT_BUF_SIZE) {
                    return writer instanceof BufWriter ? writer : new BufWriter(writer, size);
                }
                reset(w) {
                    this.err = null;
                    this.usedBufferBytes = 0;
                    this.writer = w;
                }
                async flush() {
                    if (this.err !== null)
                        throw this.err;
                    if (this.usedBufferBytes === 0)
                        return;
                    try {
                        await Deno.writeAll(this.writer, this.buf.subarray(0, this.usedBufferBytes));
                    }
                    catch (e) {
                        this.err = e;
                        throw e;
                    }
                    this.buf = new Uint8Array(this.buf.length);
                    this.usedBufferBytes = 0;
                }
                async write(data) {
                    if (this.err !== null)
                        throw this.err;
                    if (data.length === 0)
                        return 0;
                    let totalBytesWritten = 0;
                    let numBytesWritten = 0;
                    while (data.byteLength > this.available()) {
                        if (this.buffered() === 0) {
                            try {
                                numBytesWritten = await this.writer.write(data);
                            }
                            catch (e) {
                                this.err = e;
                                throw e;
                            }
                        }
                        else {
                            numBytesWritten = mod_ts_39.copyBytes(data, this.buf, this.usedBufferBytes);
                            this.usedBufferBytes += numBytesWritten;
                            await this.flush();
                        }
                        totalBytesWritten += numBytesWritten;
                        data = data.subarray(numBytesWritten);
                    }
                    numBytesWritten = mod_ts_39.copyBytes(data, this.buf, this.usedBufferBytes);
                    this.usedBufferBytes += numBytesWritten;
                    totalBytesWritten += numBytesWritten;
                    return totalBytesWritten;
                }
            };
            exports_358("BufWriter", BufWriter);
            BufWriterSync = class BufWriterSync extends AbstractBufBase {
                constructor(writer, size = DEFAULT_BUF_SIZE) {
                    super();
                    this.writer = writer;
                    if (size <= 0) {
                        size = DEFAULT_BUF_SIZE;
                    }
                    this.buf = new Uint8Array(size);
                }
                static create(writer, size = DEFAULT_BUF_SIZE) {
                    return writer instanceof BufWriterSync
                        ? writer
                        : new BufWriterSync(writer, size);
                }
                reset(w) {
                    this.err = null;
                    this.usedBufferBytes = 0;
                    this.writer = w;
                }
                flush() {
                    if (this.err !== null)
                        throw this.err;
                    if (this.usedBufferBytes === 0)
                        return;
                    try {
                        Deno.writeAllSync(this.writer, this.buf.subarray(0, this.usedBufferBytes));
                    }
                    catch (e) {
                        this.err = e;
                        throw e;
                    }
                    this.buf = new Uint8Array(this.buf.length);
                    this.usedBufferBytes = 0;
                }
                writeSync(data) {
                    if (this.err !== null)
                        throw this.err;
                    if (data.length === 0)
                        return 0;
                    let totalBytesWritten = 0;
                    let numBytesWritten = 0;
                    while (data.byteLength > this.available()) {
                        if (this.buffered() === 0) {
                            try {
                                numBytesWritten = this.writer.writeSync(data);
                            }
                            catch (e) {
                                this.err = e;
                                throw e;
                            }
                        }
                        else {
                            numBytesWritten = mod_ts_39.copyBytes(data, this.buf, this.usedBufferBytes);
                            this.usedBufferBytes += numBytesWritten;
                            this.flush();
                        }
                        totalBytesWritten += numBytesWritten;
                        data = data.subarray(numBytesWritten);
                    }
                    numBytesWritten = mod_ts_39.copyBytes(data, this.buf, this.usedBufferBytes);
                    this.usedBufferBytes += numBytesWritten;
                    totalBytesWritten += numBytesWritten;
                    return totalBytesWritten;
                }
            };
            exports_358("BufWriterSync", BufWriterSync);
        }
    };
});
System.register("https://deno.land/x/std@0.63.0/log/handlers", ["https://deno.land/x/std@0.63.0/log/levels", "https://deno.land/x/std@0.63.0/fmt/colors", "https://deno.land/x/std@0.63.0/fs/exists", "https://deno.land/x/std@0.63.0/io/bufio"], function (exports_359, context_359) {
    "use strict";
    var levels_ts_1, colors_ts_3, exists_ts_1, bufio_ts_4, DEFAULT_FORMATTER, BaseHandler, ConsoleHandler, WriterHandler, FileHandler, RotatingFileHandler;
    var __moduleName = context_359 && context_359.id;
    return {
        setters: [
            function (levels_ts_1_1) {
                levels_ts_1 = levels_ts_1_1;
            },
            function (colors_ts_3_1) {
                colors_ts_3 = colors_ts_3_1;
            },
            function (exists_ts_1_1) {
                exists_ts_1 = exists_ts_1_1;
            },
            function (bufio_ts_4_1) {
                bufio_ts_4 = bufio_ts_4_1;
            }
        ],
        execute: function () {
            DEFAULT_FORMATTER = "{levelName} {msg}";
            BaseHandler = class BaseHandler {
                constructor(levelName, options = {}) {
                    this.level = levels_ts_1.getLevelByName(levelName);
                    this.levelName = levelName;
                    this.formatter = options.formatter || DEFAULT_FORMATTER;
                }
                handle(logRecord) {
                    if (this.level > logRecord.level)
                        return;
                    const msg = this.format(logRecord);
                    return this.log(msg);
                }
                format(logRecord) {
                    if (this.formatter instanceof Function) {
                        return this.formatter(logRecord);
                    }
                    return this.formatter.replace(/{(\S+)}/g, (match, p1) => {
                        const value = logRecord[p1];
                        if (value == null) {
                            return match;
                        }
                        return String(value);
                    });
                }
                log(_msg) { }
                async setup() { }
                async destroy() { }
            };
            exports_359("BaseHandler", BaseHandler);
            ConsoleHandler = class ConsoleHandler extends BaseHandler {
                format(logRecord) {
                    let msg = super.format(logRecord);
                    switch (logRecord.level) {
                        case levels_ts_1.LogLevels.INFO:
                            msg = colors_ts_3.blue(msg);
                            break;
                        case levels_ts_1.LogLevels.WARNING:
                            msg = colors_ts_3.yellow(msg);
                            break;
                        case levels_ts_1.LogLevels.ERROR:
                            msg = colors_ts_3.red(msg);
                            break;
                        case levels_ts_1.LogLevels.CRITICAL:
                            msg = colors_ts_3.bold(colors_ts_3.red(msg));
                            break;
                        default:
                            break;
                    }
                    return msg;
                }
                log(msg) {
                    console.log(msg);
                }
            };
            exports_359("ConsoleHandler", ConsoleHandler);
            WriterHandler = class WriterHandler extends BaseHandler {
                constructor() {
                    super(...arguments);
                    this.#encoder = new TextEncoder();
                }
                #encoder;
            };
            exports_359("WriterHandler", WriterHandler);
            FileHandler = class FileHandler extends WriterHandler {
                constructor(levelName, options) {
                    super(levelName, options);
                    this._encoder = new TextEncoder();
                    this.#unloadCallback = () => this.destroy();
                    this._filename = options.filename;
                    this._mode = options.mode ? options.mode : "a";
                    this._openOptions = {
                        createNew: this._mode === "x",
                        create: this._mode !== "x",
                        append: this._mode === "a",
                        truncate: this._mode !== "a",
                        write: true,
                    };
                }
                #unloadCallback;
                async setup() {
                    this._file = await Deno.open(this._filename, this._openOptions);
                    this._writer = this._file;
                    this._buf = new bufio_ts_4.BufWriterSync(this._file);
                    addEventListener("unload", this.#unloadCallback);
                }
                handle(logRecord) {
                    super.handle(logRecord);
                    if (logRecord.level > levels_ts_1.LogLevels.ERROR) {
                        this.flush();
                    }
                }
                log(msg) {
                    this._buf.writeSync(this._encoder.encode(msg + "\n"));
                }
                flush() {
                    if (this._buf?.buffered() > 0) {
                        this._buf.flush();
                    }
                }
                destroy() {
                    this.flush();
                    this._file?.close();
                    this._file = undefined;
                    removeEventListener("unload", this.#unloadCallback);
                    return Promise.resolve();
                }
            };
            exports_359("FileHandler", FileHandler);
            RotatingFileHandler = class RotatingFileHandler extends FileHandler {
                constructor(levelName, options) {
                    super(levelName, options);
                    this.#currentFileSize = 0;
                    this.#maxBytes = options.maxBytes;
                    this.#maxBackupCount = options.maxBackupCount;
                }
                #maxBytes;
                #maxBackupCount;
                #currentFileSize;
                async setup() {
                    if (this.#maxBytes < 1) {
                        this.destroy();
                        throw new Error("maxBytes cannot be less than 1");
                    }
                    if (this.#maxBackupCount < 1) {
                        this.destroy();
                        throw new Error("maxBackupCount cannot be less than 1");
                    }
                    await super.setup();
                    if (this._mode === "w") {
                        for (let i = 1; i <= this.#maxBackupCount; i++) {
                            if (await exists_ts_1.exists(this._filename + "." + i)) {
                                await Deno.remove(this._filename + "." + i);
                            }
                        }
                    }
                    else if (this._mode === "x") {
                        for (let i = 1; i <= this.#maxBackupCount; i++) {
                            if (await exists_ts_1.exists(this._filename + "." + i)) {
                                this.destroy();
                                throw new Deno.errors.AlreadyExists("Backup log file " + this._filename + "." + i + " already exists");
                            }
                        }
                    }
                    else {
                        this.#currentFileSize = (await Deno.stat(this._filename)).size;
                    }
                }
                log(msg) {
                    const msgByteLength = this._encoder.encode(msg).byteLength + 1;
                    if (this.#currentFileSize + msgByteLength > this.#maxBytes) {
                        this.rotateLogFiles();
                        this.#currentFileSize = 0;
                    }
                    this._buf.writeSync(this._encoder.encode(msg + "\n"));
                    this.#currentFileSize += msgByteLength;
                }
                rotateLogFiles() {
                    this._buf.flush();
                    Deno.close(this._file.rid);
                    for (let i = this.#maxBackupCount - 1; i >= 0; i--) {
                        const source = this._filename + (i === 0 ? "" : "." + i);
                        const dest = this._filename + "." + (i + 1);
                        if (exists_ts_1.existsSync(source)) {
                            Deno.renameSync(source, dest);
                        }
                    }
                    this._file = Deno.openSync(this._filename, this._openOptions);
                    this._writer = this._file;
                    this._buf = new bufio_ts_4.BufWriterSync(this._file);
                }
            };
            exports_359("RotatingFileHandler", RotatingFileHandler);
        }
    };
});
System.register("https://deno.land/x/std@0.63.0/log/logger", ["https://deno.land/x/std@0.63.0/log/levels"], function (exports_360, context_360) {
    "use strict";
    var levels_ts_2, LogRecord, Logger;
    var __moduleName = context_360 && context_360.id;
    return {
        setters: [
            function (levels_ts_2_1) {
                levels_ts_2 = levels_ts_2_1;
            }
        ],
        execute: function () {
            LogRecord = class LogRecord {
                constructor(options) {
                    this.msg = options.msg;
                    this.#args = [...options.args];
                    this.level = options.level;
                    this.loggerName = options.loggerName;
                    this.#datetime = new Date();
                    this.levelName = levels_ts_2.getLevelName(options.level);
                }
                #args;
                #datetime;
                get args() {
                    return [...this.#args];
                }
                get datetime() {
                    return new Date(this.#datetime.getTime());
                }
            };
            exports_360("LogRecord", LogRecord);
            Logger = class Logger {
                constructor(loggerName, levelName, options = {}) {
                    this.#loggerName = loggerName;
                    this.#level = levels_ts_2.getLevelByName(levelName);
                    this.#handlers = options.handlers || [];
                }
                #level;
                #handlers;
                #loggerName;
                get level() {
                    return this.#level;
                }
                set level(level) {
                    this.#level = level;
                }
                get levelName() {
                    return levels_ts_2.getLevelName(this.#level);
                }
                set levelName(levelName) {
                    this.#level = levels_ts_2.getLevelByName(levelName);
                }
                get loggerName() {
                    return this.#loggerName;
                }
                set handlers(hndls) {
                    this.#handlers = hndls;
                }
                get handlers() {
                    return this.#handlers;
                }
                _log(level, msg, ...args) {
                    if (this.level > level) {
                        return msg instanceof Function ? undefined : msg;
                    }
                    let fnResult;
                    let logMessage;
                    if (msg instanceof Function) {
                        fnResult = msg();
                        logMessage = this.asString(fnResult);
                    }
                    else {
                        logMessage = this.asString(msg);
                    }
                    const record = new LogRecord({
                        msg: logMessage,
                        args: args,
                        level: level,
                        loggerName: this.loggerName,
                    });
                    this.#handlers.forEach((handler) => {
                        handler.handle(record);
                    });
                    return msg instanceof Function ? fnResult : msg;
                }
                asString(data) {
                    if (typeof data === "string") {
                        return data;
                    }
                    else if (data === null ||
                        typeof data === "number" ||
                        typeof data === "bigint" ||
                        typeof data === "boolean" ||
                        typeof data === "undefined" ||
                        typeof data === "symbol") {
                        return String(data);
                    }
                    else if (typeof data === "object") {
                        return JSON.stringify(data);
                    }
                    return "undefined";
                }
                debug(msg, ...args) {
                    return this._log(levels_ts_2.LogLevels.DEBUG, msg, ...args);
                }
                info(msg, ...args) {
                    return this._log(levels_ts_2.LogLevels.INFO, msg, ...args);
                }
                warning(msg, ...args) {
                    return this._log(levels_ts_2.LogLevels.WARNING, msg, ...args);
                }
                error(msg, ...args) {
                    return this._log(levels_ts_2.LogLevels.ERROR, msg, ...args);
                }
                critical(msg, ...args) {
                    return this._log(levels_ts_2.LogLevels.CRITICAL, msg, ...args);
                }
            };
            exports_360("Logger", Logger);
        }
    };
});
System.register("https://deno.land/x/std@0.63.0/log/mod", ["https://deno.land/x/std@0.63.0/log/logger", "https://deno.land/x/std@0.63.0/log/handlers", "https://deno.land/x/std@0.63.0/_util/assert", "https://deno.land/x/std@0.63.0/log/levels"], function (exports_361, context_361) {
    "use strict";
    var logger_ts_1, handlers_ts_1, assert_ts_10, LoggerConfig, DEFAULT_LEVEL, DEFAULT_CONFIG, state, handlers;
    var __moduleName = context_361 && context_361.id;
    function getLogger(name) {
        if (!name) {
            const d = state.loggers.get("default");
            assert_ts_10.assert(d != null, `"default" logger must be set for getting logger without name`);
            return d;
        }
        const result = state.loggers.get(name);
        if (!result) {
            const logger = new logger_ts_1.Logger(name, "NOTSET", { handlers: [] });
            state.loggers.set(name, logger);
            return logger;
        }
        return result;
    }
    exports_361("getLogger", getLogger);
    function debug(msg, ...args) {
        if (msg instanceof Function) {
            return getLogger("default").debug(msg, ...args);
        }
        return getLogger("default").debug(msg, ...args);
    }
    exports_361("debug", debug);
    function info(msg, ...args) {
        if (msg instanceof Function) {
            return getLogger("default").info(msg, ...args);
        }
        return getLogger("default").info(msg, ...args);
    }
    exports_361("info", info);
    function warning(msg, ...args) {
        if (msg instanceof Function) {
            return getLogger("default").warning(msg, ...args);
        }
        return getLogger("default").warning(msg, ...args);
    }
    exports_361("warning", warning);
    function error(msg, ...args) {
        if (msg instanceof Function) {
            return getLogger("default").error(msg, ...args);
        }
        return getLogger("default").error(msg, ...args);
    }
    exports_361("error", error);
    function critical(msg, ...args) {
        if (msg instanceof Function) {
            return getLogger("default").critical(msg, ...args);
        }
        return getLogger("default").critical(msg, ...args);
    }
    exports_361("critical", critical);
    async function setup(config) {
        state.config = {
            handlers: { ...DEFAULT_CONFIG.handlers, ...config.handlers },
            loggers: { ...DEFAULT_CONFIG.loggers, ...config.loggers },
        };
        state.handlers.forEach((handler) => {
            handler.destroy();
        });
        state.handlers.clear();
        const handlers = state.config.handlers || {};
        for (const handlerName in handlers) {
            const handler = handlers[handlerName];
            await handler.setup();
            state.handlers.set(handlerName, handler);
        }
        state.loggers.clear();
        const loggers = state.config.loggers || {};
        for (const loggerName in loggers) {
            const loggerConfig = loggers[loggerName];
            const handlerNames = loggerConfig.handlers || [];
            const handlers = [];
            handlerNames.forEach((handlerName) => {
                const handler = state.handlers.get(handlerName);
                if (handler) {
                    handlers.push(handler);
                }
            });
            const levelName = loggerConfig.level || DEFAULT_LEVEL;
            const logger = new logger_ts_1.Logger(loggerName, levelName, { handlers: handlers });
            state.loggers.set(loggerName, logger);
        }
    }
    exports_361("setup", setup);
    return {
        setters: [
            function (logger_ts_1_1) {
                logger_ts_1 = logger_ts_1_1;
                exports_361({
                    "Logger": logger_ts_1_1["Logger"]
                });
            },
            function (handlers_ts_1_1) {
                handlers_ts_1 = handlers_ts_1_1;
            },
            function (assert_ts_10_1) {
                assert_ts_10 = assert_ts_10_1;
            },
            function (levels_ts_3_1) {
                exports_361({
                    "LogLevels": levels_ts_3_1["LogLevels"]
                });
            }
        ],
        execute: async function () {
            LoggerConfig = class LoggerConfig {
            };
            exports_361("LoggerConfig", LoggerConfig);
            DEFAULT_LEVEL = "INFO";
            DEFAULT_CONFIG = {
                handlers: {
                    default: new handlers_ts_1.ConsoleHandler(DEFAULT_LEVEL),
                },
                loggers: {
                    default: {
                        level: DEFAULT_LEVEL,
                        handlers: ["default"],
                    },
                },
            };
            state = {
                handlers: new Map(),
                loggers: new Map(),
                config: DEFAULT_CONFIG,
            };
            exports_361("handlers", handlers = {
                BaseHandler: handlers_ts_1.BaseHandler,
                ConsoleHandler: handlers_ts_1.ConsoleHandler,
                WriterHandler: handlers_ts_1.WriterHandler,
                FileHandler: handlers_ts_1.FileHandler,
                RotatingFileHandler: handlers_ts_1.RotatingFileHandler,
            });
            await setup(DEFAULT_CONFIG);
        }
    };
});
System.register("https://deno.land/x/mysql@v2.4.0/deps", ["https://deno.land/std@0.63.0/async/mod", "https://deno.land/std@0.63.0/encoding/utf8", "https://deno.land/x/bytes_formater@v1.3.0/mod", "https://deno.land/x/checksum@1.4.0/mod", "https://deno.land/x/sha256@v1.0.2/mod", "https://deno.land/x/sql_builder@v1.6.0/util", "https://deno.land/x/std@0.63.0/log/mod"], function (exports_362, context_362) {
    "use strict";
    var __moduleName = context_362 && context_362.id;
    return {
        setters: [
            function (mod_ts_40_1) {
                exports_362({
                    "deferred": mod_ts_40_1["deferred"],
                    "delay": mod_ts_40_1["delay"]
                });
            },
            function (utf8_ts_4_1) {
                exports_362({
                    "decode": utf8_ts_4_1["decode"],
                    "encode": utf8_ts_4_1["encode"]
                });
            },
            function (mod_ts_41_1) {
                exports_362({
                    "byteFormat": mod_ts_41_1["format"]
                });
            },
            function (mod_ts_42_1) {
                exports_362({
                    "Hash": mod_ts_42_1["Hash"]
                });
            },
            function (mod_ts_43_1) {
                exports_362({
                    "sha256": mod_ts_43_1["sha256"]
                });
            },
            function (util_ts_3_1) {
                exports_362({
                    "replaceParams": util_ts_3_1["replaceParams"]
                });
            },
            function (log_1) {
                exports_362("log", log_1);
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/mysql@v2.4.0/src/constant/errors", [], function (exports_363, context_363) {
    "use strict";
    var WriteError, ResponseTimeoutError;
    var __moduleName = context_363 && context_363.id;
    return {
        setters: [],
        execute: function () {
            WriteError = class WriteError extends Error {
                constructor(msg) {
                    super(msg);
                }
            };
            exports_363("WriteError", WriteError);
            ResponseTimeoutError = class ResponseTimeoutError extends Error {
                constructor(msg) {
                    super(msg);
                }
            };
            exports_363("ResponseTimeoutError", ResponseTimeoutError);
        }
    };
});
System.register("https://deno.land/x/mysql@v2.4.0/src/logger", ["https://deno.land/x/mysql@v2.4.0/deps"], function (exports_364, context_364) {
    "use strict";
    var deps_ts_15, isDebug;
    var __moduleName = context_364 && context_364.id;
    function debug(func) {
        if (isDebug) {
            func();
        }
    }
    exports_364("debug", debug);
    async function config(config) {
        isDebug = config.debug;
        await deps_ts_15.log.setup({
            handlers: {
                console: new deps_ts_15.log.handlers.ConsoleHandler(config.debug ? "DEBUG" : "INFO"),
                file: new deps_ts_15.log.handlers.FileHandler("WARNING", {
                    filename: config.logFile,
                    formatter: "{levelName} {msg}",
                }),
            },
            loggers: {
                default: {
                    level: "DEBUG",
                    handlers: ["console", "file"],
                },
            },
        });
    }
    exports_364("config", config);
    return {
        setters: [
            function (deps_ts_15_1) {
                deps_ts_15 = deps_ts_15_1;
            }
        ],
        execute: function () {
            exports_364("log", deps_ts_15.log);
            isDebug = false;
        }
    };
});
System.register("https://deno.land/x/mysql@v2.4.0/src/auth", ["https://deno.land/x/mysql@v2.4.0/deps"], function (exports_365, context_365) {
    "use strict";
    var deps_ts_16;
    var __moduleName = context_365 && context_365.id;
    function xor(a, b) {
        return a.map((byte, index) => {
            return byte ^ b[index];
        });
    }
    function mysqlNativePassword(password, seed) {
        const hash = new deps_ts_16.Hash("sha1");
        const pwd1 = hash.digest(deps_ts_16.encode(password)).data;
        const pwd2 = hash.digest(pwd1).data;
        let seedAndPwd2 = new Uint8Array(seed.length + pwd2.length);
        seedAndPwd2.set(seed);
        seedAndPwd2.set(pwd2, seed.length);
        seedAndPwd2 = hash.digest(seedAndPwd2).data;
        return xor(seedAndPwd2, pwd1);
    }
    function cachingSha2Password(password, seed) {
        const stage1 = deps_ts_16.sha256(password, "utf8");
        const stage2 = deps_ts_16.sha256(stage1);
        const stage3 = deps_ts_16.sha256(Uint8Array.from([...stage2, ...seed]));
        return xor(stage1, stage3);
    }
    function auth(authPluginName, password, seed) {
        switch (authPluginName) {
            case "mysql_native_password":
                return mysqlNativePassword(password, seed);
            case "caching_sha2_password":
            default:
                throw new Error("Not supported");
        }
    }
    exports_365("default", auth);
    return {
        setters: [
            function (deps_ts_16_1) {
                deps_ts_16 = deps_ts_16_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/mysql@v2.4.0/src/buffer", ["https://deno.land/x/mysql@v2.4.0/deps"], function (exports_366, context_366) {
    "use strict";
    var deps_ts_17, BufferReader, BufferWriter;
    var __moduleName = context_366 && context_366.id;
    return {
        setters: [
            function (deps_ts_17_1) {
                deps_ts_17 = deps_ts_17_1;
            }
        ],
        execute: function () {
            BufferReader = class BufferReader {
                constructor(buffer) {
                    this.buffer = buffer;
                    this.pos = 0;
                }
                get finished() {
                    return this.pos >= this.buffer.length;
                }
                skip(len) {
                    this.pos += len;
                    return this;
                }
                readBuffer(len) {
                    const buffer = this.buffer.slice(this.pos, this.pos + len);
                    this.pos += len;
                    return buffer;
                }
                readUints(len) {
                    let num = 0;
                    for (let n = 0; n < len; n++) {
                        num += this.buffer[this.pos++] << (8 * n);
                    }
                    return num;
                }
                readUint8() {
                    return this.buffer[this.pos++];
                }
                readUint16() {
                    return this.readUints(2);
                }
                readUint32() {
                    return this.readUints(4);
                }
                readUint64() {
                    return this.readUints(8);
                }
                readNullTerminatedString() {
                    let end = this.buffer.indexOf(0x00, this.pos);
                    if (end === -1)
                        end = this.buffer.length;
                    const buf = this.buffer.slice(this.pos, end);
                    this.pos += buf.length + 1;
                    return deps_ts_17.decode(buf);
                }
                readString(len) {
                    const str = deps_ts_17.decode(this.buffer.slice(this.pos, this.pos + len));
                    this.pos += len;
                    return str;
                }
                readEncodedLen() {
                    const first = this.readUint8();
                    if (first < 251) {
                        return first;
                    }
                    else {
                        if (first == 0xfc) {
                            return this.readUint16();
                        }
                        else if (first == 0xfd) {
                            return this.readUints(3);
                        }
                        else if (first == 0xfe) {
                            return this.readUints(8);
                        }
                    }
                    return -1;
                }
                readLenCodeString() {
                    const len = this.readEncodedLen();
                    if (len == -1)
                        return null;
                    return this.readString(len);
                }
            };
            exports_366("BufferReader", BufferReader);
            BufferWriter = class BufferWriter {
                constructor(buffer) {
                    this.buffer = buffer;
                    this.pos = 0;
                }
                get wroteData() {
                    return this.buffer.slice(0, this.pos);
                }
                get length() {
                    return this.pos;
                }
                get capacity() {
                    return this.buffer.length - this.pos;
                }
                skip(len) {
                    this.pos += len;
                    return this;
                }
                writeBuffer(buffer) {
                    if (buffer.length > this.capacity) {
                        buffer = buffer.slice(0, this.capacity);
                    }
                    this.buffer.set(buffer, this.pos);
                    this.pos += buffer.length;
                    return this;
                }
                write(byte) {
                    this.buffer[this.pos++] = byte;
                    return this;
                }
                writeInt16LE(num) { }
                writeIntLE(num, len) {
                    const int = new Int32Array(1);
                    int[0] = 40;
                    console.log(int);
                }
                writeUint16(num) {
                    return this.writeUints(2, num);
                }
                writeUint32(num) {
                    return this.writeUints(4, num);
                }
                writeUint64(num) {
                    return this.writeUints(8, num);
                }
                writeUints(len, num) {
                    for (let n = 0; n < len; n++) {
                        this.buffer[this.pos++] = (num >> (n * 8)) & 0xff;
                    }
                    return this;
                }
                writeNullTerminatedString(str) {
                    return this.writeString(str).write(0x00);
                }
                writeString(str) {
                    const buf = deps_ts_17.encode(str);
                    this.buffer.set(buf, this.pos);
                    this.pos += buf.length;
                    return this;
                }
            };
            exports_366("BufferWriter", BufferWriter);
        }
    };
});
System.register("https://deno.land/x/mysql@v2.4.0/src/constant/capabilities", [], function (exports_367, context_367) {
    "use strict";
    var ServerCapabilities;
    var __moduleName = context_367 && context_367.id;
    return {
        setters: [],
        execute: function () {
            (function (ServerCapabilities) {
                ServerCapabilities[ServerCapabilities["CLIENT_PROTOCOL_41"] = 512] = "CLIENT_PROTOCOL_41";
                ServerCapabilities[ServerCapabilities["CLIENT_CONNECT_WITH_DB"] = 8] = "CLIENT_CONNECT_WITH_DB";
                ServerCapabilities[ServerCapabilities["CLIENT_LONG_FLAG"] = 4] = "CLIENT_LONG_FLAG";
                ServerCapabilities[ServerCapabilities["CLIENT_DEPRECATE_EOF"] = 16777216] = "CLIENT_DEPRECATE_EOF";
                ServerCapabilities[ServerCapabilities["CLIENT_LONG_PASSWORD"] = 1] = "CLIENT_LONG_PASSWORD";
                ServerCapabilities[ServerCapabilities["CLIENT_TRANSACTIONS"] = 8192] = "CLIENT_TRANSACTIONS";
                ServerCapabilities[ServerCapabilities["CLIENT_MULTI_RESULTS"] = 131072] = "CLIENT_MULTI_RESULTS";
                ServerCapabilities[ServerCapabilities["CLIENT_PLUGIN_AUTH_LENENC_CLIENT_DATA"] = 2097152] = "CLIENT_PLUGIN_AUTH_LENENC_CLIENT_DATA";
                ServerCapabilities[ServerCapabilities["CLIENT_PLUGIN_AUTH"] = 524288] = "CLIENT_PLUGIN_AUTH";
                ServerCapabilities[ServerCapabilities["CLIENT_SECURE_CONNECTION"] = 32768] = "CLIENT_SECURE_CONNECTION";
                ServerCapabilities[ServerCapabilities["CLIENT_FOUND_ROWS"] = 2] = "CLIENT_FOUND_ROWS";
                ServerCapabilities[ServerCapabilities["CLIENT_CONNECT_ATTRS"] = 1048576] = "CLIENT_CONNECT_ATTRS";
            })(ServerCapabilities || (ServerCapabilities = {}));
            exports_367("default", ServerCapabilities);
        }
    };
});
System.register("https://deno.land/x/mysql@v2.4.0/src/constant/charset", [], function (exports_368, context_368) {
    "use strict";
    var Charset;
    var __moduleName = context_368 && context_368.id;
    return {
        setters: [],
        execute: function () {
            (function (Charset) {
                Charset[Charset["BIG5_CHINESE_CI"] = 1] = "BIG5_CHINESE_CI";
                Charset[Charset["LATIN2_CZECH_CS"] = 2] = "LATIN2_CZECH_CS";
                Charset[Charset["DEC8_SWEDISH_CI"] = 3] = "DEC8_SWEDISH_CI";
                Charset[Charset["CP850_GENERAL_CI"] = 4] = "CP850_GENERAL_CI";
                Charset[Charset["LATIN1_GERMAN1_CI"] = 5] = "LATIN1_GERMAN1_CI";
                Charset[Charset["HP8_ENGLISH_CI"] = 6] = "HP8_ENGLISH_CI";
                Charset[Charset["KOI8R_GENERAL_CI"] = 7] = "KOI8R_GENERAL_CI";
                Charset[Charset["LATIN1_SWEDISH_CI"] = 8] = "LATIN1_SWEDISH_CI";
                Charset[Charset["LATIN2_GENERAL_CI"] = 9] = "LATIN2_GENERAL_CI";
                Charset[Charset["SWE7_SWEDISH_CI"] = 10] = "SWE7_SWEDISH_CI";
                Charset[Charset["ASCII_GENERAL_CI"] = 11] = "ASCII_GENERAL_CI";
                Charset[Charset["UJIS_JAPANESE_CI"] = 12] = "UJIS_JAPANESE_CI";
                Charset[Charset["SJIS_JAPANESE_CI"] = 13] = "SJIS_JAPANESE_CI";
                Charset[Charset["CP1251_BULGARIAN_CI"] = 14] = "CP1251_BULGARIAN_CI";
                Charset[Charset["LATIN1_DANISH_CI"] = 15] = "LATIN1_DANISH_CI";
                Charset[Charset["HEBREW_GENERAL_CI"] = 16] = "HEBREW_GENERAL_CI";
                Charset[Charset["TIS620_THAI_CI"] = 18] = "TIS620_THAI_CI";
                Charset[Charset["EUCKR_KOREAN_CI"] = 19] = "EUCKR_KOREAN_CI";
                Charset[Charset["LATIN7_ESTONIAN_CS"] = 20] = "LATIN7_ESTONIAN_CS";
                Charset[Charset["LATIN2_HUNGARIAN_CI"] = 21] = "LATIN2_HUNGARIAN_CI";
                Charset[Charset["KOI8U_GENERAL_CI"] = 22] = "KOI8U_GENERAL_CI";
                Charset[Charset["CP1251_UKRAINIAN_CI"] = 23] = "CP1251_UKRAINIAN_CI";
                Charset[Charset["GB2312_CHINESE_CI"] = 24] = "GB2312_CHINESE_CI";
                Charset[Charset["GREEK_GENERAL_CI"] = 25] = "GREEK_GENERAL_CI";
                Charset[Charset["CP1250_GENERAL_CI"] = 26] = "CP1250_GENERAL_CI";
                Charset[Charset["LATIN2_CROATIAN_CI"] = 27] = "LATIN2_CROATIAN_CI";
                Charset[Charset["GBK_CHINESE_CI"] = 28] = "GBK_CHINESE_CI";
                Charset[Charset["CP1257_LITHUANIAN_CI"] = 29] = "CP1257_LITHUANIAN_CI";
                Charset[Charset["LATIN5_TURKISH_CI"] = 30] = "LATIN5_TURKISH_CI";
                Charset[Charset["LATIN1_GERMAN2_CI"] = 31] = "LATIN1_GERMAN2_CI";
                Charset[Charset["ARMSCII8_GENERAL_CI"] = 32] = "ARMSCII8_GENERAL_CI";
                Charset[Charset["UTF8_GENERAL_CI"] = 33] = "UTF8_GENERAL_CI";
                Charset[Charset["CP1250_CZECH_CS"] = 34] = "CP1250_CZECH_CS";
                Charset[Charset["UCS2_GENERAL_CI"] = 35] = "UCS2_GENERAL_CI";
                Charset[Charset["CP866_GENERAL_CI"] = 36] = "CP866_GENERAL_CI";
                Charset[Charset["KEYBCS2_GENERAL_CI"] = 37] = "KEYBCS2_GENERAL_CI";
                Charset[Charset["MACCE_GENERAL_CI"] = 38] = "MACCE_GENERAL_CI";
                Charset[Charset["MACROMAN_GENERAL_CI"] = 39] = "MACROMAN_GENERAL_CI";
                Charset[Charset["CP852_GENERAL_CI"] = 40] = "CP852_GENERAL_CI";
                Charset[Charset["LATIN7_GENERAL_CI"] = 41] = "LATIN7_GENERAL_CI";
                Charset[Charset["LATIN7_GENERAL_CS"] = 42] = "LATIN7_GENERAL_CS";
                Charset[Charset["MACCE_BIN"] = 43] = "MACCE_BIN";
                Charset[Charset["CP1250_CROATIAN_CI"] = 44] = "CP1250_CROATIAN_CI";
                Charset[Charset["UTF8MB4_GENERAL_CI"] = 45] = "UTF8MB4_GENERAL_CI";
                Charset[Charset["UTF8MB4_BIN"] = 46] = "UTF8MB4_BIN";
                Charset[Charset["LATIN1_BIN"] = 47] = "LATIN1_BIN";
                Charset[Charset["LATIN1_GENERAL_CI"] = 48] = "LATIN1_GENERAL_CI";
                Charset[Charset["LATIN1_GENERAL_CS"] = 49] = "LATIN1_GENERAL_CS";
                Charset[Charset["CP1251_BIN"] = 50] = "CP1251_BIN";
                Charset[Charset["CP1251_GENERAL_CI"] = 51] = "CP1251_GENERAL_CI";
                Charset[Charset["CP1251_GENERAL_CS"] = 52] = "CP1251_GENERAL_CS";
                Charset[Charset["MACROMAN_BIN"] = 53] = "MACROMAN_BIN";
                Charset[Charset["UTF16_GENERAL_CI"] = 54] = "UTF16_GENERAL_CI";
                Charset[Charset["UTF16_BIN"] = 55] = "UTF16_BIN";
                Charset[Charset["UTF16LE_GENERAL_CI"] = 56] = "UTF16LE_GENERAL_CI";
                Charset[Charset["CP1256_GENERAL_CI"] = 57] = "CP1256_GENERAL_CI";
                Charset[Charset["CP1257_BIN"] = 58] = "CP1257_BIN";
                Charset[Charset["CP1257_GENERAL_CI"] = 59] = "CP1257_GENERAL_CI";
                Charset[Charset["UTF32_GENERAL_CI"] = 60] = "UTF32_GENERAL_CI";
                Charset[Charset["UTF32_BIN"] = 61] = "UTF32_BIN";
                Charset[Charset["UTF16LE_BIN"] = 62] = "UTF16LE_BIN";
                Charset[Charset["BINARY"] = 63] = "BINARY";
                Charset[Charset["ARMSCII8_BIN"] = 64] = "ARMSCII8_BIN";
                Charset[Charset["ASCII_BIN"] = 65] = "ASCII_BIN";
                Charset[Charset["CP1250_BIN"] = 66] = "CP1250_BIN";
                Charset[Charset["CP1256_BIN"] = 67] = "CP1256_BIN";
                Charset[Charset["CP866_BIN"] = 68] = "CP866_BIN";
                Charset[Charset["DEC8_BIN"] = 69] = "DEC8_BIN";
                Charset[Charset["GREEK_BIN"] = 70] = "GREEK_BIN";
                Charset[Charset["HEBREW_BIN"] = 71] = "HEBREW_BIN";
                Charset[Charset["HP8_BIN"] = 72] = "HP8_BIN";
                Charset[Charset["KEYBCS2_BIN"] = 73] = "KEYBCS2_BIN";
                Charset[Charset["KOI8R_BIN"] = 74] = "KOI8R_BIN";
                Charset[Charset["KOI8U_BIN"] = 75] = "KOI8U_BIN";
                Charset[Charset["LATIN2_BIN"] = 77] = "LATIN2_BIN";
                Charset[Charset["LATIN5_BIN"] = 78] = "LATIN5_BIN";
                Charset[Charset["LATIN7_BIN"] = 79] = "LATIN7_BIN";
                Charset[Charset["CP850_BIN"] = 80] = "CP850_BIN";
                Charset[Charset["CP852_BIN"] = 81] = "CP852_BIN";
                Charset[Charset["SWE7_BIN"] = 82] = "SWE7_BIN";
                Charset[Charset["UTF8_BIN"] = 83] = "UTF8_BIN";
                Charset[Charset["BIG5_BIN"] = 84] = "BIG5_BIN";
                Charset[Charset["EUCKR_BIN"] = 85] = "EUCKR_BIN";
                Charset[Charset["GB2312_BIN"] = 86] = "GB2312_BIN";
                Charset[Charset["GBK_BIN"] = 87] = "GBK_BIN";
                Charset[Charset["SJIS_BIN"] = 88] = "SJIS_BIN";
                Charset[Charset["TIS620_BIN"] = 89] = "TIS620_BIN";
                Charset[Charset["UCS2_BIN"] = 90] = "UCS2_BIN";
                Charset[Charset["UJIS_BIN"] = 91] = "UJIS_BIN";
                Charset[Charset["GEOSTD8_GENERAL_CI"] = 92] = "GEOSTD8_GENERAL_CI";
                Charset[Charset["GEOSTD8_BIN"] = 93] = "GEOSTD8_BIN";
                Charset[Charset["LATIN1_SPANISH_CI"] = 94] = "LATIN1_SPANISH_CI";
                Charset[Charset["CP932_JAPANESE_CI"] = 95] = "CP932_JAPANESE_CI";
                Charset[Charset["CP932_BIN"] = 96] = "CP932_BIN";
                Charset[Charset["EUCJPMS_JAPANESE_CI"] = 97] = "EUCJPMS_JAPANESE_CI";
                Charset[Charset["EUCJPMS_BIN"] = 98] = "EUCJPMS_BIN";
                Charset[Charset["CP1250_POLISH_CI"] = 99] = "CP1250_POLISH_CI";
                Charset[Charset["UTF16_UNICODE_CI"] = 101] = "UTF16_UNICODE_CI";
                Charset[Charset["UTF16_ICELANDIC_CI"] = 102] = "UTF16_ICELANDIC_CI";
                Charset[Charset["UTF16_LATVIAN_CI"] = 103] = "UTF16_LATVIAN_CI";
                Charset[Charset["UTF16_ROMANIAN_CI"] = 104] = "UTF16_ROMANIAN_CI";
                Charset[Charset["UTF16_SLOVENIAN_CI"] = 105] = "UTF16_SLOVENIAN_CI";
                Charset[Charset["UTF16_POLISH_CI"] = 106] = "UTF16_POLISH_CI";
                Charset[Charset["UTF16_ESTONIAN_CI"] = 107] = "UTF16_ESTONIAN_CI";
                Charset[Charset["UTF16_SPANISH_CI"] = 108] = "UTF16_SPANISH_CI";
                Charset[Charset["UTF16_SWEDISH_CI"] = 109] = "UTF16_SWEDISH_CI";
                Charset[Charset["UTF16_TURKISH_CI"] = 110] = "UTF16_TURKISH_CI";
                Charset[Charset["UTF16_CZECH_CI"] = 111] = "UTF16_CZECH_CI";
                Charset[Charset["UTF16_DANISH_CI"] = 112] = "UTF16_DANISH_CI";
                Charset[Charset["UTF16_LITHUANIAN_CI"] = 113] = "UTF16_LITHUANIAN_CI";
                Charset[Charset["UTF16_SLOVAK_CI"] = 114] = "UTF16_SLOVAK_CI";
                Charset[Charset["UTF16_SPANISH2_CI"] = 115] = "UTF16_SPANISH2_CI";
                Charset[Charset["UTF16_ROMAN_CI"] = 116] = "UTF16_ROMAN_CI";
                Charset[Charset["UTF16_PERSIAN_CI"] = 117] = "UTF16_PERSIAN_CI";
                Charset[Charset["UTF16_ESPERANTO_CI"] = 118] = "UTF16_ESPERANTO_CI";
                Charset[Charset["UTF16_HUNGARIAN_CI"] = 119] = "UTF16_HUNGARIAN_CI";
                Charset[Charset["UTF16_SINHALA_CI"] = 120] = "UTF16_SINHALA_CI";
                Charset[Charset["UTF16_GERMAN2_CI"] = 121] = "UTF16_GERMAN2_CI";
                Charset[Charset["UTF16_CROATIAN_MYSQL561_CI"] = 122] = "UTF16_CROATIAN_MYSQL561_CI";
                Charset[Charset["UTF16_UNICODE_520_CI"] = 123] = "UTF16_UNICODE_520_CI";
                Charset[Charset["UTF16_VIETNAMESE_CI"] = 124] = "UTF16_VIETNAMESE_CI";
                Charset[Charset["UCS2_UNICODE_CI"] = 128] = "UCS2_UNICODE_CI";
                Charset[Charset["UCS2_ICELANDIC_CI"] = 129] = "UCS2_ICELANDIC_CI";
                Charset[Charset["UCS2_LATVIAN_CI"] = 130] = "UCS2_LATVIAN_CI";
                Charset[Charset["UCS2_ROMANIAN_CI"] = 131] = "UCS2_ROMANIAN_CI";
                Charset[Charset["UCS2_SLOVENIAN_CI"] = 132] = "UCS2_SLOVENIAN_CI";
                Charset[Charset["UCS2_POLISH_CI"] = 133] = "UCS2_POLISH_CI";
                Charset[Charset["UCS2_ESTONIAN_CI"] = 134] = "UCS2_ESTONIAN_CI";
                Charset[Charset["UCS2_SPANISH_CI"] = 135] = "UCS2_SPANISH_CI";
                Charset[Charset["UCS2_SWEDISH_CI"] = 136] = "UCS2_SWEDISH_CI";
                Charset[Charset["UCS2_TURKISH_CI"] = 137] = "UCS2_TURKISH_CI";
                Charset[Charset["UCS2_CZECH_CI"] = 138] = "UCS2_CZECH_CI";
                Charset[Charset["UCS2_DANISH_CI"] = 139] = "UCS2_DANISH_CI";
                Charset[Charset["UCS2_LITHUANIAN_CI"] = 140] = "UCS2_LITHUANIAN_CI";
                Charset[Charset["UCS2_SLOVAK_CI"] = 141] = "UCS2_SLOVAK_CI";
                Charset[Charset["UCS2_SPANISH2_CI"] = 142] = "UCS2_SPANISH2_CI";
                Charset[Charset["UCS2_ROMAN_CI"] = 143] = "UCS2_ROMAN_CI";
                Charset[Charset["UCS2_PERSIAN_CI"] = 144] = "UCS2_PERSIAN_CI";
                Charset[Charset["UCS2_ESPERANTO_CI"] = 145] = "UCS2_ESPERANTO_CI";
                Charset[Charset["UCS2_HUNGARIAN_CI"] = 146] = "UCS2_HUNGARIAN_CI";
                Charset[Charset["UCS2_SINHALA_CI"] = 147] = "UCS2_SINHALA_CI";
                Charset[Charset["UCS2_GERMAN2_CI"] = 148] = "UCS2_GERMAN2_CI";
                Charset[Charset["UCS2_CROATIAN_MYSQL561_CI"] = 149] = "UCS2_CROATIAN_MYSQL561_CI";
                Charset[Charset["UCS2_UNICODE_520_CI"] = 150] = "UCS2_UNICODE_520_CI";
                Charset[Charset["UCS2_VIETNAMESE_CI"] = 151] = "UCS2_VIETNAMESE_CI";
                Charset[Charset["UCS2_GENERAL_MYSQL500_CI"] = 159] = "UCS2_GENERAL_MYSQL500_CI";
                Charset[Charset["UTF32_UNICODE_CI"] = 160] = "UTF32_UNICODE_CI";
                Charset[Charset["UTF32_ICELANDIC_CI"] = 161] = "UTF32_ICELANDIC_CI";
                Charset[Charset["UTF32_LATVIAN_CI"] = 162] = "UTF32_LATVIAN_CI";
                Charset[Charset["UTF32_ROMANIAN_CI"] = 163] = "UTF32_ROMANIAN_CI";
                Charset[Charset["UTF32_SLOVENIAN_CI"] = 164] = "UTF32_SLOVENIAN_CI";
                Charset[Charset["UTF32_POLISH_CI"] = 165] = "UTF32_POLISH_CI";
                Charset[Charset["UTF32_ESTONIAN_CI"] = 166] = "UTF32_ESTONIAN_CI";
                Charset[Charset["UTF32_SPANISH_CI"] = 167] = "UTF32_SPANISH_CI";
                Charset[Charset["UTF32_SWEDISH_CI"] = 168] = "UTF32_SWEDISH_CI";
                Charset[Charset["UTF32_TURKISH_CI"] = 169] = "UTF32_TURKISH_CI";
                Charset[Charset["UTF32_CZECH_CI"] = 170] = "UTF32_CZECH_CI";
                Charset[Charset["UTF32_DANISH_CI"] = 171] = "UTF32_DANISH_CI";
                Charset[Charset["UTF32_LITHUANIAN_CI"] = 172] = "UTF32_LITHUANIAN_CI";
                Charset[Charset["UTF32_SLOVAK_CI"] = 173] = "UTF32_SLOVAK_CI";
                Charset[Charset["UTF32_SPANISH2_CI"] = 174] = "UTF32_SPANISH2_CI";
                Charset[Charset["UTF32_ROMAN_CI"] = 175] = "UTF32_ROMAN_CI";
                Charset[Charset["UTF32_PERSIAN_CI"] = 176] = "UTF32_PERSIAN_CI";
                Charset[Charset["UTF32_ESPERANTO_CI"] = 177] = "UTF32_ESPERANTO_CI";
                Charset[Charset["UTF32_HUNGARIAN_CI"] = 178] = "UTF32_HUNGARIAN_CI";
                Charset[Charset["UTF32_SINHALA_CI"] = 179] = "UTF32_SINHALA_CI";
                Charset[Charset["UTF32_GERMAN2_CI"] = 180] = "UTF32_GERMAN2_CI";
                Charset[Charset["UTF32_CROATIAN_MYSQL561_CI"] = 181] = "UTF32_CROATIAN_MYSQL561_CI";
                Charset[Charset["UTF32_UNICODE_520_CI"] = 182] = "UTF32_UNICODE_520_CI";
                Charset[Charset["UTF32_VIETNAMESE_CI"] = 183] = "UTF32_VIETNAMESE_CI";
                Charset[Charset["UTF8_UNICODE_CI"] = 192] = "UTF8_UNICODE_CI";
                Charset[Charset["UTF8_ICELANDIC_CI"] = 193] = "UTF8_ICELANDIC_CI";
                Charset[Charset["UTF8_LATVIAN_CI"] = 194] = "UTF8_LATVIAN_CI";
                Charset[Charset["UTF8_ROMANIAN_CI"] = 195] = "UTF8_ROMANIAN_CI";
                Charset[Charset["UTF8_SLOVENIAN_CI"] = 196] = "UTF8_SLOVENIAN_CI";
                Charset[Charset["UTF8_POLISH_CI"] = 197] = "UTF8_POLISH_CI";
                Charset[Charset["UTF8_ESTONIAN_CI"] = 198] = "UTF8_ESTONIAN_CI";
                Charset[Charset["UTF8_SPANISH_CI"] = 199] = "UTF8_SPANISH_CI";
                Charset[Charset["UTF8_SWEDISH_CI"] = 200] = "UTF8_SWEDISH_CI";
                Charset[Charset["UTF8_TURKISH_CI"] = 201] = "UTF8_TURKISH_CI";
                Charset[Charset["UTF8_CZECH_CI"] = 202] = "UTF8_CZECH_CI";
                Charset[Charset["UTF8_DANISH_CI"] = 203] = "UTF8_DANISH_CI";
                Charset[Charset["UTF8_LITHUANIAN_CI"] = 204] = "UTF8_LITHUANIAN_CI";
                Charset[Charset["UTF8_SLOVAK_CI"] = 205] = "UTF8_SLOVAK_CI";
                Charset[Charset["UTF8_SPANISH2_CI"] = 206] = "UTF8_SPANISH2_CI";
                Charset[Charset["UTF8_ROMAN_CI"] = 207] = "UTF8_ROMAN_CI";
                Charset[Charset["UTF8_PERSIAN_CI"] = 208] = "UTF8_PERSIAN_CI";
                Charset[Charset["UTF8_ESPERANTO_CI"] = 209] = "UTF8_ESPERANTO_CI";
                Charset[Charset["UTF8_HUNGARIAN_CI"] = 210] = "UTF8_HUNGARIAN_CI";
                Charset[Charset["UTF8_SINHALA_CI"] = 211] = "UTF8_SINHALA_CI";
                Charset[Charset["UTF8_GERMAN2_CI"] = 212] = "UTF8_GERMAN2_CI";
                Charset[Charset["UTF8_CROATIAN_MYSQL561_CI"] = 213] = "UTF8_CROATIAN_MYSQL561_CI";
                Charset[Charset["UTF8_UNICODE_520_CI"] = 214] = "UTF8_UNICODE_520_CI";
                Charset[Charset["UTF8_VIETNAMESE_CI"] = 215] = "UTF8_VIETNAMESE_CI";
                Charset[Charset["UTF8_GENERAL_MYSQL500_CI"] = 223] = "UTF8_GENERAL_MYSQL500_CI";
                Charset[Charset["UTF8MB4_UNICODE_CI"] = 224] = "UTF8MB4_UNICODE_CI";
                Charset[Charset["UTF8MB4_ICELANDIC_CI"] = 225] = "UTF8MB4_ICELANDIC_CI";
                Charset[Charset["UTF8MB4_LATVIAN_CI"] = 226] = "UTF8MB4_LATVIAN_CI";
                Charset[Charset["UTF8MB4_ROMANIAN_CI"] = 227] = "UTF8MB4_ROMANIAN_CI";
                Charset[Charset["UTF8MB4_SLOVENIAN_CI"] = 228] = "UTF8MB4_SLOVENIAN_CI";
                Charset[Charset["UTF8MB4_POLISH_CI"] = 229] = "UTF8MB4_POLISH_CI";
                Charset[Charset["UTF8MB4_ESTONIAN_CI"] = 230] = "UTF8MB4_ESTONIAN_CI";
                Charset[Charset["UTF8MB4_SPANISH_CI"] = 231] = "UTF8MB4_SPANISH_CI";
                Charset[Charset["UTF8MB4_SWEDISH_CI"] = 232] = "UTF8MB4_SWEDISH_CI";
                Charset[Charset["UTF8MB4_TURKISH_CI"] = 233] = "UTF8MB4_TURKISH_CI";
                Charset[Charset["UTF8MB4_CZECH_CI"] = 234] = "UTF8MB4_CZECH_CI";
                Charset[Charset["UTF8MB4_DANISH_CI"] = 235] = "UTF8MB4_DANISH_CI";
                Charset[Charset["UTF8MB4_LITHUANIAN_CI"] = 236] = "UTF8MB4_LITHUANIAN_CI";
                Charset[Charset["UTF8MB4_SLOVAK_CI"] = 237] = "UTF8MB4_SLOVAK_CI";
                Charset[Charset["UTF8MB4_SPANISH2_CI"] = 238] = "UTF8MB4_SPANISH2_CI";
                Charset[Charset["UTF8MB4_ROMAN_CI"] = 239] = "UTF8MB4_ROMAN_CI";
                Charset[Charset["UTF8MB4_PERSIAN_CI"] = 240] = "UTF8MB4_PERSIAN_CI";
                Charset[Charset["UTF8MB4_ESPERANTO_CI"] = 241] = "UTF8MB4_ESPERANTO_CI";
                Charset[Charset["UTF8MB4_HUNGARIAN_CI"] = 242] = "UTF8MB4_HUNGARIAN_CI";
                Charset[Charset["UTF8MB4_SINHALA_CI"] = 243] = "UTF8MB4_SINHALA_CI";
                Charset[Charset["UTF8MB4_GERMAN2_CI"] = 244] = "UTF8MB4_GERMAN2_CI";
                Charset[Charset["UTF8MB4_CROATIAN_MYSQL561_CI"] = 245] = "UTF8MB4_CROATIAN_MYSQL561_CI";
                Charset[Charset["UTF8MB4_UNICODE_520_CI"] = 246] = "UTF8MB4_UNICODE_520_CI";
                Charset[Charset["UTF8MB4_VIETNAMESE_CI"] = 247] = "UTF8MB4_VIETNAMESE_CI";
                Charset[Charset["UTF8_GENERAL50_CI"] = 253] = "UTF8_GENERAL50_CI";
                Charset[Charset["ARMSCII8"] = 32] = "ARMSCII8";
                Charset[Charset["ASCII"] = 11] = "ASCII";
                Charset[Charset["BIG5"] = 1] = "BIG5";
                Charset[Charset["CP1250"] = 26] = "CP1250";
                Charset[Charset["CP1251"] = 51] = "CP1251";
                Charset[Charset["CP1256"] = 57] = "CP1256";
                Charset[Charset["CP1257"] = 59] = "CP1257";
                Charset[Charset["CP866"] = 36] = "CP866";
                Charset[Charset["CP850"] = 4] = "CP850";
                Charset[Charset["CP852"] = 40] = "CP852";
                Charset[Charset["CP932"] = 95] = "CP932";
                Charset[Charset["DEC8"] = 3] = "DEC8";
                Charset[Charset["EUCJPMS"] = 97] = "EUCJPMS";
                Charset[Charset["EUCKR"] = 19] = "EUCKR";
                Charset[Charset["GB2312"] = 24] = "GB2312";
                Charset[Charset["GBK"] = 28] = "GBK";
                Charset[Charset["GEOSTD8"] = 92] = "GEOSTD8";
                Charset[Charset["GREEK"] = 25] = "GREEK";
                Charset[Charset["HEBREW"] = 16] = "HEBREW";
                Charset[Charset["HP8"] = 6] = "HP8";
                Charset[Charset["KEYBCS2"] = 37] = "KEYBCS2";
                Charset[Charset["KOI8R"] = 7] = "KOI8R";
                Charset[Charset["KOI8U"] = 22] = "KOI8U";
                Charset[Charset["LATIN1"] = 8] = "LATIN1";
                Charset[Charset["LATIN2"] = 9] = "LATIN2";
                Charset[Charset["LATIN5"] = 30] = "LATIN5";
                Charset[Charset["LATIN7"] = 41] = "LATIN7";
                Charset[Charset["MACCE"] = 38] = "MACCE";
                Charset[Charset["MACROMAN"] = 39] = "MACROMAN";
                Charset[Charset["SJIS"] = 13] = "SJIS";
                Charset[Charset["SWE7"] = 10] = "SWE7";
                Charset[Charset["TIS620"] = 18] = "TIS620";
                Charset[Charset["UCS2"] = 35] = "UCS2";
                Charset[Charset["UJIS"] = 12] = "UJIS";
                Charset[Charset["UTF16"] = 54] = "UTF16";
                Charset[Charset["UTF16LE"] = 56] = "UTF16LE";
                Charset[Charset["UTF8"] = 33] = "UTF8";
                Charset[Charset["UTF8MB4"] = 45] = "UTF8MB4";
                Charset[Charset["UTF32"] = 60] = "UTF32";
            })(Charset || (Charset = {}));
            exports_368("Charset", Charset);
        }
    };
});
System.register("https://deno.land/x/mysql@v2.4.0/src/packets/parsers/handshake", ["https://deno.land/x/mysql@v2.4.0/src/buffer", "https://deno.land/x/mysql@v2.4.0/src/constant/capabilities"], function (exports_369, context_369) {
    "use strict";
    var buffer_ts_1, capabilities_ts_1;
    var __moduleName = context_369 && context_369.id;
    function parseHandshake(reader) {
        const protocolVersion = reader.readUint8();
        const serverVersion = reader.readNullTerminatedString();
        const threadId = reader.readUint32();
        const seedWriter = new buffer_ts_1.BufferWriter(new Uint8Array(20));
        seedWriter.writeBuffer(reader.readBuffer(8));
        reader.skip(1);
        let serverCapabilities = reader.readUint16();
        let characterSet = 0, statusFlags = 0, authPluginDataLength = 0, authPluginName = "";
        if (!reader.finished) {
            characterSet = reader.readUint8();
            statusFlags = reader.readUint16();
            serverCapabilities |= reader.readUint16() << 16;
            if ((serverCapabilities & capabilities_ts_1.default.CLIENT_PLUGIN_AUTH) != 0) {
                authPluginDataLength = reader.readUint8();
            }
            else {
                reader.skip(1);
            }
            reader.skip(10);
            if ((serverCapabilities & capabilities_ts_1.default.CLIENT_SECURE_CONNECTION) !=
                0) {
                seedWriter.writeBuffer(reader.readBuffer(Math.max(13, authPluginDataLength - 8)));
            }
            if ((serverCapabilities & capabilities_ts_1.default.CLIENT_PLUGIN_AUTH) != 0) {
                authPluginName = reader.readNullTerminatedString();
            }
        }
        return {
            protocolVersion,
            serverVersion,
            threadId,
            seed: seedWriter.buffer,
            serverCapabilities,
            characterSet,
            statusFlags,
            authPluginName,
        };
    }
    exports_369("parseHandshake", parseHandshake);
    return {
        setters: [
            function (buffer_ts_1_1) {
                buffer_ts_1 = buffer_ts_1_1;
            },
            function (capabilities_ts_1_1) {
                capabilities_ts_1 = capabilities_ts_1_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/mysql@v2.4.0/src/packets/builders/auth", ["https://deno.land/x/mysql@v2.4.0/src/auth", "https://deno.land/x/mysql@v2.4.0/src/buffer", "https://deno.land/x/mysql@v2.4.0/src/constant/capabilities", "https://deno.land/x/mysql@v2.4.0/src/constant/charset"], function (exports_370, context_370) {
    "use strict";
    var auth_ts_1, buffer_ts_2, capabilities_ts_2, charset_ts_1;
    var __moduleName = context_370 && context_370.id;
    function buildAuth(packet, params) {
        let clientParam = (params.db ? capabilities_ts_2.default.CLIENT_CONNECT_WITH_DB : 0) |
            capabilities_ts_2.default.CLIENT_PLUGIN_AUTH |
            capabilities_ts_2.default.CLIENT_LONG_PASSWORD |
            capabilities_ts_2.default.CLIENT_PROTOCOL_41 |
            capabilities_ts_2.default.CLIENT_TRANSACTIONS |
            capabilities_ts_2.default.CLIENT_MULTI_RESULTS |
            capabilities_ts_2.default.CLIENT_SECURE_CONNECTION;
        if (packet.serverCapabilities & capabilities_ts_2.default.CLIENT_LONG_FLAG) {
            clientParam |= capabilities_ts_2.default.CLIENT_LONG_FLAG;
        }
        if (packet.serverCapabilities &
            capabilities_ts_2.default.CLIENT_PLUGIN_AUTH_LENENC_CLIENT_DATA) {
            clientParam |= capabilities_ts_2.default.CLIENT_PLUGIN_AUTH_LENENC_CLIENT_DATA;
        }
        if (packet.serverCapabilities & capabilities_ts_2.default.CLIENT_DEPRECATE_EOF) {
            clientParam |= capabilities_ts_2.default.CLIENT_DEPRECATE_EOF;
        }
        if (packet.serverCapabilities & capabilities_ts_2.default.CLIENT_PLUGIN_AUTH) {
            const writer = new buffer_ts_2.BufferWriter(new Uint8Array(1000));
            writer
                .writeUint32(clientParam)
                .writeUint32(2 ** 24 - 1)
                .write(charset_ts_1.Charset.UTF8_GENERAL_CI)
                .skip(23)
                .writeNullTerminatedString(params.username);
            if (params.password) {
                const authData = auth_ts_1.default(packet.authPluginName, params.password, packet.seed);
                if (clientParam &
                    capabilities_ts_2.default.CLIENT_PLUGIN_AUTH_LENENC_CLIENT_DATA ||
                    clientParam & capabilities_ts_2.default.CLIENT_SECURE_CONNECTION) {
                    writer.write(authData.length);
                    writer.writeBuffer(authData);
                }
                else {
                    writer.writeBuffer(authData);
                    writer.write(0);
                }
            }
            else {
                writer.write(0);
            }
            if (clientParam & capabilities_ts_2.default.CLIENT_CONNECT_WITH_DB && params.db) {
                writer.writeNullTerminatedString(params.db);
            }
            if (clientParam & capabilities_ts_2.default.CLIENT_PLUGIN_AUTH) {
                writer.writeNullTerminatedString(packet.authPluginName);
            }
            return writer.wroteData;
        }
        return Uint8Array.from([]);
    }
    exports_370("buildAuth", buildAuth);
    return {
        setters: [
            function (auth_ts_1_1) {
                auth_ts_1 = auth_ts_1_1;
            },
            function (buffer_ts_2_1) {
                buffer_ts_2 = buffer_ts_2_1;
            },
            function (capabilities_ts_2_1) {
                capabilities_ts_2 = capabilities_ts_2_1;
            },
            function (charset_ts_1_1) {
                charset_ts_1 = charset_ts_1_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/mysql@v2.4.0/src/packets/builders/query", ["https://deno.land/x/mysql@v2.4.0/deps", "https://deno.land/x/mysql@v2.4.0/src/buffer"], function (exports_371, context_371) {
    "use strict";
    var deps_ts_18, buffer_ts_3;
    var __moduleName = context_371 && context_371.id;
    function buildQuery(sql, params = []) {
        const data = deps_ts_18.encode(deps_ts_18.replaceParams(sql, params));
        const writer = new buffer_ts_3.BufferWriter(new Uint8Array(data.length + 1));
        writer.write(0x03);
        writer.writeBuffer(data);
        return writer.buffer;
    }
    exports_371("buildQuery", buildQuery);
    return {
        setters: [
            function (deps_ts_18_1) {
                deps_ts_18 = deps_ts_18_1;
            },
            function (buffer_ts_3_1) {
                buffer_ts_3 = buffer_ts_3_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/mysql@v2.4.0/src/packets/packet", ["https://deno.land/x/mysql@v2.4.0/deps", "https://deno.land/x/mysql@v2.4.0/src/buffer", "https://deno.land/x/mysql@v2.4.0/src/constant/errors", "https://deno.land/x/mysql@v2.4.0/src/logger"], function (exports_372, context_372) {
    "use strict";
    var deps_ts_19, buffer_ts_4, errors_ts_1, logger_ts_2, SendPacket, ReceivePacket;
    var __moduleName = context_372 && context_372.id;
    return {
        setters: [
            function (deps_ts_19_1) {
                deps_ts_19 = deps_ts_19_1;
            },
            function (buffer_ts_4_1) {
                buffer_ts_4 = buffer_ts_4_1;
            },
            function (errors_ts_1_1) {
                errors_ts_1 = errors_ts_1_1;
            },
            function (logger_ts_2_1) {
                logger_ts_2 = logger_ts_2_1;
            }
        ],
        execute: function () {
            SendPacket = class SendPacket {
                constructor(body, no) {
                    this.body = body;
                    this.header = { size: body.length, no };
                }
                async send(conn) {
                    const body = this.body;
                    const data = new buffer_ts_4.BufferWriter(new Uint8Array(4 + body.length));
                    data.writeUints(3, this.header.size);
                    data.write(this.header.no);
                    data.writeBuffer(body);
                    logger_ts_2.log.debug(`send: ${data.length}B \n${deps_ts_19.byteFormat(data.buffer)}\n`);
                    try {
                        await conn.write(data.buffer);
                    }
                    catch (error) {
                        throw new errors_ts_1.WriteError(error.message);
                    }
                }
            };
            exports_372("SendPacket", SendPacket);
            ReceivePacket = class ReceivePacket {
                async parse(reader) {
                    const header = new buffer_ts_4.BufferReader(new Uint8Array(4));
                    let readCount = 0;
                    let nread = await reader.read(header.buffer);
                    if (nread === null)
                        return null;
                    readCount = nread;
                    this.header = {
                        size: header.readUints(3),
                        no: header.readUint8(),
                    };
                    this.body = new buffer_ts_4.BufferReader(new Uint8Array(this.header.size));
                    nread = await reader.read(this.body.buffer);
                    if (nread === null)
                        return null;
                    readCount += nread;
                    switch (this.body.buffer[0]) {
                        case 0x00:
                            this.type = "OK";
                            break;
                        case 0xff:
                            this.type = "ERR";
                            break;
                        case 0xfe:
                            this.type = "EOF";
                            break;
                        default:
                            this.type = "RESULT";
                            break;
                    }
                    logger_ts_2.debug(() => {
                        const data = new Uint8Array(readCount);
                        data.set(header.buffer);
                        data.set(this.body.buffer, 4);
                        logger_ts_2.log.debug(`receive: ${readCount}B, size = ${this.header.size}, no = ${this.header.no} \n${deps_ts_19.byteFormat(data)}\n`);
                    });
                    return this;
                }
            };
            exports_372("ReceivePacket", ReceivePacket);
        }
    };
});
System.register("https://deno.land/x/mysql@v2.4.0/src/packets/parsers/err", ["https://deno.land/x/mysql@v2.4.0/src/constant/capabilities"], function (exports_373, context_373) {
    "use strict";
    var capabilities_ts_3;
    var __moduleName = context_373 && context_373.id;
    function parseError(reader, conn) {
        const code = reader.readUint16();
        const packet = {
            code,
            message: "",
        };
        if (conn.capabilities & capabilities_ts_3.default.CLIENT_PROTOCOL_41) {
            packet.sqlStateMarker = reader.readUint8();
            packet.sqlState = reader.readUints(5);
        }
        packet.message = reader.readNullTerminatedString();
        return packet;
    }
    exports_373("parseError", parseError);
    return {
        setters: [
            function (capabilities_ts_3_1) {
                capabilities_ts_3 = capabilities_ts_3_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/mysql@v2.4.0/src/constant/mysql_types", [], function (exports_374, context_374) {
    "use strict";
    var MYSQL_TYPE_DECIMAL, MYSQL_TYPE_TINY, MYSQL_TYPE_SHORT, MYSQL_TYPE_LONG, MYSQL_TYPE_FLOAT, MYSQL_TYPE_DOUBLE, MYSQL_TYPE_NULL, MYSQL_TYPE_TIMESTAMP, MYSQL_TYPE_LONGLONG, MYSQL_TYPE_INT24, MYSQL_TYPE_DATE, MYSQL_TYPE_TIME, MYSQL_TYPE_DATETIME, MYSQL_TYPE_YEAR, MYSQL_TYPE_NEWDATE, MYSQL_TYPE_VARCHAR, MYSQL_TYPE_BIT, MYSQL_TYPE_TIMESTAMP2, MYSQL_TYPE_DATETIME2, MYSQL_TYPE_TIME2, MYSQL_TYPE_NEWDECIMAL, MYSQL_TYPE_ENUM, MYSQL_TYPE_SET, MYSQL_TYPE_TINY_BLOB, MYSQL_TYPE_MEDIUM_BLOB, MYSQL_TYPE_LONG_BLOB, MYSQL_TYPE_BLOB, MYSQL_TYPE_VAR_STRING, MYSQL_TYPE_STRING, MYSQL_TYPE_GEOMETRY;
    var __moduleName = context_374 && context_374.id;
    return {
        setters: [],
        execute: function () {
            exports_374("MYSQL_TYPE_DECIMAL", MYSQL_TYPE_DECIMAL = 0x00);
            exports_374("MYSQL_TYPE_TINY", MYSQL_TYPE_TINY = 0x01);
            exports_374("MYSQL_TYPE_SHORT", MYSQL_TYPE_SHORT = 0x02);
            exports_374("MYSQL_TYPE_LONG", MYSQL_TYPE_LONG = 0x03);
            exports_374("MYSQL_TYPE_FLOAT", MYSQL_TYPE_FLOAT = 0x04);
            exports_374("MYSQL_TYPE_DOUBLE", MYSQL_TYPE_DOUBLE = 0x05);
            exports_374("MYSQL_TYPE_NULL", MYSQL_TYPE_NULL = 0x06);
            exports_374("MYSQL_TYPE_TIMESTAMP", MYSQL_TYPE_TIMESTAMP = 0x07);
            exports_374("MYSQL_TYPE_LONGLONG", MYSQL_TYPE_LONGLONG = 0x08);
            exports_374("MYSQL_TYPE_INT24", MYSQL_TYPE_INT24 = 0x09);
            exports_374("MYSQL_TYPE_DATE", MYSQL_TYPE_DATE = 0x0a);
            exports_374("MYSQL_TYPE_TIME", MYSQL_TYPE_TIME = 0x0b);
            exports_374("MYSQL_TYPE_DATETIME", MYSQL_TYPE_DATETIME = 0x0c);
            exports_374("MYSQL_TYPE_YEAR", MYSQL_TYPE_YEAR = 0x0d);
            exports_374("MYSQL_TYPE_NEWDATE", MYSQL_TYPE_NEWDATE = 0x0e);
            exports_374("MYSQL_TYPE_VARCHAR", MYSQL_TYPE_VARCHAR = 0x0f);
            exports_374("MYSQL_TYPE_BIT", MYSQL_TYPE_BIT = 0x10);
            exports_374("MYSQL_TYPE_TIMESTAMP2", MYSQL_TYPE_TIMESTAMP2 = 0x11);
            exports_374("MYSQL_TYPE_DATETIME2", MYSQL_TYPE_DATETIME2 = 0x12);
            exports_374("MYSQL_TYPE_TIME2", MYSQL_TYPE_TIME2 = 0x13);
            exports_374("MYSQL_TYPE_NEWDECIMAL", MYSQL_TYPE_NEWDECIMAL = 0xf6);
            exports_374("MYSQL_TYPE_ENUM", MYSQL_TYPE_ENUM = 0xf7);
            exports_374("MYSQL_TYPE_SET", MYSQL_TYPE_SET = 0xf8);
            exports_374("MYSQL_TYPE_TINY_BLOB", MYSQL_TYPE_TINY_BLOB = 0xf9);
            exports_374("MYSQL_TYPE_MEDIUM_BLOB", MYSQL_TYPE_MEDIUM_BLOB = 0xfa);
            exports_374("MYSQL_TYPE_LONG_BLOB", MYSQL_TYPE_LONG_BLOB = 0xfb);
            exports_374("MYSQL_TYPE_BLOB", MYSQL_TYPE_BLOB = 0xfc);
            exports_374("MYSQL_TYPE_VAR_STRING", MYSQL_TYPE_VAR_STRING = 0xfd);
            exports_374("MYSQL_TYPE_STRING", MYSQL_TYPE_STRING = 0xfe);
            exports_374("MYSQL_TYPE_GEOMETRY", MYSQL_TYPE_GEOMETRY = 0xff);
        }
    };
});
System.register("https://deno.land/x/mysql@v2.4.0/src/packets/parsers/result", ["https://deno.land/x/mysql@v2.4.0/src/constant/mysql_types"], function (exports_375, context_375) {
    "use strict";
    var mysql_types_ts_1;
    var __moduleName = context_375 && context_375.id;
    function parseField(reader) {
        const catalog = reader.readLenCodeString();
        const schema = reader.readLenCodeString();
        const table = reader.readLenCodeString();
        const originTable = reader.readLenCodeString();
        const name = reader.readLenCodeString();
        const originName = reader.readLenCodeString();
        reader.skip(1);
        const encoding = reader.readUint16();
        const fieldLen = reader.readUint32();
        const fieldType = reader.readUint8();
        const fieldFlag = reader.readUint16();
        const decimals = reader.readUint8();
        reader.skip(1);
        const defaultVal = reader.readLenCodeString();
        return {
            catalog,
            schema,
            table,
            originName,
            fieldFlag,
            originTable,
            fieldLen,
            name,
            fieldType,
            encoding,
            decimals,
            defaultVal,
        };
    }
    exports_375("parseField", parseField);
    function parseRow(reader, fileds) {
        const row = {};
        for (let i = 0; i < fileds.length; i++) {
            const name = fileds[i].name;
            const val = reader.readLenCodeString();
            row[name] = val === null ? null : convertType(fileds[i], val);
        }
        return row;
    }
    exports_375("parseRow", parseRow);
    function convertType(field, val) {
        const { fieldType, fieldLen } = field;
        if (fieldType === mysql_types_ts_1.MYSQL_TYPE_TINY && fieldLen === 1) {
            return !!parseInt(val);
        }
        switch (fieldType) {
            case mysql_types_ts_1.MYSQL_TYPE_DECIMAL:
            case mysql_types_ts_1.MYSQL_TYPE_DOUBLE:
            case mysql_types_ts_1.MYSQL_TYPE_FLOAT:
            case mysql_types_ts_1.MYSQL_TYPE_DATETIME2:
                return parseFloat(val);
            case mysql_types_ts_1.MYSQL_TYPE_NEWDECIMAL:
                return val;
            case mysql_types_ts_1.MYSQL_TYPE_TINY:
            case mysql_types_ts_1.MYSQL_TYPE_SHORT:
            case mysql_types_ts_1.MYSQL_TYPE_LONG:
            case mysql_types_ts_1.MYSQL_TYPE_INT24:
                return parseInt(val);
            case mysql_types_ts_1.MYSQL_TYPE_LONGLONG:
                if (Number(val) < Number.MIN_SAFE_INTEGER ||
                    Number(val) > Number.MAX_SAFE_INTEGER) {
                    return BigInt(val);
                }
                else {
                    return parseInt(val);
                }
            case mysql_types_ts_1.MYSQL_TYPE_VARCHAR:
            case mysql_types_ts_1.MYSQL_TYPE_VAR_STRING:
            case mysql_types_ts_1.MYSQL_TYPE_STRING:
            case mysql_types_ts_1.MYSQL_TYPE_TIME:
            case mysql_types_ts_1.MYSQL_TYPE_TIME2:
                return val;
            case mysql_types_ts_1.MYSQL_TYPE_DATE:
            case mysql_types_ts_1.MYSQL_TYPE_TIMESTAMP:
            case mysql_types_ts_1.MYSQL_TYPE_DATETIME:
            case mysql_types_ts_1.MYSQL_TYPE_NEWDATE:
            case mysql_types_ts_1.MYSQL_TYPE_TIMESTAMP2:
            case mysql_types_ts_1.MYSQL_TYPE_DATETIME2:
                return new Date(val);
            default:
                return val;
        }
    }
    return {
        setters: [
            function (mysql_types_ts_1_1) {
                mysql_types_ts_1 = mysql_types_ts_1_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/mysql@v2.4.0/src/connection", ["https://deno.land/x/mysql@v2.4.0/deps", "https://deno.land/x/mysql@v2.4.0/src/constant/errors", "https://deno.land/x/mysql@v2.4.0/src/logger", "https://deno.land/x/mysql@v2.4.0/src/packets/builders/auth", "https://deno.land/x/mysql@v2.4.0/src/packets/builders/query", "https://deno.land/x/mysql@v2.4.0/src/packets/packet", "https://deno.land/x/mysql@v2.4.0/src/packets/parsers/err", "https://deno.land/x/mysql@v2.4.0/src/packets/parsers/handshake", "https://deno.land/x/mysql@v2.4.0/src/packets/parsers/result"], function (exports_376, context_376) {
    "use strict";
    var deps_ts_20, errors_ts_2, logger_ts_3, auth_ts_2, query_ts_4, packet_ts_1, err_ts_1, handshake_ts_1, result_ts_1, ConnectionState, Connection;
    var __moduleName = context_376 && context_376.id;
    return {
        setters: [
            function (deps_ts_20_1) {
                deps_ts_20 = deps_ts_20_1;
            },
            function (errors_ts_2_1) {
                errors_ts_2 = errors_ts_2_1;
            },
            function (logger_ts_3_1) {
                logger_ts_3 = logger_ts_3_1;
            },
            function (auth_ts_2_1) {
                auth_ts_2 = auth_ts_2_1;
            },
            function (query_ts_4_1) {
                query_ts_4 = query_ts_4_1;
            },
            function (packet_ts_1_1) {
                packet_ts_1 = packet_ts_1_1;
            },
            function (err_ts_1_1) {
                err_ts_1 = err_ts_1_1;
            },
            function (handshake_ts_1_1) {
                handshake_ts_1 = handshake_ts_1_1;
            },
            function (result_ts_1_1) {
                result_ts_1 = result_ts_1_1;
            }
        ],
        execute: function () {
            (function (ConnectionState) {
                ConnectionState[ConnectionState["CONNECTING"] = 0] = "CONNECTING";
                ConnectionState[ConnectionState["CONNECTED"] = 1] = "CONNECTED";
                ConnectionState[ConnectionState["COLSING"] = 2] = "COLSING";
                ConnectionState[ConnectionState["CLOSED"] = 3] = "CLOSED";
            })(ConnectionState || (ConnectionState = {}));
            exports_376("ConnectionState", ConnectionState);
            Connection = class Connection {
                constructor(client) {
                    this.client = client;
                    this.state = ConnectionState.CONNECTING;
                    this.capabilities = 0;
                    this.serverVersion = "";
                }
                async _connect() {
                    const { hostname, port = 3306 } = this.client.config;
                    logger_ts_3.log.info(`connecting ${hostname}:${port}`);
                    this.conn = await Deno.connect({
                        hostname,
                        port,
                        transport: "tcp",
                    });
                    let receive = await this.nextPacket();
                    const handshakePacket = handshake_ts_1.parseHandshake(receive.body);
                    const data = auth_ts_2.buildAuth(handshakePacket, {
                        username: this.client.config.username ?? "",
                        password: this.client.config.password,
                        db: this.client.config.db,
                    });
                    await new packet_ts_1.SendPacket(data, 0x1).send(this.conn);
                    this.state = ConnectionState.CONNECTING;
                    this.serverVersion = handshakePacket.serverVersion;
                    this.capabilities = handshakePacket.serverCapabilities;
                    receive = await this.nextPacket();
                    const header = receive.body.readUint8();
                    if (header === 0xff) {
                        const error = err_ts_1.parseError(receive.body, this);
                        logger_ts_3.log.error(`connect error(${error.code}): ${error.message}`);
                        this.close();
                        throw new Error(error.message);
                    }
                    else {
                        logger_ts_3.log.info(`connected to ${this.client.config.hostname}`);
                        this.state = ConnectionState.CONNECTED;
                    }
                    if (this.client.config.charset) {
                        await this.execute(`SET NAMES ${this.client.config.charset}`);
                    }
                }
                async connect() {
                    await this._connect();
                }
                async nextPacket() {
                    let eofCount = 0;
                    const timeout = this.client.config.timeout || 1000;
                    while (this.conn) {
                        const packet = await new packet_ts_1.ReceivePacket().parse(this.conn);
                        if (packet) {
                            if (packet.type === "ERR") {
                                packet.body.skip(1);
                                const error = err_ts_1.parseError(packet.body, this);
                                throw new Error(error.message);
                            }
                            return packet;
                        }
                        else {
                            await deps_ts_20.delay(100);
                            if (eofCount++ * 100 >= timeout) {
                                throw new errors_ts_2.ResponseTimeoutError("Read packet timeout");
                            }
                        }
                    }
                    throw new Error("Not connected");
                }
                lessThan57() {
                    const version = this.serverVersion;
                    if (!version.includes("MariaDB"))
                        return version < "5.7.0";
                    const segments = version.split("-");
                    if (segments[1] === "MariaDB")
                        return segments[0] < "5.7.0";
                    return false;
                }
                close() {
                    logger_ts_3.log.info("close connection");
                    this.state = ConnectionState.COLSING;
                    this.conn && this.conn.close();
                    this.state = ConnectionState.CLOSED;
                }
                async query(sql, params) {
                    const result = await this.execute(sql, params);
                    if (result && result.rows) {
                        return result.rows;
                    }
                    else {
                        return result;
                    }
                }
                async execute(sql, params) {
                    if (!this.conn) {
                        throw new Error("Must be connected first");
                    }
                    const data = query_ts_4.buildQuery(sql, params);
                    await new packet_ts_1.SendPacket(data, 0).send(this.conn);
                    let receive = await this.nextPacket();
                    if (receive.type === "OK") {
                        receive.body.skip(1);
                        return {
                            affectedRows: receive.body.readEncodedLen(),
                            lastInsertId: receive.body.readEncodedLen(),
                        };
                    }
                    let fieldCount = receive.body.readEncodedLen();
                    const fields = [];
                    while (fieldCount--) {
                        const packet = await this.nextPacket();
                        if (packet) {
                            const field = result_ts_1.parseField(packet.body);
                            fields.push(field);
                        }
                    }
                    const rows = [];
                    if (this.lessThan57()) {
                        receive = await this.nextPacket();
                    }
                    while (true) {
                        receive = await this.nextPacket();
                        if (receive.type === "EOF") {
                            break;
                        }
                        else {
                            const row = result_ts_1.parseRow(receive.body, fields);
                            rows.push(row);
                        }
                    }
                    return { rows, fields };
                }
            };
            exports_376("Connection", Connection);
        }
    };
});
System.register("https://deno.land/x/mysql@v2.4.0/src/deferred", ["https://deno.land/x/mysql@v2.4.0/deps"], function (exports_377, context_377) {
    "use strict";
    var deps_ts_21, DeferredStack;
    var __moduleName = context_377 && context_377.id;
    return {
        setters: [
            function (deps_ts_21_1) {
                deps_ts_21 = deps_ts_21_1;
            }
        ],
        execute: function () {
            DeferredStack = class DeferredStack {
                constructor(_maxSize, _array = [], creator) {
                    this._maxSize = _maxSize;
                    this._array = _array;
                    this.creator = creator;
                    this._queue = [];
                    this._size = 0;
                    this._size = _array.length;
                }
                get size() {
                    return this._size;
                }
                get maxSize() {
                    return this._maxSize;
                }
                get available() {
                    return this._array.length;
                }
                async pop() {
                    if (this._array.length) {
                        return this._array.pop();
                    }
                    else if (this._size < this._maxSize) {
                        this._size++;
                        const item = await this.creator();
                        return item;
                    }
                    const defer = deps_ts_21.deferred();
                    this._queue.push(defer);
                    await defer;
                    return this._array.pop();
                }
                async push(item) {
                    this._array.push(item);
                    if (this._queue.length) {
                        this._queue.shift().resolve();
                    }
                }
                reduceSize() {
                    this._size--;
                }
            };
            exports_377("DeferredStack", DeferredStack);
        }
    };
});
System.register("https://deno.land/x/mysql@v2.4.0/src/client", ["https://deno.land/x/mysql@v2.4.0/src/connection", "https://deno.land/x/mysql@v2.4.0/src/constant/errors", "https://deno.land/x/mysql@v2.4.0/src/deferred", "https://deno.land/x/mysql@v2.4.0/src/logger"], function (exports_378, context_378) {
    "use strict";
    var connection_ts_4, errors_ts_3, deferred_ts_8, logger_ts_4, Client;
    var __moduleName = context_378 && context_378.id;
    return {
        setters: [
            function (connection_ts_4_1) {
                connection_ts_4 = connection_ts_4_1;
            },
            function (errors_ts_3_1) {
                errors_ts_3 = errors_ts_3_1;
            },
            function (deferred_ts_8_1) {
                deferred_ts_8 = deferred_ts_8_1;
            },
            function (logger_ts_4_1) {
                logger_ts_4 = logger_ts_4_1;
            }
        ],
        execute: function () {
            Client = class Client {
                constructor() {
                    this.config = {};
                    this._connections = [];
                }
                async createConnection() {
                    let connection = new connection_ts_4.Connection(this);
                    await connection.connect();
                    return connection;
                }
                get pool() {
                    if (this._pool) {
                        return {
                            size: this._pool.size,
                            maxSize: this._pool.maxSize,
                            available: this._pool.available,
                        };
                    }
                }
                async connect(config) {
                    this.config = {
                        hostname: "127.0.0.1",
                        username: "root",
                        port: 3306,
                        poolSize: 1,
                        ...config,
                    };
                    Object.freeze(this.config);
                    this._connections = [];
                    this._pool = new deferred_ts_8.DeferredStack(this.config.poolSize || 10, this._connections, this.createConnection.bind(this));
                    return this;
                }
                async query(sql, params) {
                    return await this.useConnection(async (connection) => {
                        return await connection.query(sql, params);
                    });
                }
                async execute(sql, params) {
                    return await this.useConnection(async (connection) => {
                        return await connection.execute(sql, params);
                    });
                }
                async useConnection(fn) {
                    if (!this._pool) {
                        throw new Error("Unconnected");
                    }
                    const connection = await this._pool.pop();
                    try {
                        const result = await fn(connection);
                        this._pool.push(connection);
                        return result;
                    }
                    catch (error) {
                        if (error instanceof errors_ts_3.WriteError ||
                            error instanceof errors_ts_3.ResponseTimeoutError) {
                            this._pool.reduceSize();
                        }
                        else {
                            this._pool.push(connection);
                        }
                        throw error;
                    }
                }
                async transaction(processor) {
                    return await this.useConnection(async (connection) => {
                        try {
                            await connection.execute("BEGIN");
                            const result = await processor(connection);
                            await connection.execute("COMMIT");
                            return result;
                        }
                        catch (error) {
                            logger_ts_4.log.info(`ROLLBACK: ${error.message}`);
                            await connection.execute("ROLLBACK");
                            throw error;
                        }
                    });
                }
                async close() {
                    await Promise.all(this._connections.map((conn) => conn.close()));
                }
            };
            exports_378("Client", Client);
        }
    };
});
System.register("https://deno.land/x/mysql@v2.4.0/mod", ["https://deno.land/x/mysql@v2.4.0/src/client", "https://deno.land/x/mysql@v2.4.0/src/connection"], function (exports_379, context_379) {
    "use strict";
    var __moduleName = context_379 && context_379.id;
    return {
        setters: [
            function (client_ts_3_1) {
                exports_379({
                    "Client": client_ts_3_1["Client"]
                });
            },
            function (connection_ts_5_1) {
                exports_379({
                    "Connection": connection_ts_5_1["Connection"]
                });
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/sqlite@v2.0.0/src/constants", [], function (exports_380, context_380) {
    "use strict";
    var Status, Types, Values;
    var __moduleName = context_380 && context_380.id;
    return {
        setters: [],
        execute: function () {
            (function (Status) {
                Status[Status["Unknown"] = -1] = "Unknown";
                Status[Status["SqliteOk"] = 0] = "SqliteOk";
                Status[Status["SqliteError"] = 1] = "SqliteError";
                Status[Status["SqliteInternal"] = 2] = "SqliteInternal";
                Status[Status["SqlitePerm"] = 3] = "SqlitePerm";
                Status[Status["SqliteAbort"] = 4] = "SqliteAbort";
                Status[Status["SqliteBusy"] = 5] = "SqliteBusy";
                Status[Status["SqliteLocked"] = 6] = "SqliteLocked";
                Status[Status["SqliteNoMem"] = 7] = "SqliteNoMem";
                Status[Status["SqliteReadOnly"] = 8] = "SqliteReadOnly";
                Status[Status["SqliteInterrupt"] = 9] = "SqliteInterrupt";
                Status[Status["SqliteIOErr"] = 10] = "SqliteIOErr";
                Status[Status["SqliteCorrupt"] = 11] = "SqliteCorrupt";
                Status[Status["SqliteNotFound"] = 12] = "SqliteNotFound";
                Status[Status["SqliteFull"] = 13] = "SqliteFull";
                Status[Status["SqliteCantOpen"] = 14] = "SqliteCantOpen";
                Status[Status["SqliteProtocol"] = 15] = "SqliteProtocol";
                Status[Status["SqliteEmpty"] = 16] = "SqliteEmpty";
                Status[Status["SqliteSchema"] = 17] = "SqliteSchema";
                Status[Status["SqliteTooBig"] = 18] = "SqliteTooBig";
                Status[Status["SqliteConstraint"] = 19] = "SqliteConstraint";
                Status[Status["SqliteMismatch"] = 20] = "SqliteMismatch";
                Status[Status["SqliteMisuse"] = 21] = "SqliteMisuse";
                Status[Status["SqliteNoLFS"] = 22] = "SqliteNoLFS";
                Status[Status["SqliteAuth"] = 23] = "SqliteAuth";
                Status[Status["SqliteFormat"] = 24] = "SqliteFormat";
                Status[Status["SqliteRange"] = 25] = "SqliteRange";
                Status[Status["SqliteNotADB"] = 26] = "SqliteNotADB";
                Status[Status["SqliteNotice"] = 27] = "SqliteNotice";
                Status[Status["SqliteWarning"] = 28] = "SqliteWarning";
                Status[Status["SqliteRow"] = 100] = "SqliteRow";
                Status[Status["SqliteDone"] = 101] = "SqliteDone";
            })(Status || (Status = {}));
            exports_380("Status", Status);
            (function (Types) {
                Types[Types["Integer"] = 1] = "Integer";
                Types[Types["Float"] = 2] = "Float";
                Types[Types["Text"] = 3] = "Text";
                Types[Types["Blob"] = 4] = "Blob";
                Types[Types["Null"] = 5] = "Null";
            })(Types || (Types = {}));
            exports_380("Types", Types);
            (function (Values) {
                Values[Values["Error"] = -1] = "Error";
                Values[Values["Null"] = 0] = "Null";
            })(Values || (Values = {}));
            exports_380("Values", Values);
        }
    };
});
System.register("https://deno.land/x/sqlite@v2.0.0/src/error", ["https://deno.land/x/sqlite@v2.0.0/src/constants"], function (exports_381, context_381) {
    "use strict";
    var constants_ts_1, SqliteError;
    var __moduleName = context_381 && context_381.id;
    return {
        setters: [
            function (constants_ts_1_1) {
                constants_ts_1 = constants_ts_1_1;
            }
        ],
        execute: function () {
            SqliteError = class SqliteError extends Error {
                constructor(message, code) {
                    super(message);
                    this.name = "SqliteError";
                    this.code = typeof code === "number" ? code : constants_ts_1.Status.Unknown;
                }
                get codeName() {
                    return constants_ts_1.Status[this.code];
                }
            };
            exports_381("default", SqliteError);
        }
    };
});
System.register("https://deno.land/x/sqlite@v2.0.0/src/wasm", ["https://deno.land/x/sqlite@v2.0.0/src/error"], function (exports_382, context_382) {
    "use strict";
    var error_ts_3;
    var __moduleName = context_382 && context_382.id;
    function setStr(wasm, str, closure) {
        const bytes = new TextEncoder().encode(str);
        const ptr = wasm.malloc(bytes.length + 1);
        if (ptr === 0) {
            throw new error_ts_3.default("Out of memory.");
        }
        const mem = new Uint8Array(wasm.memory.buffer, ptr, bytes.length + 1);
        mem.set(bytes);
        mem[bytes.length] = 0;
        closure(ptr);
        wasm.free(ptr);
    }
    exports_382("setStr", setStr);
    function setArr(wasm, arr, closure) {
        const ptr = wasm.malloc(arr.length);
        if (ptr === 0) {
            throw new error_ts_3.default("Out of memory.");
        }
        const mem = new Uint8Array(wasm.memory.buffer, ptr, arr.length);
        mem.set(arr);
        closure(ptr);
        wasm.free(ptr);
    }
    exports_382("setArr", setArr);
    function getStr(wasm, ptr) {
        const len = wasm.str_len(ptr);
        const bytes = new Uint8Array(wasm.memory.buffer, ptr, len);
        if (len > 16) {
            return new TextDecoder().decode(bytes);
        }
        else {
            let str = "";
            let idx = 0;
            while (idx < len) {
                var u0 = bytes[idx++];
                if (!(u0 & 0x80)) {
                    str += String.fromCharCode(u0);
                    continue;
                }
                var u1 = bytes[idx++] & 63;
                if ((u0 & 0xE0) == 0xC0) {
                    str += String.fromCharCode(((u0 & 31) << 6) | u1);
                    continue;
                }
                var u2 = bytes[idx++] & 63;
                if ((u0 & 0xF0) == 0xE0) {
                    u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
                }
                else {
                    u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (bytes[idx++] & 63);
                }
                if (u0 < 0x10000) {
                    str += String.fromCharCode(u0);
                }
                else {
                    var ch = u0 - 0x10000;
                    str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
                }
            }
            return str;
        }
    }
    exports_382("getStr", getStr);
    return {
        setters: [
            function (error_ts_3_1) {
                error_ts_3 = error_ts_3_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/sqlite@v2.0.0/build/vfs", ["https://deno.land/x/sqlite@v2.0.0/src/wasm"], function (exports_383, context_383) {
    "use strict";
    var wasm_ts_1;
    var __moduleName = context_383 && context_383.id;
    function env(inst) {
        const files = new Map();
        const env = {
            js_print: (str_ptr) => {
                const text = wasm_ts_1.getStr(inst.exports, str_ptr);
                console.log(text[text.length - 1] === "\n" ? text.slice(0, -1) : text);
            },
            js_open: (path_ptr, mode) => {
                let path;
                switch (mode) {
                    case 0:
                        path = wasm_ts_1.getStr(inst.exports, path_ptr);
                        break;
                    case 1:
                        path = Deno.makeTempFileSync({ prefix: "deno_sqlite" });
                        break;
                }
                let rid = Deno.openSync(path, { read: true, write: true, create: true }).rid;
                files.set(rid, path);
                return rid;
            },
            js_close: (rid) => {
                Deno.close(rid);
                files.delete(rid);
            },
            js_delete: (path_ptr) => {
                let path = wasm_ts_1.getStr(inst.exports, path_ptr);
                Deno.removeSync(path);
            },
            js_read: (rid, buffer_ptr, offset, amount) => {
                const buffer = new Uint8Array(inst.exports.memory.buffer, buffer_ptr, amount);
                Deno.seekSync(rid, offset, Deno.SeekMode.Start);
                return Deno.readSync(rid, buffer);
            },
            js_write: (rid, buffer_ptr, offset, amount) => {
                const buffer = new Uint8Array(inst.exports.memory.buffer, buffer_ptr, amount);
                Deno.seekSync(rid, offset, Deno.SeekMode.Start);
                return Deno.writeSync(rid, buffer);
            },
            js_truncate: (rid, size) => {
                Deno.truncateSync(files.get(rid), size);
            },
            js_size: (rid) => {
                return Deno.statSync(files.get(rid)).size;
            },
            js_time: () => {
                return Date.now();
            },
            js_exists: (path_ptr) => {
                const path = wasm_ts_1.getStr(inst.exports, path_ptr);
                try {
                    Deno.statSync(path);
                }
                catch (e) {
                    if (e instanceof Deno.errors.NotFound) {
                        return 0;
                    }
                }
                return 1;
            },
            js_access: (path_ptr) => {
                const path = wasm_ts_1.getStr(inst.exports, path_ptr);
                try {
                    Deno.statSync(path);
                }
                catch (e) {
                    if (e instanceof Deno.errors.PermissionDenied) {
                        return 0;
                    }
                }
                return 1;
            },
        };
        return { env };
    }
    exports_383("default", env);
    return {
        setters: [
            function (wasm_ts_1_1) {
                wasm_ts_1 = wasm_ts_1_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/sqlite@v2.0.0/build/sqlite", ["https://deno.land/x/sqlite@v2.0.0/build/vfs"], function (exports_384, context_384) {
    "use strict";
    var vfs_js_1, wasm, module;
    var __moduleName = context_384 && context_384.id;
    function decode(base64) {
        const bytesStr = window.atob(base64);
        const bytes = new Uint8Array(bytesStr.length);
        for (let i = 0, c = bytesStr.length; i < c; i++) {
            bytes[i] = bytesStr.charCodeAt(i);
        }
        return bytes;
    }
    function instantiate() {
        const placeholder = { exports: null };
        const instance = new WebAssembly.Instance(module, vfs_js_1.default(placeholder));
        placeholder.exports = instance.exports;
        instance.exports.seed_rng(Date.now());
        return instance;
    }
    exports_384("default", instantiate);
    return {
        setters: [
            function (vfs_js_1_1) {
                vfs_js_1 = vfs_js_1_1;
            }
        ],
        execute: function () {
            wasm = "";
            module = new WebAssembly.Module(decode(wasm));
        }
    };
});
System.register("https://deno.land/x/sqlite@v2.0.0/src/rows", ["https://deno.land/x/sqlite@v2.0.0/src/wasm", "https://deno.land/x/sqlite@v2.0.0/src/constants", "https://deno.land/x/sqlite@v2.0.0/src/error"], function (exports_385, context_385) {
    "use strict";
    var wasm_ts_2, constants_ts_2, error_ts_4, Rows, Empty;
    var __moduleName = context_385 && context_385.id;
    return {
        setters: [
            function (wasm_ts_2_1) {
                wasm_ts_2 = wasm_ts_2_1;
            },
            function (constants_ts_2_1) {
                constants_ts_2 = constants_ts_2_1;
            },
            function (error_ts_4_1) {
                error_ts_4 = error_ts_4_1;
            }
        ],
        execute: function () {
            Rows = class Rows {
                constructor(db, stmt) {
                    this._db = db;
                    this._stmt = stmt;
                    this._done = false;
                    if (!this._db) {
                        this._done = true;
                    }
                }
                done() {
                    if (this._done) {
                        return;
                    }
                    this._db._wasm.finalize(this._stmt);
                    this._db._transactions.delete(this);
                    this._done = true;
                }
                next() {
                    if (this._done)
                        return { value: undefined, done: true };
                    const row = this._get();
                    const status = this._db._wasm.step(this._stmt);
                    switch (status) {
                        case constants_ts_2.Status.SqliteRow:
                            break;
                        case constants_ts_2.Status.SqliteDone:
                            this.done();
                            break;
                        default:
                            this.done();
                            throw this._db._error(status);
                            break;
                    }
                    return { value: row, done: false };
                }
                columns() {
                    if (this._done) {
                        throw new error_ts_4.default("Unable to retrieve column names as transaction is finalized.");
                    }
                    const columnCount = this._db._wasm.column_count(this._stmt);
                    const columns = [];
                    for (let i = 0; i < columnCount; i++) {
                        const name = wasm_ts_2.getStr(this._db._wasm, this._db._wasm.column_name(this._stmt, i));
                        const originName = wasm_ts_2.getStr(this._db._wasm, this._db._wasm.column_origin_name(this._stmt, i));
                        const tableName = wasm_ts_2.getStr(this._db._wasm, this._db._wasm.column_table_name(this._stmt, i));
                        columns.push({ name, originName, tableName });
                    }
                    return columns;
                }
                [Symbol.iterator]() {
                    return this;
                }
                _get() {
                    const row = [];
                    for (let i = 0, c = this._db._wasm.column_count(this._stmt); i < c; i++) {
                        switch (this._db._wasm.column_type(this._stmt, i)) {
                            case constants_ts_2.Types.Integer:
                                row.push(this._db._wasm.column_int(this._stmt, i));
                                break;
                            case constants_ts_2.Types.Float:
                                row.push(this._db._wasm.column_double(this._stmt, i));
                                break;
                            case constants_ts_2.Types.Text:
                                row.push(wasm_ts_2.getStr(this._db._wasm, this._db._wasm.column_text(this._stmt, i)));
                                break;
                            case constants_ts_2.Types.Blob:
                                const ptr = this._db._wasm.column_blob(this._stmt, i);
                                if (ptr === 0) {
                                    row.push(null);
                                }
                                else {
                                    const length = this._db._wasm.column_bytes(this._stmt, i);
                                    row.push(new Uint8Array(this._db._wasm.memory.buffer, ptr, length).slice());
                                }
                                break;
                            default:
                                row.push(null);
                                break;
                        }
                    }
                    return row;
                }
            };
            exports_385("Rows", Rows);
            exports_385("Empty", Empty = new Rows(null, constants_ts_2.Values.Null));
        }
    };
});
System.register("https://deno.land/x/sqlite@v2.0.0/src/db", ["https://deno.land/x/sqlite@v2.0.0/build/sqlite", "https://deno.land/x/sqlite@v2.0.0/src/wasm", "https://deno.land/x/sqlite@v2.0.0/src/constants", "https://deno.land/x/sqlite@v2.0.0/src/error", "https://deno.land/x/sqlite@v2.0.0/src/rows"], function (exports_386, context_386) {
    "use strict";
    var sqlite_js_1, wasm_ts_3, constants_ts_3, error_ts_5, rows_ts_1, DB;
    var __moduleName = context_386 && context_386.id;
    return {
        setters: [
            function (sqlite_js_1_1) {
                sqlite_js_1 = sqlite_js_1_1;
            },
            function (wasm_ts_3_1) {
                wasm_ts_3 = wasm_ts_3_1;
            },
            function (constants_ts_3_1) {
                constants_ts_3 = constants_ts_3_1;
            },
            function (error_ts_5_1) {
                error_ts_5 = error_ts_5_1;
            },
            function (rows_ts_1_1) {
                rows_ts_1 = rows_ts_1_1;
            }
        ],
        execute: function () {
            DB = class DB {
                constructor(path = ":memory:") {
                    this._wasm = sqlite_js_1.default().exports;
                    this._open = false;
                    this._transactions = new Set();
                    let status;
                    wasm_ts_3.setStr(this._wasm, path, (ptr) => {
                        status = this._wasm.open(ptr);
                    });
                    if (status !== constants_ts_3.Status.SqliteOk) {
                        throw this._error();
                    }
                    this._open = true;
                }
                query(sql, values) {
                    if (!this._open) {
                        throw new error_ts_5.default("Database was closed.");
                    }
                    let stmt = constants_ts_3.Values.Null;
                    wasm_ts_3.setStr(this._wasm, sql, (ptr) => {
                        stmt = this._wasm.prepare(ptr);
                    });
                    if (stmt === constants_ts_3.Values.Null) {
                        throw this._error();
                    }
                    let parameters = [];
                    if (Array.isArray(values)) {
                        parameters = values;
                    }
                    else if (typeof values === "object") {
                        for (const key of Object.keys(values)) {
                            let idx = constants_ts_3.Values.Error;
                            let name = key;
                            if (name[0] !== ":" && name[0] !== "@" && name[0] !== "$") {
                                name = `:${name}`;
                            }
                            wasm_ts_3.setStr(this._wasm, name, (ptr) => {
                                idx = this._wasm.bind_parameter_index(stmt, ptr);
                            });
                            if (idx === constants_ts_3.Values.Error) {
                                this._wasm.finalize(stmt);
                                throw new error_ts_5.default(`No parameter named '${name}'.`);
                            }
                            parameters[idx - 1] = values[key];
                        }
                    }
                    for (let i = 0; i < parameters.length; i++) {
                        let value = parameters[i];
                        let status;
                        switch (typeof value) {
                            case "boolean":
                                value = value ? 1 : 0;
                            case "number":
                                if (Math.floor(value) === value) {
                                    status = this._wasm.bind_int(stmt, i + 1, value);
                                }
                                else {
                                    status = this._wasm.bind_double(stmt, i + 1, value);
                                }
                                break;
                            case "string":
                                wasm_ts_3.setStr(this._wasm, value, (ptr) => {
                                    status = this._wasm.bind_text(stmt, i + 1, ptr);
                                });
                                break;
                            default:
                                if (value instanceof Date) {
                                    wasm_ts_3.setStr(this._wasm, value.toISOString(), (ptr) => {
                                        status = this._wasm.bind_text(stmt, i + 1, ptr);
                                    });
                                }
                                else if (value instanceof Uint8Array) {
                                    wasm_ts_3.setArr(this._wasm, value, (ptr) => {
                                        status = this._wasm.bind_blob(stmt, i + 1, ptr, value.length);
                                    });
                                }
                                else if (value === null || value === undefined) {
                                    status = this._wasm.bind_null(stmt, i + 1);
                                }
                                else {
                                    this._wasm.finalize(stmt);
                                    throw new error_ts_5.default(`Can not bind ${typeof value}.`);
                                }
                                break;
                        }
                        if (status !== constants_ts_3.Status.SqliteOk) {
                            this._wasm.finalize(stmt);
                            throw this._error(status);
                        }
                    }
                    const status = this._wasm.step(stmt);
                    switch (status) {
                        case constants_ts_3.Status.SqliteDone:
                            this._wasm.finalize(stmt);
                            return rows_ts_1.Empty;
                            break;
                        case constants_ts_3.Status.SqliteRow:
                            const transaction = new rows_ts_1.Rows(this, stmt);
                            this._transactions.add(transaction);
                            return transaction;
                            break;
                        default:
                            this._wasm.finalize(stmt);
                            throw this._error(status);
                            break;
                    }
                }
                close(force = false) {
                    if (!this._open) {
                        return;
                    }
                    if (force) {
                        for (const transaction of this._transactions) {
                            transaction.done();
                        }
                    }
                    if (this._wasm.close() !== constants_ts_3.Status.SqliteOk) {
                        throw this._error();
                    }
                    this._open = false;
                }
                _error(code) {
                    if (code === undefined) {
                        code = this._wasm.get_status();
                    }
                    const msg = wasm_ts_3.getStr(this._wasm, this._wasm.get_sqlite_error_str());
                    return new error_ts_5.default(msg, code);
                }
            };
            exports_386("DB", DB);
        }
    };
});
System.register("https://deno.land/x/sqlite@v2.0.0/mod", ["https://deno.land/x/sqlite@v2.0.0/src/db", "https://deno.land/x/sqlite@v2.0.0/src/rows", "https://deno.land/x/sqlite@v2.0.0/src/constants"], function (exports_387, context_387) {
    "use strict";
    var __moduleName = context_387 && context_387.id;
    return {
        setters: [
            function (db_ts_2_1) {
                exports_387({
                    "DB": db_ts_2_1["DB"]
                });
            },
            function (rows_ts_2_1) {
                exports_387({
                    "Empty": rows_ts_2_1["Empty"]
                });
            },
            function (constants_ts_4_1) {
                exports_387({
                    "Status": constants_ts_4_1["Status"]
                });
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/denodb@v1.0.7/deps", ["https://deno.land/x/colorlog@v1.0/mod", "https://raw.githubusercontent.com/denjucks/dex/master/mod", "https://deno.land/x/case@v2.1.0/mod", "https://deno.land/x/postgres@v0.4.3/mod", "https://deno.land/x/mysql@v2.4.0/mod", "https://deno.land/x/sqlite@v2.0.0/mod"], function (exports_388, context_388) {
    "use strict";
    var __moduleName = context_388 && context_388.id;
    return {
        setters: [
            function (ConsoleColor_1) {
                exports_388("ConsoleColor", ConsoleColor_1);
            },
            function (mod_ts_44_1) {
                exports_388({
                    "SQLQueryBuilder": mod_ts_44_1["default"]
                });
            },
            function (mod_ts_45_1) {
                exports_388({
                    "camelCase": mod_ts_45_1["camelCase"],
                    "snakeCase": mod_ts_45_1["snakeCase"]
                });
            },
            function (mod_ts_46_1) {
                exports_388({
                    "PostgresClient": mod_ts_46_1["Client"]
                });
            },
            function (mod_ts_47_1) {
                exports_388({
                    "MySQLClient": mod_ts_47_1["Client"],
                    "MySQLConnection": mod_ts_47_1["Connection"]
                });
            },
            function (mod_ts_48_1) {
                exports_388({
                    "SQLiteClient": mod_ts_48_1["DB"]
                });
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/denodb@v1.0.7/lib/query-builder", ["https://deno.land/x/denodb@v1.0.7/lib/model"], function (exports_389, context_389) {
    "use strict";
    var model_ts_1, QueryBuilder;
    var __moduleName = context_389 && context_389.id;
    return {
        setters: [
            function (model_ts_1_1) {
                model_ts_1 = model_ts_1_1;
            }
        ],
        execute: function () {
            QueryBuilder = class QueryBuilder {
                constructor() {
                    this._query = { schema: model_ts_1.Model };
                }
                queryForSchema(schema) {
                    return new QueryBuilder().schema(schema);
                }
                schema(schema) {
                    this._query.schema = schema;
                    return this;
                }
                toDescription() {
                    return this._query;
                }
                table(table) {
                    this._query.table = table;
                    return this;
                }
                get() {
                    this._query.type = "select";
                    return this;
                }
                all() {
                    return this.get();
                }
                createTable(fields, fieldsDefaults, { withTimestamps, ifNotExists, }) {
                    this._query.type = "create";
                    this._query.ifExists = ifNotExists ? false : true;
                    this._query.fields = fields;
                    this._query.fieldsDefaults = fieldsDefaults;
                    this._query.timestamps = withTimestamps;
                    return this;
                }
                dropIfExists() {
                    this._query.type = "drop";
                    this._query.ifExists = true;
                    return this;
                }
                select(...fields) {
                    this._query.select = fields;
                    return this;
                }
                create(values) {
                    this._query.type = "insert";
                    this._query.values = values;
                    return this;
                }
                find(field, possibleValues) {
                    this._query.type = "select";
                    this._query.whereIn = {
                        field,
                        possibleValues,
                    };
                    return this;
                }
                orderBy(field, orderDirection) {
                    if (!this._query.orderBy) {
                        this._query.orderBy = {};
                    }
                    this._query.orderBy[field] = orderDirection;
                    return this;
                }
                groupBy(field) {
                    this._query.groupBy = field;
                    return this;
                }
                limit(limit) {
                    this._query.limit = limit;
                    return this;
                }
                offset(offset) {
                    this._query.offset = offset;
                    return this;
                }
                where(field, operator, value) {
                    if (!this._query.wheres) {
                        this._query.wheres = [];
                    }
                    const whereClause = {
                        field,
                        operator,
                        value,
                    };
                    const existingWhereForFieldIndex = this._query.wheres.findIndex((where) => where.field === field);
                    if (existingWhereForFieldIndex === -1) {
                        this._query.wheres.push(whereClause);
                    }
                    else {
                        this._query.wheres[existingWhereForFieldIndex] = whereClause;
                    }
                    return this;
                }
                update(values) {
                    this._query.type = "update";
                    this._query.values = values;
                    return this;
                }
                delete() {
                    this._query.type = "delete";
                    return this;
                }
                join(joinTable, originField, targetField) {
                    if (!this._query.joins) {
                        this._query.joins = [];
                    }
                    this._query.joins.push({
                        joinTable,
                        originField,
                        targetField,
                    });
                    return this;
                }
                count(field) {
                    this._query.type = "count";
                    this._query.aggregatorField = field;
                    return this;
                }
                min(field) {
                    this._query.type = "min";
                    this._query.aggregatorField = field;
                    return this;
                }
                max(field) {
                    this._query.type = "max";
                    this._query.aggregatorField = field;
                    return this;
                }
                sum(field) {
                    this._query.type = "sum";
                    this._query.aggregatorField = field;
                    return this;
                }
                avg(field) {
                    this._query.type = "avg";
                    this._query.aggregatorField = field;
                    return this;
                }
            };
            exports_389("QueryBuilder", QueryBuilder);
        }
    };
});
System.register("https://deno.land/x/denodb@v1.0.7/lib/connectors/connector", [], function (exports_390, context_390) {
    "use strict";
    var __moduleName = context_390 && context_390.id;
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/denodb@v1.0.7/lib/translators/translator", [], function (exports_391, context_391) {
    "use strict";
    var Translator;
    var __moduleName = context_391 && context_391.id;
    return {
        setters: [],
        execute: function () {
            Translator = class Translator {
                translateToQuery(query) {
                    return "";
                }
                formatFieldNameToDatabase(fieldName) {
                    return fieldName;
                }
            };
            exports_391("Translator", Translator);
        }
    };
});
System.register("https://deno.land/x/denodb@v1.0.7/lib/helpers/fields", [], function (exports_392, context_392) {
    "use strict";
    var __moduleName = context_392 && context_392.id;
    function addFieldToSchema(table, fieldOptions) {
        const type = typeof fieldOptions.type === "string"
            ? fieldOptions.type
            : fieldOptions.type.type;
        let instruction;
        if (typeof fieldOptions.type === "object") {
            if (fieldOptions.type.relationship) {
                const relationshipPKName = fieldOptions.type.relationship.model
                    .getComputedPrimaryKey();
                const relationshipPKType = fieldOptions.type.relationship.model
                    .getComputedPrimaryType();
                table[relationshipPKType](fieldOptions.name);
                table
                    .foreign(fieldOptions.name)
                    .references(fieldOptions.type.relationship.model
                    .field(relationshipPKName))
                    .onDelete("CASCADE");
                return;
            }
            const fieldNameArgs = [
                fieldOptions.name,
            ];
            if (fieldOptions.type.length) {
                fieldNameArgs.push(fieldOptions.type.length);
            }
            if (fieldOptions.type.precision) {
                fieldNameArgs.push(fieldOptions.type.precision);
            }
            if (fieldOptions.type.scale) {
                fieldNameArgs.push(fieldOptions.type.scale);
            }
            if (fieldOptions.type.values) {
                fieldNameArgs.push(fieldOptions.type.values);
            }
            if (fieldOptions.type.autoIncrement) {
                instruction = table.increments(fieldOptions.name);
            }
            else {
                instruction = table[type](...fieldNameArgs);
            }
            if (fieldOptions.type.primaryKey) {
                instruction = instruction.primary(fieldOptions.name);
            }
            if (fieldOptions.type.unique) {
                instruction = instruction.unique(fieldOptions.name);
            }
            if (!fieldOptions.type.allowNull) {
                instruction = instruction.notNullable();
            }
        }
        else {
            instruction = table[type](fieldOptions.name);
        }
        if (typeof fieldOptions.defaultValue !== "undefined") {
            instruction.defaultTo(fieldOptions.defaultValue);
        }
    }
    exports_392("addFieldToSchema", addFieldToSchema);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/denodb@v1.0.7/lib/translators/sql-translator", ["https://deno.land/x/denodb@v1.0.7/lib/translators/translator", "https://deno.land/x/denodb@v1.0.7/deps", "https://deno.land/x/denodb@v1.0.7/lib/helpers/fields"], function (exports_393, context_393) {
    "use strict";
    var translator_ts_1, deps_ts_22, fields_ts_1, SQLTranslator;
    var __moduleName = context_393 && context_393.id;
    return {
        setters: [
            function (translator_ts_1_1) {
                translator_ts_1 = translator_ts_1_1;
            },
            function (deps_ts_22_1) {
                deps_ts_22 = deps_ts_22_1;
            },
            function (fields_ts_1_1) {
                fields_ts_1 = fields_ts_1_1;
            }
        ],
        execute: function () {
            SQLTranslator = class SQLTranslator extends translator_ts_1.Translator {
                constructor(dialect) {
                    super();
                    this._dialect = dialect;
                }
                translateToQuery(query) {
                    let queryBuilder = new deps_ts_22.SQLQueryBuilder({
                        client: this._dialect,
                        useNullAsDefault: this._dialect === "sqlite3",
                        log: {
                            warn(message) {
                            },
                        },
                    });
                    if (query.table && query.type !== "drop" && query.type !== "create") {
                        queryBuilder = queryBuilder.table(query.table);
                    }
                    if (query.select) {
                        query.select.forEach((field) => {
                            queryBuilder = queryBuilder.select(field);
                        });
                    }
                    if (query.whereIn) {
                        queryBuilder = queryBuilder.whereIn(query.whereIn.field, query.whereIn.possibleValues);
                    }
                    if (query.orderBy) {
                        queryBuilder = queryBuilder.orderBy(Object.entries(query.orderBy).map(([field, orderDirection]) => ({
                            column: field,
                            order: orderDirection,
                        })));
                    }
                    if (query.groupBy) {
                        queryBuilder = queryBuilder.groupBy(query.groupBy);
                    }
                    if (query.limit) {
                        queryBuilder = queryBuilder.limit(query.limit);
                    }
                    if (query.offset) {
                        queryBuilder = queryBuilder.offset(query.offset);
                    }
                    if (query.wheres) {
                        query.wheres.forEach((where) => {
                            queryBuilder = queryBuilder.where(where.field, where.operator, where.value);
                        });
                    }
                    if (query.joins) {
                        query.joins.forEach((join) => {
                            queryBuilder = queryBuilder.join(join.joinTable, join.originField, "=", join.targetField);
                        });
                    }
                    switch (query.type) {
                        case "drop":
                            const dropTableHelper = query.ifExists
                                ? "dropTableIfExists"
                                : "dropTable";
                            queryBuilder = queryBuilder.schema[dropTableHelper](query.table);
                            break;
                        case "create":
                            if (!query.fields) {
                                throw new Error("Fields were not provided for creating a new instance.");
                            }
                            const createTableHelper = query.ifExists
                                ? "createTable"
                                : "createTableIfNotExists";
                            queryBuilder = queryBuilder.schema[createTableHelper](query.table, (table) => {
                                const fieldDefaults = query.fieldsDefaults ?? {};
                                for (const [field, fieldType] of Object.entries(query.fields)) {
                                    fields_ts_1.addFieldToSchema(table, {
                                        name: field,
                                        type: fieldType,
                                        defaultValue: fieldDefaults[field],
                                    });
                                }
                                if (query.timestamps) {
                                    table.timestamps(null, true);
                                }
                            });
                            break;
                        case "insert":
                            if (!query.values) {
                                throw new Error("Trying to make an insert query, but no values were provided.");
                            }
                            queryBuilder = queryBuilder.returning("*").insert(query.values);
                            break;
                        case "update":
                            if (!query.values) {
                                throw new Error("Trying to make an update query, but no values were provided.");
                            }
                            queryBuilder = queryBuilder.update(query.values);
                            break;
                        case "delete":
                            queryBuilder = queryBuilder.del();
                            break;
                        case "count":
                            queryBuilder = queryBuilder.count(query.aggregatorField ? query.aggregatorField : "*");
                            break;
                        case "avg":
                            queryBuilder = queryBuilder.avg(query.aggregatorField ? query.aggregatorField : "*");
                            break;
                        case "min":
                            queryBuilder = queryBuilder.min(query.aggregatorField ? query.aggregatorField : "*");
                            break;
                        case "max":
                            queryBuilder = queryBuilder.max(query.aggregatorField ? query.aggregatorField : "*");
                            break;
                        case "sum":
                            queryBuilder = queryBuilder.sum(query.aggregatorField ? query.aggregatorField : "*");
                            break;
                    }
                    return queryBuilder.toString();
                }
                formatFieldNameToDatabase(fieldName) {
                    if (typeof fieldName === "string") {
                        const dotIndex = fieldName.indexOf(".");
                        if (dotIndex !== -1) {
                            return fieldName.slice(0, dotIndex + 1) +
                                deps_ts_22.snakeCase(fieldName.slice(dotIndex + 1));
                        }
                        return deps_ts_22.snakeCase(fieldName);
                    }
                    else {
                        return Object.entries(fieldName).reduce((prev, [alias, fullName]) => {
                            return {
                                ...prev,
                                [alias]: this.formatFieldNameToDatabase(fullName),
                            };
                        }, {});
                    }
                }
            };
            exports_393("SQLTranslator", SQLTranslator);
        }
    };
});
System.register("https://deno.land/x/denodb@v1.0.7/lib/connectors/postgres-connector", ["https://deno.land/x/denodb@v1.0.7/deps", "https://deno.land/x/denodb@v1.0.7/lib/translators/sql-translator"], function (exports_394, context_394) {
    "use strict";
    var deps_ts_23, sql_translator_ts_1, PostgresConnector;
    var __moduleName = context_394 && context_394.id;
    return {
        setters: [
            function (deps_ts_23_1) {
                deps_ts_23 = deps_ts_23_1;
            },
            function (sql_translator_ts_1_1) {
                sql_translator_ts_1 = sql_translator_ts_1_1;
            }
        ],
        execute: function () {
            PostgresConnector = class PostgresConnector {
                constructor(options) {
                    this._connected = false;
                    this._options = options;
                    this._client = new deps_ts_23.PostgresClient({
                        hostname: options.host,
                        user: options.username,
                        password: options.password,
                        database: options.database,
                        port: options.port ?? 5432,
                    });
                    this._translator = new sql_translator_ts_1.SQLTranslator("postgres");
                }
                async _makeConnection() {
                    if (this._connected) {
                        return;
                    }
                    await this._client.connect();
                    this._connected = true;
                }
                async ping() {
                    await this._makeConnection();
                    try {
                        const [{ result }] = (await this._client.query("SELECT 1 + 1 as result")).rowsOfObjects();
                        return result === 2;
                    }
                    catch (error) {
                        return false;
                    }
                }
                async query(queryDescription) {
                    await this._makeConnection();
                    const query = this._translator.translateToQuery(queryDescription);
                    const response = await this._client.query(query);
                    const results = response.rowsOfObjects();
                    if (queryDescription.type === "insert") {
                        return results.length === 1 ? results[0] : results;
                    }
                    return results;
                }
                async close() {
                    if (!this._connected) {
                        return;
                    }
                    await this._client.end();
                    this._connected = false;
                }
            };
            exports_394("PostgresConnector", PostgresConnector);
        }
    };
});
System.register("https://deno.land/x/denodb@v1.0.7/lib/connectors/sqlite3-connector", ["https://deno.land/x/denodb@v1.0.7/deps", "https://deno.land/x/denodb@v1.0.7/lib/translators/sql-translator"], function (exports_395, context_395) {
    "use strict";
    var deps_ts_24, sql_translator_ts_2, SQLite3Connector;
    var __moduleName = context_395 && context_395.id;
    return {
        setters: [
            function (deps_ts_24_1) {
                deps_ts_24 = deps_ts_24_1;
            },
            function (sql_translator_ts_2_1) {
                sql_translator_ts_2 = sql_translator_ts_2_1;
            }
        ],
        execute: function () {
            SQLite3Connector = class SQLite3Connector {
                constructor(options) {
                    this._connected = false;
                    this._options = options;
                    this._client = new deps_ts_24.SQLiteClient(this._options.filepath);
                    this._translator = new sql_translator_ts_2.SQLTranslator("sqlite3");
                }
                async _makeConnection() {
                    if (this._connected) {
                        return;
                    }
                    this._connected = true;
                }
                async ping() {
                    await this._makeConnection();
                    try {
                        let connected = false;
                        for (const [result] of this._client.query("SELECT 1 + 1")) {
                            connected = result === 2;
                        }
                        return connected;
                    }
                    catch (error) {
                        return false;
                    }
                }
                async query(queryDescription) {
                    await this._makeConnection();
                    const query = this._translator.translateToQuery(queryDescription);
                    const subqueries = query.split(";");
                    const results = subqueries.map(async (subquery, index) => {
                        const response = this._client.query(subquery + ";", []);
                        if (index < subqueries.length - 1) {
                            response.done();
                            return [];
                        }
                        const results = [];
                        let columns;
                        try {
                            columns = response.columns();
                        }
                        catch (error) {
                            if ((queryDescription.type === "insert" ||
                                queryDescription.type === "update") &&
                                queryDescription.values) {
                                if (Array.isArray(queryDescription.values)) {
                                    return await Promise.all(queryDescription.values.map((values) => queryDescription.schema.where(values).first()));
                                }
                                return queryDescription.schema.where(queryDescription.values).first();
                            }
                            return [];
                        }
                        for (const row of response) {
                            const result = {};
                            let i = 0;
                            for (const column of row) {
                                const columnName = columns[i].name;
                                if (columnName === "count(*)") {
                                    result.count = column;
                                }
                                else if (columnName.startsWith("max(")) {
                                    result.max = column;
                                }
                                else if (columnName.startsWith("min(")) {
                                    result.min = column;
                                }
                                else if (columnName.startsWith("sum(")) {
                                    result.sum = column;
                                }
                                else if (columnName.startsWith("avg(")) {
                                    result.avg = column;
                                }
                                else {
                                    result[columns[i].name] = column;
                                }
                                i++;
                            }
                            results.push(result);
                        }
                        return results;
                    });
                    return results[results.length - 1];
                }
                async close() {
                    if (!this._connected) {
                        return;
                    }
                    this._client.close();
                    this._connected = false;
                }
            };
            exports_395("SQLite3Connector", SQLite3Connector);
        }
    };
});
System.register("https://deno.land/x/denodb@v1.0.7/lib/connectors/mysql-connector", ["https://deno.land/x/denodb@v1.0.7/deps", "https://deno.land/x/denodb@v1.0.7/lib/translators/sql-translator"], function (exports_396, context_396) {
    "use strict";
    var deps_ts_25, sql_translator_ts_3, MySQLConnector;
    var __moduleName = context_396 && context_396.id;
    return {
        setters: [
            function (deps_ts_25_1) {
                deps_ts_25 = deps_ts_25_1;
            },
            function (sql_translator_ts_3_1) {
                sql_translator_ts_3 = sql_translator_ts_3_1;
            }
        ],
        execute: function () {
            MySQLConnector = class MySQLConnector {
                constructor(options) {
                    this._connected = false;
                    this._options = options;
                    this._client = new deps_ts_25.MySQLClient();
                    this._translator = new sql_translator_ts_3.SQLTranslator("mysql");
                }
                async _makeConnection() {
                    if (this._connected) {
                        return;
                    }
                    await this._client.connect({
                        hostname: this._options.host,
                        username: this._options.username,
                        db: this._options.database,
                        password: this._options.password,
                        port: this._options.port ?? 3306,
                    });
                    this._connected = true;
                }
                async ping() {
                    await this._makeConnection();
                    try {
                        const [{ result }] = await this._client.query("SELECT 1 + 1 as result");
                        return result === 2;
                    }
                    catch (error) {
                        return false;
                    }
                }
                async query(queryDescription, client) {
                    await this._makeConnection();
                    const queryClient = client ?? this._client;
                    const query = this._translator.translateToQuery(queryDescription);
                    const subqueries = query.split(";");
                    const queryMethod = query.toLowerCase().startsWith("select")
                        ? "query"
                        : "execute";
                    for (let i = 0; i < subqueries.length; i++) {
                        const result = await queryClient[queryMethod](subqueries[i]);
                        if (i === subqueries.length - 1) {
                            return result;
                        }
                    }
                }
                async transaction(queries) {
                    if (queries.length === 0) {
                        return [];
                    }
                    const results = await this._client.transaction(async (transaction) => {
                        const lastQuery = queries.pop();
                        for (const query of queries) {
                            await this.query(query, transaction);
                        }
                        return this.query(lastQuery, transaction);
                    });
                    return results;
                }
                async close() {
                    if (!this._connected) {
                        return;
                    }
                    await this._client.close();
                    this._connected = false;
                }
            };
            exports_396("MySQLConnector", MySQLConnector);
        }
    };
});
System.register("https://raw.githubusercontent.com/eveningkid/deno_mongo/master/ts/types", [], function (exports_397, context_397) {
    "use strict";
    var CommandType;
    var __moduleName = context_397 && context_397.id;
    function ObjectId($oid) {
        const isLegal = /^[0-9a-fA-F]{24}$/.test($oid);
        if (!isLegal) {
            throw new Error(`ObjectId("${$oid}") is not legal.`);
        }
        return { $oid };
    }
    exports_397("ObjectId", ObjectId);
    return {
        setters: [],
        execute: function () {
            (function (CommandType) {
                CommandType["ConnectWithUri"] = "ConnectWithUri";
                CommandType["ConnectWithOptions"] = "ConnectWithOptions";
                CommandType["Close"] = "Close";
                CommandType["ListDatabases"] = "ListDatabases";
                CommandType["ListCollectionNames"] = "ListCollectionNames";
                CommandType["Find"] = "Find";
                CommandType["InsertOne"] = "InsertOne";
                CommandType["InsertMany"] = "InsertMany";
                CommandType["Delete"] = "Delete";
                CommandType["Update"] = "Update";
                CommandType["Aggregate"] = "Aggregate";
                CommandType["Count"] = "Count";
                CommandType["CreateIndexes"] = "CreateIndexes";
                CommandType["Distinct"] = "Distinct";
            })(CommandType || (CommandType = {}));
            exports_397("CommandType", CommandType);
        }
    };
});
System.register("https://raw.githubusercontent.com/eveningkid/deno_mongo/master/ts/result", [], function (exports_398, context_398) {
    "use strict";
    var __moduleName = context_398 && context_398.id;
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://raw.githubusercontent.com/eveningkid/deno_mongo/master/ts/type_convert", [], function (exports_399, context_399) {
    "use strict";
    var __moduleName = context_399 && context_399.id;
    function convert(data) {
        if (data instanceof Array) {
            return data.map((item) => convert(item));
        }
        if (data instanceof Date) {
            return { $date: { $numberLong: data.getTime() } };
        }
        if (data instanceof Map) {
            return convert(Object.fromEntries(data));
        }
        if (data instanceof Object) {
            Object.keys(data).forEach((key) => {
                data[key] = convert(data[key]);
            });
            return data;
        }
        return data;
    }
    exports_399("convert", convert);
    function parse(data) {
        if (data instanceof Array) {
            return data.map((item) => parse(item));
        }
        if (data && typeof data === "object") {
            if (data.$date && data.$date.$numberLong) {
                return new Date(data.$date.$numberLong);
            }
            Object.keys(data).forEach((key) => {
                data[key] = parse(data[key]);
            });
            return data;
        }
        return data;
    }
    exports_399("parse", parse);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/std@0.63.0/fs/exists", [], function (exports_400, context_400) {
    "use strict";
    var __moduleName = context_400 && context_400.id;
    async function exists(filePath) {
        try {
            await Deno.lstat(filePath);
            return true;
        }
        catch (err) {
            if (err instanceof Deno.errors.NotFound) {
                return false;
            }
            throw err;
        }
    }
    exports_400("exists", exists);
    function existsSync(filePath) {
        try {
            Deno.lstatSync(filePath);
            return true;
        }
        catch (err) {
            if (err instanceof Deno.errors.NotFound) {
                return false;
            }
            throw err;
        }
    }
    exports_400("existsSync", existsSync);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/std@0.63.0/log/levels", [], function (exports_401, context_401) {
    "use strict";
    var LogLevels, LogLevelNames, byLevel;
    var __moduleName = context_401 && context_401.id;
    function getLevelByName(name) {
        switch (name) {
            case "NOTSET":
                return LogLevels.NOTSET;
            case "DEBUG":
                return LogLevels.DEBUG;
            case "INFO":
                return LogLevels.INFO;
            case "WARNING":
                return LogLevels.WARNING;
            case "ERROR":
                return LogLevels.ERROR;
            case "CRITICAL":
                return LogLevels.CRITICAL;
            default:
                throw new Error(`no log level found for "${name}"`);
        }
    }
    exports_401("getLevelByName", getLevelByName);
    function getLevelName(level) {
        const levelName = byLevel[level];
        if (levelName) {
            return levelName;
        }
        throw new Error(`no level name found for level: ${level}`);
    }
    exports_401("getLevelName", getLevelName);
    return {
        setters: [],
        execute: function () {
            (function (LogLevels) {
                LogLevels[LogLevels["NOTSET"] = 0] = "NOTSET";
                LogLevels[LogLevels["DEBUG"] = 10] = "DEBUG";
                LogLevels[LogLevels["INFO"] = 20] = "INFO";
                LogLevels[LogLevels["WARNING"] = 30] = "WARNING";
                LogLevels[LogLevels["ERROR"] = 40] = "ERROR";
                LogLevels[LogLevels["CRITICAL"] = 50] = "CRITICAL";
            })(LogLevels || (LogLevels = {}));
            exports_401("LogLevels", LogLevels);
            exports_401("LogLevelNames", LogLevelNames = Object.keys(LogLevels).filter((key) => isNaN(Number(key))));
            byLevel = {
                [String(LogLevels.NOTSET)]: "NOTSET",
                [String(LogLevels.DEBUG)]: "DEBUG",
                [String(LogLevels.INFO)]: "INFO",
                [String(LogLevels.WARNING)]: "WARNING",
                [String(LogLevels.ERROR)]: "ERROR",
                [String(LogLevels.CRITICAL)]: "CRITICAL",
            };
        }
    };
});
System.register("https://deno.land/std@0.63.0/log/handlers", ["https://deno.land/std@0.63.0/log/levels", "https://deno.land/std@0.63.0/fmt/colors", "https://deno.land/std@0.63.0/fs/exists", "https://deno.land/std@0.63.0/io/bufio"], function (exports_402, context_402) {
    "use strict";
    var levels_ts_4, colors_ts_4, exists_ts_2, bufio_ts_5, DEFAULT_FORMATTER, BaseHandler, ConsoleHandler, WriterHandler, FileHandler, RotatingFileHandler;
    var __moduleName = context_402 && context_402.id;
    return {
        setters: [
            function (levels_ts_4_1) {
                levels_ts_4 = levels_ts_4_1;
            },
            function (colors_ts_4_1) {
                colors_ts_4 = colors_ts_4_1;
            },
            function (exists_ts_2_1) {
                exists_ts_2 = exists_ts_2_1;
            },
            function (bufio_ts_5_1) {
                bufio_ts_5 = bufio_ts_5_1;
            }
        ],
        execute: function () {
            DEFAULT_FORMATTER = "{levelName} {msg}";
            BaseHandler = class BaseHandler {
                constructor(levelName, options = {}) {
                    this.level = levels_ts_4.getLevelByName(levelName);
                    this.levelName = levelName;
                    this.formatter = options.formatter || DEFAULT_FORMATTER;
                }
                handle(logRecord) {
                    if (this.level > logRecord.level)
                        return;
                    const msg = this.format(logRecord);
                    return this.log(msg);
                }
                format(logRecord) {
                    if (this.formatter instanceof Function) {
                        return this.formatter(logRecord);
                    }
                    return this.formatter.replace(/{(\S+)}/g, (match, p1) => {
                        const value = logRecord[p1];
                        if (value == null) {
                            return match;
                        }
                        return String(value);
                    });
                }
                log(_msg) { }
                async setup() { }
                async destroy() { }
            };
            exports_402("BaseHandler", BaseHandler);
            ConsoleHandler = class ConsoleHandler extends BaseHandler {
                format(logRecord) {
                    let msg = super.format(logRecord);
                    switch (logRecord.level) {
                        case levels_ts_4.LogLevels.INFO:
                            msg = colors_ts_4.blue(msg);
                            break;
                        case levels_ts_4.LogLevels.WARNING:
                            msg = colors_ts_4.yellow(msg);
                            break;
                        case levels_ts_4.LogLevels.ERROR:
                            msg = colors_ts_4.red(msg);
                            break;
                        case levels_ts_4.LogLevels.CRITICAL:
                            msg = colors_ts_4.bold(colors_ts_4.red(msg));
                            break;
                        default:
                            break;
                    }
                    return msg;
                }
                log(msg) {
                    console.log(msg);
                }
            };
            exports_402("ConsoleHandler", ConsoleHandler);
            WriterHandler = class WriterHandler extends BaseHandler {
                constructor() {
                    super(...arguments);
                    this.#encoder = new TextEncoder();
                }
                #encoder;
            };
            exports_402("WriterHandler", WriterHandler);
            FileHandler = class FileHandler extends WriterHandler {
                constructor(levelName, options) {
                    super(levelName, options);
                    this._encoder = new TextEncoder();
                    this.#unloadCallback = () => this.destroy();
                    this._filename = options.filename;
                    this._mode = options.mode ? options.mode : "a";
                    this._openOptions = {
                        createNew: this._mode === "x",
                        create: this._mode !== "x",
                        append: this._mode === "a",
                        truncate: this._mode !== "a",
                        write: true,
                    };
                }
                #unloadCallback;
                async setup() {
                    this._file = await Deno.open(this._filename, this._openOptions);
                    this._writer = this._file;
                    this._buf = new bufio_ts_5.BufWriterSync(this._file);
                    addEventListener("unload", this.#unloadCallback);
                }
                handle(logRecord) {
                    super.handle(logRecord);
                    if (logRecord.level > levels_ts_4.LogLevels.ERROR) {
                        this.flush();
                    }
                }
                log(msg) {
                    this._buf.writeSync(this._encoder.encode(msg + "\n"));
                }
                flush() {
                    if (this._buf?.buffered() > 0) {
                        this._buf.flush();
                    }
                }
                destroy() {
                    this.flush();
                    this._file?.close();
                    this._file = undefined;
                    removeEventListener("unload", this.#unloadCallback);
                    return Promise.resolve();
                }
            };
            exports_402("FileHandler", FileHandler);
            RotatingFileHandler = class RotatingFileHandler extends FileHandler {
                constructor(levelName, options) {
                    super(levelName, options);
                    this.#currentFileSize = 0;
                    this.#maxBytes = options.maxBytes;
                    this.#maxBackupCount = options.maxBackupCount;
                }
                #maxBytes;
                #maxBackupCount;
                #currentFileSize;
                async setup() {
                    if (this.#maxBytes < 1) {
                        this.destroy();
                        throw new Error("maxBytes cannot be less than 1");
                    }
                    if (this.#maxBackupCount < 1) {
                        this.destroy();
                        throw new Error("maxBackupCount cannot be less than 1");
                    }
                    await super.setup();
                    if (this._mode === "w") {
                        for (let i = 1; i <= this.#maxBackupCount; i++) {
                            if (await exists_ts_2.exists(this._filename + "." + i)) {
                                await Deno.remove(this._filename + "." + i);
                            }
                        }
                    }
                    else if (this._mode === "x") {
                        for (let i = 1; i <= this.#maxBackupCount; i++) {
                            if (await exists_ts_2.exists(this._filename + "." + i)) {
                                this.destroy();
                                throw new Deno.errors.AlreadyExists("Backup log file " + this._filename + "." + i + " already exists");
                            }
                        }
                    }
                    else {
                        this.#currentFileSize = (await Deno.stat(this._filename)).size;
                    }
                }
                log(msg) {
                    const msgByteLength = this._encoder.encode(msg).byteLength + 1;
                    if (this.#currentFileSize + msgByteLength > this.#maxBytes) {
                        this.rotateLogFiles();
                        this.#currentFileSize = 0;
                    }
                    this._buf.writeSync(this._encoder.encode(msg + "\n"));
                    this.#currentFileSize += msgByteLength;
                }
                rotateLogFiles() {
                    this._buf.flush();
                    Deno.close(this._file.rid);
                    for (let i = this.#maxBackupCount - 1; i >= 0; i--) {
                        const source = this._filename + (i === 0 ? "" : "." + i);
                        const dest = this._filename + "." + (i + 1);
                        if (exists_ts_2.existsSync(source)) {
                            Deno.renameSync(source, dest);
                        }
                    }
                    this._file = Deno.openSync(this._filename, this._openOptions);
                    this._writer = this._file;
                    this._buf = new bufio_ts_5.BufWriterSync(this._file);
                }
            };
            exports_402("RotatingFileHandler", RotatingFileHandler);
        }
    };
});
System.register("https://deno.land/std@0.63.0/log/logger", ["https://deno.land/std@0.63.0/log/levels"], function (exports_403, context_403) {
    "use strict";
    var levels_ts_5, LogRecord, Logger;
    var __moduleName = context_403 && context_403.id;
    return {
        setters: [
            function (levels_ts_5_1) {
                levels_ts_5 = levels_ts_5_1;
            }
        ],
        execute: function () {
            LogRecord = class LogRecord {
                constructor(options) {
                    this.msg = options.msg;
                    this.#args = [...options.args];
                    this.level = options.level;
                    this.loggerName = options.loggerName;
                    this.#datetime = new Date();
                    this.levelName = levels_ts_5.getLevelName(options.level);
                }
                #args;
                #datetime;
                get args() {
                    return [...this.#args];
                }
                get datetime() {
                    return new Date(this.#datetime.getTime());
                }
            };
            exports_403("LogRecord", LogRecord);
            Logger = class Logger {
                constructor(loggerName, levelName, options = {}) {
                    this.#loggerName = loggerName;
                    this.#level = levels_ts_5.getLevelByName(levelName);
                    this.#handlers = options.handlers || [];
                }
                #level;
                #handlers;
                #loggerName;
                get level() {
                    return this.#level;
                }
                set level(level) {
                    this.#level = level;
                }
                get levelName() {
                    return levels_ts_5.getLevelName(this.#level);
                }
                set levelName(levelName) {
                    this.#level = levels_ts_5.getLevelByName(levelName);
                }
                get loggerName() {
                    return this.#loggerName;
                }
                set handlers(hndls) {
                    this.#handlers = hndls;
                }
                get handlers() {
                    return this.#handlers;
                }
                _log(level, msg, ...args) {
                    if (this.level > level) {
                        return msg instanceof Function ? undefined : msg;
                    }
                    let fnResult;
                    let logMessage;
                    if (msg instanceof Function) {
                        fnResult = msg();
                        logMessage = this.asString(fnResult);
                    }
                    else {
                        logMessage = this.asString(msg);
                    }
                    const record = new LogRecord({
                        msg: logMessage,
                        args: args,
                        level: level,
                        loggerName: this.loggerName,
                    });
                    this.#handlers.forEach((handler) => {
                        handler.handle(record);
                    });
                    return msg instanceof Function ? fnResult : msg;
                }
                asString(data) {
                    if (typeof data === "string") {
                        return data;
                    }
                    else if (data === null ||
                        typeof data === "number" ||
                        typeof data === "bigint" ||
                        typeof data === "boolean" ||
                        typeof data === "undefined" ||
                        typeof data === "symbol") {
                        return String(data);
                    }
                    else if (typeof data === "object") {
                        return JSON.stringify(data);
                    }
                    return "undefined";
                }
                debug(msg, ...args) {
                    return this._log(levels_ts_5.LogLevels.DEBUG, msg, ...args);
                }
                info(msg, ...args) {
                    return this._log(levels_ts_5.LogLevels.INFO, msg, ...args);
                }
                warning(msg, ...args) {
                    return this._log(levels_ts_5.LogLevels.WARNING, msg, ...args);
                }
                error(msg, ...args) {
                    return this._log(levels_ts_5.LogLevels.ERROR, msg, ...args);
                }
                critical(msg, ...args) {
                    return this._log(levels_ts_5.LogLevels.CRITICAL, msg, ...args);
                }
            };
            exports_403("Logger", Logger);
        }
    };
});
System.register("https://deno.land/std@0.63.0/log/mod", ["https://deno.land/std@0.63.0/log/logger", "https://deno.land/std@0.63.0/log/handlers", "https://deno.land/std@0.63.0/_util/assert", "https://deno.land/std@0.63.0/log/levels"], function (exports_404, context_404) {
    "use strict";
    var logger_ts_5, handlers_ts_2, assert_ts_11, LoggerConfig, DEFAULT_LEVEL, DEFAULT_CONFIG, state, handlers;
    var __moduleName = context_404 && context_404.id;
    function getLogger(name) {
        if (!name) {
            const d = state.loggers.get("default");
            assert_ts_11.assert(d != null, `"default" logger must be set for getting logger without name`);
            return d;
        }
        const result = state.loggers.get(name);
        if (!result) {
            const logger = new logger_ts_5.Logger(name, "NOTSET", { handlers: [] });
            state.loggers.set(name, logger);
            return logger;
        }
        return result;
    }
    exports_404("getLogger", getLogger);
    function debug(msg, ...args) {
        if (msg instanceof Function) {
            return getLogger("default").debug(msg, ...args);
        }
        return getLogger("default").debug(msg, ...args);
    }
    exports_404("debug", debug);
    function info(msg, ...args) {
        if (msg instanceof Function) {
            return getLogger("default").info(msg, ...args);
        }
        return getLogger("default").info(msg, ...args);
    }
    exports_404("info", info);
    function warning(msg, ...args) {
        if (msg instanceof Function) {
            return getLogger("default").warning(msg, ...args);
        }
        return getLogger("default").warning(msg, ...args);
    }
    exports_404("warning", warning);
    function error(msg, ...args) {
        if (msg instanceof Function) {
            return getLogger("default").error(msg, ...args);
        }
        return getLogger("default").error(msg, ...args);
    }
    exports_404("error", error);
    function critical(msg, ...args) {
        if (msg instanceof Function) {
            return getLogger("default").critical(msg, ...args);
        }
        return getLogger("default").critical(msg, ...args);
    }
    exports_404("critical", critical);
    async function setup(config) {
        state.config = {
            handlers: { ...DEFAULT_CONFIG.handlers, ...config.handlers },
            loggers: { ...DEFAULT_CONFIG.loggers, ...config.loggers },
        };
        state.handlers.forEach((handler) => {
            handler.destroy();
        });
        state.handlers.clear();
        const handlers = state.config.handlers || {};
        for (const handlerName in handlers) {
            const handler = handlers[handlerName];
            await handler.setup();
            state.handlers.set(handlerName, handler);
        }
        state.loggers.clear();
        const loggers = state.config.loggers || {};
        for (const loggerName in loggers) {
            const loggerConfig = loggers[loggerName];
            const handlerNames = loggerConfig.handlers || [];
            const handlers = [];
            handlerNames.forEach((handlerName) => {
                const handler = state.handlers.get(handlerName);
                if (handler) {
                    handlers.push(handler);
                }
            });
            const levelName = loggerConfig.level || DEFAULT_LEVEL;
            const logger = new logger_ts_5.Logger(loggerName, levelName, { handlers: handlers });
            state.loggers.set(loggerName, logger);
        }
    }
    exports_404("setup", setup);
    return {
        setters: [
            function (logger_ts_5_1) {
                logger_ts_5 = logger_ts_5_1;
                exports_404({
                    "Logger": logger_ts_5_1["Logger"]
                });
            },
            function (handlers_ts_2_1) {
                handlers_ts_2 = handlers_ts_2_1;
            },
            function (assert_ts_11_1) {
                assert_ts_11 = assert_ts_11_1;
            },
            function (levels_ts_6_1) {
                exports_404({
                    "LogLevels": levels_ts_6_1["LogLevels"]
                });
            }
        ],
        execute: async function () {
            LoggerConfig = class LoggerConfig {
            };
            exports_404("LoggerConfig", LoggerConfig);
            DEFAULT_LEVEL = "INFO";
            DEFAULT_CONFIG = {
                handlers: {
                    default: new handlers_ts_2.ConsoleHandler(DEFAULT_LEVEL),
                },
                loggers: {
                    default: {
                        level: DEFAULT_LEVEL,
                        handlers: ["default"],
                    },
                },
            };
            state = {
                handlers: new Map(),
                loggers: new Map(),
                config: DEFAULT_CONFIG,
            };
            exports_404("handlers", handlers = {
                BaseHandler: handlers_ts_2.BaseHandler,
                ConsoleHandler: handlers_ts_2.ConsoleHandler,
                WriterHandler: handlers_ts_2.WriterHandler,
                FileHandler: handlers_ts_2.FileHandler,
                RotatingFileHandler: handlers_ts_2.RotatingFileHandler,
            });
            await setup(DEFAULT_CONFIG);
        }
    };
});
System.register("https://deno.land/std@0.63.0/path/_constants", [], function (exports_405, context_405) {
    "use strict";
    var CHAR_UPPERCASE_A, CHAR_LOWERCASE_A, CHAR_UPPERCASE_Z, CHAR_LOWERCASE_Z, CHAR_DOT, CHAR_FORWARD_SLASH, CHAR_BACKWARD_SLASH, CHAR_VERTICAL_LINE, CHAR_COLON, CHAR_QUESTION_MARK, CHAR_UNDERSCORE, CHAR_LINE_FEED, CHAR_CARRIAGE_RETURN, CHAR_TAB, CHAR_FORM_FEED, CHAR_EXCLAMATION_MARK, CHAR_HASH, CHAR_SPACE, CHAR_NO_BREAK_SPACE, CHAR_ZERO_WIDTH_NOBREAK_SPACE, CHAR_LEFT_SQUARE_BRACKET, CHAR_RIGHT_SQUARE_BRACKET, CHAR_LEFT_ANGLE_BRACKET, CHAR_RIGHT_ANGLE_BRACKET, CHAR_LEFT_CURLY_BRACKET, CHAR_RIGHT_CURLY_BRACKET, CHAR_HYPHEN_MINUS, CHAR_PLUS, CHAR_DOUBLE_QUOTE, CHAR_SINGLE_QUOTE, CHAR_PERCENT, CHAR_SEMICOLON, CHAR_CIRCUMFLEX_ACCENT, CHAR_GRAVE_ACCENT, CHAR_AT, CHAR_AMPERSAND, CHAR_EQUAL, CHAR_0, CHAR_9, navigator, isWindows;
    var __moduleName = context_405 && context_405.id;
    return {
        setters: [],
        execute: function () {
            exports_405("CHAR_UPPERCASE_A", CHAR_UPPERCASE_A = 65);
            exports_405("CHAR_LOWERCASE_A", CHAR_LOWERCASE_A = 97);
            exports_405("CHAR_UPPERCASE_Z", CHAR_UPPERCASE_Z = 90);
            exports_405("CHAR_LOWERCASE_Z", CHAR_LOWERCASE_Z = 122);
            exports_405("CHAR_DOT", CHAR_DOT = 46);
            exports_405("CHAR_FORWARD_SLASH", CHAR_FORWARD_SLASH = 47);
            exports_405("CHAR_BACKWARD_SLASH", CHAR_BACKWARD_SLASH = 92);
            exports_405("CHAR_VERTICAL_LINE", CHAR_VERTICAL_LINE = 124);
            exports_405("CHAR_COLON", CHAR_COLON = 58);
            exports_405("CHAR_QUESTION_MARK", CHAR_QUESTION_MARK = 63);
            exports_405("CHAR_UNDERSCORE", CHAR_UNDERSCORE = 95);
            exports_405("CHAR_LINE_FEED", CHAR_LINE_FEED = 10);
            exports_405("CHAR_CARRIAGE_RETURN", CHAR_CARRIAGE_RETURN = 13);
            exports_405("CHAR_TAB", CHAR_TAB = 9);
            exports_405("CHAR_FORM_FEED", CHAR_FORM_FEED = 12);
            exports_405("CHAR_EXCLAMATION_MARK", CHAR_EXCLAMATION_MARK = 33);
            exports_405("CHAR_HASH", CHAR_HASH = 35);
            exports_405("CHAR_SPACE", CHAR_SPACE = 32);
            exports_405("CHAR_NO_BREAK_SPACE", CHAR_NO_BREAK_SPACE = 160);
            exports_405("CHAR_ZERO_WIDTH_NOBREAK_SPACE", CHAR_ZERO_WIDTH_NOBREAK_SPACE = 65279);
            exports_405("CHAR_LEFT_SQUARE_BRACKET", CHAR_LEFT_SQUARE_BRACKET = 91);
            exports_405("CHAR_RIGHT_SQUARE_BRACKET", CHAR_RIGHT_SQUARE_BRACKET = 93);
            exports_405("CHAR_LEFT_ANGLE_BRACKET", CHAR_LEFT_ANGLE_BRACKET = 60);
            exports_405("CHAR_RIGHT_ANGLE_BRACKET", CHAR_RIGHT_ANGLE_BRACKET = 62);
            exports_405("CHAR_LEFT_CURLY_BRACKET", CHAR_LEFT_CURLY_BRACKET = 123);
            exports_405("CHAR_RIGHT_CURLY_BRACKET", CHAR_RIGHT_CURLY_BRACKET = 125);
            exports_405("CHAR_HYPHEN_MINUS", CHAR_HYPHEN_MINUS = 45);
            exports_405("CHAR_PLUS", CHAR_PLUS = 43);
            exports_405("CHAR_DOUBLE_QUOTE", CHAR_DOUBLE_QUOTE = 34);
            exports_405("CHAR_SINGLE_QUOTE", CHAR_SINGLE_QUOTE = 39);
            exports_405("CHAR_PERCENT", CHAR_PERCENT = 37);
            exports_405("CHAR_SEMICOLON", CHAR_SEMICOLON = 59);
            exports_405("CHAR_CIRCUMFLEX_ACCENT", CHAR_CIRCUMFLEX_ACCENT = 94);
            exports_405("CHAR_GRAVE_ACCENT", CHAR_GRAVE_ACCENT = 96);
            exports_405("CHAR_AT", CHAR_AT = 64);
            exports_405("CHAR_AMPERSAND", CHAR_AMPERSAND = 38);
            exports_405("CHAR_EQUAL", CHAR_EQUAL = 61);
            exports_405("CHAR_0", CHAR_0 = 48);
            exports_405("CHAR_9", CHAR_9 = 57);
            navigator = globalThis.navigator;
            isWindows = false;
            exports_405("isWindows", isWindows);
            if (globalThis.Deno != null) {
                exports_405("isWindows", isWindows = Deno.build.os == "windows");
            }
            else if (navigator?.appVersion != null) {
                exports_405("isWindows", isWindows = navigator.appVersion.includes("Win"));
            }
        }
    };
});
System.register("https://deno.land/std@0.63.0/path/_interface", [], function (exports_406, context_406) {
    "use strict";
    var __moduleName = context_406 && context_406.id;
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/std@0.63.0/path/_util", ["https://deno.land/std@0.63.0/path/_constants"], function (exports_407, context_407) {
    "use strict";
    var _constants_ts_10;
    var __moduleName = context_407 && context_407.id;
    function assertPath(path) {
        if (typeof path !== "string") {
            throw new TypeError(`Path must be a string. Received ${JSON.stringify(path)}`);
        }
    }
    exports_407("assertPath", assertPath);
    function isPosixPathSeparator(code) {
        return code === _constants_ts_10.CHAR_FORWARD_SLASH;
    }
    exports_407("isPosixPathSeparator", isPosixPathSeparator);
    function isPathSeparator(code) {
        return isPosixPathSeparator(code) || code === _constants_ts_10.CHAR_BACKWARD_SLASH;
    }
    exports_407("isPathSeparator", isPathSeparator);
    function isWindowsDeviceRoot(code) {
        return ((code >= _constants_ts_10.CHAR_LOWERCASE_A && code <= _constants_ts_10.CHAR_LOWERCASE_Z) ||
            (code >= _constants_ts_10.CHAR_UPPERCASE_A && code <= _constants_ts_10.CHAR_UPPERCASE_Z));
    }
    exports_407("isWindowsDeviceRoot", isWindowsDeviceRoot);
    function normalizeString(path, allowAboveRoot, separator, isPathSeparator) {
        let res = "";
        let lastSegmentLength = 0;
        let lastSlash = -1;
        let dots = 0;
        let code;
        for (let i = 0, len = path.length; i <= len; ++i) {
            if (i < len)
                code = path.charCodeAt(i);
            else if (isPathSeparator(code))
                break;
            else
                code = _constants_ts_10.CHAR_FORWARD_SLASH;
            if (isPathSeparator(code)) {
                if (lastSlash === i - 1 || dots === 1) {
                }
                else if (lastSlash !== i - 1 && dots === 2) {
                    if (res.length < 2 ||
                        lastSegmentLength !== 2 ||
                        res.charCodeAt(res.length - 1) !== _constants_ts_10.CHAR_DOT ||
                        res.charCodeAt(res.length - 2) !== _constants_ts_10.CHAR_DOT) {
                        if (res.length > 2) {
                            const lastSlashIndex = res.lastIndexOf(separator);
                            if (lastSlashIndex === -1) {
                                res = "";
                                lastSegmentLength = 0;
                            }
                            else {
                                res = res.slice(0, lastSlashIndex);
                                lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);
                            }
                            lastSlash = i;
                            dots = 0;
                            continue;
                        }
                        else if (res.length === 2 || res.length === 1) {
                            res = "";
                            lastSegmentLength = 0;
                            lastSlash = i;
                            dots = 0;
                            continue;
                        }
                    }
                    if (allowAboveRoot) {
                        if (res.length > 0)
                            res += `${separator}..`;
                        else
                            res = "..";
                        lastSegmentLength = 2;
                    }
                }
                else {
                    if (res.length > 0)
                        res += separator + path.slice(lastSlash + 1, i);
                    else
                        res = path.slice(lastSlash + 1, i);
                    lastSegmentLength = i - lastSlash - 1;
                }
                lastSlash = i;
                dots = 0;
            }
            else if (code === _constants_ts_10.CHAR_DOT && dots !== -1) {
                ++dots;
            }
            else {
                dots = -1;
            }
        }
        return res;
    }
    exports_407("normalizeString", normalizeString);
    function _format(sep, pathObject) {
        const dir = pathObject.dir || pathObject.root;
        const base = pathObject.base ||
            (pathObject.name || "") + (pathObject.ext || "");
        if (!dir)
            return base;
        if (dir === pathObject.root)
            return dir + base;
        return dir + sep + base;
    }
    exports_407("_format", _format);
    return {
        setters: [
            function (_constants_ts_10_1) {
                _constants_ts_10 = _constants_ts_10_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/std@0.63.0/path/win32", ["https://deno.land/std@0.63.0/path/_constants", "https://deno.land/std@0.63.0/path/_util", "https://deno.land/std@0.63.0/_util/assert"], function (exports_408, context_408) {
    "use strict";
    var _constants_ts_11, _util_ts_5, assert_ts_12, sep, delimiter;
    var __moduleName = context_408 && context_408.id;
    function resolve(...pathSegments) {
        let resolvedDevice = "";
        let resolvedTail = "";
        let resolvedAbsolute = false;
        for (let i = pathSegments.length - 1; i >= -1; i--) {
            let path;
            if (i >= 0) {
                path = pathSegments[i];
            }
            else if (!resolvedDevice) {
                if (globalThis.Deno == null) {
                    throw new TypeError("Resolved a drive-letter-less path without a CWD.");
                }
                path = Deno.cwd();
            }
            else {
                if (globalThis.Deno == null) {
                    throw new TypeError("Resolved a relative path without a CWD.");
                }
                path = Deno.env.get(`=${resolvedDevice}`) || Deno.cwd();
                if (path === undefined ||
                    path.slice(0, 3).toLowerCase() !== `${resolvedDevice.toLowerCase()}\\`) {
                    path = `${resolvedDevice}\\`;
                }
            }
            _util_ts_5.assertPath(path);
            const len = path.length;
            if (len === 0)
                continue;
            let rootEnd = 0;
            let device = "";
            let isAbsolute = false;
            const code = path.charCodeAt(0);
            if (len > 1) {
                if (_util_ts_5.isPathSeparator(code)) {
                    isAbsolute = true;
                    if (_util_ts_5.isPathSeparator(path.charCodeAt(1))) {
                        let j = 2;
                        let last = j;
                        for (; j < len; ++j) {
                            if (_util_ts_5.isPathSeparator(path.charCodeAt(j)))
                                break;
                        }
                        if (j < len && j !== last) {
                            const firstPart = path.slice(last, j);
                            last = j;
                            for (; j < len; ++j) {
                                if (!_util_ts_5.isPathSeparator(path.charCodeAt(j)))
                                    break;
                            }
                            if (j < len && j !== last) {
                                last = j;
                                for (; j < len; ++j) {
                                    if (_util_ts_5.isPathSeparator(path.charCodeAt(j)))
                                        break;
                                }
                                if (j === len) {
                                    device = `\\\\${firstPart}\\${path.slice(last)}`;
                                    rootEnd = j;
                                }
                                else if (j !== last) {
                                    device = `\\\\${firstPart}\\${path.slice(last, j)}`;
                                    rootEnd = j;
                                }
                            }
                        }
                    }
                    else {
                        rootEnd = 1;
                    }
                }
                else if (_util_ts_5.isWindowsDeviceRoot(code)) {
                    if (path.charCodeAt(1) === _constants_ts_11.CHAR_COLON) {
                        device = path.slice(0, 2);
                        rootEnd = 2;
                        if (len > 2) {
                            if (_util_ts_5.isPathSeparator(path.charCodeAt(2))) {
                                isAbsolute = true;
                                rootEnd = 3;
                            }
                        }
                    }
                }
            }
            else if (_util_ts_5.isPathSeparator(code)) {
                rootEnd = 1;
                isAbsolute = true;
            }
            if (device.length > 0 &&
                resolvedDevice.length > 0 &&
                device.toLowerCase() !== resolvedDevice.toLowerCase()) {
                continue;
            }
            if (resolvedDevice.length === 0 && device.length > 0) {
                resolvedDevice = device;
            }
            if (!resolvedAbsolute) {
                resolvedTail = `${path.slice(rootEnd)}\\${resolvedTail}`;
                resolvedAbsolute = isAbsolute;
            }
            if (resolvedAbsolute && resolvedDevice.length > 0)
                break;
        }
        resolvedTail = _util_ts_5.normalizeString(resolvedTail, !resolvedAbsolute, "\\", _util_ts_5.isPathSeparator);
        return resolvedDevice + (resolvedAbsolute ? "\\" : "") + resolvedTail || ".";
    }
    exports_408("resolve", resolve);
    function normalize(path) {
        _util_ts_5.assertPath(path);
        const len = path.length;
        if (len === 0)
            return ".";
        let rootEnd = 0;
        let device;
        let isAbsolute = false;
        const code = path.charCodeAt(0);
        if (len > 1) {
            if (_util_ts_5.isPathSeparator(code)) {
                isAbsolute = true;
                if (_util_ts_5.isPathSeparator(path.charCodeAt(1))) {
                    let j = 2;
                    let last = j;
                    for (; j < len; ++j) {
                        if (_util_ts_5.isPathSeparator(path.charCodeAt(j)))
                            break;
                    }
                    if (j < len && j !== last) {
                        const firstPart = path.slice(last, j);
                        last = j;
                        for (; j < len; ++j) {
                            if (!_util_ts_5.isPathSeparator(path.charCodeAt(j)))
                                break;
                        }
                        if (j < len && j !== last) {
                            last = j;
                            for (; j < len; ++j) {
                                if (_util_ts_5.isPathSeparator(path.charCodeAt(j)))
                                    break;
                            }
                            if (j === len) {
                                return `\\\\${firstPart}\\${path.slice(last)}\\`;
                            }
                            else if (j !== last) {
                                device = `\\\\${firstPart}\\${path.slice(last, j)}`;
                                rootEnd = j;
                            }
                        }
                    }
                }
                else {
                    rootEnd = 1;
                }
            }
            else if (_util_ts_5.isWindowsDeviceRoot(code)) {
                if (path.charCodeAt(1) === _constants_ts_11.CHAR_COLON) {
                    device = path.slice(0, 2);
                    rootEnd = 2;
                    if (len > 2) {
                        if (_util_ts_5.isPathSeparator(path.charCodeAt(2))) {
                            isAbsolute = true;
                            rootEnd = 3;
                        }
                    }
                }
            }
        }
        else if (_util_ts_5.isPathSeparator(code)) {
            return "\\";
        }
        let tail;
        if (rootEnd < len) {
            tail = _util_ts_5.normalizeString(path.slice(rootEnd), !isAbsolute, "\\", _util_ts_5.isPathSeparator);
        }
        else {
            tail = "";
        }
        if (tail.length === 0 && !isAbsolute)
            tail = ".";
        if (tail.length > 0 && _util_ts_5.isPathSeparator(path.charCodeAt(len - 1))) {
            tail += "\\";
        }
        if (device === undefined) {
            if (isAbsolute) {
                if (tail.length > 0)
                    return `\\${tail}`;
                else
                    return "\\";
            }
            else if (tail.length > 0) {
                return tail;
            }
            else {
                return "";
            }
        }
        else if (isAbsolute) {
            if (tail.length > 0)
                return `${device}\\${tail}`;
            else
                return `${device}\\`;
        }
        else if (tail.length > 0) {
            return device + tail;
        }
        else {
            return device;
        }
    }
    exports_408("normalize", normalize);
    function isAbsolute(path) {
        _util_ts_5.assertPath(path);
        const len = path.length;
        if (len === 0)
            return false;
        const code = path.charCodeAt(0);
        if (_util_ts_5.isPathSeparator(code)) {
            return true;
        }
        else if (_util_ts_5.isWindowsDeviceRoot(code)) {
            if (len > 2 && path.charCodeAt(1) === _constants_ts_11.CHAR_COLON) {
                if (_util_ts_5.isPathSeparator(path.charCodeAt(2)))
                    return true;
            }
        }
        return false;
    }
    exports_408("isAbsolute", isAbsolute);
    function join(...paths) {
        const pathsCount = paths.length;
        if (pathsCount === 0)
            return ".";
        let joined;
        let firstPart = null;
        for (let i = 0; i < pathsCount; ++i) {
            const path = paths[i];
            _util_ts_5.assertPath(path);
            if (path.length > 0) {
                if (joined === undefined)
                    joined = firstPart = path;
                else
                    joined += `\\${path}`;
            }
        }
        if (joined === undefined)
            return ".";
        let needsReplace = true;
        let slashCount = 0;
        assert_ts_12.assert(firstPart != null);
        if (_util_ts_5.isPathSeparator(firstPart.charCodeAt(0))) {
            ++slashCount;
            const firstLen = firstPart.length;
            if (firstLen > 1) {
                if (_util_ts_5.isPathSeparator(firstPart.charCodeAt(1))) {
                    ++slashCount;
                    if (firstLen > 2) {
                        if (_util_ts_5.isPathSeparator(firstPart.charCodeAt(2)))
                            ++slashCount;
                        else {
                            needsReplace = false;
                        }
                    }
                }
            }
        }
        if (needsReplace) {
            for (; slashCount < joined.length; ++slashCount) {
                if (!_util_ts_5.isPathSeparator(joined.charCodeAt(slashCount)))
                    break;
            }
            if (slashCount >= 2)
                joined = `\\${joined.slice(slashCount)}`;
        }
        return normalize(joined);
    }
    exports_408("join", join);
    function relative(from, to) {
        _util_ts_5.assertPath(from);
        _util_ts_5.assertPath(to);
        if (from === to)
            return "";
        const fromOrig = resolve(from);
        const toOrig = resolve(to);
        if (fromOrig === toOrig)
            return "";
        from = fromOrig.toLowerCase();
        to = toOrig.toLowerCase();
        if (from === to)
            return "";
        let fromStart = 0;
        let fromEnd = from.length;
        for (; fromStart < fromEnd; ++fromStart) {
            if (from.charCodeAt(fromStart) !== _constants_ts_11.CHAR_BACKWARD_SLASH)
                break;
        }
        for (; fromEnd - 1 > fromStart; --fromEnd) {
            if (from.charCodeAt(fromEnd - 1) !== _constants_ts_11.CHAR_BACKWARD_SLASH)
                break;
        }
        const fromLen = fromEnd - fromStart;
        let toStart = 0;
        let toEnd = to.length;
        for (; toStart < toEnd; ++toStart) {
            if (to.charCodeAt(toStart) !== _constants_ts_11.CHAR_BACKWARD_SLASH)
                break;
        }
        for (; toEnd - 1 > toStart; --toEnd) {
            if (to.charCodeAt(toEnd - 1) !== _constants_ts_11.CHAR_BACKWARD_SLASH)
                break;
        }
        const toLen = toEnd - toStart;
        const length = fromLen < toLen ? fromLen : toLen;
        let lastCommonSep = -1;
        let i = 0;
        for (; i <= length; ++i) {
            if (i === length) {
                if (toLen > length) {
                    if (to.charCodeAt(toStart + i) === _constants_ts_11.CHAR_BACKWARD_SLASH) {
                        return toOrig.slice(toStart + i + 1);
                    }
                    else if (i === 2) {
                        return toOrig.slice(toStart + i);
                    }
                }
                if (fromLen > length) {
                    if (from.charCodeAt(fromStart + i) === _constants_ts_11.CHAR_BACKWARD_SLASH) {
                        lastCommonSep = i;
                    }
                    else if (i === 2) {
                        lastCommonSep = 3;
                    }
                }
                break;
            }
            const fromCode = from.charCodeAt(fromStart + i);
            const toCode = to.charCodeAt(toStart + i);
            if (fromCode !== toCode)
                break;
            else if (fromCode === _constants_ts_11.CHAR_BACKWARD_SLASH)
                lastCommonSep = i;
        }
        if (i !== length && lastCommonSep === -1) {
            return toOrig;
        }
        let out = "";
        if (lastCommonSep === -1)
            lastCommonSep = 0;
        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {
            if (i === fromEnd || from.charCodeAt(i) === _constants_ts_11.CHAR_BACKWARD_SLASH) {
                if (out.length === 0)
                    out += "..";
                else
                    out += "\\..";
            }
        }
        if (out.length > 0) {
            return out + toOrig.slice(toStart + lastCommonSep, toEnd);
        }
        else {
            toStart += lastCommonSep;
            if (toOrig.charCodeAt(toStart) === _constants_ts_11.CHAR_BACKWARD_SLASH)
                ++toStart;
            return toOrig.slice(toStart, toEnd);
        }
    }
    exports_408("relative", relative);
    function toNamespacedPath(path) {
        if (typeof path !== "string")
            return path;
        if (path.length === 0)
            return "";
        const resolvedPath = resolve(path);
        if (resolvedPath.length >= 3) {
            if (resolvedPath.charCodeAt(0) === _constants_ts_11.CHAR_BACKWARD_SLASH) {
                if (resolvedPath.charCodeAt(1) === _constants_ts_11.CHAR_BACKWARD_SLASH) {
                    const code = resolvedPath.charCodeAt(2);
                    if (code !== _constants_ts_11.CHAR_QUESTION_MARK && code !== _constants_ts_11.CHAR_DOT) {
                        return `\\\\?\\UNC\\${resolvedPath.slice(2)}`;
                    }
                }
            }
            else if (_util_ts_5.isWindowsDeviceRoot(resolvedPath.charCodeAt(0))) {
                if (resolvedPath.charCodeAt(1) === _constants_ts_11.CHAR_COLON &&
                    resolvedPath.charCodeAt(2) === _constants_ts_11.CHAR_BACKWARD_SLASH) {
                    return `\\\\?\\${resolvedPath}`;
                }
            }
        }
        return path;
    }
    exports_408("toNamespacedPath", toNamespacedPath);
    function dirname(path) {
        _util_ts_5.assertPath(path);
        const len = path.length;
        if (len === 0)
            return ".";
        let rootEnd = -1;
        let end = -1;
        let matchedSlash = true;
        let offset = 0;
        const code = path.charCodeAt(0);
        if (len > 1) {
            if (_util_ts_5.isPathSeparator(code)) {
                rootEnd = offset = 1;
                if (_util_ts_5.isPathSeparator(path.charCodeAt(1))) {
                    let j = 2;
                    let last = j;
                    for (; j < len; ++j) {
                        if (_util_ts_5.isPathSeparator(path.charCodeAt(j)))
                            break;
                    }
                    if (j < len && j !== last) {
                        last = j;
                        for (; j < len; ++j) {
                            if (!_util_ts_5.isPathSeparator(path.charCodeAt(j)))
                                break;
                        }
                        if (j < len && j !== last) {
                            last = j;
                            for (; j < len; ++j) {
                                if (_util_ts_5.isPathSeparator(path.charCodeAt(j)))
                                    break;
                            }
                            if (j === len) {
                                return path;
                            }
                            if (j !== last) {
                                rootEnd = offset = j + 1;
                            }
                        }
                    }
                }
            }
            else if (_util_ts_5.isWindowsDeviceRoot(code)) {
                if (path.charCodeAt(1) === _constants_ts_11.CHAR_COLON) {
                    rootEnd = offset = 2;
                    if (len > 2) {
                        if (_util_ts_5.isPathSeparator(path.charCodeAt(2)))
                            rootEnd = offset = 3;
                    }
                }
            }
        }
        else if (_util_ts_5.isPathSeparator(code)) {
            return path;
        }
        for (let i = len - 1; i >= offset; --i) {
            if (_util_ts_5.isPathSeparator(path.charCodeAt(i))) {
                if (!matchedSlash) {
                    end = i;
                    break;
                }
            }
            else {
                matchedSlash = false;
            }
        }
        if (end === -1) {
            if (rootEnd === -1)
                return ".";
            else
                end = rootEnd;
        }
        return path.slice(0, end);
    }
    exports_408("dirname", dirname);
    function basename(path, ext = "") {
        if (ext !== undefined && typeof ext !== "string") {
            throw new TypeError('"ext" argument must be a string');
        }
        _util_ts_5.assertPath(path);
        let start = 0;
        let end = -1;
        let matchedSlash = true;
        let i;
        if (path.length >= 2) {
            const drive = path.charCodeAt(0);
            if (_util_ts_5.isWindowsDeviceRoot(drive)) {
                if (path.charCodeAt(1) === _constants_ts_11.CHAR_COLON)
                    start = 2;
            }
        }
        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {
            if (ext.length === path.length && ext === path)
                return "";
            let extIdx = ext.length - 1;
            let firstNonSlashEnd = -1;
            for (i = path.length - 1; i >= start; --i) {
                const code = path.charCodeAt(i);
                if (_util_ts_5.isPathSeparator(code)) {
                    if (!matchedSlash) {
                        start = i + 1;
                        break;
                    }
                }
                else {
                    if (firstNonSlashEnd === -1) {
                        matchedSlash = false;
                        firstNonSlashEnd = i + 1;
                    }
                    if (extIdx >= 0) {
                        if (code === ext.charCodeAt(extIdx)) {
                            if (--extIdx === -1) {
                                end = i;
                            }
                        }
                        else {
                            extIdx = -1;
                            end = firstNonSlashEnd;
                        }
                    }
                }
            }
            if (start === end)
                end = firstNonSlashEnd;
            else if (end === -1)
                end = path.length;
            return path.slice(start, end);
        }
        else {
            for (i = path.length - 1; i >= start; --i) {
                if (_util_ts_5.isPathSeparator(path.charCodeAt(i))) {
                    if (!matchedSlash) {
                        start = i + 1;
                        break;
                    }
                }
                else if (end === -1) {
                    matchedSlash = false;
                    end = i + 1;
                }
            }
            if (end === -1)
                return "";
            return path.slice(start, end);
        }
    }
    exports_408("basename", basename);
    function extname(path) {
        _util_ts_5.assertPath(path);
        let start = 0;
        let startDot = -1;
        let startPart = 0;
        let end = -1;
        let matchedSlash = true;
        let preDotState = 0;
        if (path.length >= 2 &&
            path.charCodeAt(1) === _constants_ts_11.CHAR_COLON &&
            _util_ts_5.isWindowsDeviceRoot(path.charCodeAt(0))) {
            start = startPart = 2;
        }
        for (let i = path.length - 1; i >= start; --i) {
            const code = path.charCodeAt(i);
            if (_util_ts_5.isPathSeparator(code)) {
                if (!matchedSlash) {
                    startPart = i + 1;
                    break;
                }
                continue;
            }
            if (end === -1) {
                matchedSlash = false;
                end = i + 1;
            }
            if (code === _constants_ts_11.CHAR_DOT) {
                if (startDot === -1)
                    startDot = i;
                else if (preDotState !== 1)
                    preDotState = 1;
            }
            else if (startDot !== -1) {
                preDotState = -1;
            }
        }
        if (startDot === -1 ||
            end === -1 ||
            preDotState === 0 ||
            (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)) {
            return "";
        }
        return path.slice(startDot, end);
    }
    exports_408("extname", extname);
    function format(pathObject) {
        if (pathObject === null || typeof pathObject !== "object") {
            throw new TypeError(`The "pathObject" argument must be of type Object. Received type ${typeof pathObject}`);
        }
        return _util_ts_5._format("\\", pathObject);
    }
    exports_408("format", format);
    function parse(path) {
        _util_ts_5.assertPath(path);
        const ret = { root: "", dir: "", base: "", ext: "", name: "" };
        const len = path.length;
        if (len === 0)
            return ret;
        let rootEnd = 0;
        let code = path.charCodeAt(0);
        if (len > 1) {
            if (_util_ts_5.isPathSeparator(code)) {
                rootEnd = 1;
                if (_util_ts_5.isPathSeparator(path.charCodeAt(1))) {
                    let j = 2;
                    let last = j;
                    for (; j < len; ++j) {
                        if (_util_ts_5.isPathSeparator(path.charCodeAt(j)))
                            break;
                    }
                    if (j < len && j !== last) {
                        last = j;
                        for (; j < len; ++j) {
                            if (!_util_ts_5.isPathSeparator(path.charCodeAt(j)))
                                break;
                        }
                        if (j < len && j !== last) {
                            last = j;
                            for (; j < len; ++j) {
                                if (_util_ts_5.isPathSeparator(path.charCodeAt(j)))
                                    break;
                            }
                            if (j === len) {
                                rootEnd = j;
                            }
                            else if (j !== last) {
                                rootEnd = j + 1;
                            }
                        }
                    }
                }
            }
            else if (_util_ts_5.isWindowsDeviceRoot(code)) {
                if (path.charCodeAt(1) === _constants_ts_11.CHAR_COLON) {
                    rootEnd = 2;
                    if (len > 2) {
                        if (_util_ts_5.isPathSeparator(path.charCodeAt(2))) {
                            if (len === 3) {
                                ret.root = ret.dir = path;
                                return ret;
                            }
                            rootEnd = 3;
                        }
                    }
                    else {
                        ret.root = ret.dir = path;
                        return ret;
                    }
                }
            }
        }
        else if (_util_ts_5.isPathSeparator(code)) {
            ret.root = ret.dir = path;
            return ret;
        }
        if (rootEnd > 0)
            ret.root = path.slice(0, rootEnd);
        let startDot = -1;
        let startPart = rootEnd;
        let end = -1;
        let matchedSlash = true;
        let i = path.length - 1;
        let preDotState = 0;
        for (; i >= rootEnd; --i) {
            code = path.charCodeAt(i);
            if (_util_ts_5.isPathSeparator(code)) {
                if (!matchedSlash) {
                    startPart = i + 1;
                    break;
                }
                continue;
            }
            if (end === -1) {
                matchedSlash = false;
                end = i + 1;
            }
            if (code === _constants_ts_11.CHAR_DOT) {
                if (startDot === -1)
                    startDot = i;
                else if (preDotState !== 1)
                    preDotState = 1;
            }
            else if (startDot !== -1) {
                preDotState = -1;
            }
        }
        if (startDot === -1 ||
            end === -1 ||
            preDotState === 0 ||
            (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)) {
            if (end !== -1) {
                ret.base = ret.name = path.slice(startPart, end);
            }
        }
        else {
            ret.name = path.slice(startPart, startDot);
            ret.base = path.slice(startPart, end);
            ret.ext = path.slice(startDot, end);
        }
        if (startPart > 0 && startPart !== rootEnd) {
            ret.dir = path.slice(0, startPart - 1);
        }
        else
            ret.dir = ret.root;
        return ret;
    }
    exports_408("parse", parse);
    function fromFileUrl(url) {
        url = url instanceof URL ? url : new URL(url);
        if (url.protocol != "file:") {
            throw new TypeError("Must be a file URL.");
        }
        let path = decodeURIComponent(url.pathname
            .replace(/^\/*([A-Za-z]:)(\/|$)/, "$1/")
            .replace(/\//g, "\\"));
        if (url.hostname != "") {
            path = `\\\\${url.hostname}${path}`;
        }
        return path;
    }
    exports_408("fromFileUrl", fromFileUrl);
    return {
        setters: [
            function (_constants_ts_11_1) {
                _constants_ts_11 = _constants_ts_11_1;
            },
            function (_util_ts_5_1) {
                _util_ts_5 = _util_ts_5_1;
            },
            function (assert_ts_12_1) {
                assert_ts_12 = assert_ts_12_1;
            }
        ],
        execute: function () {
            exports_408("sep", sep = "\\");
            exports_408("delimiter", delimiter = ";");
        }
    };
});
System.register("https://deno.land/std@0.63.0/path/posix", ["https://deno.land/std@0.63.0/path/_constants", "https://deno.land/std@0.63.0/path/_util"], function (exports_409, context_409) {
    "use strict";
    var _constants_ts_12, _util_ts_6, sep, delimiter;
    var __moduleName = context_409 && context_409.id;
    function resolve(...pathSegments) {
        let resolvedPath = "";
        let resolvedAbsolute = false;
        for (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
            let path;
            if (i >= 0)
                path = pathSegments[i];
            else {
                if (globalThis.Deno == null) {
                    throw new TypeError("Resolved a relative path without a CWD.");
                }
                path = Deno.cwd();
            }
            _util_ts_6.assertPath(path);
            if (path.length === 0) {
                continue;
            }
            resolvedPath = `${path}/${resolvedPath}`;
            resolvedAbsolute = path.charCodeAt(0) === _constants_ts_12.CHAR_FORWARD_SLASH;
        }
        resolvedPath = _util_ts_6.normalizeString(resolvedPath, !resolvedAbsolute, "/", _util_ts_6.isPosixPathSeparator);
        if (resolvedAbsolute) {
            if (resolvedPath.length > 0)
                return `/${resolvedPath}`;
            else
                return "/";
        }
        else if (resolvedPath.length > 0)
            return resolvedPath;
        else
            return ".";
    }
    exports_409("resolve", resolve);
    function normalize(path) {
        _util_ts_6.assertPath(path);
        if (path.length === 0)
            return ".";
        const isAbsolute = path.charCodeAt(0) === _constants_ts_12.CHAR_FORWARD_SLASH;
        const trailingSeparator = path.charCodeAt(path.length - 1) === _constants_ts_12.CHAR_FORWARD_SLASH;
        path = _util_ts_6.normalizeString(path, !isAbsolute, "/", _util_ts_6.isPosixPathSeparator);
        if (path.length === 0 && !isAbsolute)
            path = ".";
        if (path.length > 0 && trailingSeparator)
            path += "/";
        if (isAbsolute)
            return `/${path}`;
        return path;
    }
    exports_409("normalize", normalize);
    function isAbsolute(path) {
        _util_ts_6.assertPath(path);
        return path.length > 0 && path.charCodeAt(0) === _constants_ts_12.CHAR_FORWARD_SLASH;
    }
    exports_409("isAbsolute", isAbsolute);
    function join(...paths) {
        if (paths.length === 0)
            return ".";
        let joined;
        for (let i = 0, len = paths.length; i < len; ++i) {
            const path = paths[i];
            _util_ts_6.assertPath(path);
            if (path.length > 0) {
                if (!joined)
                    joined = path;
                else
                    joined += `/${path}`;
            }
        }
        if (!joined)
            return ".";
        return normalize(joined);
    }
    exports_409("join", join);
    function relative(from, to) {
        _util_ts_6.assertPath(from);
        _util_ts_6.assertPath(to);
        if (from === to)
            return "";
        from = resolve(from);
        to = resolve(to);
        if (from === to)
            return "";
        let fromStart = 1;
        const fromEnd = from.length;
        for (; fromStart < fromEnd; ++fromStart) {
            if (from.charCodeAt(fromStart) !== _constants_ts_12.CHAR_FORWARD_SLASH)
                break;
        }
        const fromLen = fromEnd - fromStart;
        let toStart = 1;
        const toEnd = to.length;
        for (; toStart < toEnd; ++toStart) {
            if (to.charCodeAt(toStart) !== _constants_ts_12.CHAR_FORWARD_SLASH)
                break;
        }
        const toLen = toEnd - toStart;
        const length = fromLen < toLen ? fromLen : toLen;
        let lastCommonSep = -1;
        let i = 0;
        for (; i <= length; ++i) {
            if (i === length) {
                if (toLen > length) {
                    if (to.charCodeAt(toStart + i) === _constants_ts_12.CHAR_FORWARD_SLASH) {
                        return to.slice(toStart + i + 1);
                    }
                    else if (i === 0) {
                        return to.slice(toStart + i);
                    }
                }
                else if (fromLen > length) {
                    if (from.charCodeAt(fromStart + i) === _constants_ts_12.CHAR_FORWARD_SLASH) {
                        lastCommonSep = i;
                    }
                    else if (i === 0) {
                        lastCommonSep = 0;
                    }
                }
                break;
            }
            const fromCode = from.charCodeAt(fromStart + i);
            const toCode = to.charCodeAt(toStart + i);
            if (fromCode !== toCode)
                break;
            else if (fromCode === _constants_ts_12.CHAR_FORWARD_SLASH)
                lastCommonSep = i;
        }
        let out = "";
        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {
            if (i === fromEnd || from.charCodeAt(i) === _constants_ts_12.CHAR_FORWARD_SLASH) {
                if (out.length === 0)
                    out += "..";
                else
                    out += "/..";
            }
        }
        if (out.length > 0)
            return out + to.slice(toStart + lastCommonSep);
        else {
            toStart += lastCommonSep;
            if (to.charCodeAt(toStart) === _constants_ts_12.CHAR_FORWARD_SLASH)
                ++toStart;
            return to.slice(toStart);
        }
    }
    exports_409("relative", relative);
    function toNamespacedPath(path) {
        return path;
    }
    exports_409("toNamespacedPath", toNamespacedPath);
    function dirname(path) {
        _util_ts_6.assertPath(path);
        if (path.length === 0)
            return ".";
        const hasRoot = path.charCodeAt(0) === _constants_ts_12.CHAR_FORWARD_SLASH;
        let end = -1;
        let matchedSlash = true;
        for (let i = path.length - 1; i >= 1; --i) {
            if (path.charCodeAt(i) === _constants_ts_12.CHAR_FORWARD_SLASH) {
                if (!matchedSlash) {
                    end = i;
                    break;
                }
            }
            else {
                matchedSlash = false;
            }
        }
        if (end === -1)
            return hasRoot ? "/" : ".";
        if (hasRoot && end === 1)
            return "//";
        return path.slice(0, end);
    }
    exports_409("dirname", dirname);
    function basename(path, ext = "") {
        if (ext !== undefined && typeof ext !== "string") {
            throw new TypeError('"ext" argument must be a string');
        }
        _util_ts_6.assertPath(path);
        let start = 0;
        let end = -1;
        let matchedSlash = true;
        let i;
        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {
            if (ext.length === path.length && ext === path)
                return "";
            let extIdx = ext.length - 1;
            let firstNonSlashEnd = -1;
            for (i = path.length - 1; i >= 0; --i) {
                const code = path.charCodeAt(i);
                if (code === _constants_ts_12.CHAR_FORWARD_SLASH) {
                    if (!matchedSlash) {
                        start = i + 1;
                        break;
                    }
                }
                else {
                    if (firstNonSlashEnd === -1) {
                        matchedSlash = false;
                        firstNonSlashEnd = i + 1;
                    }
                    if (extIdx >= 0) {
                        if (code === ext.charCodeAt(extIdx)) {
                            if (--extIdx === -1) {
                                end = i;
                            }
                        }
                        else {
                            extIdx = -1;
                            end = firstNonSlashEnd;
                        }
                    }
                }
            }
            if (start === end)
                end = firstNonSlashEnd;
            else if (end === -1)
                end = path.length;
            return path.slice(start, end);
        }
        else {
            for (i = path.length - 1; i >= 0; --i) {
                if (path.charCodeAt(i) === _constants_ts_12.CHAR_FORWARD_SLASH) {
                    if (!matchedSlash) {
                        start = i + 1;
                        break;
                    }
                }
                else if (end === -1) {
                    matchedSlash = false;
                    end = i + 1;
                }
            }
            if (end === -1)
                return "";
            return path.slice(start, end);
        }
    }
    exports_409("basename", basename);
    function extname(path) {
        _util_ts_6.assertPath(path);
        let startDot = -1;
        let startPart = 0;
        let end = -1;
        let matchedSlash = true;
        let preDotState = 0;
        for (let i = path.length - 1; i >= 0; --i) {
            const code = path.charCodeAt(i);
            if (code === _constants_ts_12.CHAR_FORWARD_SLASH) {
                if (!matchedSlash) {
                    startPart = i + 1;
                    break;
                }
                continue;
            }
            if (end === -1) {
                matchedSlash = false;
                end = i + 1;
            }
            if (code === _constants_ts_12.CHAR_DOT) {
                if (startDot === -1)
                    startDot = i;
                else if (preDotState !== 1)
                    preDotState = 1;
            }
            else if (startDot !== -1) {
                preDotState = -1;
            }
        }
        if (startDot === -1 ||
            end === -1 ||
            preDotState === 0 ||
            (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)) {
            return "";
        }
        return path.slice(startDot, end);
    }
    exports_409("extname", extname);
    function format(pathObject) {
        if (pathObject === null || typeof pathObject !== "object") {
            throw new TypeError(`The "pathObject" argument must be of type Object. Received type ${typeof pathObject}`);
        }
        return _util_ts_6._format("/", pathObject);
    }
    exports_409("format", format);
    function parse(path) {
        _util_ts_6.assertPath(path);
        const ret = { root: "", dir: "", base: "", ext: "", name: "" };
        if (path.length === 0)
            return ret;
        const isAbsolute = path.charCodeAt(0) === _constants_ts_12.CHAR_FORWARD_SLASH;
        let start;
        if (isAbsolute) {
            ret.root = "/";
            start = 1;
        }
        else {
            start = 0;
        }
        let startDot = -1;
        let startPart = 0;
        let end = -1;
        let matchedSlash = true;
        let i = path.length - 1;
        let preDotState = 0;
        for (; i >= start; --i) {
            const code = path.charCodeAt(i);
            if (code === _constants_ts_12.CHAR_FORWARD_SLASH) {
                if (!matchedSlash) {
                    startPart = i + 1;
                    break;
                }
                continue;
            }
            if (end === -1) {
                matchedSlash = false;
                end = i + 1;
            }
            if (code === _constants_ts_12.CHAR_DOT) {
                if (startDot === -1)
                    startDot = i;
                else if (preDotState !== 1)
                    preDotState = 1;
            }
            else if (startDot !== -1) {
                preDotState = -1;
            }
        }
        if (startDot === -1 ||
            end === -1 ||
            preDotState === 0 ||
            (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)) {
            if (end !== -1) {
                if (startPart === 0 && isAbsolute) {
                    ret.base = ret.name = path.slice(1, end);
                }
                else {
                    ret.base = ret.name = path.slice(startPart, end);
                }
            }
        }
        else {
            if (startPart === 0 && isAbsolute) {
                ret.name = path.slice(1, startDot);
                ret.base = path.slice(1, end);
            }
            else {
                ret.name = path.slice(startPart, startDot);
                ret.base = path.slice(startPart, end);
            }
            ret.ext = path.slice(startDot, end);
        }
        if (startPart > 0)
            ret.dir = path.slice(0, startPart - 1);
        else if (isAbsolute)
            ret.dir = "/";
        return ret;
    }
    exports_409("parse", parse);
    function fromFileUrl(url) {
        url = url instanceof URL ? url : new URL(url);
        if (url.protocol != "file:") {
            throw new TypeError("Must be a file URL.");
        }
        return decodeURIComponent(url.pathname);
    }
    exports_409("fromFileUrl", fromFileUrl);
    return {
        setters: [
            function (_constants_ts_12_1) {
                _constants_ts_12 = _constants_ts_12_1;
            },
            function (_util_ts_6_1) {
                _util_ts_6 = _util_ts_6_1;
            }
        ],
        execute: function () {
            exports_409("sep", sep = "/");
            exports_409("delimiter", delimiter = ":");
        }
    };
});
System.register("https://deno.land/std@0.63.0/path/separator", ["https://deno.land/std@0.63.0/path/_constants"], function (exports_410, context_410) {
    "use strict";
    var _constants_ts_13, SEP, SEP_PATTERN;
    var __moduleName = context_410 && context_410.id;
    return {
        setters: [
            function (_constants_ts_13_1) {
                _constants_ts_13 = _constants_ts_13_1;
            }
        ],
        execute: function () {
            exports_410("SEP", SEP = _constants_ts_13.isWindows ? "\\" : "/");
            exports_410("SEP_PATTERN", SEP_PATTERN = _constants_ts_13.isWindows ? /[\\/]+/ : /\/+/);
        }
    };
});
System.register("https://deno.land/std@0.63.0/path/common", ["https://deno.land/std@0.63.0/path/separator"], function (exports_411, context_411) {
    "use strict";
    var separator_ts_7;
    var __moduleName = context_411 && context_411.id;
    function common(paths, sep = separator_ts_7.SEP) {
        const [first = "", ...remaining] = paths;
        if (first === "" || remaining.length === 0) {
            return first.substring(0, first.lastIndexOf(sep) + 1);
        }
        const parts = first.split(sep);
        let endOfPrefix = parts.length;
        for (const path of remaining) {
            const compare = path.split(sep);
            for (let i = 0; i < endOfPrefix; i++) {
                if (compare[i] !== parts[i]) {
                    endOfPrefix = i;
                }
            }
            if (endOfPrefix === 0) {
                return "";
            }
        }
        const prefix = parts.slice(0, endOfPrefix).join(sep);
        return prefix.endsWith(sep) ? prefix : `${prefix}${sep}`;
    }
    exports_411("common", common);
    return {
        setters: [
            function (separator_ts_7_1) {
                separator_ts_7 = separator_ts_7_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/std@0.63.0/path/_globrex", ["https://deno.land/std@0.63.0/path/_constants"], function (exports_412, context_412) {
    "use strict";
    var _constants_ts_14, SEP, SEP_ESC, SEP_RAW, GLOBSTAR, WILDCARD, GLOBSTAR_SEGMENT, WILDCARD_SEGMENT;
    var __moduleName = context_412 && context_412.id;
    function globrex(glob, { extended = false, globstar = false, strict = false, filepath = false, flags = "", } = {}) {
        const sepPattern = new RegExp(`^${SEP}${strict ? "" : "+"}$`);
        let regex = "";
        let segment = "";
        let pathRegexStr = "";
        const pathSegments = [];
        let inGroup = false;
        let inRange = false;
        const ext = [];
        function add(str, options = { split: false, last: false, only: "" }) {
            const { split, last, only } = options;
            if (only !== "path")
                regex += str;
            if (filepath && only !== "regex") {
                pathRegexStr += str.match(sepPattern) ? SEP : str;
                if (split) {
                    if (last)
                        segment += str;
                    if (segment !== "") {
                        if (!flags.includes("g"))
                            segment = `^${segment}$`;
                        pathSegments.push(new RegExp(segment, flags));
                    }
                    segment = "";
                }
                else {
                    segment += str;
                }
            }
        }
        let c, n;
        for (let i = 0; i < glob.length; i++) {
            c = glob[i];
            n = glob[i + 1];
            if (["\\", "$", "^", ".", "="].includes(c)) {
                add(`\\${c}`);
                continue;
            }
            if (c.match(sepPattern)) {
                add(SEP, { split: true });
                if (n != null && n.match(sepPattern) && !strict)
                    regex += "?";
                continue;
            }
            if (c === "(") {
                if (ext.length) {
                    add(`${c}?:`);
                    continue;
                }
                add(`\\${c}`);
                continue;
            }
            if (c === ")") {
                if (ext.length) {
                    add(c);
                    const type = ext.pop();
                    if (type === "@") {
                        add("{1}");
                    }
                    else if (type === "!") {
                        add(WILDCARD);
                    }
                    else {
                        add(type);
                    }
                    continue;
                }
                add(`\\${c}`);
                continue;
            }
            if (c === "|") {
                if (ext.length) {
                    add(c);
                    continue;
                }
                add(`\\${c}`);
                continue;
            }
            if (c === "+") {
                if (n === "(" && extended) {
                    ext.push(c);
                    continue;
                }
                add(`\\${c}`);
                continue;
            }
            if (c === "@" && extended) {
                if (n === "(") {
                    ext.push(c);
                    continue;
                }
            }
            if (c === "!") {
                if (extended) {
                    if (inRange) {
                        add("^");
                        continue;
                    }
                    if (n === "(") {
                        ext.push(c);
                        add("(?!");
                        i++;
                        continue;
                    }
                    add(`\\${c}`);
                    continue;
                }
                add(`\\${c}`);
                continue;
            }
            if (c === "?") {
                if (extended) {
                    if (n === "(") {
                        ext.push(c);
                    }
                    else {
                        add(".");
                    }
                    continue;
                }
                add(`\\${c}`);
                continue;
            }
            if (c === "[") {
                if (inRange && n === ":") {
                    i++;
                    let value = "";
                    while (glob[++i] !== ":")
                        value += glob[i];
                    if (value === "alnum")
                        add("(?:\\w|\\d)");
                    else if (value === "space")
                        add("\\s");
                    else if (value === "digit")
                        add("\\d");
                    i++;
                    continue;
                }
                if (extended) {
                    inRange = true;
                    add(c);
                    continue;
                }
                add(`\\${c}`);
                continue;
            }
            if (c === "]") {
                if (extended) {
                    inRange = false;
                    add(c);
                    continue;
                }
                add(`\\${c}`);
                continue;
            }
            if (c === "{") {
                if (extended) {
                    inGroup = true;
                    add("(?:");
                    continue;
                }
                add(`\\${c}`);
                continue;
            }
            if (c === "}") {
                if (extended) {
                    inGroup = false;
                    add(")");
                    continue;
                }
                add(`\\${c}`);
                continue;
            }
            if (c === ",") {
                if (inGroup) {
                    add("|");
                    continue;
                }
                add(`\\${c}`);
                continue;
            }
            if (c === "*") {
                if (n === "(" && extended) {
                    ext.push(c);
                    continue;
                }
                const prevChar = glob[i - 1];
                let starCount = 1;
                while (glob[i + 1] === "*") {
                    starCount++;
                    i++;
                }
                const nextChar = glob[i + 1];
                if (!globstar) {
                    add(".*");
                }
                else {
                    const isGlobstar = starCount > 1 &&
                        [SEP_RAW, "/", undefined].includes(prevChar) &&
                        [SEP_RAW, "/", undefined].includes(nextChar);
                    if (isGlobstar) {
                        add(GLOBSTAR, { only: "regex" });
                        add(GLOBSTAR_SEGMENT, { only: "path", last: true, split: true });
                        i++;
                    }
                    else {
                        add(WILDCARD, { only: "regex" });
                        add(WILDCARD_SEGMENT, { only: "path" });
                    }
                }
                continue;
            }
            add(c);
        }
        if (!flags.includes("g")) {
            regex = `^${regex}$`;
            segment = `^${segment}$`;
            if (filepath)
                pathRegexStr = `^${pathRegexStr}$`;
        }
        const result = { regex: new RegExp(regex, flags) };
        if (filepath) {
            pathSegments.push(new RegExp(segment, flags));
            result.path = {
                regex: new RegExp(pathRegexStr, flags),
                segments: pathSegments,
                globstar: new RegExp(!flags.includes("g") ? `^${GLOBSTAR_SEGMENT}$` : GLOBSTAR_SEGMENT, flags),
            };
        }
        return result;
    }
    exports_412("globrex", globrex);
    return {
        setters: [
            function (_constants_ts_14_1) {
                _constants_ts_14 = _constants_ts_14_1;
            }
        ],
        execute: function () {
            SEP = _constants_ts_14.isWindows ? `(?:\\\\|\\/)` : `\\/`;
            SEP_ESC = _constants_ts_14.isWindows ? `\\\\` : `/`;
            SEP_RAW = _constants_ts_14.isWindows ? `\\` : `/`;
            GLOBSTAR = `(?:(?:[^${SEP_ESC}/]*(?:${SEP_ESC}|\/|$))*)`;
            WILDCARD = `(?:[^${SEP_ESC}/]*)`;
            GLOBSTAR_SEGMENT = `((?:[^${SEP_ESC}/]*(?:${SEP_ESC}|\/|$))*)`;
            WILDCARD_SEGMENT = `(?:[^${SEP_ESC}/]*)`;
        }
    };
});
System.register("https://deno.land/std@0.63.0/path/glob", ["https://deno.land/std@0.63.0/path/separator", "https://deno.land/std@0.63.0/path/_globrex", "https://deno.land/std@0.63.0/path/mod", "https://deno.land/std@0.63.0/_util/assert"], function (exports_413, context_413) {
    "use strict";
    var separator_ts_8, _globrex_ts_3, mod_ts_49, assert_ts_13;
    var __moduleName = context_413 && context_413.id;
    function globToRegExp(glob, { extended = false, globstar = true } = {}) {
        const result = _globrex_ts_3.globrex(glob, {
            extended,
            globstar,
            strict: false,
            filepath: true,
        });
        assert_ts_13.assert(result.path != null);
        return result.path.regex;
    }
    exports_413("globToRegExp", globToRegExp);
    function isGlob(str) {
        const chars = { "{": "}", "(": ")", "[": "]" };
        const regex = /\\(.)|(^!|\*|[\].+)]\?|\[[^\\\]]+\]|\{[^\\}]+\}|\(\?[:!=][^\\)]+\)|\([^|]+\|[^\\)]+\))/;
        if (str === "") {
            return false;
        }
        let match;
        while ((match = regex.exec(str))) {
            if (match[2])
                return true;
            let idx = match.index + match[0].length;
            const open = match[1];
            const close = open ? chars[open] : null;
            if (open && close) {
                const n = str.indexOf(close, idx);
                if (n !== -1) {
                    idx = n + 1;
                }
            }
            str = str.slice(idx);
        }
        return false;
    }
    exports_413("isGlob", isGlob);
    function normalizeGlob(glob, { globstar = false } = {}) {
        if (glob.match(/\0/g)) {
            throw new Error(`Glob contains invalid characters: "${glob}"`);
        }
        if (!globstar) {
            return mod_ts_49.normalize(glob);
        }
        const s = separator_ts_8.SEP_PATTERN.source;
        const badParentPattern = new RegExp(`(?<=(${s}|^)\\*\\*${s})\\.\\.(?=${s}|$)`, "g");
        return mod_ts_49.normalize(glob.replace(badParentPattern, "\0")).replace(/\0/g, "..");
    }
    exports_413("normalizeGlob", normalizeGlob);
    function joinGlobs(globs, { extended = false, globstar = false } = {}) {
        if (!globstar || globs.length == 0) {
            return mod_ts_49.join(...globs);
        }
        if (globs.length === 0)
            return ".";
        let joined;
        for (const glob of globs) {
            const path = glob;
            if (path.length > 0) {
                if (!joined)
                    joined = path;
                else
                    joined += `${separator_ts_8.SEP}${path}`;
            }
        }
        if (!joined)
            return ".";
        return normalizeGlob(joined, { extended, globstar });
    }
    exports_413("joinGlobs", joinGlobs);
    return {
        setters: [
            function (separator_ts_8_1) {
                separator_ts_8 = separator_ts_8_1;
            },
            function (_globrex_ts_3_1) {
                _globrex_ts_3 = _globrex_ts_3_1;
            },
            function (mod_ts_49_1) {
                mod_ts_49 = mod_ts_49_1;
            },
            function (assert_ts_13_1) {
                assert_ts_13 = assert_ts_13_1;
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/std@0.63.0/path/mod", ["https://deno.land/std@0.63.0/path/_constants", "https://deno.land/std@0.63.0/path/win32", "https://deno.land/std@0.63.0/path/posix", "https://deno.land/std@0.63.0/path/common", "https://deno.land/std@0.63.0/path/separator", "https://deno.land/std@0.63.0/path/_interface", "https://deno.land/std@0.63.0/path/glob"], function (exports_414, context_414) {
    "use strict";
    var _constants_ts_15, _win32, _posix, path, win32, posix, basename, delimiter, dirname, extname, format, fromFileUrl, isAbsolute, join, normalize, parse, relative, resolve, sep, toNamespacedPath;
    var __moduleName = context_414 && context_414.id;
    var exportedNames_4 = {
        "win32": true,
        "posix": true,
        "basename": true,
        "delimiter": true,
        "dirname": true,
        "extname": true,
        "format": true,
        "fromFileUrl": true,
        "isAbsolute": true,
        "join": true,
        "normalize": true,
        "parse": true,
        "relative": true,
        "resolve": true,
        "sep": true,
        "toNamespacedPath": true,
        "SEP": true,
        "SEP_PATTERN": true
    };
    function exportStar_12(m) {
        var exports = {};
        for (var n in m) {
            if (n !== "default" && !exportedNames_4.hasOwnProperty(n)) exports[n] = m[n];
        }
        exports_414(exports);
    }
    return {
        setters: [
            function (_constants_ts_15_1) {
                _constants_ts_15 = _constants_ts_15_1;
            },
            function (_win32_3) {
                _win32 = _win32_3;
            },
            function (_posix_3) {
                _posix = _posix_3;
            },
            function (common_ts_3_1) {
                exportStar_12(common_ts_3_1);
            },
            function (separator_ts_9_1) {
                exports_414({
                    "SEP": separator_ts_9_1["SEP"],
                    "SEP_PATTERN": separator_ts_9_1["SEP_PATTERN"]
                });
            },
            function (_interface_ts_2_1) {
                exportStar_12(_interface_ts_2_1);
            },
            function (glob_ts_3_1) {
                exportStar_12(glob_ts_3_1);
            }
        ],
        execute: function () {
            path = _constants_ts_15.isWindows ? _win32 : _posix;
            exports_414("win32", win32 = _win32);
            exports_414("posix", posix = _posix);
            exports_414("basename", basename = path.basename), exports_414("delimiter", delimiter = path.delimiter), exports_414("dirname", dirname = path.dirname), exports_414("extname", extname = path.extname), exports_414("format", format = path.format), exports_414("fromFileUrl", fromFileUrl = path.fromFileUrl), exports_414("isAbsolute", isAbsolute = path.isAbsolute), exports_414("join", join = path.join), exports_414("normalize", normalize = path.normalize), exports_414("parse", parse = path.parse), exports_414("relative", relative = path.relative), exports_414("resolve", resolve = path.resolve), exports_414("sep", sep = path.sep), exports_414("toNamespacedPath", toNamespacedPath = path.toNamespacedPath);
        }
    };
});
System.register("https://deno.land/x/plugin_prepare@v0.7.2/deps", ["https://deno.land/std@0.63.0/fs/exists", "https://deno.land/std@0.63.0/log/mod", "https://deno.land/std@0.63.0/path/mod", "https://deno.land/x/checksum@1.4.0/mod"], function (exports_415, context_415) {
    "use strict";
    var __moduleName = context_415 && context_415.id;
    return {
        setters: [
            function (exists_ts_3_1) {
                exports_415({
                    "exists": exists_ts_3_1["exists"]
                });
            },
            function (log_2) {
                exports_415("log", log_2);
            },
            function (path_5) {
                exports_415("path", path_5);
            },
            function (mod_ts_50_1) {
                exports_415({
                    "Hash": mod_ts_50_1["Hash"]
                });
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/plugin_prepare@v0.7.2/mod", ["https://deno.land/x/plugin_prepare@v0.7.2/deps"], function (exports_416, context_416) {
    "use strict";
    var deps_ts_26, os, md5, PLUGIN_SUFFIX_MAP, pluginSuffix;
    var __moduleName = context_416 && context_416.id;
    async function download(options) {
        const { name, urls, checkCache = true } = options;
        const remoteUrl = urls[os];
        const remoteHash = md5.digestString(remoteUrl + pluginSuffix).hex();
        const cacheFileName = `${name}_${remoteHash}${pluginSuffix}`;
        const localPath = deps_ts_26.path.resolve(".deno_plugins", cacheFileName);
        await Deno.mkdir(".deno_plugins", { recursive: true });
        if (!(await deps_ts_26.exists(localPath)) || !checkCache) {
            if (!remoteUrl) {
                throw Error(`"${name}" plugin does not provide binaries suitable for the current system`);
            }
            if (remoteUrl.startsWith("file://")) {
                const fromPath = deps_ts_26.path.resolve(remoteUrl.slice(7));
                await copyFromLocal(name, fromPath, localPath);
            }
            else {
                await downloadFromRemote(name, remoteUrl, localPath);
            }
        }
        return localPath;
    }
    exports_416("download", download);
    async function prepare(options) {
        const { name, printLog = true } = options;
        if (printLog) {
            await deps_ts_26.log.setup({});
        }
        const localPath = await download(options);
        deps_ts_26.log.info(`load deno plugin "${name}" from local "${localPath}"`);
        return Deno.openPlugin(localPath);
    }
    exports_416("prepare", prepare);
    async function downloadFromRemote(name, remoteUrl, savePath) {
        deps_ts_26.log.info(`downloading deno plugin "${name}" from "${remoteUrl}"`);
        const download = await fetch(remoteUrl);
        if (download.status !== 200) {
            throw Error(`downloading plugin "${name}" from "${remoteUrl}" failed.`);
        }
        const pluginFileData = await download.arrayBuffer();
        await Deno.writeFile(savePath, new Uint8Array(pluginFileData));
    }
    async function copyFromLocal(name, from, to) {
        deps_ts_26.log.info(`copy deno plugin "${name}" from "${from}"`);
        if (!(await deps_ts_26.exists(from))) {
            throw Error(`copy plugin "${name}" from "${from}" failed, ${from} does not exist.`);
        }
        await Deno.copyFile(from, to);
    }
    return {
        setters: [
            function (deps_ts_26_1) {
                deps_ts_26 = deps_ts_26_1;
            }
        ],
        execute: function () {
            os = Deno.build.os;
            md5 = new deps_ts_26.Hash("md5");
            PLUGIN_SUFFIX_MAP = {
                darwin: ".dylib",
                linux: ".so",
                windows: ".dll",
            };
            pluginSuffix = PLUGIN_SUFFIX_MAP[os];
        }
    };
});
System.register("https://raw.githubusercontent.com/eveningkid/deno_mongo/master/deps", ["https://deno.land/x/plugin_prepare@v0.7.2/mod"], function (exports_417, context_417) {
    "use strict";
    var __moduleName = context_417 && context_417.id;
    return {
        setters: [
            function (mod_ts_51_1) {
                exports_417({
                    "prepare": mod_ts_51_1["prepare"]
                });
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://raw.githubusercontent.com/eveningkid/deno_mongo/master/ts/util", ["https://raw.githubusercontent.com/eveningkid/deno_mongo/master/deps"], function (exports_418, context_418) {
    "use strict";
    var deps_ts_27, DenoCore, PLUGIN_NAME, mongoPluginId, decoder, encoder, pendingCommands, nextCommandId;
    var __moduleName = context_418 && context_418.id;
    async function init(releaseUrl) {
        const options = {
            name: PLUGIN_NAME,
            urls: {
                darwin: `${releaseUrl}/lib${PLUGIN_NAME}.dylib`,
                windows: `${releaseUrl}/${PLUGIN_NAME}.dll`,
                linux: `${releaseUrl}/lib${PLUGIN_NAME}.so`,
            },
        };
        await deps_ts_27.prepare(options);
        mongoPluginId = DenoCore.ops()["mongo_command"];
        DenoCore.setAsyncHandler(mongoPluginId, (msg) => {
            const { command_id, data, error } = JSON.parse(decoder.decode(msg));
            const command = pendingCommands.get(command_id);
            if (command) {
                if (error)
                    command.reject(new Error(error));
                else
                    command.resolve(data);
            }
        });
    }
    exports_418("init", init);
    function encode(str) {
        return encoder.encode(str);
    }
    exports_418("encode", encode);
    function decode(data) {
        return decoder.decode(data);
    }
    exports_418("decode", decode);
    function dispatch(command, ...data) {
        const control = encoder.encode(JSON.stringify(command));
        if (!mongoPluginId) {
            throw new Error("The plugin must be initialized before use");
        }
        const msg = DenoCore.dispatch(mongoPluginId, control, ...data);
        const { data: res, error } = JSON.parse(decoder.decode(msg));
        if (error)
            throw new Error(error);
        return res;
    }
    exports_418("dispatch", dispatch);
    function dispatchAsync(command, ...data) {
        return new Promise((resolve, reject) => {
            const commandId = nextCommandId++;
            pendingCommands.set(commandId, { resolve, reject });
            const control = encoder.encode(JSON.stringify({
                ...command,
                command_id: commandId,
            }));
            if (!mongoPluginId) {
                throw new Error("The plugin must be initialized before use");
            }
            DenoCore.dispatch(mongoPluginId, control, ...data);
        });
    }
    exports_418("dispatchAsync", dispatchAsync);
    return {
        setters: [
            function (deps_ts_27_1) {
                deps_ts_27 = deps_ts_27_1;
            }
        ],
        execute: function () {
            DenoCore = Deno.core;
            PLUGIN_NAME = "deno_mongo";
            decoder = new TextDecoder();
            encoder = new TextEncoder();
            pendingCommands = new Map();
            nextCommandId = 0;
        }
    };
});
System.register("https://raw.githubusercontent.com/eveningkid/deno_mongo/master/ts/collection", ["https://raw.githubusercontent.com/eveningkid/deno_mongo/master/ts/types", "https://raw.githubusercontent.com/eveningkid/deno_mongo/master/ts/type_convert", "https://raw.githubusercontent.com/eveningkid/deno_mongo/master/ts/util"], function (exports_419, context_419) {
    "use strict";
    var types_ts_1, type_convert_ts_1, util_ts_4, BSONType, Collection;
    var __moduleName = context_419 && context_419.id;
    return {
        setters: [
            function (types_ts_1_1) {
                types_ts_1 = types_ts_1_1;
            },
            function (type_convert_ts_1_1) {
                type_convert_ts_1 = type_convert_ts_1_1;
            },
            function (util_ts_4_1) {
                util_ts_4 = util_ts_4_1;
            }
        ],
        execute: function () {
            (function (BSONType) {
                BSONType[BSONType["Double"] = 1] = "Double";
                BSONType[BSONType["String"] = 2] = "String";
                BSONType[BSONType["Object"] = 3] = "Object";
                BSONType[BSONType["Array"] = 4] = "Array";
                BSONType[BSONType["BinData"] = 5] = "BinData";
                BSONType[BSONType["Undefined"] = 6] = "Undefined";
                BSONType[BSONType["ObjectId"] = 7] = "ObjectId";
                BSONType[BSONType["Boolean"] = 8] = "Boolean";
                BSONType[BSONType["Date"] = 9] = "Date";
                BSONType[BSONType["Null"] = 10] = "Null";
                BSONType[BSONType["Regex"] = 11] = "Regex";
                BSONType[BSONType["DBPointer"] = 12] = "DBPointer";
                BSONType[BSONType["JavaScript"] = 13] = "JavaScript";
                BSONType[BSONType["Symbol"] = 14] = "Symbol";
                BSONType[BSONType["JavaScriptWithScope"] = 15] = "JavaScriptWithScope";
                BSONType[BSONType["Int"] = 16] = "Int";
                BSONType[BSONType["Timestamp"] = 17] = "Timestamp";
                BSONType[BSONType["Long"] = 18] = "Long";
                BSONType[BSONType["Decimal"] = 19] = "Decimal";
                BSONType[BSONType["MinKey"] = -1] = "MinKey";
                BSONType[BSONType["MaxKey"] = 127] = "MaxKey";
            })(BSONType || (BSONType = {}));
            exports_419("BSONType", BSONType);
            Collection = class Collection {
                constructor(client, dbName, collectionName) {
                    this.client = client;
                    this.dbName = dbName;
                    this.collectionName = collectionName;
                }
                async _find(filter, options) {
                    const doc = await util_ts_4.dispatchAsync({
                        command_type: types_ts_1.CommandType.Find,
                        client_id: this.client.clientId,
                    }, util_ts_4.encode(JSON.stringify({
                        dbName: this.dbName,
                        collectionName: this.collectionName,
                        filter,
                        ...options,
                    })));
                    return doc;
                }
                async count(filter) {
                    const count = await util_ts_4.dispatchAsync({
                        command_type: types_ts_1.CommandType.Count,
                        client_id: this.client.clientId,
                    }, util_ts_4.encode(JSON.stringify({
                        dbName: this.dbName,
                        collectionName: this.collectionName,
                        filter,
                    })));
                    return count;
                }
                async findOne(filter) {
                    return type_convert_ts_1.parse(await this._find(filter, { findOne: true }))[0] ?? null;
                }
                async find(filter, options) {
                    return type_convert_ts_1.parse(await this._find(filter, { findOne: false, ...options }));
                }
                async insertOne(doc) {
                    const _id = await util_ts_4.dispatchAsync({
                        command_type: types_ts_1.CommandType.InsertOne,
                        client_id: this.client.clientId,
                    }, util_ts_4.encode(JSON.stringify({
                        dbName: this.dbName,
                        collectionName: this.collectionName,
                        doc: type_convert_ts_1.convert(doc),
                    })));
                    return _id;
                }
                async insertMany(docs) {
                    const _ids = await util_ts_4.dispatchAsync({
                        command_type: types_ts_1.CommandType.InsertMany,
                        client_id: this.client.clientId,
                    }, util_ts_4.encode(JSON.stringify({
                        dbName: this.dbName,
                        collectionName: this.collectionName,
                        docs: type_convert_ts_1.convert(docs),
                    })));
                    return _ids;
                }
                async _delete(query, deleteOne = false) {
                    const deleteCount = await util_ts_4.dispatchAsync({
                        command_type: types_ts_1.CommandType.Delete,
                        client_id: this.client.clientId,
                    }, util_ts_4.encode(JSON.stringify({
                        dbName: this.dbName,
                        collectionName: this.collectionName,
                        query,
                        deleteOne,
                    })));
                    return deleteCount;
                }
                deleteOne(query) {
                    return this._delete(query, true);
                }
                deleteMany(query) {
                    return this._delete(query, false);
                }
                async _update(query, update, updateOne = false, options) {
                    const result = await util_ts_4.dispatchAsync({
                        command_type: types_ts_1.CommandType.Update,
                        client_id: this.client.clientId,
                    }, util_ts_4.encode(JSON.stringify({
                        dbName: this.dbName,
                        collectionName: this.collectionName,
                        query: type_convert_ts_1.convert(query),
                        update: type_convert_ts_1.convert(update),
                        updateOne,
                        options: options ?? null,
                    })));
                    return result;
                }
                updateOne(query, update, options) {
                    return this._update(query, update, true, options);
                }
                updateMany(query, update, options) {
                    return this._update(query, update, false, options);
                }
                async aggregate(pipeline) {
                    const docs = await util_ts_4.dispatchAsync({
                        command_type: types_ts_1.CommandType.Aggregate,
                        client_id: this.client.clientId,
                    }, util_ts_4.encode(JSON.stringify({
                        dbName: this.dbName,
                        collectionName: this.collectionName,
                        pipeline,
                    })));
                    return type_convert_ts_1.parse(docs);
                }
                async createIndexes(models) {
                    const docs = await util_ts_4.dispatchAsync({
                        command_type: types_ts_1.CommandType.CreateIndexes,
                        client_id: this.client.clientId,
                    }, util_ts_4.encode(JSON.stringify({
                        dbName: this.dbName,
                        collectionName: this.collectionName,
                        models,
                    })));
                    return docs;
                }
                async distinct(fieldName, filter) {
                    const docs = await util_ts_4.dispatchAsync({
                        command_type: types_ts_1.CommandType.Distinct,
                        client_id: this.client.clientId,
                    }, util_ts_4.encode(JSON.stringify({
                        dbName: this.dbName,
                        collectionName: this.collectionName,
                        fieldName,
                    })));
                    return type_convert_ts_1.parse(docs);
                }
            };
            exports_419("Collection", Collection);
        }
    };
});
System.register("https://raw.githubusercontent.com/eveningkid/deno_mongo/master/ts/database", ["https://raw.githubusercontent.com/eveningkid/deno_mongo/master/ts/collection", "https://raw.githubusercontent.com/eveningkid/deno_mongo/master/ts/types", "https://raw.githubusercontent.com/eveningkid/deno_mongo/master/ts/util"], function (exports_420, context_420) {
    "use strict";
    var collection_ts_1, types_ts_2, util_ts_5, Database;
    var __moduleName = context_420 && context_420.id;
    return {
        setters: [
            function (collection_ts_1_1) {
                collection_ts_1 = collection_ts_1_1;
            },
            function (types_ts_2_1) {
                types_ts_2 = types_ts_2_1;
            },
            function (util_ts_5_1) {
                util_ts_5 = util_ts_5_1;
            }
        ],
        execute: function () {
            Database = class Database {
                constructor(client, name) {
                    this.client = client;
                    this.name = name;
                }
                async listCollectionNames() {
                    const names = await util_ts_5.dispatchAsync({
                        command_type: types_ts_2.CommandType.ListCollectionNames,
                        client_id: this.client.clientId,
                    }, util_ts_5.encode(this.name));
                    return names;
                }
                collection(name) {
                    return new collection_ts_1.Collection(this.client, this.name, name);
                }
            };
            exports_420("Database", Database);
        }
    };
});
System.register("https://raw.githubusercontent.com/eveningkid/deno_mongo/master/ts/client", ["https://raw.githubusercontent.com/eveningkid/deno_mongo/master/ts/database", "https://raw.githubusercontent.com/eveningkid/deno_mongo/master/ts/types", "https://raw.githubusercontent.com/eveningkid/deno_mongo/master/ts/util"], function (exports_421, context_421) {
    "use strict";
    var database_ts_1, types_ts_3, util_ts_6, MongoClient;
    var __moduleName = context_421 && context_421.id;
    return {
        setters: [
            function (database_ts_1_1) {
                database_ts_1 = database_ts_1_1;
            },
            function (types_ts_3_1) {
                types_ts_3 = types_ts_3_1;
            },
            function (util_ts_6_1) {
                util_ts_6 = util_ts_6_1;
            }
        ],
        execute: function () {
            MongoClient = class MongoClient {
                constructor() {
                    this._clientId = 0;
                }
                get clientId() {
                    return this._clientId;
                }
                connectWithUri(uri) {
                    const data = util_ts_6.dispatch({ command_type: types_ts_3.CommandType.ConnectWithUri }, util_ts_6.encode(uri));
                    this._clientId = data.clientId;
                }
                connectWithOptions(options) {
                    const data = util_ts_6.dispatch({ command_type: types_ts_3.CommandType.ConnectWithOptions }, util_ts_6.encode(JSON.stringify(options)));
                    this._clientId = data.clientId;
                }
                async listDatabases() {
                    return (await util_ts_6.dispatchAsync({
                        command_type: types_ts_3.CommandType.ListDatabases,
                        client_id: this._clientId,
                    }));
                }
                close() {
                    return util_ts_6.dispatch({
                        command_type: types_ts_3.CommandType.Close,
                        client_id: this._clientId,
                    });
                }
                database(name) {
                    return new database_ts_1.Database(this, name);
                }
            };
            exports_421("MongoClient", MongoClient);
        }
    };
});
System.register("https://raw.githubusercontent.com/eveningkid/deno_mongo/master/mod", ["https://raw.githubusercontent.com/eveningkid/deno_mongo/master/ts/client", "https://raw.githubusercontent.com/eveningkid/deno_mongo/master/ts/collection", "https://raw.githubusercontent.com/eveningkid/deno_mongo/master/ts/database", "https://raw.githubusercontent.com/eveningkid/deno_mongo/master/ts/result", "https://raw.githubusercontent.com/eveningkid/deno_mongo/master/ts/types", "https://raw.githubusercontent.com/eveningkid/deno_mongo/master/ts/util"], function (exports_422, context_422) {
    "use strict";
    var VERSION, RELEASE_URL;
    var __moduleName = context_422 && context_422.id;
    var exportedNames_5 = {
        "VERSION": true,
        "RELEASE_URL": true,
        "ObjectId": true
    };
    function exportStar_13(m) {
        var exports = {};
        for (var n in m) {
            if (n !== "default" && !exportedNames_5.hasOwnProperty(n)) exports[n] = m[n];
        }
        exports_422(exports);
    }
    return {
        setters: [
            function (client_ts_4_1) {
                exportStar_13(client_ts_4_1);
            },
            function (collection_ts_2_1) {
                exportStar_13(collection_ts_2_1);
            },
            function (database_ts_2_1) {
                exportStar_13(database_ts_2_1);
            },
            function (result_ts_2_1) {
                exportStar_13(result_ts_2_1);
            },
            function (types_ts_4_1) {
                exports_422({
                    "ObjectId": types_ts_4_1["ObjectId"]
                });
            },
            function (util_ts_7_1) {
                exportStar_13(util_ts_7_1);
            }
        ],
        execute: function () {
            exports_422("VERSION", VERSION = "v0.10.0");
            exports_422("RELEASE_URL", RELEASE_URL = `https://github.com/manyuanrong/deno_mongo/releases/download/${VERSION}`);
        }
    };
});
System.register("https://deno.land/x/denodb@v1.0.7/unstable_deps", ["https://raw.githubusercontent.com/eveningkid/deno_mongo/master/mod"], function (exports_423, context_423) {
    "use strict";
    var __moduleName = context_423 && context_423.id;
    return {
        setters: [
            function (mod_ts_52_1) {
                exports_423({
                    "MongoDBClient": mod_ts_52_1["MongoClient"],
                    "MongoDBDatabase": mod_ts_52_1["Database"],
                    "initMongoDBPlugin": mod_ts_52_1["init"],
                    "MONGODB_PLUGIN_RELEASE_URL": mod_ts_52_1["RELEASE_URL"]
                });
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/denodb@v1.0.7/lib/connectors/mongodb-connector", [], function (exports_424, context_424) {
    "use strict";
    var MongoDBConnector;
    var __moduleName = context_424 && context_424.id;
    return {
        setters: [],
        execute: function () {
            MongoDBConnector = class MongoDBConnector {
                constructor(options) {
                    this._connected = false;
                    this._options = options;
                }
                async _makeConnection() {
                    if (this._connected) {
                        return;
                    }
                    if (!this._client) {
                        const { MongoDBClient, MONGODB_PLUGIN_RELEASE_URL, initMongoDBPlugin, } = await context_424.import("../../unstable_deps.ts");
                        await initMongoDBPlugin(MONGODB_PLUGIN_RELEASE_URL);
                        this._client = new MongoDBClient();
                    }
                    if (this._options.hasOwnProperty("uri")) {
                        this._client.connectWithUri(this._options.uri);
                    }
                    else {
                        this._client.connectWithOptions(this._options);
                    }
                    this._database = this._client.database(this._options.database);
                    this._connected = true;
                }
                async ping() {
                    await this._makeConnection();
                    try {
                        const dbs = await this._client.listDatabases();
                        return dbs.includes(this._options.database);
                    }
                    catch (error) {
                        return false;
                    }
                }
                async query(queryDescription) {
                    await this._makeConnection();
                    if (queryDescription.type === "create") {
                        return [];
                    }
                    const collection = this._database.collection(queryDescription.table);
                    let wheres = {};
                    if (queryDescription.wheres) {
                        wheres = queryDescription.wheres.reduce((prev, curr) => {
                            let mongoOperator = "$eq";
                            switch (curr.operator) {
                                case "<":
                                    mongoOperator = "$lt";
                                    break;
                                case "<=":
                                    mongoOperator = "$lte";
                                    break;
                                case ">":
                                    mongoOperator = "$gt";
                                    break;
                                case ">=":
                                    mongoOperator = "$gte";
                                    break;
                            }
                            const whereValue = curr.field === "_id" ? { $oid: curr.value } : curr.value;
                            return {
                                ...prev,
                                [curr.field]: {
                                    [mongoOperator]: whereValue,
                                },
                            };
                        }, {});
                    }
                    let results = [];
                    switch (queryDescription.type) {
                        case "drop":
                            await collection.deleteMany({});
                            break;
                        case "insert":
                            const defaultedValues = queryDescription.schema.defaults;
                            let values = Array.isArray(queryDescription.values)
                                ? queryDescription.values
                                : [queryDescription.values];
                            values = values.map((record) => {
                                let timestamps = {};
                                if (queryDescription.schema.timestamps) {
                                    timestamps = {
                                        createdAt: new Date(),
                                        updatedAt: new Date(),
                                    };
                                }
                                return { ...defaultedValues, ...record, ...timestamps };
                            });
                            const insertedRecords = await collection.insertMany(values);
                            const recordIds = insertedRecords.map((record) => record.$oid);
                            return await queryDescription.schema.find(recordIds);
                        case "select":
                            const selectFields = [];
                            if (queryDescription.whereIn) {
                                wheres[queryDescription.whereIn.field] = {
                                    $in: queryDescription.whereIn.field === "_id"
                                        ? queryDescription.whereIn.possibleValues.map((value) => ({
                                            $oid: value,
                                        }))
                                        : queryDescription.whereIn.possibleValues,
                                };
                            }
                            selectFields.push({
                                $match: wheres,
                            });
                            if (queryDescription.select) {
                                selectFields.push({
                                    $project: queryDescription.select.reduce((prev, curr) => {
                                        if (typeof curr === "string") {
                                            return {
                                                ...prev,
                                                [curr]: 1,
                                            };
                                        }
                                        else {
                                            const [field, alias] = Object.entries(curr)[0];
                                            return {
                                                ...prev,
                                                [alias]: field,
                                            };
                                        }
                                    }, {}),
                                });
                            }
                            if (queryDescription.joins) {
                                const join = queryDescription.joins[0];
                                selectFields.push({
                                    $lookup: {
                                        from: join.joinTable,
                                        localField: join.originField,
                                        foreignField: "_id",
                                        as: join.targetField,
                                    },
                                });
                            }
                            if (queryDescription.orderBy) {
                                selectFields.push({
                                    $sort: Object.entries(queryDescription.orderBy).reduce((prev, [field, orderDirection]) => {
                                        return {
                                            ...prev,
                                            [field]: orderDirection === "asc" ? 1 : -1,
                                        };
                                    }, {}),
                                });
                            }
                            if (queryDescription.groupBy) {
                                selectFields.push({
                                    $group: {
                                        _id: `$${queryDescription.groupBy}`,
                                    },
                                });
                            }
                            if (queryDescription.limit) {
                                selectFields.push({ $limit: queryDescription.limit });
                            }
                            if (queryDescription.offset) {
                                selectFields.push({ $skip: queryDescription.offset });
                            }
                            results = await collection.aggregate(selectFields);
                            break;
                        case "update":
                            await collection.updateMany(wheres, { $set: queryDescription.values });
                            break;
                        case "delete":
                            await collection.deleteMany(wheres);
                            break;
                        case "count":
                            return [{ count: await collection.count(wheres) }];
                        case "avg":
                            return await collection.aggregate([
                                { $match: wheres },
                                {
                                    $group: {
                                        _id: null,
                                        avg: { $avg: `$${queryDescription.aggregatorField}` },
                                    },
                                },
                            ]);
                        case "max":
                            return await collection.aggregate([
                                { $match: wheres },
                                {
                                    $group: {
                                        _id: null,
                                        max: { $max: `$${queryDescription.aggregatorField}` },
                                    },
                                },
                            ]);
                        case "min":
                            return await collection.aggregate([
                                { $match: wheres },
                                {
                                    $group: {
                                        _id: null,
                                        min: { $min: `$${queryDescription.aggregatorField}` },
                                    },
                                },
                            ]);
                        case "sum":
                            return await collection.aggregate([
                                { $match: wheres },
                                {
                                    $group: {
                                        _id: null,
                                        sum: { $sum: `$${queryDescription.aggregatorField}` },
                                    },
                                },
                            ]);
                        default:
                            throw new Error(`Unknown query type: ${queryDescription.type}.`);
                    }
                    results = results.map((result) => {
                        const formattedResult = {};
                        for (const [field, value] of Object.entries(result)) {
                            if (field === "_id") {
                                formattedResult._id = value?.$oid || value;
                            }
                            else if (value.$date) {
                                formattedResult[field] = new Date(value.$date.$numberLong);
                            }
                            else {
                                formattedResult[field] = value;
                            }
                        }
                        return formattedResult;
                    });
                    return results;
                }
                async close() {
                    if (!this._connected) {
                        return;
                    }
                    this._connected = false;
                }
            };
            exports_424("MongoDBConnector", MongoDBConnector);
        }
    };
});
System.register("https://deno.land/x/denodb@v1.0.7/lib/helpers/results", [], function (exports_425, context_425) {
    "use strict";
    var __moduleName = context_425 && context_425.id;
    function formatResultToModelInstance(Schema, fields) {
        const instance = new Schema();
        for (const field in fields) {
            instance[Schema.formatFieldToClient(field)] =
                fields[field];
        }
        return instance;
    }
    exports_425("formatResultToModelInstance", formatResultToModelInstance);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/x/denodb@v1.0.7/lib/database", ["https://deno.land/x/denodb@v1.0.7/lib/query-builder", "https://deno.land/x/denodb@v1.0.7/lib/connectors/postgres-connector", "https://deno.land/x/denodb@v1.0.7/lib/connectors/sqlite3-connector", "https://deno.land/x/denodb@v1.0.7/lib/connectors/mysql-connector", "https://deno.land/x/denodb@v1.0.7/lib/connectors/mongodb-connector", "https://deno.land/x/denodb@v1.0.7/lib/helpers/results", "https://deno.land/x/denodb@v1.0.7/lib/translators/translator", "https://deno.land/x/denodb@v1.0.7/lib/translators/sql-translator"], function (exports_426, context_426) {
    "use strict";
    var query_builder_ts_1, postgres_connector_ts_1, sqlite3_connector_ts_1, mysql_connector_ts_1, mongodb_connector_ts_1, results_ts_1, translator_ts_2, sql_translator_ts_4, Database;
    var __moduleName = context_426 && context_426.id;
    return {
        setters: [
            function (query_builder_ts_1_1) {
                query_builder_ts_1 = query_builder_ts_1_1;
            },
            function (postgres_connector_ts_1_1) {
                postgres_connector_ts_1 = postgres_connector_ts_1_1;
            },
            function (sqlite3_connector_ts_1_1) {
                sqlite3_connector_ts_1 = sqlite3_connector_ts_1_1;
            },
            function (mysql_connector_ts_1_1) {
                mysql_connector_ts_1 = mysql_connector_ts_1_1;
            },
            function (mongodb_connector_ts_1_1) {
                mongodb_connector_ts_1 = mongodb_connector_ts_1_1;
            },
            function (results_ts_1_1) {
                results_ts_1 = results_ts_1_1;
            },
            function (translator_ts_2_1) {
                translator_ts_2 = translator_ts_2_1;
            },
            function (sql_translator_ts_4_1) {
                sql_translator_ts_4 = sql_translator_ts_4_1;
            }
        ],
        execute: function () {
            Database = class Database {
                constructor(databaseOptionsOrDialect, connectionOptions) {
                    this._models = [];
                    this._dialect =
                        typeof databaseOptionsOrDialect === "object"
                            ? databaseOptionsOrDialect.dialect
                            : databaseOptionsOrDialect;
                    this._debug =
                        typeof databaseOptionsOrDialect === "object"
                            ? databaseOptionsOrDialect.debug ?? false
                            : false;
                    this._queryBuilder = new query_builder_ts_1.QueryBuilder();
                    switch (this._dialect) {
                        case "postgres":
                            this._connector = new postgres_connector_ts_1.PostgresConnector(connectionOptions);
                            break;
                        case "sqlite3":
                            this._connector = new sqlite3_connector_ts_1.SQLite3Connector(connectionOptions);
                            break;
                        case "mysql":
                            this._connector = new mysql_connector_ts_1.MySQLConnector(connectionOptions);
                            break;
                        case "mongo":
                            this._connector = new mongodb_connector_ts_1.MongoDBConnector(connectionOptions);
                            break;
                        default:
                            throw new Error(`No connector was found for the given dialect: ${this._dialect}.`);
                    }
                }
                ping() {
                    return this._connector.ping();
                }
                getDialect() {
                    return this._dialect;
                }
                getConnector() {
                    return this._connector;
                }
                async sync(options = {}) {
                    if (options.drop) {
                        for (const model of this._models) {
                            await model.drop();
                        }
                    }
                    for (const model of this._models) {
                        await model.createTable();
                    }
                }
                link(models) {
                    this._models = models;
                    this._models.forEach((model) => model._link({
                        queryBuilder: this._queryBuilder,
                        database: this,
                    }));
                    return this;
                }
                async query(query) {
                    if (this._debug) {
                        console.log(query);
                    }
                    const results = await this._connector.query(query);
                    return Array.isArray(results)
                        ? results.map((result) => results_ts_1.formatResultToModelInstance(query.schema, result))
                        : results_ts_1.formatResultToModelInstance(query.schema, results);
                }
                _computeModelFieldMatchings(table, fields, withTimestamps) {
                    const databaseDialect = this.getDialect();
                    const translator = databaseDialect === "mongo"
                        ? new translator_ts_2.Translator()
                        : new sql_translator_ts_4.SQLTranslator(databaseDialect);
                    const modelFields = { ...fields };
                    if (withTimestamps) {
                        modelFields.updatedAt = "";
                        modelFields.createdAt = "";
                    }
                    const toDatabase = Object.entries(modelFields).reduce((prev, [clientFieldName, fieldType]) => {
                        const databaseFieldName = typeof fieldType !== "string" && fieldType.as
                            ? fieldType.as
                            : translator.formatFieldNameToDatabase(clientFieldName);
                        return {
                            ...prev,
                            [clientFieldName]: databaseFieldName,
                            [`${table}.${clientFieldName}`]: `${table}.${databaseFieldName}`,
                        };
                    }, {});
                    const toClient = Object.entries(toDatabase).reduce((prev, [clientFieldName, databaseFieldName]) => ({
                        ...prev,
                        [databaseFieldName]: clientFieldName,
                    }), {});
                    return { toDatabase, toClient };
                }
                async close() {
                    return this._connector.close();
                }
            };
            exports_426("Database", Database);
        }
    };
});
System.register("https://deno.land/x/denodb@v1.0.7/lib/model-pivot", ["https://deno.land/x/denodb@v1.0.7/lib/model"], function (exports_427, context_427) {
    "use strict";
    var model_ts_2, PivotModel;
    var __moduleName = context_427 && context_427.id;
    return {
        setters: [
            function (model_ts_2_1) {
                model_ts_2 = model_ts_2_1;
            }
        ],
        execute: function () {
            PivotModel = class PivotModel extends model_ts_2.Model {
            };
            exports_427("PivotModel", PivotModel);
            PivotModel._pivotsModels = {};
            PivotModel._pivotsFields = {};
        }
    };
});
System.register("https://deno.land/x/denodb@v1.0.7/lib/model", ["https://deno.land/x/denodb@v1.0.7/deps", "https://deno.land/x/denodb@v1.0.7/lib/data-types"], function (exports_428, context_428) {
    "use strict";
    var deps_ts_28, data_types_ts_1, Model;
    var __moduleName = context_428 && context_428.id;
    return {
        setters: [
            function (deps_ts_28_1) {
                deps_ts_28 = deps_ts_28_1;
            },
            function (data_types_ts_1_1) {
                data_types_ts_1 = data_types_ts_1_1;
            }
        ],
        execute: function () {
            Model = class Model {
                static _link(options) {
                    this._options = options;
                    this._database = options.database;
                    this._queryBuilder = options.queryBuilder;
                    this._fieldMatching = this._database._computeModelFieldMatchings(this.name, this.fields, this.timestamps);
                    this._currentQuery = this._queryBuilder.queryForSchema(this);
                    this._primaryKey = this._findPrimaryKey();
                }
                static async drop() {
                    const dropQuery = this._options.queryBuilder.queryForSchema(this).table(this.table).dropIfExists().toDescription();
                    await this._options.database.query(dropQuery);
                    this._isCreatedInDatabase = false;
                }
                static async createTable() {
                    if (this._isCreatedInDatabase) {
                        throw new Error("This model has already been initialized.");
                    }
                    const createQuery = this._options.queryBuilder.queryForSchema(this).table(this.table)
                        .createTable(this.formatFieldToDatabase(this.fields), this.formatFieldToDatabase(this.defaults), {
                        withTimestamps: this.timestamps,
                        ifNotExists: true,
                    }).toDescription();
                    await this._options.database.query(createQuery);
                    this._isCreatedInDatabase = true;
                }
                static _findPrimaryField() {
                    const field = Object
                        .entries(this.fields)
                        .find(([_, fieldType]) => typeof fieldType === "object" && fieldType.primaryKey);
                    return {
                        name: field ? this.formatFieldToDatabase(field[0]) : "",
                        type: field ? field[1] : data_types_ts_1.DataTypes.INTEGER,
                        defaultValue: 0,
                    };
                }
                static _findPrimaryKey() {
                    return this._findPrimaryField().name;
                }
                static getComputedPrimaryKey() {
                    if (!this._primaryKey) {
                        this._primaryKey = this._findPrimaryKey();
                    }
                    return this._primaryKey;
                }
                static getComputedPrimaryType() {
                    const field = this._findPrimaryField();
                    return typeof field.type === "object"
                        ? field.type.type
                        : field.type;
                }
                static async _runQuery(query) {
                    this._currentQuery = this._queryBuilder.queryForSchema(this);
                    return this._database.query(query);
                }
                static _formatField(fieldMatching, field, defaultCase) {
                    if (typeof field !== "string") {
                        return Object.entries(field).reduce((prev, [fieldName, value]) => ({
                            ...prev,
                            [this._formatField(fieldMatching, fieldName)]: value,
                        }), {});
                    }
                    if (field in fieldMatching) {
                        return fieldMatching[field];
                    }
                    return defaultCase ? defaultCase(field) : field;
                }
                static formatFieldToDatabase(field) {
                    return this._formatField(this._fieldMatching.toDatabase, field);
                }
                static formatFieldToClient(field) {
                    return this._formatField(this._fieldMatching.toClient, field, deps_ts_28.camelCase);
                }
                static field(field, nameAs) {
                    const fullField = this.formatFieldToDatabase(`${this.table}.${field}`);
                    if (nameAs) {
                        return { [nameAs]: fullField };
                    }
                    return fullField;
                }
                static async get() {
                    return this._runQuery(this._currentQuery.table(this.table).get().toDescription());
                }
                static async all() {
                    return this.get();
                }
                static select(...fields) {
                    this._currentQuery.select(...fields.map((field) => this.formatFieldToDatabase(field)));
                    return this;
                }
                static async create(values) {
                    const insertions = Array.isArray(values) ? values : [values];
                    return this._runQuery(this._currentQuery.table(this.table).create(insertions.map((field) => this.formatFieldToDatabase(field))).toDescription());
                }
                static async find(idOrIds) {
                    const results = await this._runQuery(this._currentQuery.table(this.table).find(this.getComputedPrimaryKey(), Array.isArray(idOrIds) ? idOrIds : [idOrIds]).toDescription());
                    return Array.isArray(idOrIds) ? results : results[0];
                }
                static orderBy(fieldOrFields, orderDirection = "asc") {
                    if (typeof fieldOrFields === "string") {
                        this._currentQuery.orderBy(this.formatFieldToDatabase(fieldOrFields), orderDirection);
                    }
                    else {
                        for (const [field, orderDirectionField] of Object.entries(fieldOrFields)) {
                            this._currentQuery.orderBy(this.formatFieldToDatabase(field), orderDirectionField);
                        }
                    }
                    return this;
                }
                static groupBy(field) {
                    this._currentQuery.groupBy(this.formatFieldToDatabase(field));
                    return this;
                }
                static take(limit) {
                    return this.limit(limit);
                }
                static limit(limit) {
                    this._currentQuery.limit(limit);
                    return this;
                }
                static async first() {
                    this.take(1);
                    const results = await this.get();
                    return results[0];
                }
                static offset(offset) {
                    this._currentQuery.offset(offset);
                    return this;
                }
                static skip(offset) {
                    return this.offset(offset);
                }
                static where(fieldOrFields, operatorOrFieldValue, fieldValue) {
                    if (typeof fieldOrFields === "string") {
                        const whereOperator = typeof fieldValue !== "undefined"
                            ? operatorOrFieldValue
                            : "=";
                        const whereValue = typeof fieldValue !== "undefined"
                            ? fieldValue
                            : operatorOrFieldValue;
                        if (whereValue !== undefined) {
                            this._currentQuery.where(this.formatFieldToDatabase(fieldOrFields), whereOperator, whereValue);
                        }
                    }
                    else {
                        for (const [field, value] of Object.entries(fieldOrFields)) {
                            if (value === undefined) {
                                continue;
                            }
                            this._currentQuery.where(this.formatFieldToDatabase(field), "=", value);
                        }
                    }
                    return this;
                }
                static async update(fieldOrFields, fieldValue) {
                    let fieldsToUpdate = {};
                    if (this.timestamps) {
                        fieldsToUpdate[this.formatFieldToDatabase("updatedAt")] =
                            new Date();
                    }
                    if (typeof fieldOrFields === "string") {
                        fieldsToUpdate[this.formatFieldToDatabase(fieldOrFields)] =
                            fieldValue;
                    }
                    else {
                        fieldsToUpdate = {
                            ...fieldsToUpdate,
                            ...this.formatFieldToDatabase(fieldOrFields),
                        };
                    }
                    return this._runQuery(this._currentQuery.table(this.table).update(fieldsToUpdate)
                        .toDescription());
                }
                static async deleteById(id) {
                    return this._runQuery(this._currentQuery.table(this.table).where(this.getComputedPrimaryKey(), "=", id).delete().toDescription());
                }
                static async delete() {
                    return this._runQuery(this._currentQuery.table(this.table).delete().toDescription());
                }
                static join(joinTable, originField, targetField) {
                    this._currentQuery.join(joinTable.table, joinTable.formatFieldToDatabase(originField), this.formatFieldToDatabase(targetField));
                    return this;
                }
                static async count(field = "*") {
                    const value = await this._runQuery(this._currentQuery.table(this.table).count(this.formatFieldToDatabase(field)).toDescription());
                    return value[0].count;
                }
                static async min(field) {
                    const value = await this._runQuery(this._currentQuery.table(this.table).min(this.formatFieldToDatabase(field))
                        .toDescription());
                    return value[0].min;
                }
                static async max(field) {
                    const value = await this._runQuery(this._currentQuery.table(this.table).max(this.formatFieldToDatabase(field))
                        .toDescription());
                    return value[0].max;
                }
                static async sum(field) {
                    const value = await this._runQuery(this._currentQuery.table(this.table).sum(this.formatFieldToDatabase(field))
                        .toDescription());
                    return value[0].sum;
                }
                static async avg(field) {
                    const value = await this._runQuery(this._currentQuery.table(this.table).avg(this.formatFieldToDatabase(field))
                        .toDescription());
                    return value[0].avg;
                }
                static hasMany(model) {
                    const currentWhereValue = this._findCurrentQueryWhereClause();
                    if (model.name in this.pivot) {
                        const pivot = this.pivot[model.name];
                        const pivotField = this.formatFieldToDatabase(pivot._pivotsFields[this.name]);
                        const pivotOtherModel = pivot._pivotsModels[model.name];
                        const pivotOtherModelField = pivotOtherModel.formatFieldToDatabase(pivot._pivotsFields[model.name]);
                        return pivot.where(pivot.field(pivotField), currentWhereValue).join(pivotOtherModel, pivotOtherModel.field(pivotOtherModel.getComputedPrimaryKey()), pivot.field(pivotOtherModelField)).get();
                    }
                    const foreignKeyName = this._findModelForeignKeyField(model);
                    this._currentQuery = this._queryBuilder.queryForSchema(this);
                    return model.where(foreignKeyName, currentWhereValue).all();
                }
                static async hasOne(model) {
                    const currentWhereValue = this._findCurrentQueryWhereClause();
                    const FKName = this._findModelForeignKeyField(model);
                    if (!FKName) {
                        const currentModelFKName = this._findModelForeignKeyField(this, model);
                        const currentModelValue = await this.where(this.getComputedPrimaryKey(), currentWhereValue).first();
                        const currentModelFKValue = currentModelValue[currentModelFKName];
                        return model.where(model.getComputedPrimaryKey(), currentModelFKValue)
                            .first();
                    }
                    return model.where(FKName, currentWhereValue).first();
                }
                static _findCurrentQueryWhereClause() {
                    if (!this._currentQuery._query.wheres) {
                        throw new Error("The current query does not have any where clause.");
                    }
                    const where = this._currentQuery._query.wheres.find((where) => {
                        return where.field === this.getComputedPrimaryKey();
                    });
                    if (!where) {
                        throw new Error("The current query does not have any where clause for this model primary key.");
                    }
                    return where.value;
                }
                static _findModelForeignKeyField(model, forModel = this) {
                    const modelFK = Object.entries(model.fields).find(([, type]) => {
                        return (typeof type === "object")
                            ? type.relationship?.model === forModel
                            : false;
                    });
                    if (!modelFK) {
                        return "";
                    }
                    return modelFK[0];
                }
                _getCurrentPrimaryKey() {
                    const model = this.constructor;
                    return this[model.getComputedPrimaryKey()];
                }
                async save() {
                    const model = this.constructor;
                    const values = {};
                    for (const field of Object.keys(model.fields)) {
                        if (this.hasOwnProperty(field)) {
                            values[field] = this[field];
                        }
                        else if (model.defaults.hasOwnProperty(field)) {
                            values[field] = model.defaults[field];
                        }
                    }
                    const createdInstance = (await model.create(values))[0];
                    for (const field in createdInstance) {
                        this[field] = createdInstance[field];
                    }
                    return this;
                }
                async update() {
                    const model = this.constructor;
                    const modelPK = model.getComputedPrimaryKey();
                    const values = {};
                    for (const field of Object.keys(model.fields)) {
                        if (this.hasOwnProperty(field) && field !== modelPK) {
                            values[field] = this[field];
                        }
                    }
                    return model.where(modelPK, this._getCurrentPrimaryKey()).update(values);
                }
                async delete() {
                    const model = this.constructor;
                    const PKCurrentValue = this._getCurrentPrimaryKey();
                    if (PKCurrentValue === undefined) {
                        throw new Error("This instance does not have a value for its primary key. It cannot be deleted.");
                    }
                    return model.deleteById(PKCurrentValue);
                }
            };
            exports_428("Model", Model);
            Model.table = "";
            Model.timestamps = false;
            Model.fields = {};
            Model.defaults = {};
            Model.pivot = {};
            Model._isCreatedInDatabase = false;
            Model._fieldMatching = {
                toDatabase: {},
                toClient: {},
            };
        }
    };
});
System.register("https://deno.land/x/denodb@v1.0.7/lib/data-types", [], function (exports_429, context_429) {
    "use strict";
    var DATA_TYPES, DataTypes;
    var __moduleName = context_429 && context_429.id;
    return {
        setters: [],
        execute: function () {
            exports_429("DATA_TYPES", DATA_TYPES = {
                INTEGER: "integer",
                BIG_INTEGER: "bigInteger",
                DECIMAL: "decimal",
                FLOAT: "float",
                UUID: "uuid",
                BOOLEAN: "boolean",
                BINARY: "binary",
                ENUM: "enu",
                STRING: "string",
                TEXT: "text",
                DATE: "date",
                DATETIME: "datetime",
                TIME: "time",
                TIMESTAMP: "timestamp",
                JSON: "json",
                JSONB: "jsonb",
                decimal(precision, scale) {
                    return {
                        type: this.DECIMAL,
                        precision,
                        scale,
                    };
                },
                string(length) {
                    return {
                        type: this.STRING,
                        length,
                    };
                },
                enum(values) {
                    return {
                        type: this.ENUM,
                        values,
                    };
                },
            });
            exports_429("DataTypes", DataTypes = DATA_TYPES);
        }
    };
});
System.register("https://deno.land/x/denodb@v1.0.7/lib/relationships", ["https://deno.land/x/denodb@v1.0.7/lib/data-types", "https://deno.land/x/denodb@v1.0.7/lib/model-pivot"], function (exports_430, context_430) {
    "use strict";
    var data_types_ts_2, model_pivot_ts_1, Relationships;
    var __moduleName = context_430 && context_430.id;
    return {
        setters: [
            function (data_types_ts_2_1) {
                data_types_ts_2 = data_types_ts_2_1;
            },
            function (model_pivot_ts_1_1) {
                model_pivot_ts_1 = model_pivot_ts_1_1;
            }
        ],
        execute: function () {
            exports_430("Relationships", Relationships = {
                belongsTo(model) {
                    return {
                        type: data_types_ts_2.DataTypes.INTEGER,
                        relationship: {
                            kind: "single",
                            model,
                        },
                    };
                },
                oneToOne(modelA, modelB) {
                    modelA.fields[`${modelB.name.toLowerCase()}Id`] = this.belongsTo(modelB);
                    modelB.fields[`${modelA.name.toLowerCase()}Id`] = this.belongsTo(modelA);
                },
                manyToMany(modelA, modelB) {
                    const pivotClassName = `${modelA.table}_${modelB.table}`;
                    const modelAFieldName = `${modelA.name.toLowerCase()}Id`;
                    const modelBFieldName = `${modelB.name.toLowerCase()}Id`;
                    class PivotClass extends model_pivot_ts_1.PivotModel {
                    }
                    PivotClass.table = pivotClassName;
                    PivotClass.fields = {
                        id: {
                            primaryKey: true,
                            autoIncrement: true,
                        },
                        [modelAFieldName]: Relationships.belongsTo(modelA),
                        [modelBFieldName]: Relationships.belongsTo(modelB),
                    };
                    PivotClass._pivotsModels = {
                        [modelA.name]: modelA,
                        [modelB.name]: modelB,
                    };
                    PivotClass._pivotsFields = {
                        [modelA.name]: modelAFieldName,
                        [modelB.name]: modelBFieldName,
                    };
                    modelA.pivot[modelB.name] = PivotClass;
                    modelB.pivot[modelA.name] = PivotClass;
                    return PivotClass;
                },
            });
        }
    };
});
System.register("https://deno.land/x/denodb@v1.0.7/mod", ["https://deno.land/x/denodb@v1.0.7/lib/data-types", "https://deno.land/x/denodb@v1.0.7/lib/database", "https://deno.land/x/denodb@v1.0.7/lib/model", "https://deno.land/x/denodb@v1.0.7/lib/relationships"], function (exports_431, context_431) {
    "use strict";
    var __moduleName = context_431 && context_431.id;
    return {
        setters: [
            function (data_types_ts_3_1) {
                exports_431({
                    "DATA_TYPES": data_types_ts_3_1["DATA_TYPES"],
                    "DataTypes": data_types_ts_3_1["DataTypes"]
                });
            },
            function (database_ts_3_1) {
                exports_431({
                    "Database": database_ts_3_1["Database"]
                });
            },
            function (model_ts_3_1) {
                exports_431({
                    "Model": model_ts_3_1["Model"]
                });
            },
            function (relationships_ts_1_1) {
                exports_431({
                    "Relationships": relationships_ts_1_1["Relationships"]
                });
            }
        ],
        execute: function () {
        }
    };
});
System.register("https://deno.land/std@0.66.0/uuid/_common", [], function (exports_432, context_432) {
    "use strict";
    var __moduleName = context_432 && context_432.id;
    function bytesToUuid(bytes) {
        const bits = [...bytes].map((bit) => {
            const s = bit.toString(16);
            return bit < 0x10 ? "0" + s : s;
        });
        return [
            ...bits.slice(0, 4),
            "-",
            ...bits.slice(4, 6),
            "-",
            ...bits.slice(6, 8),
            "-",
            ...bits.slice(8, 10),
            "-",
            ...bits.slice(10, 16),
        ].join("");
    }
    exports_432("bytesToUuid", bytesToUuid);
    function uuidToBytes(uuid) {
        const bytes = [];
        uuid.replace(/[a-fA-F0-9]{2}/g, (hex) => {
            bytes.push(parseInt(hex, 16));
            return "";
        });
        return bytes;
    }
    exports_432("uuidToBytes", uuidToBytes);
    function stringToBytes(str) {
        str = unescape(encodeURIComponent(str));
        const bytes = new Array(str.length);
        for (let i = 0; i < str.length; i++) {
            bytes[i] = str.charCodeAt(i);
        }
        return bytes;
    }
    exports_432("stringToBytes", stringToBytes);
    function createBuffer(content) {
        const arrayBuffer = new ArrayBuffer(content.length);
        const uint8Array = new Uint8Array(arrayBuffer);
        for (let i = 0; i < content.length; i++) {
            uint8Array[i] = content[i];
        }
        return arrayBuffer;
    }
    exports_432("createBuffer", createBuffer);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://deno.land/std@0.66.0/uuid/v1", ["https://deno.land/std@0.66.0/uuid/_common"], function (exports_433, context_433) {
    "use strict";
    var _common_ts_4, UUID_RE, _nodeId, _clockseq, _lastMSecs, _lastNSecs;
    var __moduleName = context_433 && context_433.id;
    function validate(id) {
        return UUID_RE.test(id);
    }
    exports_433("validate", validate);
    function generate(options, buf, offset) {
        let i = (buf && offset) || 0;
        const b = buf || [];
        options = options || {};
        let node = options.node || _nodeId;
        let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;
        if (node == null || clockseq == null) {
            const seedBytes = options.random ||
                options.rng ||
                crypto.getRandomValues(new Uint8Array(16));
            if (node == null) {
                node = _nodeId = [
                    seedBytes[0] | 0x01,
                    seedBytes[1],
                    seedBytes[2],
                    seedBytes[3],
                    seedBytes[4],
                    seedBytes[5],
                ];
            }
            if (clockseq == null) {
                clockseq = _clockseq = ((seedBytes[6] << 8) | seedBytes[7]) & 0x3fff;
            }
        }
        let msecs = options.msecs !== undefined
            ? options.msecs
            : new Date().getTime();
        let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;
        const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000;
        if (dt < 0 && options.clockseq === undefined) {
            clockseq = (clockseq + 1) & 0x3fff;
        }
        if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {
            nsecs = 0;
        }
        if (nsecs >= 10000) {
            throw new Error("Can't create more than 10M uuids/sec");
        }
        _lastMSecs = msecs;
        _lastNSecs = nsecs;
        _clockseq = clockseq;
        msecs += 12219292800000;
        const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
        b[i++] = (tl >>> 24) & 0xff;
        b[i++] = (tl >>> 16) & 0xff;
        b[i++] = (tl >>> 8) & 0xff;
        b[i++] = tl & 0xff;
        const tmh = ((msecs / 0x100000000) * 10000) & 0xfffffff;
        b[i++] = (tmh >>> 8) & 0xff;
        b[i++] = tmh & 0xff;
        b[i++] = ((tmh >>> 24) & 0xf) | 0x10;
        b[i++] = (tmh >>> 16) & 0xff;
        b[i++] = (clockseq >>> 8) | 0x80;
        b[i++] = clockseq & 0xff;
        for (let n = 0; n < 6; ++n) {
            b[i + n] = node[n];
        }
        return buf ? buf : _common_ts_4.bytesToUuid(b);
    }
    exports_433("generate", generate);
    return {
        setters: [
            function (_common_ts_4_1) {
                _common_ts_4 = _common_ts_4_1;
            }
        ],
        execute: function () {
            UUID_RE = new RegExp("^[0-9a-f]{8}-[0-9a-f]{4}-1[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$", "i");
            _lastMSecs = 0;
            _lastNSecs = 0;
        }
    };
});
System.register("https://deno.land/std@0.66.0/uuid/v4", ["https://deno.land/std@0.66.0/uuid/_common"], function (exports_434, context_434) {
    "use strict";
    var _common_ts_5, UUID_RE;
    var __moduleName = context_434 && context_434.id;
    function validate(id) {
        return UUID_RE.test(id);
    }
    exports_434("validate", validate);
    function generate() {
        const rnds = crypto.getRandomValues(new Uint8Array(16));
        rnds[6] = (rnds[6] & 0x0f) | 0x40;
        rnds[8] = (rnds[8] & 0x3f) | 0x80;
        return _common_ts_5.bytesToUuid(rnds);
    }
    exports_434("generate", generate);
    return {
        setters: [
            function (_common_ts_5_1) {
                _common_ts_5 = _common_ts_5_1;
            }
        ],
        execute: function () {
            UUID_RE = new RegExp("^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$", "i");
        }
    };
});
System.register("https://deno.land/std@0.66.0/hash/sha1", [], function (exports_435, context_435) {
    "use strict";
    var HEX_CHARS, EXTRA, SHIFT, blocks, Sha1;
    var __moduleName = context_435 && context_435.id;
    return {
        setters: [],
        execute: function () {
            HEX_CHARS = "0123456789abcdef".split("");
            EXTRA = [-2147483648, 8388608, 32768, 128];
            SHIFT = [24, 16, 8, 0];
            blocks = [];
            Sha1 = class Sha1 {
                constructor(sharedMemory = false) {
                    this.#h0 = 0x67452301;
                    this.#h1 = 0xefcdab89;
                    this.#h2 = 0x98badcfe;
                    this.#h3 = 0x10325476;
                    this.#h4 = 0xc3d2e1f0;
                    this.#lastByteIndex = 0;
                    if (sharedMemory) {
                        blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;
                        this.#blocks = blocks;
                    }
                    else {
                        this.#blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                    }
                    this.#h0 = 0x67452301;
                    this.#h1 = 0xefcdab89;
                    this.#h2 = 0x98badcfe;
                    this.#h3 = 0x10325476;
                    this.#h4 = 0xc3d2e1f0;
                    this.#block = this.#start = this.#bytes = this.#hBytes = 0;
                    this.#finalized = this.#hashed = false;
                }
                #blocks;
                #block;
                #start;
                #bytes;
                #hBytes;
                #finalized;
                #hashed;
                #h0;
                #h1;
                #h2;
                #h3;
                #h4;
                #lastByteIndex;
                update(message) {
                    if (this.#finalized) {
                        return this;
                    }
                    let msg;
                    if (message instanceof ArrayBuffer) {
                        msg = new Uint8Array(message);
                    }
                    else {
                        msg = message;
                    }
                    let index = 0;
                    const length = msg.length;
                    const blocks = this.#blocks;
                    while (index < length) {
                        let i;
                        if (this.#hashed) {
                            this.#hashed = false;
                            blocks[0] = this.#block;
                            blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;
                        }
                        if (typeof msg !== "string") {
                            for (i = this.#start; index < length && i < 64; ++index) {
                                blocks[i >> 2] |= msg[index] << SHIFT[i++ & 3];
                            }
                        }
                        else {
                            for (i = this.#start; index < length && i < 64; ++index) {
                                let code = msg.charCodeAt(index);
                                if (code < 0x80) {
                                    blocks[i >> 2] |= code << SHIFT[i++ & 3];
                                }
                                else if (code < 0x800) {
                                    blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];
                                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
                                }
                                else if (code < 0xd800 || code >= 0xe000) {
                                    blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];
                                    blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
                                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
                                }
                                else {
                                    code = 0x10000 +
                                        (((code & 0x3ff) << 10) | (msg.charCodeAt(++index) & 0x3ff));
                                    blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];
                                    blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];
                                    blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
                                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
                                }
                            }
                        }
                        this.#lastByteIndex = i;
                        this.#bytes += i - this.#start;
                        if (i >= 64) {
                            this.#block = blocks[16];
                            this.#start = i - 64;
                            this.hash();
                            this.#hashed = true;
                        }
                        else {
                            this.#start = i;
                        }
                    }
                    if (this.#bytes > 4294967295) {
                        this.#hBytes += (this.#bytes / 4294967296) >>> 0;
                        this.#bytes = this.#bytes >>> 0;
                    }
                    return this;
                }
                finalize() {
                    if (this.#finalized) {
                        return;
                    }
                    this.#finalized = true;
                    const blocks = this.#blocks;
                    const i = this.#lastByteIndex;
                    blocks[16] = this.#block;
                    blocks[i >> 2] |= EXTRA[i & 3];
                    this.#block = blocks[16];
                    if (i >= 56) {
                        if (!this.#hashed) {
                            this.hash();
                        }
                        blocks[0] = this.#block;
                        blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;
                    }
                    blocks[14] = (this.#hBytes << 3) | (this.#bytes >>> 29);
                    blocks[15] = this.#bytes << 3;
                    this.hash();
                }
                hash() {
                    let a = this.#h0;
                    let b = this.#h1;
                    let c = this.#h2;
                    let d = this.#h3;
                    let e = this.#h4;
                    let f;
                    let j;
                    let t;
                    const blocks = this.#blocks;
                    for (j = 16; j < 80; ++j) {
                        t = blocks[j - 3] ^ blocks[j - 8] ^ blocks[j - 14] ^ blocks[j - 16];
                        blocks[j] = (t << 1) | (t >>> 31);
                    }
                    for (j = 0; j < 20; j += 5) {
                        f = (b & c) | (~b & d);
                        t = (a << 5) | (a >>> 27);
                        e = (t + f + e + 1518500249 + blocks[j]) >>> 0;
                        b = (b << 30) | (b >>> 2);
                        f = (a & b) | (~a & c);
                        t = (e << 5) | (e >>> 27);
                        d = (t + f + d + 1518500249 + blocks[j + 1]) >>> 0;
                        a = (a << 30) | (a >>> 2);
                        f = (e & a) | (~e & b);
                        t = (d << 5) | (d >>> 27);
                        c = (t + f + c + 1518500249 + blocks[j + 2]) >>> 0;
                        e = (e << 30) | (e >>> 2);
                        f = (d & e) | (~d & a);
                        t = (c << 5) | (c >>> 27);
                        b = (t + f + b + 1518500249 + blocks[j + 3]) >>> 0;
                        d = (d << 30) | (d >>> 2);
                        f = (c & d) | (~c & e);
                        t = (b << 5) | (b >>> 27);
                        a = (t + f + a + 1518500249 + blocks[j + 4]) >>> 0;
                        c = (c << 30) | (c >>> 2);
                    }
                    for (; j < 40; j += 5) {
                        f = b ^ c ^ d;
                        t = (a << 5) | (a >>> 27);
                        e = (t + f + e + 1859775393 + blocks[j]) >>> 0;
                        b = (b << 30) | (b >>> 2);
                        f = a ^ b ^ c;
                        t = (e << 5) | (e >>> 27);
                        d = (t + f + d + 1859775393 + blocks[j + 1]) >>> 0;
                        a = (a << 30) | (a >>> 2);
                        f = e ^ a ^ b;
                        t = (d << 5) | (d >>> 27);
                        c = (t + f + c + 1859775393 + blocks[j + 2]) >>> 0;
                        e = (e << 30) | (e >>> 2);
                        f = d ^ e ^ a;
                        t = (c << 5) | (c >>> 27);
                        b = (t + f + b + 1859775393 + blocks[j + 3]) >>> 0;
                        d = (d << 30) | (d >>> 2);
                        f = c ^ d ^ e;
                        t = (b << 5) | (b >>> 27);
                        a = (t + f + a + 1859775393 + blocks[j + 4]) >>> 0;
                        c = (c << 30) | (c >>> 2);
                    }
                    for (; j < 60; j += 5) {
                        f = (b & c) | (b & d) | (c & d);
                        t = (a << 5) | (a >>> 27);
                        e = (t + f + e - 1894007588 + blocks[j]) >>> 0;
                        b = (b << 30) | (b >>> 2);
                        f = (a & b) | (a & c) | (b & c);
                        t = (e << 5) | (e >>> 27);
                        d = (t + f + d - 1894007588 + blocks[j + 1]) >>> 0;
                        a = (a << 30) | (a >>> 2);
                        f = (e & a) | (e & b) | (a & b);
                        t = (d << 5) | (d >>> 27);
                        c = (t + f + c - 1894007588 + blocks[j + 2]) >>> 0;
                        e = (e << 30) | (e >>> 2);
                        f = (d & e) | (d & a) | (e & a);
                        t = (c << 5) | (c >>> 27);
                        b = (t + f + b - 1894007588 + blocks[j + 3]) >>> 0;
                        d = (d << 30) | (d >>> 2);
                        f = (c & d) | (c & e) | (d & e);
                        t = (b << 5) | (b >>> 27);
                        a = (t + f + a - 1894007588 + blocks[j + 4]) >>> 0;
                        c = (c << 30) | (c >>> 2);
                    }
                    for (; j < 80; j += 5) {
                        f = b ^ c ^ d;
                        t = (a << 5) | (a >>> 27);
                        e = (t + f + e - 899497514 + blocks[j]) >>> 0;
                        b = (b << 30) | (b >>> 2);
                        f = a ^ b ^ c;
                        t = (e << 5) | (e >>> 27);
                        d = (t + f + d - 899497514 + blocks[j + 1]) >>> 0;
                        a = (a << 30) | (a >>> 2);
                        f = e ^ a ^ b;
                        t = (d << 5) | (d >>> 27);
                        c = (t + f + c - 899497514 + blocks[j + 2]) >>> 0;
                        e = (e << 30) | (e >>> 2);
                        f = d ^ e ^ a;
                        t = (c << 5) | (c >>> 27);
                        b = (t + f + b - 899497514 + blocks[j + 3]) >>> 0;
                        d = (d << 30) | (d >>> 2);
                        f = c ^ d ^ e;
                        t = (b << 5) | (b >>> 27);
                        a = (t + f + a - 899497514 + blocks[j + 4]) >>> 0;
                        c = (c << 30) | (c >>> 2);
                    }
                    this.#h0 = (this.#h0 + a) >>> 0;
                    this.#h1 = (this.#h1 + b) >>> 0;
                    this.#h2 = (this.#h2 + c) >>> 0;
                    this.#h3 = (this.#h3 + d) >>> 0;
                    this.#h4 = (this.#h4 + e) >>> 0;
                }
                hex() {
                    this.finalize();
                    const h0 = this.#h0;
                    const h1 = this.#h1;
                    const h2 = this.#h2;
                    const h3 = this.#h3;
                    const h4 = this.#h4;
                    return (HEX_CHARS[(h0 >> 28) & 0x0f] +
                        HEX_CHARS[(h0 >> 24) & 0x0f] +
                        HEX_CHARS[(h0 >> 20) & 0x0f] +
                        HEX_CHARS[(h0 >> 16) & 0x0f] +
                        HEX_CHARS[(h0 >> 12) & 0x0f] +
                        HEX_CHARS[(h0 >> 8) & 0x0f] +
                        HEX_CHARS[(h0 >> 4) & 0x0f] +
                        HEX_CHARS[h0 & 0x0f] +
                        HEX_CHARS[(h1 >> 28) & 0x0f] +
                        HEX_CHARS[(h1 >> 24) & 0x0f] +
                        HEX_CHARS[(h1 >> 20) & 0x0f] +
                        HEX_CHARS[(h1 >> 16) & 0x0f] +
                        HEX_CHARS[(h1 >> 12) & 0x0f] +
                        HEX_CHARS[(h1 >> 8) & 0x0f] +
                        HEX_CHARS[(h1 >> 4) & 0x0f] +
                        HEX_CHARS[h1 & 0x0f] +
                        HEX_CHARS[(h2 >> 28) & 0x0f] +
                        HEX_CHARS[(h2 >> 24) & 0x0f] +
                        HEX_CHARS[(h2 >> 20) & 0x0f] +
                        HEX_CHARS[(h2 >> 16) & 0x0f] +
                        HEX_CHARS[(h2 >> 12) & 0x0f] +
                        HEX_CHARS[(h2 >> 8) & 0x0f] +
                        HEX_CHARS[(h2 >> 4) & 0x0f] +
                        HEX_CHARS[h2 & 0x0f] +
                        HEX_CHARS[(h3 >> 28) & 0x0f] +
                        HEX_CHARS[(h3 >> 24) & 0x0f] +
                        HEX_CHARS[(h3 >> 20) & 0x0f] +
                        HEX_CHARS[(h3 >> 16) & 0x0f] +
                        HEX_CHARS[(h3 >> 12) & 0x0f] +
                        HEX_CHARS[(h3 >> 8) & 0x0f] +
                        HEX_CHARS[(h3 >> 4) & 0x0f] +
                        HEX_CHARS[h3 & 0x0f] +
                        HEX_CHARS[(h4 >> 28) & 0x0f] +
                        HEX_CHARS[(h4 >> 24) & 0x0f] +
                        HEX_CHARS[(h4 >> 20) & 0x0f] +
                        HEX_CHARS[(h4 >> 16) & 0x0f] +
                        HEX_CHARS[(h4 >> 12) & 0x0f] +
                        HEX_CHARS[(h4 >> 8) & 0x0f] +
                        HEX_CHARS[(h4 >> 4) & 0x0f] +
                        HEX_CHARS[h4 & 0x0f]);
                }
                toString() {
                    return this.hex();
                }
                digest() {
                    this.finalize();
                    const h0 = this.#h0;
                    const h1 = this.#h1;
                    const h2 = this.#h2;
                    const h3 = this.#h3;
                    const h4 = this.#h4;
                    return [
                        (h0 >> 24) & 0xff,
                        (h0 >> 16) & 0xff,
                        (h0 >> 8) & 0xff,
                        h0 & 0xff,
                        (h1 >> 24) & 0xff,
                        (h1 >> 16) & 0xff,
                        (h1 >> 8) & 0xff,
                        h1 & 0xff,
                        (h2 >> 24) & 0xff,
                        (h2 >> 16) & 0xff,
                        (h2 >> 8) & 0xff,
                        h2 & 0xff,
                        (h3 >> 24) & 0xff,
                        (h3 >> 16) & 0xff,
                        (h3 >> 8) & 0xff,
                        h3 & 0xff,
                        (h4 >> 24) & 0xff,
                        (h4 >> 16) & 0xff,
                        (h4 >> 8) & 0xff,
                        h4 & 0xff,
                    ];
                }
                array() {
                    return this.digest();
                }
                arrayBuffer() {
                    this.finalize();
                    const buffer = new ArrayBuffer(20);
                    const dataView = new DataView(buffer);
                    dataView.setUint32(0, this.#h0);
                    dataView.setUint32(4, this.#h1);
                    dataView.setUint32(8, this.#h2);
                    dataView.setUint32(12, this.#h3);
                    dataView.setUint32(16, this.#h4);
                    return buffer;
                }
            };
            exports_435("Sha1", Sha1);
        }
    };
});
System.register("https://deno.land/std@0.66.0/node/_util/_util_promisify", [], function (exports_436, context_436) {
    "use strict";
    var kCustomPromisifiedSymbol, kCustomPromisifyArgsSymbol, NodeInvalidArgTypeError;
    var __moduleName = context_436 && context_436.id;
    function promisify(original) {
        if (typeof original !== "function") {
            throw new NodeInvalidArgTypeError("original", "Function", original);
        }
        if (original[kCustomPromisifiedSymbol]) {
            const fn = original[kCustomPromisifiedSymbol];
            if (typeof fn !== "function") {
                throw new NodeInvalidArgTypeError("util.promisify.custom", "Function", fn);
            }
            return Object.defineProperty(fn, kCustomPromisifiedSymbol, {
                value: fn,
                enumerable: false,
                writable: false,
                configurable: true,
            });
        }
        const argumentNames = original[kCustomPromisifyArgsSymbol];
        function fn(...args) {
            return new Promise((resolve, reject) => {
                original.call(this, ...args, (err, ...values) => {
                    if (err) {
                        return reject(err);
                    }
                    if (argumentNames !== undefined && values.length > 1) {
                        const obj = {};
                        for (let i = 0; i < argumentNames.length; i++) {
                            obj[argumentNames[i]] = values[i];
                        }
                        resolve(obj);
                    }
                    else {
                        resolve(values[0]);
                    }
                });
            });
        }
        Object.setPrototypeOf(fn, Object.getPrototypeOf(original));
        Object.defineProperty(fn, kCustomPromisifiedSymbol, {
            value: fn,
            enumerable: false,
            writable: false,
            configurable: true,
        });
        return Object.defineProperties(fn, Object.getOwnPropertyDescriptors(original));
    }
    exports_436("promisify", promisify);
    return {
        setters: [],
        execute: function () {
            kCustomPromisifiedSymbol = Symbol.for("nodejs.util.promisify.custom");
            kCustomPromisifyArgsSymbol = Symbol.for("nodejs.util.promisify.customArgs");
            NodeInvalidArgTypeError = class NodeInvalidArgTypeError extends TypeError {
                constructor(argumentName, type, received) {
                    super(`The "${argumentName}" argument must be of type ${type}. Received ${typeof received}`);
                    this.code = "ERR_INVALID_ARG_TYPE";
                }
            };
            promisify.custom = kCustomPromisifiedSymbol;
        }
    };
});
System.register("https://deno.land/std@0.66.0/node/_util/_util_callbackify", [], function (exports_437, context_437) {
    "use strict";
    var NodeFalsyValueRejectionError, NodeInvalidArgTypeError;
    var __moduleName = context_437 && context_437.id;
    function callbackify(original) {
        if (typeof original !== "function") {
            throw new NodeInvalidArgTypeError('"original"');
        }
        const callbackified = function (...args) {
            const maybeCb = args.pop();
            if (typeof maybeCb !== "function") {
                throw new NodeInvalidArgTypeError("last");
            }
            const cb = (...args) => {
                maybeCb.apply(this, args);
            };
            original.apply(this, args).then((ret) => {
                queueMicrotask(cb.bind(this, null, ret));
            }, (rej) => {
                rej = rej || new NodeFalsyValueRejectionError(rej);
                queueMicrotask(cb.bind(this, rej));
            });
        };
        const descriptors = Object.getOwnPropertyDescriptors(original);
        if (typeof descriptors.length.value === "number") {
            descriptors.length.value++;
        }
        if (typeof descriptors.name.value === "string") {
            descriptors.name.value += "Callbackified";
        }
        Object.defineProperties(callbackified, descriptors);
        return callbackified;
    }
    exports_437("callbackify", callbackify);
    return {
        setters: [],
        execute: function () {
            NodeFalsyValueRejectionError = class NodeFalsyValueRejectionError extends Error {
                constructor(reason) {
                    super("Promise was rejected with falsy value");
                    this.code = "ERR_FALSY_VALUE_REJECTION";
                    this.reason = reason;
                }
            };
            NodeInvalidArgTypeError = class NodeInvalidArgTypeError extends TypeError {
                constructor(argumentName) {
                    super(`The ${argumentName} argument must be of type function.`);
                    this.code = "ERR_INVALID_ARG_TYPE";
                }
            };
        }
    };
});
System.register("https://deno.land/std@0.66.0/node/_util/_util_types", [], function (exports_438, context_438) {
    "use strict";
    var _toString, _isObjectLike, _isFunctionLike;
    var __moduleName = context_438 && context_438.id;
    function isAnyArrayBuffer(value) {
        return (_isObjectLike(value) &&
            (_toString.call(value) === "[object ArrayBuffer]" ||
                _toString.call(value) === "[object SharedArrayBuffer]"));
    }
    exports_438("isAnyArrayBuffer", isAnyArrayBuffer);
    function isArrayBufferView(value) {
        return ArrayBuffer.isView(value);
    }
    exports_438("isArrayBufferView", isArrayBufferView);
    function isArgumentsObject(value) {
        return _isObjectLike(value) && _toString.call(value) === "[object Arguments]";
    }
    exports_438("isArgumentsObject", isArgumentsObject);
    function isArrayBuffer(value) {
        return (_isObjectLike(value) && _toString.call(value) === "[object ArrayBuffer]");
    }
    exports_438("isArrayBuffer", isArrayBuffer);
    function isAsyncFunction(value) {
        return (_isFunctionLike(value) && _toString.call(value) === "[object AsyncFunction]");
    }
    exports_438("isAsyncFunction", isAsyncFunction);
    function isBigInt64Array(value) {
        return (_isObjectLike(value) && _toString.call(value) === "[object BigInt64Array]");
    }
    exports_438("isBigInt64Array", isBigInt64Array);
    function isBigUint64Array(value) {
        return (_isObjectLike(value) && _toString.call(value) === "[object BigUint64Array]");
    }
    exports_438("isBigUint64Array", isBigUint64Array);
    function isBooleanObject(value) {
        return _isObjectLike(value) && _toString.call(value) === "[object Boolean]";
    }
    exports_438("isBooleanObject", isBooleanObject);
    function isBoxedPrimitive(value) {
        return (isBooleanObject(value) ||
            isStringObject(value) ||
            isNumberObject(value) ||
            isSymbolObject(value) ||
            isBigIntObject(value));
    }
    exports_438("isBoxedPrimitive", isBoxedPrimitive);
    function isDataView(value) {
        return _isObjectLike(value) && _toString.call(value) === "[object DataView]";
    }
    exports_438("isDataView", isDataView);
    function isDate(value) {
        return _isObjectLike(value) && _toString.call(value) === "[object Date]";
    }
    exports_438("isDate", isDate);
    function isFloat32Array(value) {
        return (_isObjectLike(value) && _toString.call(value) === "[object Float32Array]");
    }
    exports_438("isFloat32Array", isFloat32Array);
    function isFloat64Array(value) {
        return (_isObjectLike(value) && _toString.call(value) === "[object Float64Array]");
    }
    exports_438("isFloat64Array", isFloat64Array);
    function isGeneratorFunction(value) {
        return (_isFunctionLike(value) &&
            _toString.call(value) === "[object GeneratorFunction]");
    }
    exports_438("isGeneratorFunction", isGeneratorFunction);
    function isGeneratorObject(value) {
        return _isObjectLike(value) && _toString.call(value) === "[object Generator]";
    }
    exports_438("isGeneratorObject", isGeneratorObject);
    function isInt8Array(value) {
        return _isObjectLike(value) && _toString.call(value) === "[object Int8Array]";
    }
    exports_438("isInt8Array", isInt8Array);
    function isInt16Array(value) {
        return (_isObjectLike(value) && _toString.call(value) === "[object Int16Array]");
    }
    exports_438("isInt16Array", isInt16Array);
    function isInt32Array(value) {
        return (_isObjectLike(value) && _toString.call(value) === "[object Int32Array]");
    }
    exports_438("isInt32Array", isInt32Array);
    function isMap(value) {
        return _isObjectLike(value) && _toString.call(value) === "[object Map]";
    }
    exports_438("isMap", isMap);
    function isMapIterator(value) {
        return (_isObjectLike(value) && _toString.call(value) === "[object Map Iterator]");
    }
    exports_438("isMapIterator", isMapIterator);
    function isModuleNamespaceObject(value) {
        return _isObjectLike(value) && _toString.call(value) === "[object Module]";
    }
    exports_438("isModuleNamespaceObject", isModuleNamespaceObject);
    function isNativeError(value) {
        return _isObjectLike(value) && _toString.call(value) === "[object Error]";
    }
    exports_438("isNativeError", isNativeError);
    function isNumberObject(value) {
        return _isObjectLike(value) && _toString.call(value) === "[object Number]";
    }
    exports_438("isNumberObject", isNumberObject);
    function isBigIntObject(value) {
        return _isObjectLike(value) && _toString.call(value) === "[object BigInt]";
    }
    exports_438("isBigIntObject", isBigIntObject);
    function isPromise(value) {
        return _isObjectLike(value) && _toString.call(value) === "[object Promise]";
    }
    exports_438("isPromise", isPromise);
    function isRegExp(value) {
        return _isObjectLike(value) && _toString.call(value) === "[object RegExp]";
    }
    exports_438("isRegExp", isRegExp);
    function isSet(value) {
        return _isObjectLike(value) && _toString.call(value) === "[object Set]";
    }
    exports_438("isSet", isSet);
    function isSetIterator(value) {
        return (_isObjectLike(value) && _toString.call(value) === "[object Set Iterator]");
    }
    exports_438("isSetIterator", isSetIterator);
    function isSharedArrayBuffer(value) {
        return (_isObjectLike(value) &&
            _toString.call(value) === "[object SharedArrayBuffer]");
    }
    exports_438("isSharedArrayBuffer", isSharedArrayBuffer);
    function isStringObject(value) {
        return _isObjectLike(value) && _toString.call(value) === "[object String]";
    }
    exports_438("isStringObject", isStringObject);
    function isSymbolObject(value) {
        return _isObjectLike(value) && _toString.call(value) === "[object Symbol]";
    }
    exports_438("isSymbolObject", isSymbolObject);
    function isTypedArray(value) {
        const reTypedTag = /^\[object (?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)Array\]$/;
        return _isObjectLike(value) && reTypedTag.test(_toString.call(value));
    }
    exports_438("isTypedArray", isTypedArray);
    function isUint8Array(value) {
        return (_isObjectLike(value) && _toString.call(value) === "[object Uint8Array]");
    }
    exports_438("isUint8Array", isUint8Array);
    function isUint8ClampedArray(value) {
        return (_isObjectLike(value) &&
            _toString.call(value) === "[object Uint8ClampedArray]");
    }
    exports_438("isUint8ClampedArray", isUint8ClampedArray);
    function isUint16Array(value) {
        return (_isObjectLike(value) && _toString.call(value) === "[object Uint16Array]");
    }
    exports_438("isUint16Array", isUint16Array);
    function isUint32Array(value) {
        return (_isObjectLike(value) && _toString.call(value) === "[object Uint32Array]");
    }
    exports_438("isUint32Array", isUint32Array);
    function isWeakMap(value) {
        return _isObjectLike(value) && _toString.call(value) === "[object WeakMap]";
    }
    exports_438("isWeakMap", isWeakMap);
    function isWeakSet(value) {
        return _isObjectLike(value) && _toString.call(value) === "[object WeakSet]";
    }
    exports_438("isWeakSet", isWeakSet);
    return {
        setters: [],
        execute: function () {
            _toString = Object.prototype.toString;
            _isObjectLike = (value) => value !== null && typeof value === "object";
            _isFunctionLike = (value) => value !== null && typeof value === "function";
        }
    };
});
System.register("https://deno.land/std@0.66.0/node/_utils", [], function (exports_439, context_439) {
    "use strict";
    var _TextDecoder, _TextEncoder;
    var __moduleName = context_439 && context_439.id;
    function notImplemented(msg) {
        const message = msg ? `Not implemented: ${msg}` : "Not implemented";
        throw new Error(message);
    }
    exports_439("notImplemented", notImplemented);
    function intoCallbackAPI(func, cb, ...args) {
        func(...args)
            .then((value) => cb && cb(null, value))
            .catch((err) => cb && cb(err, null));
    }
    exports_439("intoCallbackAPI", intoCallbackAPI);
    function intoCallbackAPIWithIntercept(func, interceptor, cb, ...args) {
        func(...args)
            .then((value) => cb && cb(null, interceptor(value)))
            .catch((err) => cb && cb(err, null));
    }
    exports_439("intoCallbackAPIWithIntercept", intoCallbackAPIWithIntercept);
    function spliceOne(list, index) {
        for (; index + 1 < list.length; index++)
            list[index] = list[index + 1];
        list.pop();
    }
    exports_439("spliceOne", spliceOne);
    function normalizeEncoding(enc) {
        if (enc == null || enc === "utf8" || enc === "utf-8")
            return "utf8";
        return slowCases(enc);
    }
    exports_439("normalizeEncoding", normalizeEncoding);
    function slowCases(enc) {
        switch (enc.length) {
            case 4:
                if (enc === "UTF8")
                    return "utf8";
                if (enc === "ucs2" || enc === "UCS2")
                    return "utf16le";
                enc = `${enc}`.toLowerCase();
                if (enc === "utf8")
                    return "utf8";
                if (enc === "ucs2")
                    return "utf16le";
                break;
            case 3:
                if (enc === "hex" || enc === "HEX" || `${enc}`.toLowerCase() === "hex") {
                    return "hex";
                }
                break;
            case 5:
                if (enc === "ascii")
                    return "ascii";
                if (enc === "ucs-2")
                    return "utf16le";
                if (enc === "UTF-8")
                    return "utf8";
                if (enc === "ASCII")
                    return "ascii";
                if (enc === "UCS-2")
                    return "utf16le";
                enc = `${enc}`.toLowerCase();
                if (enc === "utf-8")
                    return "utf8";
                if (enc === "ascii")
                    return "ascii";
                if (enc === "ucs-2")
                    return "utf16le";
                break;
            case 6:
                if (enc === "base64")
                    return "base64";
                if (enc === "latin1" || enc === "binary")
                    return "latin1";
                if (enc === "BASE64")
                    return "base64";
                if (enc === "LATIN1" || enc === "BINARY")
                    return "latin1";
                enc = `${enc}`.toLowerCase();
                if (enc === "base64")
                    return "base64";
                if (enc === "latin1" || enc === "binary")
                    return "latin1";
                break;
            case 7:
                if (enc === "utf16le" ||
                    enc === "UTF16LE" ||
                    `${enc}`.toLowerCase() === "utf16le") {
                    return "utf16le";
                }
                break;
            case 8:
                if (enc === "utf-16le" ||
                    enc === "UTF-16LE" ||
                    `${enc}`.toLowerCase() === "utf-16le") {
                    return "utf16le";
                }
                break;
            default:
                if (enc === "")
                    return "utf8";
        }
    }
    return {
        setters: [],
        execute: function () {
            exports_439("_TextDecoder", _TextDecoder = TextDecoder);
            exports_439("_TextEncoder", _TextEncoder = TextEncoder);
        }
    };
});
System.register("https://deno.land/std@0.66.0/node/util", ["https://deno.land/std@0.66.0/node/_util/_util_promisify", "https://deno.land/std@0.66.0/node/_util/_util_callbackify", "https://deno.land/std@0.66.0/node/_util/_util_types", "https://deno.land/std@0.66.0/node/_utils"], function (exports_440, context_440) {
    "use strict";
    var types, _utils_ts_1, TextDecoder, TextEncoder;
    var __moduleName = context_440 && context_440.id;
    function inspect(object, ...opts) {
        return Deno.inspect(object, {
            depth: opts.depth ?? 4,
            iterableLimit: opts.iterableLimit ?? 100,
            compact: !!(opts.compact ?? true),
            sorted: !!(opts.sorted ?? false),
        });
    }
    exports_440("inspect", inspect);
    function isArray(value) {
        return Array.isArray(value);
    }
    exports_440("isArray", isArray);
    function isBoolean(value) {
        return typeof value === "boolean" || value instanceof Boolean;
    }
    exports_440("isBoolean", isBoolean);
    function isNull(value) {
        return value === null;
    }
    exports_440("isNull", isNull);
    function isNullOrUndefined(value) {
        return value === null || value === undefined;
    }
    exports_440("isNullOrUndefined", isNullOrUndefined);
    function isNumber(value) {
        return typeof value === "number" || value instanceof Number;
    }
    exports_440("isNumber", isNumber);
    function isString(value) {
        return typeof value === "string" || value instanceof String;
    }
    exports_440("isString", isString);
    function isSymbol(value) {
        return typeof value === "symbol";
    }
    exports_440("isSymbol", isSymbol);
    function isUndefined(value) {
        return value === undefined;
    }
    exports_440("isUndefined", isUndefined);
    function isObject(value) {
        return value !== null && typeof value === "object";
    }
    exports_440("isObject", isObject);
    function isError(e) {
        return e instanceof Error;
    }
    exports_440("isError", isError);
    function isFunction(value) {
        return typeof value === "function";
    }
    exports_440("isFunction", isFunction);
    function isRegExp(value) {
        return value instanceof RegExp;
    }
    exports_440("isRegExp", isRegExp);
    function isPrimitive(value) {
        return (value === null || (typeof value !== "object" && typeof value !== "function"));
    }
    exports_440("isPrimitive", isPrimitive);
    function validateIntegerRange(value, name, min = -2147483648, max = 2147483647) {
        if (!Number.isInteger(value)) {
            throw new Error(`${name} must be 'an integer' but was ${value}`);
        }
        if (value < min || value > max) {
            throw new Error(`${name} must be >= ${min} && <= ${max}.  Value was ${value}`);
        }
    }
    exports_440("validateIntegerRange", validateIntegerRange);
    return {
        setters: [
            function (_util_promisify_ts_1_1) {
                exports_440({
                    "promisify": _util_promisify_ts_1_1["promisify"]
                });
            },
            function (_util_callbackify_ts_1_1) {
                exports_440({
                    "callbackify": _util_callbackify_ts_1_1["callbackify"]
                });
            },
            function (types_1) {
                types = types_1;
            },
            function (_utils_ts_1_1) {
                _utils_ts_1 = _utils_ts_1_1;
            }
        ],
        execute: function () {
            exports_440("types", types);
            exports_440("TextDecoder", TextDecoder = _utils_ts_1._TextDecoder);
            exports_440("TextEncoder", TextEncoder = _utils_ts_1._TextEncoder);
        }
    };
});
System.register("https://deno.land/std@0.66.0/_util/assert", [], function (exports_441, context_441) {
    "use strict";
    var DenoStdInternalError;
    var __moduleName = context_441 && context_441.id;
    function assert(expr, msg = "") {
        if (!expr) {
            throw new DenoStdInternalError(msg);
        }
    }
    exports_441("assert", assert);
    return {
        setters: [],
        execute: function () {
            DenoStdInternalError = class DenoStdInternalError extends Error {
                constructor(message) {
                    super(message);
                    this.name = "DenoStdInternalError";
                }
            };
            exports_441("DenoStdInternalError", DenoStdInternalError);
        }
    };
});
System.register("https://deno.land/std@0.66.0/uuid/v5", ["https://deno.land/std@0.66.0/uuid/_common", "https://deno.land/std@0.66.0/hash/sha1", "https://deno.land/std@0.66.0/node/util", "https://deno.land/std@0.66.0/_util/assert"], function (exports_442, context_442) {
    "use strict";
    var _common_ts_6, sha1_ts_3, util_ts_8, assert_ts_14, UUID_RE;
    var __moduleName = context_442 && context_442.id;
    function validate(id) {
        return UUID_RE.test(id);
    }
    exports_442("validate", validate);
    function generate(options, buf, offset) {
        const i = (buf && offset) || 0;
        let { value, namespace } = options;
        if (util_ts_8.isString(value))
            value = _common_ts_6.stringToBytes(value);
        if (util_ts_8.isString(namespace))
            namespace = _common_ts_6.uuidToBytes(namespace);
        assert_ts_14.assert(namespace.length === 16, "namespace must be uuid string or an Array of 16 byte values");
        const content = namespace.concat(value);
        const bytes = new sha1_ts_3.Sha1().update(_common_ts_6.createBuffer(content)).digest();
        bytes[6] = (bytes[6] & 0x0f) | 0x50;
        bytes[8] = (bytes[8] & 0x3f) | 0x80;
        if (buf) {
            for (let idx = 0; idx < 16; ++idx) {
                buf[i + idx] = bytes[idx];
            }
        }
        return buf || _common_ts_6.bytesToUuid(bytes);
    }
    exports_442("generate", generate);
    return {
        setters: [
            function (_common_ts_6_1) {
                _common_ts_6 = _common_ts_6_1;
            },
            function (sha1_ts_3_1) {
                sha1_ts_3 = sha1_ts_3_1;
            },
            function (util_ts_8_1) {
                util_ts_8 = util_ts_8_1;
            },
            function (assert_ts_14_1) {
                assert_ts_14 = assert_ts_14_1;
            }
        ],
        execute: function () {
            UUID_RE = /^[0-9a-f]{8}-[0-9a-f]{4}-[5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;
        }
    };
});
System.register("https://deno.land/std@0.66.0/uuid/mod", ["https://deno.land/std@0.66.0/uuid/v1", "https://deno.land/std@0.66.0/uuid/v4", "https://deno.land/std@0.66.0/uuid/v5"], function (exports_443, context_443) {
    "use strict";
    var v1, v4, v5, NIL_UUID, NOT_IMPLEMENTED, v3;
    var __moduleName = context_443 && context_443.id;
    function isNil(val) {
        return val === NIL_UUID;
    }
    exports_443("isNil", isNil);
    return {
        setters: [
            function (v1_2) {
                v1 = v1_2;
            },
            function (v4_2) {
                v4 = v4_2;
            },
            function (v5_2) {
                v5 = v5_2;
            }
        ],
        execute: function () {
            exports_443("v1", v1);
            exports_443("v4", v4);
            exports_443("v5", v5);
            exports_443("NIL_UUID", NIL_UUID = "00000000-0000-0000-0000-000000000000");
            NOT_IMPLEMENTED = {
                generate() {
                    throw new Error("Not implemented");
                },
                validate() {
                    throw new Error("Not implemented");
                },
            };
            exports_443("v3", v3 = NOT_IMPLEMENTED);
        }
    };
});
System.register("https://cdn.jsdelivr.net/gh/juzi5201314/deno_utils@v0.0.1/base62", [], function (exports_444, context_444) {
    "use strict";
    var CHARSET, Base62, base62;
    var __moduleName = context_444 && context_444.id;
    return {
        setters: [],
        execute: function () {
            CHARSET = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".split("");
            Base62 = class Base62 {
                static encode(i) {
                    if (i === 0) {
                        return CHARSET[0];
                    }
                    let res = "";
                    while (i > 0) {
                        res = CHARSET[i % 62] + res;
                        i = Math.floor(i / 62);
                    }
                    return res;
                }
                static decode(str) {
                    let res = 0, length = str.length, i, char;
                    for (i = 0; i < length; i++) {
                        char = str.charCodeAt(i);
                        if (char < 58) {
                            char = char - 48;
                        }
                        else if (char < 91) {
                            char = char - 29;
                        }
                        else {
                            char = char - 87;
                        }
                        res += char * Math.pow(62, length - i - 1);
                    }
                    return res;
                }
            };
            exports_444("base62", base62 = Base62);
        }
    };
});
System.register("https://cdn.jsdelivr.net/gh/juzi5201314/deno_utils@v0.0.1/env", [], function (exports_445, context_445) {
    "use strict";
    var __moduleName = context_445 && context_445.id;
    function env(name, def) {
        const env = Deno.env.get(name);
        return env ?? def;
    }
    exports_445("env", env);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://cdn.jsdelivr.net/gh/juzi5201314/deno_utils@v0.0.1/iter", [], function (exports_446, context_446) {
    "use strict";
    var __moduleName = context_446 && context_446.id;
    function* range(n, m) {
        for (let i = n; i < m; i++)
            yield i;
    }
    exports_446("range", range);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://cdn.jsdelivr.net/gh/juzi5201314/deno_utils@v0.0.1/json", [], function (exports_447, context_447) {
    "use strict";
    var __moduleName = context_447 && context_447.id;
    function to_json(obj) {
        return JSON.stringify(obj);
    }
    exports_447("to_json", to_json);
    return {
        setters: [],
        execute: function () {
        }
    };
});
System.register("https://cdn.jsdelivr.net/gh/juzi5201314/deno_utils@v0.0.1/mod", ["https://cdn.jsdelivr.net/gh/juzi5201314/deno_utils@v0.0.1/base62", "https://cdn.jsdelivr.net/gh/juzi5201314/deno_utils@v0.0.1/env", "https://cdn.jsdelivr.net/gh/juzi5201314/deno_utils@v0.0.1/iter", "https://cdn.jsdelivr.net/gh/juzi5201314/deno_utils@v0.0.1/json"], function (exports_448, context_448) {
    "use strict";
    var __moduleName = context_448 && context_448.id;
    function exportStar_14(m) {
        var exports = {};
        for (var n in m) {
            if (n !== "default") exports[n] = m[n];
        }
        exports_448(exports);
    }
    return {
        setters: [
            function (base62_ts_1_1) {
                exportStar_14(base62_ts_1_1);
            },
            function (env_ts_1_1) {
                exportStar_14(env_ts_1_1);
            },
            function (iter_ts_1_1) {
                exportStar_14(iter_ts_1_1);
            },
            function (json_ts_1_1) {
                exportStar_14(json_ts_1_1);
            }
        ],
        execute: function () {
        }
    };
});
System.register("file:///home/runner/work/short-link-js/short-link-js/pkg", ["https://deno.land/x/alosaur@v0.21.1/mod", "https://deno.land/x/alosaur@v0.21.1/openapi/mod", "https://deno.land/x/dotenv@v0.5.0/mod", "https://deno.land/x/denodb@v1.0.7/mod", "https://deno.land/std@0.66.0/uuid/mod", "https://cdn.jsdelivr.net/gh/juzi5201314/deno_utils@v0.0.1/mod"], function (exports_449, context_449) {
    "use strict";
    var __moduleName = context_449 && context_449.id;
    return {
        setters: [
            function (alosaur_1) {
                exports_449("alosaur", alosaur_1);
            },
            function (alosaur_openapi_1) {
                exports_449("alosaur_openapi", alosaur_openapi_1);
            },
            function (dotenv_1) {
                exports_449("dotenv", dotenv_1);
            },
            function (denodb_1) {
                exports_449("denodb", denodb_1);
            },
            function (uuid_1) {
                exports_449("uuid", uuid_1);
            },
            function (utils_1) {
                exports_449("utils", utils_1);
            }
        ],
        execute: function () {
        }
    };
});
System.register("file:///home/runner/work/short-link-js/short-link-js/web/model/NewLink", [], function (exports_450, context_450) {
    "use strict";
    var NewLink;
    var __moduleName = context_450 && context_450.id;
    return {
        setters: [],
        execute: function () {
            NewLink = class NewLink {
            };
            exports_450("NewLink", NewLink);
        }
    };
});
System.register("file:///home/runner/work/short-link-js/short-link-js/db/model/Links", ["file:///home/runner/work/short-link-js/short-link-js/pkg"], function (exports_451, context_451) {
    "use strict";
    var pkg_ts_1, Model, DataTypes, Links;
    var __moduleName = context_451 && context_451.id;
    return {
        setters: [
            function (pkg_ts_1_1) {
                pkg_ts_1 = pkg_ts_1_1;
            }
        ],
        execute: function () {
            Model = pkg_ts_1.denodb.Model, DataTypes = pkg_ts_1.denodb.DataTypes;
            Links = class Links extends Model {
            };
            exports_451("Links", Links);
            Links.table = 'links';
            Links.timestamps = true;
            Links.fields = {
                short: {
                    type: DataTypes.STRING
                },
                unique_id: {
                    type: DataTypes.INTEGER,
                    unique: true,
                    autoIncrement: true
                },
                url: {
                    ...DataTypes.string(pkg_ts_1.utils.env("URL_MAX", 250)),
                    allowNull: false
                },
            };
        }
    };
});
System.register("file:///home/runner/work/short-link-js/short-link-js/web/MainController", ["file:///home/runner/work/short-link-js/short-link-js/pkg", "file:///home/runner/work/short-link-js/short-link-js/web/model/NewLink", "file:///home/runner/work/short-link-js/short-link-js/db/model/Links"], function (exports_452, context_452) {
    "use strict";
    var pkg_ts_2, NewLink_ts_1, Links_ts_1, to_json, base62, env, BadRequestError, Body, Controller, Post, Get, Param, UnauthorizedError, HttpError, InternalServerError, NotFoundError, Redirect, ConflictError, MainController;
    var __moduleName = context_452 && context_452.id;
    return {
        setters: [
            function (pkg_ts_2_1) {
                pkg_ts_2 = pkg_ts_2_1;
            },
            function (NewLink_ts_1_1) {
                NewLink_ts_1 = NewLink_ts_1_1;
            },
            function (Links_ts_1_1) {
                Links_ts_1 = Links_ts_1_1;
            }
        ],
        execute: function () {
            to_json = pkg_ts_2.utils.to_json, base62 = pkg_ts_2.utils.base62, env = pkg_ts_2.utils.env;
            BadRequestError = pkg_ts_2.alosaur.BadRequestError, Body = pkg_ts_2.alosaur.Body, Controller = pkg_ts_2.alosaur.Controller, Post = pkg_ts_2.alosaur.Post, Get = pkg_ts_2.alosaur.Get, Param = pkg_ts_2.alosaur.Param, UnauthorizedError = pkg_ts_2.alosaur.UnauthorizedError, HttpError = pkg_ts_2.alosaur.HttpError, InternalServerError = pkg_ts_2.alosaur.InternalServerError, NotFoundError = pkg_ts_2.alosaur.NotFoundError, Redirect = pkg_ts_2.alosaur.Redirect;
            ConflictError = class ConflictError extends HttpError {
                constructor(message) {
                    super(409);
                    this.name = "ConflictError";
                    Object.setPrototypeOf(this, ConflictError.prototype);
                    if (message) {
                        this.message = message;
                    }
                }
            };
            MainController = class MainController {
                async short(short) {
                    short = short.trim();
                    const link = await Links_ts_1.Links.where("short", short).first();
                    const re = env("REDIRECT_TO_HOME", undefined);
                    if (link === undefined && re === undefined)
                        return new NotFoundError(`短链接\`${short}\`不存在`);
                    return Redirect(link?.url ?? re);
                }
                async link(new_link) {
                    new_link.short = new_link.short?.trim();
                    if (!(new_link.url = new_link.url?.trim()) || !(new_link.token = new_link.token?.trim()))
                        return new BadRequestError("参数不全");
                    if (new_link.token !== globalThis.token)
                        return new UnauthorizedError("token校验失败");
                    try {
                        new URL(new_link.url);
                    }
                    catch (e) {
                        return new BadRequestError(`url不合法: ${e}`);
                    }
                    if (new_link.url.length > env("URL_MAX", 250))
                        return new BadRequestError(`url超长`);
                    try {
                        if (new_link.short !== undefined) {
                            const symbol = env("CUSTOM_SYMBOL", '#');
                            if (new_link.short.charAt(0) !== symbol)
                                new_link.short = symbol + new_link.short;
                            const link = await Links_ts_1.Links.where("short", new_link.short).first();
                            if (link !== undefined && link.url != new_link.url)
                                return new ConflictError(`自定义标识符: \`${new_link.short} \` 已存在且url不相同`);
                        }
                        const link = await Links_ts_1.Links.where("url", new_link.url).first() ??
                            (await Links_ts_1.Links.create({
                                url: new_link.url,
                                short: new_link.short !== undefined ? new_link.short : base62.encode(await Links_ts_1.Links.max("unique_id") ?? 0)
                            }))[0];
                        return to_json({
                            short: link.short
                        });
                    }
                    catch (e) {
                        return new InternalServerError(`将${new_link.url}插入数据库时失败: ${e}`);
                    }
                }
            };
            __decorate([
                Get("/:short"),
                __param(0, Param("short")),
                __metadata("design:type", Function),
                __metadata("design:paramtypes", [String]),
                __metadata("design:returntype", Promise)
            ], MainController.prototype, "short", null);
            __decorate([
                Post("/link"),
                __param(0, Body()),
                __metadata("design:type", Function),
                __metadata("design:paramtypes", [NewLink_ts_1.NewLink]),
                __metadata("design:returntype", Promise)
            ], MainController.prototype, "link", null);
            MainController = __decorate([
                Controller()
            ], MainController);
            exports_452("MainController", MainController);
        }
    };
});
System.register("file:///home/runner/work/short-link-js/short-link-js/web/mod", ["file:///home/runner/work/short-link-js/short-link-js/pkg", "file:///home/runner/work/short-link-js/short-link-js/web/MainController"], function (exports_453, context_453) {
    "use strict";
    var pkg_ts_3, MainController_ts_1, MainArea, settings;
    var __moduleName = context_453 && context_453.id;
    return {
        setters: [
            function (pkg_ts_3_1) {
                pkg_ts_3 = pkg_ts_3_1;
            },
            function (MainController_ts_1_1) {
                MainController_ts_1 = MainController_ts_1_1;
            }
        ],
        execute: function () {
            MainArea = class MainArea {
            };
            MainArea = __decorate([
                pkg_ts_3.alosaur.Area({
                    controllers: [MainController_ts_1.MainController]
                })
            ], MainArea);
            exports_453("settings", settings = {
                areas: [MainArea]
            });
        }
    };
});
System.register("file:///home/runner/work/short-link-js/short-link-js/db/mod", ["file:///home/runner/work/short-link-js/short-link-js/pkg", "file:///home/runner/work/short-link-js/short-link-js/db/model/Links"], function (exports_454, context_454) {
    "use strict";
    var pkg_ts_4, Links_ts_2, Database;
    var __moduleName = context_454 && context_454.id;
    async function open_db() {
        const db = new Database("sqlite3", {
            filepath: pkg_ts_4.utils.env("DB_PATH", "masl.db")
        });
        db.link([Links_ts_2.Links]);
        await db.sync();
    }
    exports_454("open_db", open_db);
    return {
        setters: [
            function (pkg_ts_4_1) {
                pkg_ts_4 = pkg_ts_4_1;
            },
            function (Links_ts_2_1) {
                Links_ts_2 = Links_ts_2_1;
            }
        ],
        execute: function () {
            Database = pkg_ts_4.denodb.Database;
        }
    };
});
System.register("file:///home/runner/work/short-link-js/short-link-js/main", ["file:///home/runner/work/short-link-js/short-link-js/pkg", "file:///home/runner/work/short-link-js/short-link-js/web/mod", "file:///home/runner/work/short-link-js/short-link-js/db/mod"], function (exports_455, context_455) {
    "use strict";
    var pkg_ts_5, mod_ts_53, mod_ts_54, App, env;
    var __moduleName = context_455 && context_455.id;
    return {
        setters: [
            function (pkg_ts_5_1) {
                pkg_ts_5 = pkg_ts_5_1;
            },
            function (mod_ts_53_1) {
                mod_ts_53 = mod_ts_53_1;
            },
            function (mod_ts_54_1) {
                mod_ts_54 = mod_ts_54_1;
            }
        ],
        execute: async function () {
            App = pkg_ts_5.alosaur.App;
            env = pkg_ts_5.utils.env;
            if (context_455.meta.main) {
                pkg_ts_5.dotenv.config({
                    export: true,
                    allowEmptyValues: true,
                    safe: true
                });
                await mod_ts_54.open_db();
                const app = new App(mod_ts_53.settings);
                globalThis.token = env("TOKEN", pkg_ts_5.uuid.v4.generate());
                console.log(`Token: ${globalThis.token}`);
                app.listen(env("BIND", "localhost:1551"));
            }
        }
    };
});

await __instantiate("file:///home/runner/work/short-link-js/short-link-js/main", true);
